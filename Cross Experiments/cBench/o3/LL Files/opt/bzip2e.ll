; ModuleID = 'bzip2e.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.EState = type { ptr, i32, i32, i32, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [258 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [258 x [4 x i32]] }
%struct.zzzz = type { ptr, ptr }
%struct.bz_stream = type { ptr, i32, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr }
%struct.DState = type { ptr, i32, i8, i32, i8, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, [256 x i32], i32, [257 x i32], [257 x i32], ptr, ptr, ptr, i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [256 x i8], [4096 x i8], [16 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr }
%struct.bzFile = type { ptr, [5000 x i8], i32, i8, %struct.bz_stream, i32, i8 }

@.str = private unnamed_addr constant [38 x i8] c"      %d work, %d block, ratio %5.2f\0A\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"    too repetitive; using fallback sorting algorithm\0A\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"        bucket sorting ...\0A\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"        depth %6d has \00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"%6d unresolved strings\0A\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"        reconstructing block ...\0A\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"        main sort initialise ...\0A\00", align 1
@.str.7 = private unnamed_addr constant [48 x i8] c"        qsort [0x%x, 0x%x]   done %d   this %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"        %d pointers, %d sorted, %d scanned\0A\00", align 1
@incs = internal unnamed_addr constant [14 x i32] [i32 1, i32 4, i32 13, i32 40, i32 121, i32 364, i32 1093, i32 3280, i32 9841, i32 29524, i32 88573, i32 265720, i32 797161, i32 2391484], align 16
@.str.9 = private unnamed_addr constant [5 x i8] c".bz2\00", align 1
@.str.1.10 = private unnamed_addr constant [4 x i8] c".bz\00", align 1
@.str.2.11 = private unnamed_addr constant [6 x i8] c".tbz2\00", align 1
@.str.3.12 = private unnamed_addr constant [5 x i8] c".tbz\00", align 1
@zSuffix = dso_local local_unnamed_addr global [4 x ptr] [ptr @.str.9, ptr @.str.1.10, ptr @.str.2.11, ptr @.str.3.12], align 16
@.str.4.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5.14 = private unnamed_addr constant [5 x i8] c".tar\00", align 1
@unzSuffix = dso_local local_unnamed_addr global [4 x ptr] [ptr @.str.4.13, ptr @.str.4.13, ptr @.str.5.14, ptr @.str.5.14], align 16
@outputHandleJustInCase = dso_local local_unnamed_addr global ptr null, align 8
@smallMode = dso_local local_unnamed_addr global i8 0, align 1
@keepInputFiles = dso_local local_unnamed_addr global i8 0, align 1
@forceOverwrite = dso_local local_unnamed_addr global i8 0, align 1
@noisy = dso_local local_unnamed_addr global i8 0, align 1
@verbosity = dso_local local_unnamed_addr global i32 0, align 4
@blockSize100k = dso_local local_unnamed_addr global i32 0, align 4
@testFailsExist = dso_local local_unnamed_addr global i8 0, align 1
@unzFailsExist = dso_local local_unnamed_addr global i8 0, align 1
@numFileNames = dso_local local_unnamed_addr global i32 0, align 4
@numFilesProcessed = dso_local local_unnamed_addr global i32 0, align 4
@workFactor = dso_local local_unnamed_addr global i32 0, align 4
@deleteOutputOnInterrupt = dso_local local_unnamed_addr global i8 0, align 1
@exitValue = dso_local local_unnamed_addr global i32 0, align 4
@inName = dso_local global [1034 x i8] zeroinitializer, align 16
@.str.6.15 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@outName = dso_local global [1034 x i8] zeroinitializer, align 16
@progNameReally = dso_local global [1034 x i8] zeroinitializer, align 16
@progName = dso_local local_unnamed_addr global ptr null, align 8
@.str.7.16 = private unnamed_addr constant [6 x i8] c"BZIP2\00", align 1
@.str.8.17 = private unnamed_addr constant [5 x i8] c"BZIP\00", align 1
@longestFileName = dso_local local_unnamed_addr global i32 0, align 4
@.str.9.18 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@srcMode = dso_local local_unnamed_addr global i32 0, align 4
@opMode = dso_local local_unnamed_addr global i32 0, align 4
@.str.10 = private unnamed_addr constant [6 x i8] c"unzip\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"UNZIP\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"z2cat\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"Z2CAT\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"zcat\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"ZCAT\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"%s: Bad flag `%s'\0A\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"--stdout\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"--decompress\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"--compress\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"--force\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"--test\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"--keep\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"--small\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"--quiet\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"--version\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"--license\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"--exponential\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"--repetitive-best\00", align 1
@.str.29 = private unnamed_addr constant [18 x i8] c"--repetitive-fast\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"--fast\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"--best\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"--verbose\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@.str.34 = private unnamed_addr constant [40 x i8] c"%s: -c and -t cannot be used together.\0A\00", align 1
@.str.35 = private unnamed_addr constant [113 x i8] c"\0AYou can use the `bzip2recover' program to attempt to recover\0Adata from undamaged sections of corrupted files.\0A\0A\00", align 1
@tmpName = dso_local global [1034 x i8] zeroinitializer, align 16
@.str.36 = private unnamed_addr constant [869 x i8] c"\0A%s: Caught a SIGSEGV or SIGBUS whilst compressing.\0A\0A   Possible causes are (most likely first):\0A   (1) This computer has unreliable memory or cache hardware\0A       (a surprisingly common problem; try a different machine.)\0A   (2) A bug in the compiler used to create this executable\0A       (unlikely, if you didn't compile bzip2 yourself.)\0A   (3) A real bug in bzip2 -- I hope this should never be the case.\0A   The user's manual, Section 4.3, has more info on (1) and (2).\0A   \0A   If you suspect this is a bug in bzip2, or are unsure about (1)\0A   or (2), feel free to report it to me at: jseward@bzip.org.\0A   Section 4.3 of the user's manual describes the info a useful\0A   bug report should have.  If the manual is available on your\0A   system, please try and read it before mailing me.  If you don't\0A   have the manual or can't be bothered to read it, mail me anyway.\0A\0A\00", align 1
@.str.37 = private unnamed_addr constant [996 x i8] c"\0A%s: Caught a SIGSEGV or SIGBUS whilst decompressing.\0A\0A   Possible causes are (most likely first):\0A   (1) The compressed data is corrupted, and bzip2's usual checks\0A       failed to detect this.  Try bzip2 -tvv my_file.bz2.\0A   (2) This computer has unreliable memory or cache hardware\0A       (a surprisingly common problem; try a different machine.)\0A   (3) A bug in the compiler used to create this executable\0A       (unlikely, if you didn't compile bzip2 yourself.)\0A   (4) A real bug in bzip2 -- I hope this should never be the case.\0A   The user's manual, Section 4.3, has more info on (2) and (3).\0A   \0A   If you suspect this is a bug in bzip2, or are unsure about (2)\0A   or (3), feel free to report it to me at: jseward@bzip.org.\0A   Section 4.3 of the user's manual describes the info a useful\0A   bug report should have.  If the manual is available on your\0A   system, please try and read it before mailing me.  If you don't\0A   have the manual or can't be bothered to read it, mail me anyway.\0A\0A\00", align 1
@.str.38 = private unnamed_addr constant [36 x i8] c"\09Input file = %s, output file = %s\0A\00", align 1
@.str.39 = private unnamed_addr constant [44 x i8] c"%s: Deleting output file %s, if it exists.\0A\00", align 1
@.str.40 = private unnamed_addr constant [59 x i8] c"%s: WARNING: deletion of output file (apparently) failed.\0A\00", align 1
@.str.41 = private unnamed_addr constant [49 x i8] c"%s: WARNING: deletion of output file suppressed\0A\00", align 1
@.str.42 = private unnamed_addr constant [56 x i8] c"%s:    since input file no longer exists.  Output file\0A\00", align 1
@.str.43 = private unnamed_addr constant [32 x i8] c"%s:    `%s' may be incomplete.\0A\00", align 1
@.str.44 = private unnamed_addr constant [61 x i8] c"%s:    I suggest doing an integrity test (bzip2 -tv) of it.\0A\00", align 1
@.str.45 = private unnamed_addr constant [110 x i8] c"%s: WARNING: some files have not been processed:\0A%s:    %d specified on command line, %d not processed yet.\0A\0A\00", align 1
@.str.46 = private unnamed_addr constant [241 x i8] c"\0AIt is possible that the compressed file(s) have become corrupted.\0AYou can use the -tvv option to test integrity of such files.\0A\0AYou can use the `bzip2recover' program to attempt to recover\0Adata from undamaged sections of corrupted files.\0A\0A\00", align 1
@.str.47 = private unnamed_addr constant [120 x i8] c"bzip2: file name\0A`%s'\0Ais suspiciously (more than %d chars) long.\0ATry using a reasonable file name instead.  Sorry! :-)\0A\00", align 1
@.str.48 = private unnamed_addr constant [38 x i8] c"\0A%s: couldn't allocate enough memory\0A\00", align 1
@.str.49 = private unnamed_addr constant [531 x i8] c"bzip2, a block-sorting file compressor.  Version %s.\0A   \0A   Copyright (C) 1996-2006 by Julian Seward.\0A   \0A   This program is free software; you can redistribute it and/or modify\0A   it under the terms set out in the LICENSE file, which is included\0A   in the bzip2-1.0.4 source distribution.\0A   \0A   This program is distributed in the hope that it will be useful,\0A   but WITHOUT ANY WARRANTY; without even the implied warranty of\0A   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\0A   LICENSE file for more details.\0A   \0A\00", align 1
@.str.50 = private unnamed_addr constant [1230 x i8] c"bzip2, a block-sorting file compressor.  Version %s.\0A\0A   usage: %s [flags and input files in any order]\0A\0A   -h --help           print this message\0A   -d --decompress     force decompression\0A   -z --compress       force compression\0A   -k --keep           keep (don't delete) input files\0A   -f --force          overwrite existing output files\0A   -t --test           test compressed file integrity\0A   -c --stdout         output to standard out\0A   -q --quiet          suppress noncritical error messages\0A   -v --verbose        be verbose (a 2nd -v gives more)\0A   -L --license        display software version & license\0A   -V --version        display software version & license\0A   -s --small          use less memory (at most 2500k)\0A   -1 .. -9            set block size to 100k .. 900k\0A   --fast              alias for -1\0A   --best              alias for -9\0A\0A   If invoked as `bzip2', default action is to compress.\0A              as `bunzip2',  default action is to decompress.\0A              as `bzcat', default action is to decompress to stdout.\0A\0A   If no file names are given, bzip2 compresses or decompresses\0A   from standard input to standard output.  You can combine\0A   short flags, so `-v -4' means the same as -v4 or -4v, &c.\0A\0A\00", align 1
@.str.51 = private unnamed_addr constant [49 x i8] c"%s: %s is redundant in versions 0.9.5 and above\0A\00", align 1
@.str.52 = private unnamed_addr constant [45 x i8] c"\0A%s: Control-C or similar caught, quitting.\0A\00", align 1
@.str.53 = private unnamed_addr constant [21 x i8] c"compress: bad modes\0A\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"(stdin)\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"(stdout)\00", align 1
@.str.57 = private unnamed_addr constant [35 x i8] c"%s: Can't open input file %s: %s.\0A\00", align 1
@.str.58 = private unnamed_addr constant [42 x i8] c"%s: Input file %s already has %s suffix.\0A\00", align 1
@.str.59 = private unnamed_addr constant [35 x i8] c"%s: Input file %s is a directory.\0A\00", align 1
@.str.60 = private unnamed_addr constant [41 x i8] c"%s: Input file %s is not a normal file.\0A\00", align 1
@.str.61 = private unnamed_addr constant [36 x i8] c"%s: Output file %s already exists.\0A\00", align 1
@.str.62 = private unnamed_addr constant [40 x i8] c"%s: Input file %s has %d other link%s.\0A\00", align 1
@.str.63 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.64 = private unnamed_addr constant [50 x i8] c"%s: I won't write compressed data to a terminal.\0A\00", align 1
@.str.65 = private unnamed_addr constant [34 x i8] c"%s: For help, type: `%s --help'.\0A\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.67 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.68 = private unnamed_addr constant [38 x i8] c"%s: Can't create output file %s: %s.\0A\00", align 1
@.str.69 = private unnamed_addr constant [22 x i8] c"compress: bad srcMode\00", align 1
@.str.70 = private unnamed_addr constant [7 x i8] c"  %s: \00", align 1
@.str.71 = private unnamed_addr constant [109 x i8] c"\0A%s: PANIC -- internal consistency error:\0A\09%s\0A\09This is a BUG.  Please report it to me at:\0A\09jseward@bzip.org\0A\00", align 1
@fileMetaInfo = internal global %struct.stat zeroinitializer, align 8
@.str.74 = private unnamed_addr constant [22 x i8] c" no data compressed.\0A\00", align 1
@.str.75 = private unnamed_addr constant [57 x i8] c"%6.3f:1, %6.3f bits/byte, %5.2f%% saved, %s in, %s out.\0A\00", align 1
@.str.76 = private unnamed_addr constant [26 x i8] c"compress:unexpected error\00", align 1
@.str.77 = private unnamed_addr constant [236 x i8] c"bzip2: I'm not configured correctly for this platform!\0A\09I require Int32, Int16 and Char to have sizes\0A\09of 4, 2 and 1 bytes to run properly, and they don't.\0A\09Probably you can fix this by defining them correctly,\0A\09and recompiling.  Bye!\0A\00", align 1
@.str.78 = private unnamed_addr constant [65 x i8] c"\0A%s: I/O or other error, bailing out.  Possible reason follows.\0A\00", align 1
@.str.79 = private unnamed_addr constant [23 x i8] c"uncompress: bad modes\0A\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c".out\00", align 1
@.str.81 = private unnamed_addr constant [50 x i8] c"%s: Can't guess original name for %s -- using %s\0A\00", align 1
@.str.82 = private unnamed_addr constant [51 x i8] c"%s: I won't read compressed data from a terminal.\0A\00", align 1
@.str.83 = private unnamed_addr constant [34 x i8] c"%s: Can't open input file %s:%s.\0A\00", align 1
@.str.84 = private unnamed_addr constant [24 x i8] c"uncompress: bad srcMode\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"done\0A\00", align 1
@.str.86 = private unnamed_addr constant [19 x i8] c"not a bzip2 file.\0A\00", align 1
@.str.87 = private unnamed_addr constant [29 x i8] c"%s: %s is not a bzip2 file.\0A\00", align 1
@.str.88 = private unnamed_addr constant [27 x i8] c"decompress:bzReadGetUnused\00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"\0A    \00", align 1
@.str.90 = private unnamed_addr constant [45 x i8] c"\0A%s: %s: trailing garbage after EOF ignored\0A\00", align 1
@.str.91 = private unnamed_addr constant [28 x i8] c"decompress:unexpected error\00", align 1
@.str.92 = private unnamed_addr constant [47 x i8] c"\0A%s: Data integrity error when decompressing.\0A\00", align 1
@.str.93 = private unnamed_addr constant [95 x i8] c"\0A%s: Compressed file ends unexpectedly;\0A\09perhaps it is corrupted?  *Possible* reason follows.\0A\00", align 1
@.str.94 = private unnamed_addr constant [18 x i8] c"testf: bad modes\0A\00", align 1
@.str.95 = private unnamed_addr constant [30 x i8] c"%s: Can't open input %s: %s.\0A\00", align 1
@.str.96 = private unnamed_addr constant [19 x i8] c"testf: bad srcMode\00", align 1
@.str.97 = private unnamed_addr constant [4 x i8] c"ok\0A\00", align 1
@.str.98 = private unnamed_addr constant [21 x i8] c"test:bzReadGetUnused\00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c"%s: %s: \00", align 1
@.str.100 = private unnamed_addr constant [36 x i8] c"data integrity (CRC) error in data\0A\00", align 1
@.str.101 = private unnamed_addr constant [24 x i8] c"file ends unexpectedly\0A\00", align 1
@.str.102 = private unnamed_addr constant [46 x i8] c"bad magic number (file not created by bzip2)\0A\00", align 1
@.str.103 = private unnamed_addr constant [36 x i8] c"trailing garbage after EOF ignored\0A\00", align 1
@.str.104 = private unnamed_addr constant [22 x i8] c"test:unexpected error\00", align 1
@.str.56 = private unnamed_addr constant [443 x i8] c"\0A\0Abzip2/libbzip2: internal error number %d.\0AThis is a bug in bzip2/libbzip2, %s.\0APlease report it to me at: jseward@bzip.org.  If this happened\0Awhen you were using some program which uses libbzip2 as a\0Acomponent, you should also report this bug to the author(s)\0Aof that program.  Please make an effort to report this bug;\0Atimely and accurate bug reports eventually lead to higher\0Aquality software.  Thanks.  Julian Seward, 15 February 2005.\0A\0A\00", align 1
@.str.1.58 = private unnamed_addr constant [1057 x i8] c"\0A*** A special note about internal error number 1007 ***\0A\0AExperience suggests that a common cause of i.e. 1007\0Ais unreliable memory or other hardware.  The 1007 assertion\0Ajust happens to cross-check the results of huge numbers of\0Amemory reads/writes, and so acts (unintendedly) as a stress\0Atest of your memory system.\0A\0AI suggest the following: try compressing the file again,\0Apossibly monitoring progress in detail with the -vv flag.\0A\0A* If the error cannot be reproduced, and/or happens at different\0A  points in compression, you may have a flaky memory system.\0A  Try a memory-test program.  I have used Memtest86\0A  (www.memtest86.com).  At the time of writing it is free (GPLd).\0A  Memtest86 tests memory much more thorougly than your BIOSs\0A  power-on test, and may find failures that the BIOS doesn't.\0A\0A* If the error can be repeatably reproduced, this is a bug in\0A  bzip2, and I would very much like to hear about it.  Please\0A  let me know, and, ideally, save a copy of the file causing the\0A  problem -- without which I will be unable to investigate it.\0A\0A\00", align 1
@.str.2.61 = private unnamed_addr constant [18 x i8] c" {0x%08x, 0x%08x}\00", align 1
@.str.4.62 = private unnamed_addr constant [55 x i8] c"\0A    combined CRCs: stored = 0x%08x, computed = 0x%08x\00", align 1
@.str.5.57 = private unnamed_addr constant [19 x i8] c"1.0.4, 20-Dec-2006\00", align 1
@stdin = external local_unnamed_addr global ptr, align 8
@stdout = external local_unnamed_addr global ptr, align 8
@bzerrorstrings = internal unnamed_addr constant [16 x ptr] [ptr @.str.10.77, ptr @.str.11.78, ptr @.str.12.79, ptr @.str.13.80, ptr @.str.14.81, ptr @.str.15.82, ptr @.str.16.83, ptr @.str.17.84, ptr @.str.18.85, ptr @.str.19.86, ptr @.str.20.87, ptr @.str.20.87, ptr @.str.20.87, ptr @.str.20.87, ptr @.str.20.87, ptr @.str.20.87], align 16
@.str.10.77 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.11.78 = private unnamed_addr constant [15 x i8] c"SEQUENCE_ERROR\00", align 1
@.str.12.79 = private unnamed_addr constant [12 x i8] c"PARAM_ERROR\00", align 1
@.str.13.80 = private unnamed_addr constant [10 x i8] c"MEM_ERROR\00", align 1
@.str.14.81 = private unnamed_addr constant [11 x i8] c"DATA_ERROR\00", align 1
@.str.15.82 = private unnamed_addr constant [17 x i8] c"DATA_ERROR_MAGIC\00", align 1
@.str.16.83 = private unnamed_addr constant [9 x i8] c"IO_ERROR\00", align 1
@.str.17.84 = private unnamed_addr constant [15 x i8] c"UNEXPECTED_EOF\00", align 1
@.str.18.85 = private unnamed_addr constant [13 x i8] c"OUTBUFF_FULL\00", align 1
@.str.19.86 = private unnamed_addr constant [13 x i8] c"CONFIG_ERROR\00", align 1
@.str.20.87 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.105 = private unnamed_addr constant [62 x i8] c"    block %d: crc = 0x%08x, combined CRC = 0x%08x, size = %d\0A\00", align 1
@.str.1.114 = private unnamed_addr constant [36 x i8] c"    final combined CRC = 0x%08x\0A   \00", align 1
@.str.2.106 = private unnamed_addr constant [64 x i8] c"      %d in block, %d after MTF & 1-2 coding, %d+2 syms in use\0A\00", align 1
@.str.3.107 = private unnamed_addr constant [59 x i8] c"      initial group %d, [%d .. %d], has %d syms (%4.1f%%)\0A\00", align 1
@.str.4.108 = private unnamed_addr constant [41 x i8] c"      pass %d: size is %d, grp uses are \00", align 1
@.str.5.109 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.7.110 = private unnamed_addr constant [26 x i8] c"      bytes: mapping %d, \00", align 1
@.str.8.111 = private unnamed_addr constant [15 x i8] c"selectors %d, \00", align 1
@.str.9.112 = private unnamed_addr constant [18 x i8] c"code lengths %d, \00", align 1
@.str.10.113 = private unnamed_addr constant [10 x i8] c"codes %d\0A\00", align 1
@BZ2_crc32Table = dso_local local_unnamed_addr global [256 x i32] [i32 0, i32 79764919, i32 159529838, i32 222504665, i32 319059676, i32 398814059, i32 445009330, i32 507990021, i32 638119352, i32 583659535, i32 797628118, i32 726387553, i32 890018660, i32 835552979, i32 1015980042, i32 944750013, i32 1276238704, i32 1221641927, i32 1167319070, i32 1095957929, i32 1595256236, i32 1540665371, i32 1452775106, i32 1381403509, i32 1780037320, i32 1859660671, i32 1671105958, i32 1733955601, i32 2031960084, i32 2111593891, i32 1889500026, i32 1952343757, i32 -1742489888, i32 -1662866601, i32 -1851683442, i32 -1788833735, i32 -1960329156, i32 -1880695413, i32 -2103051438, i32 -2040207643, i32 -1104454824, i32 -1159051537, i32 -1213636554, i32 -1284997759, i32 -1389417084, i32 -1444007885, i32 -1532160278, i32 -1603531939, i32 -734892656, i32 -789352409, i32 -575645954, i32 -646886583, i32 -952755380, i32 -1007220997, i32 -827056094, i32 -898286187, i32 -231047128, i32 -151282273, i32 -71779514, i32 -8804623, i32 -515967244, i32 -436212925, i32 -390279782, i32 -327299027, i32 881225847, i32 809987520, i32 1023691545, i32 969234094, i32 662832811, i32 591600412, i32 771767749, i32 717299826, i32 311336399, i32 374308984, i32 453813921, i32 533576470, i32 25881363, i32 88864420, i32 134795389, i32 214552010, i32 2023205639, i32 2086057648, i32 1897238633, i32 1976864222, i32 1804852699, i32 1867694188, i32 1645340341, i32 1724971778, i32 1587496639, i32 1516133128, i32 1461550545, i32 1406951526, i32 1302016099, i32 1230646740, i32 1142491917, i32 1087903418, i32 -1398421865, i32 -1469785312, i32 -1524105735, i32 -1578704818, i32 -1079922613, i32 -1151291908, i32 -1239184603, i32 -1293773166, i32 -1968362705, i32 -1905510760, i32 -2094067647, i32 -2014441994, i32 -1716953613, i32 -1654112188, i32 -1876203875, i32 -1796572374, i32 -525066777, i32 -462094256, i32 -382327159, i32 -302564546, i32 -206542021, i32 -143559028, i32 -97365931, i32 -17609246, i32 -960696225, i32 -1031934488, i32 -817968335, i32 -872425850, i32 -709327229, i32 -780559564, i32 -600130067, i32 -654598054, i32 1762451694, i32 1842216281, i32 1619975040, i32 1682949687, i32 2047383090, i32 2127137669, i32 1938468188, i32 2001449195, i32 1325665622, i32 1271206113, i32 1183200824, i32 1111960463, i32 1543535498, i32 1489069629, i32 1434599652, i32 1363369299, i32 622672798, i32 568075817, i32 748617968, i32 677256519, i32 907627842, i32 853037301, i32 1067152940, i32 995781531, i32 51762726, i32 131386257, i32 177728840, i32 240578815, i32 269590778, i32 349224269, i32 429104020, i32 491947555, i32 -248556018, i32 -168932423, i32 -122852000, i32 -60002089, i32 -500490030, i32 -420856475, i32 -341238852, i32 -278395381, i32 -685261898, i32 -739858943, i32 -559578920, i32 -630940305, i32 -1004286614, i32 -1058877219, i32 -845023740, i32 -916395085, i32 -1119974018, i32 -1174433591, i32 -1262701040, i32 -1333941337, i32 -1371866206, i32 -1426332139, i32 -1481064244, i32 -1552294533, i32 -1690935098, i32 -1611170447, i32 -1833673816, i32 -1770699233, i32 -2009983462, i32 -1930228819, i32 -2119160460, i32 -2056179517, i32 1569362073, i32 1498123566, i32 1409854455, i32 1355396672, i32 1317987909, i32 1246755826, i32 1192025387, i32 1137557660, i32 2072149281, i32 2135122070, i32 1912620623, i32 1992383480, i32 1753615357, i32 1816598090, i32 1627664531, i32 1707420964, i32 295390185, i32 358241886, i32 404320391, i32 483945776, i32 43990325, i32 106832002, i32 186451547, i32 266083308, i32 932423249, i32 861060070, i32 1041341759, i32 986742920, i32 613929101, i32 542559546, i32 756411363, i32 701822548, i32 -978770311, i32 -1050133554, i32 -869589737, i32 -924188512, i32 -693284699, i32 -764654318, i32 -550540341, i32 -605129092, i32 -475935807, i32 -413084042, i32 -366743377, i32 -287118056, i32 -257573603, i32 -194731862, i32 -114850189, i32 -35218492, i32 -1984365303, i32 -1921392450, i32 -2143631769, i32 -2063868976, i32 -1698919467, i32 -1635936670, i32 -1824608069, i32 -1744851700, i32 -1347415887, i32 -1418654458, i32 -1506661409, i32 -1561119128, i32 -1129027987, i32 -1200260134, i32 -1254728445, i32 -1309196108], align 16
@.str.119 = private unnamed_addr constant [20 x i8] c"\0A    [%d: huff+mtf \00", align 1
@.str.1.120 = private unnamed_addr constant [7 x i8] c"rt+rld\00", align 1
@.str.127 = private unnamed_addr constant [15 x i8] c"_finfo_dataset\00", align 1
@.str.1.128 = private unnamed_addr constant [3 x i8] c"rt\00", align 1
@stderr = external local_unnamed_addr global ptr, align 8
@.str.2.129 = private unnamed_addr constant [29 x i8] c"\0AError: Can't find dataset!\0A\00", align 1
@.str.3.130 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@BZ2_rNums = dso_local local_unnamed_addr global [512 x i32] [i32 619, i32 720, i32 127, i32 481, i32 931, i32 816, i32 813, i32 233, i32 566, i32 247, i32 985, i32 724, i32 205, i32 454, i32 863, i32 491, i32 741, i32 242, i32 949, i32 214, i32 733, i32 859, i32 335, i32 708, i32 621, i32 574, i32 73, i32 654, i32 730, i32 472, i32 419, i32 436, i32 278, i32 496, i32 867, i32 210, i32 399, i32 680, i32 480, i32 51, i32 878, i32 465, i32 811, i32 169, i32 869, i32 675, i32 611, i32 697, i32 867, i32 561, i32 862, i32 687, i32 507, i32 283, i32 482, i32 129, i32 807, i32 591, i32 733, i32 623, i32 150, i32 238, i32 59, i32 379, i32 684, i32 877, i32 625, i32 169, i32 643, i32 105, i32 170, i32 607, i32 520, i32 932, i32 727, i32 476, i32 693, i32 425, i32 174, i32 647, i32 73, i32 122, i32 335, i32 530, i32 442, i32 853, i32 695, i32 249, i32 445, i32 515, i32 909, i32 545, i32 703, i32 919, i32 874, i32 474, i32 882, i32 500, i32 594, i32 612, i32 641, i32 801, i32 220, i32 162, i32 819, i32 984, i32 589, i32 513, i32 495, i32 799, i32 161, i32 604, i32 958, i32 533, i32 221, i32 400, i32 386, i32 867, i32 600, i32 782, i32 382, i32 596, i32 414, i32 171, i32 516, i32 375, i32 682, i32 485, i32 911, i32 276, i32 98, i32 553, i32 163, i32 354, i32 666, i32 933, i32 424, i32 341, i32 533, i32 870, i32 227, i32 730, i32 475, i32 186, i32 263, i32 647, i32 537, i32 686, i32 600, i32 224, i32 469, i32 68, i32 770, i32 919, i32 190, i32 373, i32 294, i32 822, i32 808, i32 206, i32 184, i32 943, i32 795, i32 384, i32 383, i32 461, i32 404, i32 758, i32 839, i32 887, i32 715, i32 67, i32 618, i32 276, i32 204, i32 918, i32 873, i32 777, i32 604, i32 560, i32 951, i32 160, i32 578, i32 722, i32 79, i32 804, i32 96, i32 409, i32 713, i32 940, i32 652, i32 934, i32 970, i32 447, i32 318, i32 353, i32 859, i32 672, i32 112, i32 785, i32 645, i32 863, i32 803, i32 350, i32 139, i32 93, i32 354, i32 99, i32 820, i32 908, i32 609, i32 772, i32 154, i32 274, i32 580, i32 184, i32 79, i32 626, i32 630, i32 742, i32 653, i32 282, i32 762, i32 623, i32 680, i32 81, i32 927, i32 626, i32 789, i32 125, i32 411, i32 521, i32 938, i32 300, i32 821, i32 78, i32 343, i32 175, i32 128, i32 250, i32 170, i32 774, i32 972, i32 275, i32 999, i32 639, i32 495, i32 78, i32 352, i32 126, i32 857, i32 956, i32 358, i32 619, i32 580, i32 124, i32 737, i32 594, i32 701, i32 612, i32 669, i32 112, i32 134, i32 694, i32 363, i32 992, i32 809, i32 743, i32 168, i32 974, i32 944, i32 375, i32 748, i32 52, i32 600, i32 747, i32 642, i32 182, i32 862, i32 81, i32 344, i32 805, i32 988, i32 739, i32 511, i32 655, i32 814, i32 334, i32 249, i32 515, i32 897, i32 955, i32 664, i32 981, i32 649, i32 113, i32 974, i32 459, i32 893, i32 228, i32 433, i32 837, i32 553, i32 268, i32 926, i32 240, i32 102, i32 654, i32 459, i32 51, i32 686, i32 754, i32 806, i32 760, i32 493, i32 403, i32 415, i32 394, i32 687, i32 700, i32 946, i32 670, i32 656, i32 610, i32 738, i32 392, i32 760, i32 799, i32 887, i32 653, i32 978, i32 321, i32 576, i32 617, i32 626, i32 502, i32 894, i32 679, i32 243, i32 440, i32 680, i32 879, i32 194, i32 572, i32 640, i32 724, i32 926, i32 56, i32 204, i32 700, i32 707, i32 151, i32 457, i32 449, i32 797, i32 195, i32 791, i32 558, i32 945, i32 679, i32 297, i32 59, i32 87, i32 824, i32 713, i32 663, i32 412, i32 693, i32 342, i32 606, i32 134, i32 108, i32 571, i32 364, i32 631, i32 212, i32 174, i32 643, i32 304, i32 329, i32 343, i32 97, i32 430, i32 751, i32 497, i32 314, i32 983, i32 374, i32 822, i32 928, i32 140, i32 206, i32 73, i32 263, i32 980, i32 736, i32 876, i32 478, i32 430, i32 305, i32 170, i32 514, i32 364, i32 692, i32 829, i32 82, i32 855, i32 953, i32 676, i32 246, i32 369, i32 970, i32 294, i32 750, i32 807, i32 827, i32 150, i32 790, i32 288, i32 923, i32 804, i32 378, i32 215, i32 828, i32 592, i32 281, i32 565, i32 555, i32 710, i32 82, i32 896, i32 831, i32 547, i32 261, i32 524, i32 462, i32 293, i32 465, i32 502, i32 56, i32 661, i32 821, i32 976, i32 991, i32 658, i32 869, i32 905, i32 758, i32 745, i32 193, i32 768, i32 550, i32 608, i32 933, i32 378, i32 286, i32 215, i32 979, i32 792, i32 961, i32 61, i32 688, i32 793, i32 644, i32 986, i32 403, i32 106, i32 366, i32 905, i32 644, i32 372, i32 567, i32 466, i32 434, i32 645, i32 210, i32 389, i32 550, i32 919, i32 135, i32 780, i32 773, i32 635, i32 389, i32 707, i32 100, i32 626, i32 958, i32 165, i32 504, i32 920, i32 176, i32 193, i32 713, i32 857, i32 265, i32 203, i32 50, i32 668, i32 108, i32 645, i32 990, i32 626, i32 197, i32 510, i32 357, i32 358, i32 850, i32 858, i32 364, i32 936, i32 638], align 16

; Function Attrs: nounwind uwtable
define dso_local void @BZ2_blockSort(ptr nocapture noundef %arg) local_unnamed_addr #0 {
bb:
  %i = alloca [100 x i32], align 16
  %i1 = alloca [100 x i32], align 16
  %i2 = alloca [100 x i32], align 16
  %i3 = alloca [256 x i32], align 16
  %i4 = alloca [256 x i8], align 16
  %i5 = alloca [256 x i32], align 16
  %i6 = alloca [256 x i32], align 16
  %i7 = alloca i32, align 4
  %i8 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 8
  %i9 = load ptr, ptr %i8, align 8, !tbaa !8
  %i10 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 9
  %i11 = load ptr, ptr %i10, align 8, !tbaa !14
  %i12 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 6
  %i13 = load ptr, ptr %i12, align 8, !tbaa !15
  %i14 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 17
  %i15 = load i32, ptr %i14, align 4, !tbaa !16
  %i16 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 28
  %i17 = load i32, ptr %i16, align 8, !tbaa !17
  %i18 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 12
  %i19 = load i32, ptr %i18, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i7) #31
  %i20 = icmp slt i32 %i15, 10000
  br i1 %i20, label %bb.bb1377_crit_edge, label %bb21

bb.bb1377_crit_edge:                              ; preds = %bb
  br label %bb1377

bb21:                                             ; preds = %bb
  %i22 = and i32 %i15, 1
  %i23 = add nuw i32 %i15, 34
  %i24 = add nuw i32 %i23, %i22
  %i25 = zext i32 %i24 to i64
  %i26 = getelementptr inbounds i8, ptr %i11, i64 %i25
  %i27 = tail call i32 @llvm.smax.i32(i32 %i19, i32 1)
  %i28 = tail call i32 @llvm.umin.i32(i32 %i27, i32 100)
  %i29 = trunc i32 %i28 to i8
  %i30 = add nsw i8 %i29, -1
  %i31 = udiv i8 %i30, 3
  %i32 = zext nneg i8 %i31 to i32
  %i33 = mul nsw i32 %i15, %i32
  store i32 %i33, ptr %i7, align 4, !tbaa !19
  call void @llvm.lifetime.start.p0(i64 1024, ptr nonnull %i3) #31
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %i4) #31
  call void @llvm.lifetime.start.p0(i64 1024, ptr nonnull %i5) #31
  call void @llvm.lifetime.start.p0(i64 1024, ptr nonnull %i6) #31
  %i34 = icmp sgt i32 %i17, 3
  br i1 %i34, label %bb35, label %bb21.bb38_crit_edge

bb21.bb38_crit_edge:                              ; preds = %bb21
  br label %bb38

bb35:                                             ; preds = %bb21
  %i36 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i37 = tail call i64 @fwrite(ptr nonnull @.str.6, i64 33, i64 1, ptr %i36) #32
  br label %bb38

bb38:                                             ; preds = %bb21.bb38_crit_edge, %bb35
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(262148) %i13, i8 0, i64 262148, i1 false), !tbaa !19
  %i39 = load i8, ptr %i11, align 1, !tbaa !21
  %i40 = zext i8 %i39 to i32
  %i41 = add nsw i32 %i15, -1
  %i42 = zext nneg i32 %i41 to i64
  br label %bb46

bb43:                                             ; preds = %bb46
  %i44 = and i64 %i92, 2147483648
  %i45 = icmp eq i64 %i44, 0
  br i1 %i45, label %bb264.preheader, label %bb43.bb94_crit_edge

bb43.bb94_crit_edge:                              ; preds = %bb43
  br label %bb94

bb264.preheader:                                  ; preds = %bb43
  br label %bb264

bb46:                                             ; preds = %bb46.bb46_crit_edge, %bb38
  %i47 = phi i64 [ %i42, %bb38 ], [ %i92, %bb46.bb46_crit_edge ]
  %i48 = phi i32 [ %i40, %bb38 ], [ %i85, %bb46.bb46_crit_edge ]
  %i49 = getelementptr inbounds i16, ptr %i26, i64 %i47
  store i16 0, ptr %i49, align 2, !tbaa !22
  %i50 = getelementptr inbounds i8, ptr %i11, i64 %i47
  %i51 = load i8, ptr %i50, align 1, !tbaa !21
  %i52 = zext i8 %i51 to i32
  %i53 = shl nuw nsw i32 %i52, 8
  %i54 = or disjoint i32 %i53, %i48
  %i55 = zext nneg i32 %i54 to i64
  %i56 = getelementptr inbounds i32, ptr %i13, i64 %i55
  %i57 = load i32, ptr %i56, align 4, !tbaa !19
  %i58 = add i32 %i57, 1
  store i32 %i58, ptr %i56, align 4, !tbaa !19
  %i59 = add nsw i64 %i47, -1
  %i60 = getelementptr inbounds i16, ptr %i26, i64 %i59
  store i16 0, ptr %i60, align 2, !tbaa !22
  %i61 = getelementptr inbounds i8, ptr %i11, i64 %i59
  %i62 = load i8, ptr %i61, align 1, !tbaa !21
  %i63 = zext i8 %i62 to i32
  %i64 = shl nuw nsw i32 %i63, 8
  %i65 = or disjoint i32 %i64, %i52
  %i66 = zext nneg i32 %i65 to i64
  %i67 = getelementptr inbounds i32, ptr %i13, i64 %i66
  %i68 = load i32, ptr %i67, align 4, !tbaa !19
  %i69 = add i32 %i68, 1
  store i32 %i69, ptr %i67, align 4, !tbaa !19
  %i70 = add nsw i64 %i47, -2
  %i71 = getelementptr inbounds i16, ptr %i26, i64 %i70
  store i16 0, ptr %i71, align 2, !tbaa !22
  %i72 = getelementptr inbounds i8, ptr %i11, i64 %i70
  %i73 = load i8, ptr %i72, align 1, !tbaa !21
  %i74 = zext i8 %i73 to i32
  %i75 = shl nuw nsw i32 %i74, 8
  %i76 = or disjoint i32 %i75, %i63
  %i77 = zext nneg i32 %i76 to i64
  %i78 = getelementptr inbounds i32, ptr %i13, i64 %i77
  %i79 = load i32, ptr %i78, align 4, !tbaa !19
  %i80 = add i32 %i79, 1
  store i32 %i80, ptr %i78, align 4, !tbaa !19
  %i81 = add nsw i64 %i47, -3
  %i82 = getelementptr inbounds i16, ptr %i26, i64 %i81
  store i16 0, ptr %i82, align 2, !tbaa !22
  %i83 = getelementptr inbounds i8, ptr %i11, i64 %i81
  %i84 = load i8, ptr %i83, align 1, !tbaa !21
  %i85 = zext i8 %i84 to i32
  %i86 = shl nuw nsw i32 %i85, 8
  %i87 = or disjoint i32 %i86, %i74
  %i88 = zext nneg i32 %i87 to i64
  %i89 = getelementptr inbounds i32, ptr %i13, i64 %i88
  %i90 = load i32, ptr %i89, align 4, !tbaa !19
  %i91 = add i32 %i90, 1
  store i32 %i91, ptr %i89, align 4, !tbaa !19
  %i92 = add nsw i64 %i47, -4
  %i93 = icmp ugt i64 %i47, 6
  br i1 %i93, label %bb46.bb46_crit_edge, label %bb43, !llvm.loop !24

bb46.bb46_crit_edge:                              ; preds = %bb46
  br label %bb46

bb94.loopexit:                                    ; preds = %bb264
  br label %bb94

bb94:                                             ; preds = %bb43.bb94_crit_edge, %bb94.loopexit
  %i95 = zext nneg i32 %i15 to i64
  %i96 = load i8, ptr %i11, align 1, !tbaa !21
  %i97 = getelementptr inbounds i8, ptr %i11, i64 %i95
  store i8 %i96, ptr %i97, align 1, !tbaa !21
  %i98 = getelementptr inbounds i16, ptr %i26, i64 %i95
  store i16 0, ptr %i98, align 2, !tbaa !22
  %i99 = getelementptr inbounds i8, ptr %i11, i64 1
  %i100 = load i8, ptr %i99, align 1, !tbaa !21
  %i101 = add nuw nsw i64 %i95, 1
  %i102 = getelementptr inbounds i8, ptr %i11, i64 %i101
  store i8 %i100, ptr %i102, align 1, !tbaa !21
  %i103 = getelementptr inbounds i16, ptr %i26, i64 %i101
  store i16 0, ptr %i103, align 2, !tbaa !22
  %i104 = getelementptr inbounds i8, ptr %i11, i64 2
  %i105 = load i8, ptr %i104, align 1, !tbaa !21
  %i106 = add nuw nsw i64 %i95, 2
  %i107 = getelementptr inbounds i8, ptr %i11, i64 %i106
  store i8 %i105, ptr %i107, align 1, !tbaa !21
  %i108 = getelementptr inbounds i16, ptr %i26, i64 %i106
  store i16 0, ptr %i108, align 2, !tbaa !22
  %i109 = getelementptr inbounds i8, ptr %i11, i64 3
  %i110 = load i8, ptr %i109, align 1, !tbaa !21
  %i111 = add nuw nsw i64 %i95, 3
  %i112 = getelementptr inbounds i8, ptr %i11, i64 %i111
  store i8 %i110, ptr %i112, align 1, !tbaa !21
  %i113 = getelementptr inbounds i16, ptr %i26, i64 %i111
  store i16 0, ptr %i113, align 2, !tbaa !22
  %i114 = getelementptr inbounds i8, ptr %i11, i64 4
  %i115 = load i8, ptr %i114, align 1, !tbaa !21
  %i116 = add nuw nsw i64 %i95, 4
  %i117 = getelementptr inbounds i8, ptr %i11, i64 %i116
  store i8 %i115, ptr %i117, align 1, !tbaa !21
  %i118 = getelementptr inbounds i16, ptr %i26, i64 %i116
  store i16 0, ptr %i118, align 2, !tbaa !22
  %i119 = getelementptr inbounds i8, ptr %i11, i64 5
  %i120 = load i8, ptr %i119, align 1, !tbaa !21
  %i121 = add nuw nsw i64 %i95, 5
  %i122 = getelementptr inbounds i8, ptr %i11, i64 %i121
  store i8 %i120, ptr %i122, align 1, !tbaa !21
  %i123 = getelementptr inbounds i16, ptr %i26, i64 %i121
  store i16 0, ptr %i123, align 2, !tbaa !22
  %i124 = getelementptr inbounds i8, ptr %i11, i64 6
  %i125 = load i8, ptr %i124, align 1, !tbaa !21
  %i126 = add nuw nsw i64 %i95, 6
  %i127 = getelementptr inbounds i8, ptr %i11, i64 %i126
  store i8 %i125, ptr %i127, align 1, !tbaa !21
  %i128 = getelementptr inbounds i16, ptr %i26, i64 %i126
  store i16 0, ptr %i128, align 2, !tbaa !22
  %i129 = getelementptr inbounds i8, ptr %i11, i64 7
  %i130 = load i8, ptr %i129, align 1, !tbaa !21
  %i131 = add nuw nsw i64 %i95, 7
  %i132 = getelementptr inbounds i8, ptr %i11, i64 %i131
  store i8 %i130, ptr %i132, align 1, !tbaa !21
  %i133 = getelementptr inbounds i16, ptr %i26, i64 %i131
  store i16 0, ptr %i133, align 2, !tbaa !22
  %i134 = getelementptr inbounds i8, ptr %i11, i64 8
  %i135 = load i8, ptr %i134, align 1, !tbaa !21
  %i136 = add nuw nsw i64 %i95, 8
  %i137 = getelementptr inbounds i8, ptr %i11, i64 %i136
  store i8 %i135, ptr %i137, align 1, !tbaa !21
  %i138 = getelementptr inbounds i16, ptr %i26, i64 %i136
  store i16 0, ptr %i138, align 2, !tbaa !22
  %i139 = getelementptr inbounds i8, ptr %i11, i64 9
  %i140 = load i8, ptr %i139, align 1, !tbaa !21
  %i141 = add nuw nsw i64 %i95, 9
  %i142 = getelementptr inbounds i8, ptr %i11, i64 %i141
  store i8 %i140, ptr %i142, align 1, !tbaa !21
  %i143 = getelementptr inbounds i16, ptr %i26, i64 %i141
  store i16 0, ptr %i143, align 2, !tbaa !22
  %i144 = getelementptr inbounds i8, ptr %i11, i64 10
  %i145 = load i8, ptr %i144, align 1, !tbaa !21
  %i146 = add nuw nsw i64 %i95, 10
  %i147 = getelementptr inbounds i8, ptr %i11, i64 %i146
  store i8 %i145, ptr %i147, align 1, !tbaa !21
  %i148 = getelementptr inbounds i16, ptr %i26, i64 %i146
  store i16 0, ptr %i148, align 2, !tbaa !22
  %i149 = getelementptr inbounds i8, ptr %i11, i64 11
  %i150 = load i8, ptr %i149, align 1, !tbaa !21
  %i151 = add nuw nsw i64 %i95, 11
  %i152 = getelementptr inbounds i8, ptr %i11, i64 %i151
  store i8 %i150, ptr %i152, align 1, !tbaa !21
  %i153 = getelementptr inbounds i16, ptr %i26, i64 %i151
  store i16 0, ptr %i153, align 2, !tbaa !22
  %i154 = getelementptr inbounds i8, ptr %i11, i64 12
  %i155 = load i8, ptr %i154, align 1, !tbaa !21
  %i156 = add nuw nsw i64 %i95, 12
  %i157 = getelementptr inbounds i8, ptr %i11, i64 %i156
  store i8 %i155, ptr %i157, align 1, !tbaa !21
  %i158 = getelementptr inbounds i16, ptr %i26, i64 %i156
  store i16 0, ptr %i158, align 2, !tbaa !22
  %i159 = getelementptr inbounds i8, ptr %i11, i64 13
  %i160 = load i8, ptr %i159, align 1, !tbaa !21
  %i161 = add nuw nsw i64 %i95, 13
  %i162 = getelementptr inbounds i8, ptr %i11, i64 %i161
  store i8 %i160, ptr %i162, align 1, !tbaa !21
  %i163 = getelementptr inbounds i16, ptr %i26, i64 %i161
  store i16 0, ptr %i163, align 2, !tbaa !22
  %i164 = getelementptr inbounds i8, ptr %i11, i64 14
  %i165 = load i8, ptr %i164, align 1, !tbaa !21
  %i166 = add nuw nsw i64 %i95, 14
  %i167 = getelementptr inbounds i8, ptr %i11, i64 %i166
  store i8 %i165, ptr %i167, align 1, !tbaa !21
  %i168 = getelementptr inbounds i16, ptr %i26, i64 %i166
  store i16 0, ptr %i168, align 2, !tbaa !22
  %i169 = getelementptr inbounds i8, ptr %i11, i64 15
  %i170 = load i8, ptr %i169, align 1, !tbaa !21
  %i171 = add nuw nsw i64 %i95, 15
  %i172 = getelementptr inbounds i8, ptr %i11, i64 %i171
  store i8 %i170, ptr %i172, align 1, !tbaa !21
  %i173 = getelementptr inbounds i16, ptr %i26, i64 %i171
  store i16 0, ptr %i173, align 2, !tbaa !22
  %i174 = getelementptr inbounds i8, ptr %i11, i64 16
  %i175 = load i8, ptr %i174, align 1, !tbaa !21
  %i176 = add nuw nsw i64 %i95, 16
  %i177 = getelementptr inbounds i8, ptr %i11, i64 %i176
  store i8 %i175, ptr %i177, align 1, !tbaa !21
  %i178 = getelementptr inbounds i16, ptr %i26, i64 %i176
  store i16 0, ptr %i178, align 2, !tbaa !22
  %i179 = getelementptr inbounds i8, ptr %i11, i64 17
  %i180 = load i8, ptr %i179, align 1, !tbaa !21
  %i181 = add nuw nsw i64 %i95, 17
  %i182 = getelementptr inbounds i8, ptr %i11, i64 %i181
  store i8 %i180, ptr %i182, align 1, !tbaa !21
  %i183 = getelementptr inbounds i16, ptr %i26, i64 %i181
  store i16 0, ptr %i183, align 2, !tbaa !22
  %i184 = getelementptr inbounds i8, ptr %i11, i64 18
  %i185 = load i8, ptr %i184, align 1, !tbaa !21
  %i186 = add nuw nsw i64 %i95, 18
  %i187 = getelementptr inbounds i8, ptr %i11, i64 %i186
  store i8 %i185, ptr %i187, align 1, !tbaa !21
  %i188 = getelementptr inbounds i16, ptr %i26, i64 %i186
  store i16 0, ptr %i188, align 2, !tbaa !22
  %i189 = getelementptr inbounds i8, ptr %i11, i64 19
  %i190 = load i8, ptr %i189, align 1, !tbaa !21
  %i191 = add nuw nsw i64 %i95, 19
  %i192 = getelementptr inbounds i8, ptr %i11, i64 %i191
  store i8 %i190, ptr %i192, align 1, !tbaa !21
  %i193 = getelementptr inbounds i16, ptr %i26, i64 %i191
  store i16 0, ptr %i193, align 2, !tbaa !22
  %i194 = getelementptr inbounds i8, ptr %i11, i64 20
  %i195 = load i8, ptr %i194, align 1, !tbaa !21
  %i196 = add nuw nsw i64 %i95, 20
  %i197 = getelementptr inbounds i8, ptr %i11, i64 %i196
  store i8 %i195, ptr %i197, align 1, !tbaa !21
  %i198 = getelementptr inbounds i16, ptr %i26, i64 %i196
  store i16 0, ptr %i198, align 2, !tbaa !22
  %i199 = getelementptr inbounds i8, ptr %i11, i64 21
  %i200 = load i8, ptr %i199, align 1, !tbaa !21
  %i201 = add nuw nsw i64 %i95, 21
  %i202 = getelementptr inbounds i8, ptr %i11, i64 %i201
  store i8 %i200, ptr %i202, align 1, !tbaa !21
  %i203 = getelementptr inbounds i16, ptr %i26, i64 %i201
  store i16 0, ptr %i203, align 2, !tbaa !22
  %i204 = getelementptr inbounds i8, ptr %i11, i64 22
  %i205 = load i8, ptr %i204, align 1, !tbaa !21
  %i206 = add nuw nsw i64 %i95, 22
  %i207 = getelementptr inbounds i8, ptr %i11, i64 %i206
  store i8 %i205, ptr %i207, align 1, !tbaa !21
  %i208 = getelementptr inbounds i16, ptr %i26, i64 %i206
  store i16 0, ptr %i208, align 2, !tbaa !22
  %i209 = getelementptr inbounds i8, ptr %i11, i64 23
  %i210 = load i8, ptr %i209, align 1, !tbaa !21
  %i211 = add nuw nsw i64 %i95, 23
  %i212 = getelementptr inbounds i8, ptr %i11, i64 %i211
  store i8 %i210, ptr %i212, align 1, !tbaa !21
  %i213 = getelementptr inbounds i16, ptr %i26, i64 %i211
  store i16 0, ptr %i213, align 2, !tbaa !22
  %i214 = getelementptr inbounds i8, ptr %i11, i64 24
  %i215 = load i8, ptr %i214, align 1, !tbaa !21
  %i216 = add nuw nsw i64 %i95, 24
  %i217 = getelementptr inbounds i8, ptr %i11, i64 %i216
  store i8 %i215, ptr %i217, align 1, !tbaa !21
  %i218 = getelementptr inbounds i16, ptr %i26, i64 %i216
  store i16 0, ptr %i218, align 2, !tbaa !22
  %i219 = getelementptr inbounds i8, ptr %i11, i64 25
  %i220 = load i8, ptr %i219, align 1, !tbaa !21
  %i221 = add nuw nsw i64 %i95, 25
  %i222 = getelementptr inbounds i8, ptr %i11, i64 %i221
  store i8 %i220, ptr %i222, align 1, !tbaa !21
  %i223 = getelementptr inbounds i16, ptr %i26, i64 %i221
  store i16 0, ptr %i223, align 2, !tbaa !22
  %i224 = getelementptr inbounds i8, ptr %i11, i64 26
  %i225 = load i8, ptr %i224, align 1, !tbaa !21
  %i226 = add nuw nsw i64 %i95, 26
  %i227 = getelementptr inbounds i8, ptr %i11, i64 %i226
  store i8 %i225, ptr %i227, align 1, !tbaa !21
  %i228 = getelementptr inbounds i16, ptr %i26, i64 %i226
  store i16 0, ptr %i228, align 2, !tbaa !22
  %i229 = getelementptr inbounds i8, ptr %i11, i64 27
  %i230 = load i8, ptr %i229, align 1, !tbaa !21
  %i231 = add nuw nsw i64 %i95, 27
  %i232 = getelementptr inbounds i8, ptr %i11, i64 %i231
  store i8 %i230, ptr %i232, align 1, !tbaa !21
  %i233 = getelementptr inbounds i16, ptr %i26, i64 %i231
  store i16 0, ptr %i233, align 2, !tbaa !22
  %i234 = getelementptr inbounds i8, ptr %i11, i64 28
  %i235 = load i8, ptr %i234, align 1, !tbaa !21
  %i236 = add nuw nsw i64 %i95, 28
  %i237 = getelementptr inbounds i8, ptr %i11, i64 %i236
  store i8 %i235, ptr %i237, align 1, !tbaa !21
  %i238 = getelementptr inbounds i16, ptr %i26, i64 %i236
  store i16 0, ptr %i238, align 2, !tbaa !22
  %i239 = getelementptr inbounds i8, ptr %i11, i64 29
  %i240 = load i8, ptr %i239, align 1, !tbaa !21
  %i241 = add nuw nsw i64 %i95, 29
  %i242 = getelementptr inbounds i8, ptr %i11, i64 %i241
  store i8 %i240, ptr %i242, align 1, !tbaa !21
  %i243 = getelementptr inbounds i16, ptr %i26, i64 %i241
  store i16 0, ptr %i243, align 2, !tbaa !22
  %i244 = getelementptr inbounds i8, ptr %i11, i64 30
  %i245 = load i8, ptr %i244, align 1, !tbaa !21
  %i246 = add nuw nsw i64 %i95, 30
  %i247 = getelementptr inbounds i8, ptr %i11, i64 %i246
  store i8 %i245, ptr %i247, align 1, !tbaa !21
  %i248 = getelementptr inbounds i16, ptr %i26, i64 %i246
  store i16 0, ptr %i248, align 2, !tbaa !22
  %i249 = getelementptr inbounds i8, ptr %i11, i64 31
  %i250 = load i8, ptr %i249, align 1, !tbaa !21
  %i251 = add nuw nsw i64 %i95, 31
  %i252 = getelementptr inbounds i8, ptr %i11, i64 %i251
  store i8 %i250, ptr %i252, align 1, !tbaa !21
  %i253 = getelementptr inbounds i16, ptr %i26, i64 %i251
  store i16 0, ptr %i253, align 2, !tbaa !22
  %i254 = getelementptr inbounds i8, ptr %i11, i64 32
  %i255 = load i8, ptr %i254, align 1, !tbaa !21
  %i256 = add nuw nsw i64 %i95, 32
  %i257 = getelementptr inbounds i8, ptr %i11, i64 %i256
  store i8 %i255, ptr %i257, align 1, !tbaa !21
  %i258 = getelementptr inbounds i16, ptr %i26, i64 %i256
  store i16 0, ptr %i258, align 2, !tbaa !22
  %i259 = getelementptr inbounds i8, ptr %i11, i64 33
  %i260 = load i8, ptr %i259, align 1, !tbaa !21
  %i261 = add nuw nsw i64 %i95, 33
  %i262 = getelementptr inbounds i8, ptr %i11, i64 %i261
  store i8 %i260, ptr %i262, align 1, !tbaa !21
  %i263 = getelementptr inbounds i16, ptr %i26, i64 %i261
  store i16 0, ptr %i263, align 2, !tbaa !22
  br i1 %i34, label %bb280, label %bb94.bb283_crit_edge

bb94.bb283_crit_edge:                             ; preds = %bb94
  br label %bb283

bb264:                                            ; preds = %bb264.bb264_crit_edge, %bb264.preheader
  %i265 = phi i64 [ %i278, %bb264.bb264_crit_edge ], [ %i92, %bb264.preheader ]
  %i266 = phi i32 [ %i273, %bb264.bb264_crit_edge ], [ %i87, %bb264.preheader ]
  %i267 = getelementptr inbounds i16, ptr %i26, i64 %i265
  store i16 0, ptr %i267, align 2, !tbaa !22
  %i268 = lshr i32 %i266, 8
  %i269 = getelementptr inbounds i8, ptr %i11, i64 %i265
  %i270 = load i8, ptr %i269, align 1, !tbaa !21
  %i271 = zext i8 %i270 to i32
  %i272 = shl nuw nsw i32 %i271, 8
  %i273 = or i32 %i272, %i268
  %i274 = zext nneg i32 %i273 to i64
  %i275 = getelementptr inbounds i32, ptr %i13, i64 %i274
  %i276 = load i32, ptr %i275, align 4, !tbaa !19
  %i277 = add i32 %i276, 1
  store i32 %i277, ptr %i275, align 4, !tbaa !19
  %i278 = add nsw i64 %i265, -1
  %i279 = icmp eq i64 %i265, 0
  br i1 %i279, label %bb94.loopexit, label %bb264.bb264_crit_edge, !llvm.loop !26

bb264.bb264_crit_edge:                            ; preds = %bb264
  br label %bb264

bb280:                                            ; preds = %bb94
  %i281 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i282 = tail call i64 @fwrite(ptr nonnull @.str.2, i64 27, i64 1, ptr %i281) #32
  br label %bb283

bb283:                                            ; preds = %bb94.bb283_crit_edge, %bb280
  %i284 = load i32, ptr %i13, align 4
  %i285 = getelementptr i32, ptr %i13, i64 1
  %i286 = getelementptr i32, ptr %i13, i64 2
  %i287 = getelementptr i32, ptr %i13, i64 3
  br label %bb288

bb288:                                            ; preds = %bb288.bb288_crit_edge, %bb283
  %i289 = phi i32 [ %i284, %bb283 ], [ %i302, %bb288.bb288_crit_edge ]
  %i290 = phi i64 [ 1, %bb283 ], [ %i303, %bb288.bb288_crit_edge ]
  %i291 = getelementptr i32, ptr %i13, i64 %i290
  %i292 = load i32, ptr %i291, align 4, !tbaa !19
  %i293 = add i32 %i292, %i289
  store i32 %i293, ptr %i291, align 4, !tbaa !19
  %i294 = getelementptr i32, ptr %i285, i64 %i290
  %i295 = load i32, ptr %i294, align 4, !tbaa !19
  %i296 = add i32 %i295, %i293
  store i32 %i296, ptr %i294, align 4, !tbaa !19
  %i297 = getelementptr i32, ptr %i286, i64 %i290
  %i298 = load i32, ptr %i297, align 4, !tbaa !19
  %i299 = add i32 %i298, %i296
  store i32 %i299, ptr %i297, align 4, !tbaa !19
  %i300 = getelementptr i32, ptr %i287, i64 %i290
  %i301 = load i32, ptr %i300, align 4, !tbaa !19
  %i302 = add i32 %i301, %i299
  store i32 %i302, ptr %i300, align 4, !tbaa !19
  %i303 = add nuw nsw i64 %i290, 4
  %i304 = icmp eq i64 %i303, 65537
  br i1 %i304, label %bb305, label %bb288.bb288_crit_edge, !llvm.loop !27

bb288.bb288_crit_edge:                            ; preds = %bb288
  br label %bb288

bb305:                                            ; preds = %bb288
  %i306 = load i8, ptr %i11, align 1, !tbaa !21
  %i307 = zext i8 %i306 to i16
  %i308 = shl nuw i16 %i307, 8
  br label %bb312

bb309:                                            ; preds = %bb312
  %i310 = and i64 %i362, 2147483648
  %i311 = icmp eq i64 %i310, 0
  br i1 %i311, label %bb365.preheader, label %bb309.bb364_crit_edge

bb309.bb364_crit_edge:                            ; preds = %bb309
  br label %bb364

bb365.preheader:                                  ; preds = %bb309
  br label %bb365

bb312:                                            ; preds = %bb312.bb312_crit_edge, %bb305
  %i313 = phi i64 [ %i42, %bb305 ], [ %i362, %bb312.bb312_crit_edge ]
  %i314 = phi i16 [ %i308, %bb305 ], [ %i354, %bb312.bb312_crit_edge ]
  %i315 = getelementptr inbounds i8, ptr %i11, i64 %i313
  %i316 = load i8, ptr %i315, align 1, !tbaa !21
  %i317 = zext i8 %i316 to i16
  %i318 = tail call i16 @llvm.fshl.i16(i16 %i317, i16 %i314, i16 8)
  %i319 = zext i16 %i318 to i64
  %i320 = getelementptr inbounds i32, ptr %i13, i64 %i319
  %i321 = load i32, ptr %i320, align 4, !tbaa !19
  %i322 = add i32 %i321, -1
  store i32 %i322, ptr %i320, align 4, !tbaa !19
  %i323 = sext i32 %i322 to i64
  %i324 = getelementptr inbounds i32, ptr %i9, i64 %i323
  %i325 = trunc i64 %i313 to i32
  store i32 %i325, ptr %i324, align 4, !tbaa !19
  %i326 = add nsw i64 %i313, -1
  %i327 = getelementptr inbounds i8, ptr %i11, i64 %i326
  %i328 = load i8, ptr %i327, align 1, !tbaa !21
  %i329 = zext i8 %i328 to i16
  %i330 = tail call i16 @llvm.fshl.i16(i16 %i329, i16 %i318, i16 8)
  %i331 = zext i16 %i330 to i64
  %i332 = getelementptr inbounds i32, ptr %i13, i64 %i331
  %i333 = load i32, ptr %i332, align 4, !tbaa !19
  %i334 = add i32 %i333, -1
  store i32 %i334, ptr %i332, align 4, !tbaa !19
  %i335 = sext i32 %i334 to i64
  %i336 = getelementptr inbounds i32, ptr %i9, i64 %i335
  %i337 = trunc i64 %i326 to i32
  store i32 %i337, ptr %i336, align 4, !tbaa !19
  %i338 = add nsw i64 %i313, -2
  %i339 = getelementptr inbounds i8, ptr %i11, i64 %i338
  %i340 = load i8, ptr %i339, align 1, !tbaa !21
  %i341 = zext i8 %i340 to i16
  %i342 = tail call i16 @llvm.fshl.i16(i16 %i341, i16 %i330, i16 8)
  %i343 = zext i16 %i342 to i64
  %i344 = getelementptr inbounds i32, ptr %i13, i64 %i343
  %i345 = load i32, ptr %i344, align 4, !tbaa !19
  %i346 = add i32 %i345, -1
  store i32 %i346, ptr %i344, align 4, !tbaa !19
  %i347 = sext i32 %i346 to i64
  %i348 = getelementptr inbounds i32, ptr %i9, i64 %i347
  %i349 = trunc i64 %i338 to i32
  store i32 %i349, ptr %i348, align 4, !tbaa !19
  %i350 = add nsw i64 %i313, -3
  %i351 = getelementptr inbounds i8, ptr %i11, i64 %i350
  %i352 = load i8, ptr %i351, align 1, !tbaa !21
  %i353 = zext i8 %i352 to i16
  %i354 = tail call i16 @llvm.fshl.i16(i16 %i353, i16 %i342, i16 8)
  %i355 = zext i16 %i354 to i64
  %i356 = getelementptr inbounds i32, ptr %i13, i64 %i355
  %i357 = load i32, ptr %i356, align 4, !tbaa !19
  %i358 = add i32 %i357, -1
  store i32 %i358, ptr %i356, align 4, !tbaa !19
  %i359 = sext i32 %i358 to i64
  %i360 = getelementptr inbounds i32, ptr %i9, i64 %i359
  %i361 = trunc i64 %i350 to i32
  store i32 %i361, ptr %i360, align 4, !tbaa !19
  %i362 = add nsw i64 %i313, -4
  %i363 = icmp ugt i64 %i313, 6
  br i1 %i363, label %bb312.bb312_crit_edge, label %bb309, !llvm.loop !28

bb312.bb312_crit_edge:                            ; preds = %bb312
  br label %bb312

bb364.loopexit:                                   ; preds = %bb365
  br label %bb364

bb364:                                            ; preds = %bb309.bb364_crit_edge, %bb364.loopexit
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(256) %i4, i8 0, i64 256, i1 false), !tbaa !21
  br label %bb381

bb365:                                            ; preds = %bb365.bb365_crit_edge, %bb365.preheader
  %i366 = phi i64 [ %i379, %bb365.bb365_crit_edge ], [ %i362, %bb365.preheader ]
  %i367 = phi i16 [ %i371, %bb365.bb365_crit_edge ], [ %i354, %bb365.preheader ]
  %i368 = getelementptr inbounds i8, ptr %i11, i64 %i366
  %i369 = load i8, ptr %i368, align 1, !tbaa !21
  %i370 = zext i8 %i369 to i16
  %i371 = tail call i16 @llvm.fshl.i16(i16 %i370, i16 %i367, i16 8)
  %i372 = zext i16 %i371 to i64
  %i373 = getelementptr inbounds i32, ptr %i13, i64 %i372
  %i374 = load i32, ptr %i373, align 4, !tbaa !19
  %i375 = add i32 %i374, -1
  store i32 %i375, ptr %i373, align 4, !tbaa !19
  %i376 = sext i32 %i375 to i64
  %i377 = getelementptr inbounds i32, ptr %i9, i64 %i376
  %i378 = trunc i64 %i366 to i32
  store i32 %i378, ptr %i377, align 4, !tbaa !19
  %i379 = add nsw i64 %i366, -1
  %i380 = icmp eq i64 %i366, 0
  br i1 %i380, label %bb364.loopexit, label %bb365.bb365_crit_edge, !llvm.loop !29

bb365.bb365_crit_edge:                            ; preds = %bb365
  br label %bb365

bb381:                                            ; preds = %bb381.bb381_crit_edge, %bb364
  %i382 = phi i64 [ 0, %bb364 ], [ %i406, %bb381.bb381_crit_edge ]
  %i383 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i382
  %i384 = trunc i64 %i382 to i32
  store i32 %i384, ptr %i383, align 16, !tbaa !19
  %i385 = or disjoint i64 %i382, 1
  %i386 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i385
  %i387 = trunc i64 %i385 to i32
  store i32 %i387, ptr %i386, align 4, !tbaa !19
  %i388 = or disjoint i64 %i382, 2
  %i389 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i388
  %i390 = trunc i64 %i388 to i32
  store i32 %i390, ptr %i389, align 8, !tbaa !19
  %i391 = or disjoint i64 %i382, 3
  %i392 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i391
  %i393 = trunc i64 %i391 to i32
  store i32 %i393, ptr %i392, align 4, !tbaa !19
  %i394 = or disjoint i64 %i382, 4
  %i395 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i394
  %i396 = trunc i64 %i394 to i32
  store i32 %i396, ptr %i395, align 16, !tbaa !19
  %i397 = or disjoint i64 %i382, 5
  %i398 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i397
  %i399 = trunc i64 %i397 to i32
  store i32 %i399, ptr %i398, align 4, !tbaa !19
  %i400 = or disjoint i64 %i382, 6
  %i401 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i400
  %i402 = trunc i64 %i400 to i32
  store i32 %i402, ptr %i401, align 8, !tbaa !19
  %i403 = or disjoint i64 %i382, 7
  %i404 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i403
  %i405 = trunc i64 %i403 to i32
  store i32 %i405, ptr %i404, align 4, !tbaa !19
  %i406 = add nuw nsw i64 %i382, 8
  %i407 = icmp eq i64 %i406, 256
  br i1 %i407, label %bb408.preheader, label %bb381.bb381_crit_edge, !llvm.loop !30

bb381.bb381_crit_edge:                            ; preds = %bb381
  br label %bb381

bb408.preheader:                                  ; preds = %bb381
  br label %bb408

bb408:                                            ; preds = %bb457.bb408_crit_edge, %bb408.preheader
  %i409 = phi i64 [ %i460, %bb457.bb408_crit_edge ], [ 121, %bb408.preheader ]
  %i410 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i409
  %i411 = load i32, ptr %i410, align 4, !tbaa !19
  %i412 = shl i32 %i411, 8
  %i413 = add i32 %i412, 256
  %i414 = sext i32 %i413 to i64
  %i415 = getelementptr inbounds i32, ptr %i13, i64 %i414
  %i416 = load i32, ptr %i415, align 4, !tbaa !19
  %i417 = sext i32 %i412 to i64
  %i418 = getelementptr inbounds i32, ptr %i13, i64 %i417
  %i419 = load i32, ptr %i418, align 4, !tbaa !19
  %i420 = sub i32 %i416, %i419
  %i421 = add nsw i64 %i409, -121
  %i422 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i421
  %i423 = load i32, ptr %i422, align 4, !tbaa !19
  %i424 = shl i32 %i423, 8
  %i425 = add i32 %i424, 256
  %i426 = sext i32 %i425 to i64
  %i427 = getelementptr inbounds i32, ptr %i13, i64 %i426
  %i428 = load i32, ptr %i427, align 4, !tbaa !19
  %i429 = sext i32 %i424 to i64
  %i430 = getelementptr inbounds i32, ptr %i13, i64 %i429
  %i431 = load i32, ptr %i430, align 4, !tbaa !19
  %i432 = sub i32 %i428, %i431
  %i433 = icmp ugt i32 %i432, %i420
  br i1 %i433, label %bb438, label %bb408.bb434_crit_edge

bb408.bb434_crit_edge:                            ; preds = %bb408
  br label %bb434

bb434:                                            ; preds = %bb441.bb434_crit_edge, %bb408.bb434_crit_edge
  %i435 = phi i64 [ %i409, %bb408.bb434_crit_edge ], [ %i421, %bb441.bb434_crit_edge ]
  %i436 = shl i64 %i435, 32
  %i437 = ashr exact i64 %i436, 32
  br label %bb457

bb438:                                            ; preds = %bb408
  %i439 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i409
  store i32 %i423, ptr %i439, align 4, !tbaa !19
  %i440 = icmp ult i64 %i409, 242
  br i1 %i440, label %bb438.bb457_crit_edge, label %bb441, !llvm.loop !31

bb438.bb457_crit_edge:                            ; preds = %bb438
  br label %bb457

bb441:                                            ; preds = %bb438
  %i442 = add nsw i64 %i409, -242
  %i443 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i442
  %i444 = load i32, ptr %i443, align 4, !tbaa !19
  %i445 = shl i32 %i444, 8
  %i446 = add i32 %i445, 256
  %i447 = sext i32 %i446 to i64
  %i448 = getelementptr inbounds i32, ptr %i13, i64 %i447
  %i449 = load i32, ptr %i448, align 4, !tbaa !19
  %i450 = sext i32 %i445 to i64
  %i451 = getelementptr inbounds i32, ptr %i13, i64 %i450
  %i452 = load i32, ptr %i451, align 4, !tbaa !19
  %i453 = sub i32 %i449, %i452
  %i454 = icmp ugt i32 %i453, %i420
  br i1 %i454, label %bb455, label %bb441.bb434_crit_edge

bb441.bb434_crit_edge:                            ; preds = %bb441
  br label %bb434

bb455:                                            ; preds = %bb441
  %i456 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i421
  store i32 %i444, ptr %i456, align 4, !tbaa !19
  br label %bb457

bb457:                                            ; preds = %bb438.bb457_crit_edge, %bb455, %bb434
  %i458 = phi i64 [ %i437, %bb434 ], [ %i421, %bb438.bb457_crit_edge ], [ %i442, %bb455 ]
  %i459 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i458
  store i32 %i411, ptr %i459, align 4, !tbaa !19
  %i460 = add nuw nsw i64 %i409, 1
  %i461 = icmp eq i64 %i460, 256
  br i1 %i461, label %bb462.preheader, label %bb457.bb408_crit_edge, !llvm.loop !32

bb457.bb408_crit_edge:                            ; preds = %bb457
  br label %bb408

bb462.preheader:                                  ; preds = %bb457
  br label %bb462

bb462:                                            ; preds = %bb579.bb462_crit_edge, %bb462.preheader
  %i463 = phi i64 [ %i582, %bb579.bb462_crit_edge ], [ 40, %bb462.preheader ]
  %i464 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i463
  %i465 = load i32, ptr %i464, align 4, !tbaa !19
  %i466 = shl i32 %i465, 8
  %i467 = add i32 %i466, 256
  %i468 = sext i32 %i467 to i64
  %i469 = getelementptr inbounds i32, ptr %i13, i64 %i468
  %i470 = load i32, ptr %i469, align 4, !tbaa !19
  %i471 = sext i32 %i466 to i64
  %i472 = getelementptr inbounds i32, ptr %i13, i64 %i471
  %i473 = load i32, ptr %i472, align 4, !tbaa !19
  %i474 = sub i32 %i470, %i473
  %i475 = add nsw i64 %i463, -40
  %i476 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i475
  %i477 = load i32, ptr %i476, align 4, !tbaa !19
  %i478 = shl i32 %i477, 8
  %i479 = add i32 %i478, 256
  %i480 = sext i32 %i479 to i64
  %i481 = getelementptr inbounds i32, ptr %i13, i64 %i480
  %i482 = load i32, ptr %i481, align 4, !tbaa !19
  %i483 = sext i32 %i478 to i64
  %i484 = getelementptr inbounds i32, ptr %i13, i64 %i483
  %i485 = load i32, ptr %i484, align 4, !tbaa !19
  %i486 = sub i32 %i482, %i485
  %i487 = icmp ugt i32 %i486, %i474
  br i1 %i487, label %bb492, label %bb462.bb488_crit_edge

bb462.bb488_crit_edge:                            ; preds = %bb462
  br label %bb488

bb488:                                            ; preds = %bb563.bb488_crit_edge, %bb546.bb488_crit_edge, %bb529.bb488_crit_edge, %bb512.bb488_crit_edge, %bb495.bb488_crit_edge, %bb462.bb488_crit_edge
  %i489 = phi i64 [ %i463, %bb462.bb488_crit_edge ], [ %i475, %bb495.bb488_crit_edge ], [ %i496, %bb512.bb488_crit_edge ], [ %i513, %bb529.bb488_crit_edge ], [ %i530, %bb546.bb488_crit_edge ], [ %i547, %bb563.bb488_crit_edge ]
  %i490 = shl i64 %i489, 32
  %i491 = ashr exact i64 %i490, 32
  br label %bb579

bb492:                                            ; preds = %bb462
  %i493 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i463
  store i32 %i477, ptr %i493, align 4, !tbaa !19
  %i494 = icmp ult i64 %i463, 80
  br i1 %i494, label %bb492.bb579_crit_edge, label %bb495, !llvm.loop !31

bb492.bb579_crit_edge:                            ; preds = %bb492
  br label %bb579

bb495:                                            ; preds = %bb492
  %i496 = add nsw i64 %i463, -80
  %i497 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i496
  %i498 = load i32, ptr %i497, align 4, !tbaa !19
  %i499 = shl i32 %i498, 8
  %i500 = add i32 %i499, 256
  %i501 = sext i32 %i500 to i64
  %i502 = getelementptr inbounds i32, ptr %i13, i64 %i501
  %i503 = load i32, ptr %i502, align 4, !tbaa !19
  %i504 = sext i32 %i499 to i64
  %i505 = getelementptr inbounds i32, ptr %i13, i64 %i504
  %i506 = load i32, ptr %i505, align 4, !tbaa !19
  %i507 = sub i32 %i503, %i506
  %i508 = icmp ugt i32 %i507, %i474
  br i1 %i508, label %bb509, label %bb495.bb488_crit_edge

bb495.bb488_crit_edge:                            ; preds = %bb495
  br label %bb488

bb509:                                            ; preds = %bb495
  %i510 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i475
  store i32 %i498, ptr %i510, align 4, !tbaa !19
  %i511 = icmp ult i64 %i463, 120
  br i1 %i511, label %bb509.bb579_crit_edge, label %bb512, !llvm.loop !31

bb509.bb579_crit_edge:                            ; preds = %bb509
  br label %bb579

bb512:                                            ; preds = %bb509
  %i513 = add nsw i64 %i463, -120
  %i514 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i513
  %i515 = load i32, ptr %i514, align 4, !tbaa !19
  %i516 = shl i32 %i515, 8
  %i517 = add i32 %i516, 256
  %i518 = sext i32 %i517 to i64
  %i519 = getelementptr inbounds i32, ptr %i13, i64 %i518
  %i520 = load i32, ptr %i519, align 4, !tbaa !19
  %i521 = sext i32 %i516 to i64
  %i522 = getelementptr inbounds i32, ptr %i13, i64 %i521
  %i523 = load i32, ptr %i522, align 4, !tbaa !19
  %i524 = sub i32 %i520, %i523
  %i525 = icmp ugt i32 %i524, %i474
  br i1 %i525, label %bb526, label %bb512.bb488_crit_edge

bb512.bb488_crit_edge:                            ; preds = %bb512
  br label %bb488

bb526:                                            ; preds = %bb512
  %i527 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i496
  store i32 %i515, ptr %i527, align 4, !tbaa !19
  %i528 = icmp ult i64 %i463, 160
  br i1 %i528, label %bb526.bb579_crit_edge, label %bb529, !llvm.loop !31

bb526.bb579_crit_edge:                            ; preds = %bb526
  br label %bb579

bb529:                                            ; preds = %bb526
  %i530 = add nsw i64 %i463, -160
  %i531 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i530
  %i532 = load i32, ptr %i531, align 4, !tbaa !19
  %i533 = shl i32 %i532, 8
  %i534 = add i32 %i533, 256
  %i535 = sext i32 %i534 to i64
  %i536 = getelementptr inbounds i32, ptr %i13, i64 %i535
  %i537 = load i32, ptr %i536, align 4, !tbaa !19
  %i538 = sext i32 %i533 to i64
  %i539 = getelementptr inbounds i32, ptr %i13, i64 %i538
  %i540 = load i32, ptr %i539, align 4, !tbaa !19
  %i541 = sub i32 %i537, %i540
  %i542 = icmp ugt i32 %i541, %i474
  br i1 %i542, label %bb543, label %bb529.bb488_crit_edge

bb529.bb488_crit_edge:                            ; preds = %bb529
  br label %bb488

bb543:                                            ; preds = %bb529
  %i544 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i513
  store i32 %i532, ptr %i544, align 4, !tbaa !19
  %i545 = icmp ult i64 %i463, 200
  br i1 %i545, label %bb543.bb579_crit_edge, label %bb546, !llvm.loop !31

bb543.bb579_crit_edge:                            ; preds = %bb543
  br label %bb579

bb546:                                            ; preds = %bb543
  %i547 = add nsw i64 %i463, -200
  %i548 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i547
  %i549 = load i32, ptr %i548, align 4, !tbaa !19
  %i550 = shl i32 %i549, 8
  %i551 = add i32 %i550, 256
  %i552 = sext i32 %i551 to i64
  %i553 = getelementptr inbounds i32, ptr %i13, i64 %i552
  %i554 = load i32, ptr %i553, align 4, !tbaa !19
  %i555 = sext i32 %i550 to i64
  %i556 = getelementptr inbounds i32, ptr %i13, i64 %i555
  %i557 = load i32, ptr %i556, align 4, !tbaa !19
  %i558 = sub i32 %i554, %i557
  %i559 = icmp ugt i32 %i558, %i474
  br i1 %i559, label %bb560, label %bb546.bb488_crit_edge

bb546.bb488_crit_edge:                            ; preds = %bb546
  br label %bb488

bb560:                                            ; preds = %bb546
  %i561 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i530
  store i32 %i549, ptr %i561, align 4, !tbaa !19
  %i562 = icmp ult i64 %i463, 240
  br i1 %i562, label %bb560.bb579_crit_edge, label %bb563, !llvm.loop !31

bb560.bb579_crit_edge:                            ; preds = %bb560
  br label %bb579

bb563:                                            ; preds = %bb560
  %i564 = add nsw i64 %i463, -240
  %i565 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i564
  %i566 = load i32, ptr %i565, align 4, !tbaa !19
  %i567 = shl i32 %i566, 8
  %i568 = add i32 %i567, 256
  %i569 = sext i32 %i568 to i64
  %i570 = getelementptr inbounds i32, ptr %i13, i64 %i569
  %i571 = load i32, ptr %i570, align 4, !tbaa !19
  %i572 = sext i32 %i567 to i64
  %i573 = getelementptr inbounds i32, ptr %i13, i64 %i572
  %i574 = load i32, ptr %i573, align 4, !tbaa !19
  %i575 = sub i32 %i571, %i574
  %i576 = icmp ugt i32 %i575, %i474
  br i1 %i576, label %bb577, label %bb563.bb488_crit_edge

bb563.bb488_crit_edge:                            ; preds = %bb563
  br label %bb488

bb577:                                            ; preds = %bb563
  %i578 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i547
  store i32 %i566, ptr %i578, align 4, !tbaa !19
  br label %bb579

bb579:                                            ; preds = %bb560.bb579_crit_edge, %bb543.bb579_crit_edge, %bb526.bb579_crit_edge, %bb509.bb579_crit_edge, %bb492.bb579_crit_edge, %bb577, %bb488
  %i580 = phi i64 [ %i491, %bb488 ], [ %i475, %bb492.bb579_crit_edge ], [ %i496, %bb509.bb579_crit_edge ], [ %i513, %bb526.bb579_crit_edge ], [ %i530, %bb543.bb579_crit_edge ], [ %i547, %bb560.bb579_crit_edge ], [ %i564, %bb577 ]
  %i581 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i580
  store i32 %i465, ptr %i581, align 4, !tbaa !19
  %i582 = add nuw nsw i64 %i463, 1
  %i583 = icmp eq i64 %i582, 256
  br i1 %i583, label %bb584.preheader, label %bb579.bb462_crit_edge, !llvm.loop !32

bb579.bb462_crit_edge:                            ; preds = %bb579
  br label %bb462

bb584.preheader:                                  ; preds = %bb579
  br label %bb584

bb584:                                            ; preds = %bb618.bb584_crit_edge, %bb584.preheader
  %i585 = phi i64 [ %i621, %bb618.bb584_crit_edge ], [ 13, %bb584.preheader ]
  %i586 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i585
  %i587 = load i32, ptr %i586, align 4, !tbaa !19
  %i588 = shl i32 %i587, 8
  %i589 = add i32 %i588, 256
  %i590 = sext i32 %i589 to i64
  %i591 = getelementptr inbounds i32, ptr %i13, i64 %i590
  %i592 = load i32, ptr %i591, align 4, !tbaa !19
  %i593 = sext i32 %i588 to i64
  %i594 = getelementptr inbounds i32, ptr %i13, i64 %i593
  %i595 = load i32, ptr %i594, align 4, !tbaa !19
  %i596 = sub i32 %i592, %i595
  br label %bb597

bb597:                                            ; preds = %bb615.bb597_crit_edge, %bb584
  %i598 = phi i64 [ %i599, %bb615.bb597_crit_edge ], [ %i585, %bb584 ]
  %i599 = add nsw i64 %i598, -13
  %i600 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i599
  %i601 = load i32, ptr %i600, align 4, !tbaa !19
  %i602 = shl i32 %i601, 8
  %i603 = add i32 %i602, 256
  %i604 = sext i32 %i603 to i64
  %i605 = getelementptr inbounds i32, ptr %i13, i64 %i604
  %i606 = load i32, ptr %i605, align 4, !tbaa !19
  %i607 = sext i32 %i602 to i64
  %i608 = getelementptr inbounds i32, ptr %i13, i64 %i607
  %i609 = load i32, ptr %i608, align 4, !tbaa !19
  %i610 = sub i32 %i606, %i609
  %i611 = icmp ugt i32 %i610, %i596
  br i1 %i611, label %bb615, label %bb612

bb612:                                            ; preds = %bb597
  %i613 = shl i64 %i598, 32
  %i614 = ashr exact i64 %i613, 32
  br label %bb618

bb615:                                            ; preds = %bb597
  %i616 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i598
  store i32 %i601, ptr %i616, align 4, !tbaa !19
  %i617 = icmp slt i64 %i598, 26
  br i1 %i617, label %bb618.loopexit, label %bb615.bb597_crit_edge, !llvm.loop !31

bb615.bb597_crit_edge:                            ; preds = %bb615
  br label %bb597

bb618.loopexit:                                   ; preds = %bb615
  br label %bb618

bb618:                                            ; preds = %bb618.loopexit, %bb612
  %i619 = phi i64 [ %i614, %bb612 ], [ %i599, %bb618.loopexit ]
  %i620 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i619
  store i32 %i587, ptr %i620, align 4, !tbaa !19
  %i621 = add nuw nsw i64 %i585, 1
  %i622 = icmp eq i64 %i621, 256
  br i1 %i622, label %bb623.preheader, label %bb618.bb584_crit_edge, !llvm.loop !32

bb618.bb584_crit_edge:                            ; preds = %bb618
  br label %bb584

bb623.preheader:                                  ; preds = %bb618
  br label %bb623

bb623:                                            ; preds = %bb657.bb623_crit_edge, %bb623.preheader
  %i624 = phi i64 [ %i660, %bb657.bb623_crit_edge ], [ 4, %bb623.preheader ]
  %i625 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i624
  %i626 = load i32, ptr %i625, align 4, !tbaa !19
  %i627 = shl i32 %i626, 8
  %i628 = add i32 %i627, 256
  %i629 = sext i32 %i628 to i64
  %i630 = getelementptr inbounds i32, ptr %i13, i64 %i629
  %i631 = load i32, ptr %i630, align 4, !tbaa !19
  %i632 = sext i32 %i627 to i64
  %i633 = getelementptr inbounds i32, ptr %i13, i64 %i632
  %i634 = load i32, ptr %i633, align 4, !tbaa !19
  %i635 = sub i32 %i631, %i634
  br label %bb636

bb636:                                            ; preds = %bb654.bb636_crit_edge, %bb623
  %i637 = phi i64 [ %i638, %bb654.bb636_crit_edge ], [ %i624, %bb623 ]
  %i638 = add nsw i64 %i637, -4
  %i639 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i638
  %i640 = load i32, ptr %i639, align 4, !tbaa !19
  %i641 = shl i32 %i640, 8
  %i642 = add i32 %i641, 256
  %i643 = sext i32 %i642 to i64
  %i644 = getelementptr inbounds i32, ptr %i13, i64 %i643
  %i645 = load i32, ptr %i644, align 4, !tbaa !19
  %i646 = sext i32 %i641 to i64
  %i647 = getelementptr inbounds i32, ptr %i13, i64 %i646
  %i648 = load i32, ptr %i647, align 4, !tbaa !19
  %i649 = sub i32 %i645, %i648
  %i650 = icmp ugt i32 %i649, %i635
  br i1 %i650, label %bb654, label %bb651

bb651:                                            ; preds = %bb636
  %i652 = shl i64 %i637, 32
  %i653 = ashr exact i64 %i652, 32
  br label %bb657

bb654:                                            ; preds = %bb636
  %i655 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i637
  store i32 %i640, ptr %i655, align 4, !tbaa !19
  %i656 = icmp slt i64 %i637, 8
  br i1 %i656, label %bb657.loopexit, label %bb654.bb636_crit_edge, !llvm.loop !31

bb654.bb636_crit_edge:                            ; preds = %bb654
  br label %bb636

bb657.loopexit:                                   ; preds = %bb654
  br label %bb657

bb657:                                            ; preds = %bb657.loopexit, %bb651
  %i658 = phi i64 [ %i653, %bb651 ], [ %i638, %bb657.loopexit ]
  %i659 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i658
  store i32 %i626, ptr %i659, align 4, !tbaa !19
  %i660 = add nuw nsw i64 %i624, 1
  %i661 = icmp eq i64 %i660, 256
  br i1 %i661, label %bb662.preheader, label %bb657.bb623_crit_edge, !llvm.loop !32

bb657.bb623_crit_edge:                            ; preds = %bb657
  br label %bb623

bb662.preheader:                                  ; preds = %bb657
  br label %bb662

bb662:                                            ; preds = %bb693.bb662_crit_edge, %bb662.preheader
  %i663 = phi i64 [ %i698, %bb693.bb662_crit_edge ], [ 1, %bb662.preheader ]
  %i664 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i663
  %i665 = load i32, ptr %i664, align 4, !tbaa !19
  %i666 = shl i32 %i665, 8
  %i667 = add i32 %i666, 256
  %i668 = sext i32 %i667 to i64
  %i669 = getelementptr inbounds i32, ptr %i13, i64 %i668
  %i670 = load i32, ptr %i669, align 4, !tbaa !19
  %i671 = sext i32 %i666 to i64
  %i672 = getelementptr inbounds i32, ptr %i13, i64 %i671
  %i673 = load i32, ptr %i672, align 4, !tbaa !19
  %i674 = sub i32 %i670, %i673
  br label %bb675

bb675:                                            ; preds = %bb690.bb675_crit_edge, %bb662
  %i676 = phi i64 [ %i677, %bb690.bb675_crit_edge ], [ %i663, %bb662 ]
  %i677 = add nsw i64 %i676, -1
  %i678 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i677
  %i679 = load i32, ptr %i678, align 4, !tbaa !19
  %i680 = shl i32 %i679, 8
  %i681 = add i32 %i680, 256
  %i682 = sext i32 %i681 to i64
  %i683 = getelementptr inbounds i32, ptr %i13, i64 %i682
  %i684 = load i32, ptr %i683, align 4, !tbaa !19
  %i685 = sext i32 %i680 to i64
  %i686 = getelementptr inbounds i32, ptr %i13, i64 %i685
  %i687 = load i32, ptr %i686, align 4, !tbaa !19
  %i688 = sub i32 %i684, %i687
  %i689 = icmp ugt i32 %i688, %i674
  br i1 %i689, label %bb690, label %bb675.bb693_crit_edge

bb675.bb693_crit_edge:                            ; preds = %bb675
  br label %bb693

bb690:                                            ; preds = %bb675
  %i691 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i676
  store i32 %i679, ptr %i691, align 4, !tbaa !19
  %i692 = icmp slt i64 %i676, 2
  br i1 %i692, label %bb693split, label %bb690.bb675_crit_edge, !llvm.loop !31

bb690.bb675_crit_edge:                            ; preds = %bb690
  br label %bb675

bb693split:                                       ; preds = %bb690
  br label %bb693

bb693:                                            ; preds = %bb693split, %bb675.bb693_crit_edge
  %i694 = phi i64 [ %i676, %bb675.bb693_crit_edge ], [ 0, %bb693split ]
  %i695 = shl i64 %i694, 32
  %i696 = ashr exact i64 %i695, 32
  %i697 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i696
  store i32 %i665, ptr %i697, align 4, !tbaa !19
  %i698 = add nuw nsw i64 %i663, 1
  %i699 = icmp eq i64 %i698, 256
  br i1 %i699, label %bb700, label %bb693.bb662_crit_edge, !llvm.loop !32

bb693.bb662_crit_edge:                            ; preds = %bb693
  br label %bb662

bb700:                                            ; preds = %bb693
  %i701 = getelementptr i32, ptr %i9, i64 1
  %i702 = getelementptr i32, ptr %i9, i64 1
  %i703 = getelementptr i32, ptr %i9, i64 1
  %i704 = getelementptr i32, ptr %i9, i64 1
  br label %bb705

bb705:                                            ; preds = %bb1347, %bb700
  %i706 = phi i64 [ %i1348, %bb1347 ], [ 0, %bb700 ]
  %i707 = phi i32 [ %i1127, %bb1347 ], [ 0, %bb700 ]
  %i708 = getelementptr inbounds [256 x i32], ptr %i3, i64 0, i64 %i706
  %i709 = load i32, ptr %i708, align 4, !tbaa !19
  %i710 = shl i32 %i709, 8
  %i711 = sext i32 %i710 to i64
  %i712 = zext i32 %i709 to i64
  %i713 = getelementptr i32, ptr %i13, i64 %i711
  br label %bb714

bb714:                                            ; preds = %bb1126.bb714_crit_edge, %bb705
  %i715 = phi i64 [ 0, %bb705 ], [ %i1128, %bb1126.bb714_crit_edge ]
  %i716 = phi i32 [ %i707, %bb705 ], [ %i1127, %bb1126.bb714_crit_edge ]
  %i717 = icmp eq i64 %i715, %i712
  br i1 %i717, label %bb714.bb1126_crit_edge, label %bb718

bb714.bb1126_crit_edge:                           ; preds = %bb714
  br label %bb1126

bb718:                                            ; preds = %bb714
  %i719 = getelementptr i32, ptr %i713, i64 %i715
  %i720 = load i32, ptr %i719, align 4, !tbaa !19
  %i721 = and i32 %i720, 2097152
  %i722 = icmp eq i32 %i721, 0
  br i1 %i722, label %bb723, label %bb718.bb1122_crit_edge

bb718.bb1122_crit_edge:                           ; preds = %bb718
  br label %bb1122

bb723:                                            ; preds = %bb718
  %i724 = getelementptr i32, ptr %i719, i64 1
  %i725 = load i32, ptr %i724, align 4, !tbaa !19
  %i726 = and i32 %i725, -2097153
  %i727 = add i32 %i726, -1
  %i728 = icmp sgt i32 %i727, %i720
  br i1 %i728, label %bb729, label %bb723.bb1122_crit_edge

bb723.bb1122_crit_edge:                           ; preds = %bb723
  br label %bb1122

bb729:                                            ; preds = %bb723
  br i1 %i34, label %bb730, label %bb729.bb735_crit_edge

bb729.bb735_crit_edge:                            ; preds = %bb729
  br label %bb735

bb730:                                            ; preds = %bb729
  %i731 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i732 = sub i32 %i726, %i720
  %i733 = trunc i64 %i715 to i32
  %i734 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i731, ptr noundef nonnull @.str.7, i32 noundef %i709, i32 noundef %i733, i32 noundef %i716, i32 noundef %i732) #32
  br label %bb735

bb735:                                            ; preds = %bb729.bb735_crit_edge, %bb730
  call void @llvm.lifetime.start.p0(i64 400, ptr nonnull %i) #31
  call void @llvm.lifetime.start.p0(i64 400, ptr nonnull %i1) #31
  call void @llvm.lifetime.start.p0(i64 400, ptr nonnull %i2) #31
  store i32 %i720, ptr %i, align 16, !tbaa !19
  store i32 %i727, ptr %i1, align 16, !tbaa !19
  store i32 2, ptr %i2, align 16, !tbaa !19
  br label %bb736

bb736:                                            ; preds = %bb853.bb736_crit_edge, %bb735
  %i737 = phi i32 [ 1, %bb735 ], [ %i854, %bb853.bb736_crit_edge ]
  %i738 = icmp ult i32 %i737, 98
  %i739 = add nsw i32 %i737, -1
  %i740 = zext nneg i32 %i739 to i64
  %i741 = getelementptr inbounds [100 x i32], ptr %i, i64 0, i64 %i740
  %i742 = getelementptr inbounds [100 x i32], ptr %i1, i64 0, i64 %i740
  %i743 = getelementptr inbounds [100 x i32], ptr %i2, i64 0, i64 %i740
  br label %bb744

bb744:                                            ; preds = %bb981, %bb736
  br i1 %i738, label %bb744.bb746_crit_edge, label %bb745

bb744.bb746_crit_edge:                            ; preds = %bb744
  br label %bb746

bb745:                                            ; preds = %bb744
  tail call void @BZ2_bz__AssertH__fail(i32 noundef 1001) #31
  br label %bb746

bb746:                                            ; preds = %bb744.bb746_crit_edge, %bb745
  %i747 = load i32, ptr %i741, align 4, !tbaa !19
  %i748 = load i32, ptr %i742, align 4, !tbaa !19
  %i749 = load i32, ptr %i743, align 4, !tbaa !19
  %i750 = sub nsw i32 %i748, %i747
  %i751 = icmp slt i32 %i750, 20
  %i752 = icmp sgt i32 %i749, 14
  %i753 = select i1 %i751, i1 true, i1 %i752
  br i1 %i753, label %bb754, label %bb856

bb754:                                            ; preds = %bb746
  %i755 = icmp slt i32 %i750, 1
  br i1 %i755, label %bb754.bb850_crit_edge, label %bb756.preheader

bb754.bb850_crit_edge:                            ; preds = %bb754
  br label %bb850

bb756.preheader:                                  ; preds = %bb754
  br label %bb756

bb756:                                            ; preds = %bb756.bb756_crit_edge, %bb756.preheader
  %i757 = phi i64 [ %i761, %bb756.bb756_crit_edge ], [ 0, %bb756.preheader ]
  %i758 = getelementptr inbounds [14 x i32], ptr @incs, i64 0, i64 %i757
  %i759 = load i32, ptr %i758, align 4, !tbaa !19
  %i760 = icmp sgt i32 %i759, %i750
  %i761 = add nuw i64 %i757, 1
  br i1 %i760, label %bb762, label %bb756.bb756_crit_edge, !llvm.loop !33

bb756.bb756_crit_edge:                            ; preds = %bb756
  br label %bb756

bb762:                                            ; preds = %bb756
  %i763 = and i64 %i757, 4294967295
  %i764 = icmp eq i64 %i763, 0
  br i1 %i764, label %bb762.bb850_crit_edge, label %bb765

bb762.bb850_crit_edge:                            ; preds = %bb762
  br label %bb850

bb765:                                            ; preds = %bb762
  %i766 = sext i32 %i748 to i64
  br label %bb767

bb767:                                            ; preds = %bb848.bb767_crit_edge, %bb765
  %i768 = phi i64 [ %i757, %bb765 ], [ %i769, %bb848.bb767_crit_edge ]
  %i769 = add nsw i64 %i768, -1
  %i770 = and i64 %i769, 4294967295
  %i771 = getelementptr inbounds [14 x i32], ptr @incs, i64 0, i64 %i770
  %i772 = load i32, ptr %i771, align 4, !tbaa !19
  %i773 = add i32 %i772, %i747
  %i774 = sext i32 %i773 to i64
  br label %bb775

bb775:                                            ; preds = %bb842.bb775_crit_edge, %bb767
  %i776 = phi i64 [ %i845, %bb842.bb775_crit_edge ], [ %i774, %bb767 ]
  %i777 = icmp sgt i64 %i776, %i766
  br i1 %i777, label %bb775.bb848_crit_edge, label %bb778

bb775.bb848_crit_edge:                            ; preds = %bb775
  br label %bb848

bb778:                                            ; preds = %bb775
  %i779 = getelementptr inbounds i32, ptr %i9, i64 %i776
  %i780 = load i32, ptr %i779, align 4, !tbaa !19
  %i781 = add i32 %i780, %i749
  %i782 = trunc i64 %i776 to i32
  br label %bb783

bb783:                                            ; preds = %bb793.bb783_crit_edge, %bb778
  %i784 = phi i32 [ %i782, %bb778 ], [ %i785, %bb793.bb783_crit_edge ]
  %i785 = sub nsw i32 %i784, %i772
  %i786 = sext i32 %i785 to i64
  %i787 = getelementptr inbounds i32, ptr %i9, i64 %i786
  %i788 = load i32, ptr %i787, align 4, !tbaa !19
  %i789 = add i32 %i788, %i749
  %i790 = call fastcc zeroext i8 @mainGtU(i32 noundef %i789, i32 noundef %i781, ptr noundef nonnull %i11, ptr noundef nonnull %i26, i32 noundef %i15, ptr noundef nonnull %i7), !range !34
  %i791 = icmp eq i8 %i790, 0
  %i792 = sext i32 %i784 to i64
  br i1 %i791, label %bb783.bb796_crit_edge, label %bb793

bb783.bb796_crit_edge:                            ; preds = %bb783
  br label %bb796

bb793:                                            ; preds = %bb783
  %i794 = getelementptr inbounds i32, ptr %i9, i64 %i792
  store i32 %i788, ptr %i794, align 4, !tbaa !19
  %i795 = icmp slt i32 %i785, %i773
  br i1 %i795, label %bb796split, label %bb793.bb783_crit_edge, !llvm.loop !35

bb793.bb783_crit_edge:                            ; preds = %bb793
  br label %bb783

bb796split:                                       ; preds = %bb793
  br label %bb796

bb796:                                            ; preds = %bb796split, %bb783.bb796_crit_edge
  %i797 = phi i64 [ %i792, %bb783.bb796_crit_edge ], [ %i786, %bb796split ]
  %i798 = getelementptr inbounds i32, ptr %i9, i64 %i797
  store i32 %i780, ptr %i798, align 4, !tbaa !19
  %i799 = icmp slt i64 %i776, %i766
  br i1 %i799, label %bb800, label %bb796.bb848split_crit_edge

bb796.bb848split_crit_edge:                       ; preds = %bb796
  br label %bb848split

bb800:                                            ; preds = %bb796
  %i801 = add nsw i64 %i776, 1
  %i802 = getelementptr inbounds i32, ptr %i9, i64 %i801
  %i803 = load i32, ptr %i802, align 4, !tbaa !19
  %i804 = add i32 %i803, %i749
  %i805 = trunc i64 %i801 to i32
  br label %bb806

bb806:                                            ; preds = %bb816.bb806_crit_edge, %bb800
  %i807 = phi i32 [ %i805, %bb800 ], [ %i808, %bb816.bb806_crit_edge ]
  %i808 = sub nsw i32 %i807, %i772
  %i809 = sext i32 %i808 to i64
  %i810 = getelementptr inbounds i32, ptr %i9, i64 %i809
  %i811 = load i32, ptr %i810, align 4, !tbaa !19
  %i812 = add i32 %i811, %i749
  %i813 = call fastcc zeroext i8 @mainGtU(i32 noundef %i812, i32 noundef %i804, ptr noundef nonnull %i11, ptr noundef nonnull %i26, i32 noundef %i15, ptr noundef nonnull %i7), !range !34
  %i814 = icmp eq i8 %i813, 0
  %i815 = sext i32 %i807 to i64
  br i1 %i814, label %bb806.bb819_crit_edge, label %bb816

bb806.bb819_crit_edge:                            ; preds = %bb806
  br label %bb819

bb816:                                            ; preds = %bb806
  %i817 = getelementptr inbounds i32, ptr %i9, i64 %i815
  store i32 %i811, ptr %i817, align 4, !tbaa !19
  %i818 = icmp slt i32 %i808, %i773
  br i1 %i818, label %bb819split, label %bb816.bb806_crit_edge, !llvm.loop !36

bb816.bb806_crit_edge:                            ; preds = %bb816
  br label %bb806

bb819split:                                       ; preds = %bb816
  br label %bb819

bb819:                                            ; preds = %bb819split, %bb806.bb819_crit_edge
  %i820 = phi i64 [ %i815, %bb806.bb819_crit_edge ], [ %i809, %bb819split ]
  %i821 = getelementptr inbounds i32, ptr %i9, i64 %i820
  store i32 %i803, ptr %i821, align 4, !tbaa !19
  %i822 = add nsw i64 %i776, 2
  %i823 = icmp sgt i64 %i822, %i766
  br i1 %i823, label %bb848splitsplit, label %bb824

bb824:                                            ; preds = %bb819
  %i825 = getelementptr inbounds i32, ptr %i9, i64 %i822
  %i826 = load i32, ptr %i825, align 4, !tbaa !19
  %i827 = add i32 %i826, %i749
  %i828 = trunc i64 %i822 to i32
  br label %bb829

bb829:                                            ; preds = %bb839.bb829_crit_edge, %bb824
  %i830 = phi i32 [ %i828, %bb824 ], [ %i831, %bb839.bb829_crit_edge ]
  %i831 = sub nsw i32 %i830, %i772
  %i832 = sext i32 %i831 to i64
  %i833 = getelementptr inbounds i32, ptr %i9, i64 %i832
  %i834 = load i32, ptr %i833, align 4, !tbaa !19
  %i835 = add i32 %i834, %i749
  %i836 = call fastcc zeroext i8 @mainGtU(i32 noundef %i835, i32 noundef %i827, ptr noundef nonnull %i11, ptr noundef nonnull %i26, i32 noundef %i15, ptr noundef nonnull %i7), !range !34
  %i837 = icmp eq i8 %i836, 0
  %i838 = sext i32 %i830 to i64
  br i1 %i837, label %bb829.bb842_crit_edge, label %bb839

bb829.bb842_crit_edge:                            ; preds = %bb829
  br label %bb842

bb839:                                            ; preds = %bb829
  %i840 = getelementptr inbounds i32, ptr %i9, i64 %i838
  store i32 %i834, ptr %i840, align 4, !tbaa !19
  %i841 = icmp slt i32 %i831, %i773
  br i1 %i841, label %bb842split, label %bb839.bb829_crit_edge, !llvm.loop !37

bb839.bb829_crit_edge:                            ; preds = %bb839
  br label %bb829

bb842split:                                       ; preds = %bb839
  br label %bb842

bb842:                                            ; preds = %bb842split, %bb829.bb842_crit_edge
  %i843 = phi i64 [ %i838, %bb829.bb842_crit_edge ], [ %i832, %bb842split ]
  %i844 = getelementptr inbounds i32, ptr %i9, i64 %i843
  store i32 %i826, ptr %i844, align 4, !tbaa !19
  %i845 = add nsw i64 %i776, 3
  %i846 = load i32, ptr %i7, align 4, !tbaa !19
  %i847 = icmp slt i32 %i846, 0
  br i1 %i847, label %bb1112.loopexit, label %bb842.bb775_crit_edge

bb842.bb775_crit_edge:                            ; preds = %bb842
  br label %bb775

bb848splitsplit:                                  ; preds = %bb819
  br label %bb848split

bb848split:                                       ; preds = %bb848splitsplit, %bb796.bb848split_crit_edge
  br label %bb848

bb848:                                            ; preds = %bb848split, %bb775.bb848_crit_edge
  %i849 = icmp sgt i64 %i768, 1
  br i1 %i849, label %bb848.bb767_crit_edge, label %bb850.loopexit, !llvm.loop !38

bb848.bb767_crit_edge:                            ; preds = %bb848
  br label %bb767

bb850.loopexit:                                   ; preds = %bb848
  br label %bb850

bb850:                                            ; preds = %bb762.bb850_crit_edge, %bb754.bb850_crit_edge, %bb850.loopexit
  %i851 = load i32, ptr %i7, align 4, !tbaa !19
  %i852 = icmp slt i32 %i851, 0
  br i1 %i852, label %bb1112.loopexit1, label %bb850.bb853_crit_edge

bb850.bb853_crit_edge:                            ; preds = %bb850
  br label %bb853

bb853:                                            ; preds = %bb850.bb853_crit_edge, %bb1095
  %i854 = phi i32 [ %i1111, %bb1095 ], [ %i739, %bb850.bb853_crit_edge ]
  %i855 = icmp sgt i32 %i854, 0
  br i1 %i855, label %bb853.bb736_crit_edge, label %bb1114, !llvm.loop !39

bb853.bb736_crit_edge:                            ; preds = %bb853
  br label %bb736

bb856:                                            ; preds = %bb746
  %i857 = sext i32 %i747 to i64
  %i858 = getelementptr inbounds i32, ptr %i9, i64 %i857
  %i859 = load i32, ptr %i858, align 4, !tbaa !19
  %i860 = add i32 %i859, %i749
  %i861 = zext i32 %i860 to i64
  %i862 = getelementptr inbounds i8, ptr %i11, i64 %i861
  %i863 = load i8, ptr %i862, align 1, !tbaa !21
  %i864 = sext i32 %i748 to i64
  %i865 = getelementptr inbounds i32, ptr %i9, i64 %i864
  %i866 = load i32, ptr %i865, align 4, !tbaa !19
  %i867 = add i32 %i866, %i749
  %i868 = zext i32 %i867 to i64
  %i869 = getelementptr inbounds i8, ptr %i11, i64 %i868
  %i870 = load i8, ptr %i869, align 1, !tbaa !21
  %i871 = add nsw i32 %i748, %i747
  %i872 = ashr i32 %i871, 1
  %i873 = sext i32 %i872 to i64
  %i874 = getelementptr inbounds i32, ptr %i9, i64 %i873
  %i875 = load i32, ptr %i874, align 4, !tbaa !19
  %i876 = add i32 %i875, %i749
  %i877 = zext i32 %i876 to i64
  %i878 = getelementptr inbounds i8, ptr %i11, i64 %i877
  %i879 = load i8, ptr %i878, align 1, !tbaa !21
  %i880 = tail call i8 @llvm.umax.i8(i8 %i863, i8 %i870)
  %i881 = tail call i8 @llvm.umin.i8(i8 %i863, i8 %i870)
  %i882 = icmp ugt i8 %i880, %i879
  %i883 = tail call i8 @llvm.umax.i8(i8 %i881, i8 %i879)
  %i884 = select i1 %i882, i8 %i883, i8 %i880
  br label %bb885

bb885:                                            ; preds = %bb962, %bb856
  %i886 = phi i32 [ %i748, %bb856 ], [ %i964, %bb962 ]
  %i887 = phi i32 [ %i747, %bb856 ], [ %i930, %bb962 ]
  %i888 = phi i32 [ %i748, %bb856 ], [ %i969, %bb962 ]
  %i889 = phi i32 [ %i747, %bb856 ], [ %i968, %bb962 ]
  %i890 = icmp sgt i32 %i889, %i888
  br i1 %i890, label %bb885.bb929_crit_edge, label %bb891

bb885.bb929_crit_edge:                            ; preds = %bb885
  br label %bb929

bb891:                                            ; preds = %bb885
  %i892 = sext i32 %i888 to i64
  %i893 = sext i32 %i887 to i64
  br label %bb894

bb894:                                            ; preds = %bb907.bb894_crit_edge, %bb891
  %i895 = phi i64 [ %i893, %bb891 ], [ %i912, %bb907.bb894_crit_edge ]
  %i896 = phi i32 [ %i889, %bb891 ], [ %i913, %bb907.bb894_crit_edge ]
  %i897 = sext i32 %i896 to i64
  br label %bb898

bb898:                                            ; preds = %bb917.bb898_crit_edge, %bb894
  %i899 = phi i64 [ %i897, %bb894 ], [ %i918, %bb917.bb898_crit_edge ]
  %i900 = getelementptr inbounds i32, ptr %i9, i64 %i899
  %i901 = load i32, ptr %i900, align 4, !tbaa !19
  %i902 = add i32 %i901, %i749
  %i903 = zext i32 %i902 to i64
  %i904 = getelementptr inbounds i8, ptr %i11, i64 %i903
  %i905 = load i8, ptr %i904, align 1, !tbaa !21
  %i906 = icmp eq i8 %i905, %i884
  br i1 %i906, label %bb907, label %bb915

bb907:                                            ; preds = %bb898
  %i908 = getelementptr inbounds i32, ptr %i9, i64 %i899
  %i909 = trunc i64 %i899 to i32
  %i910 = getelementptr inbounds i32, ptr %i9, i64 %i895
  %i911 = load i32, ptr %i910, align 4, !tbaa !19
  store i32 %i911, ptr %i908, align 4, !tbaa !19
  store i32 %i901, ptr %i910, align 4, !tbaa !19
  %i912 = add i64 %i895, 1
  %i913 = add nsw i32 %i909, 1
  %i914 = icmp sgt i32 %i888, %i909
  br i1 %i914, label %bb907.bb894_crit_edge, label %bb920

bb907.bb894_crit_edge:                            ; preds = %bb907
  br label %bb894

bb915:                                            ; preds = %bb898
  %i916 = icmp ugt i8 %i905, %i884
  br i1 %i916, label %bb922, label %bb917

bb917:                                            ; preds = %bb915
  %i918 = add nsw i64 %i899, 1
  %i919 = icmp slt i64 %i899, %i892
  br i1 %i919, label %bb917.bb898_crit_edge, label %bb925

bb917.bb898_crit_edge:                            ; preds = %bb917
  br label %bb898

bb920:                                            ; preds = %bb907
  %i921 = trunc i64 %i912 to i32
  br label %bb929

bb922:                                            ; preds = %bb915
  %i923 = trunc i64 %i895 to i32
  %i924 = trunc i64 %i899 to i32
  br label %bb929

bb925:                                            ; preds = %bb917
  %i926 = tail call i32 @llvm.smax.i32(i32 %i896, i32 %i888)
  %i927 = add i32 %i926, 1
  %i928 = trunc i64 %i895 to i32
  br label %bb929

bb929:                                            ; preds = %bb885.bb929_crit_edge, %bb925, %bb922, %bb920
  %i930 = phi i32 [ %i887, %bb885.bb929_crit_edge ], [ %i921, %bb920 ], [ %i923, %bb922 ], [ %i928, %bb925 ]
  %i931 = phi i32 [ %i889, %bb885.bb929_crit_edge ], [ %i913, %bb920 ], [ %i924, %bb922 ], [ %i927, %bb925 ]
  %i932 = icmp sgt i32 %i931, %i888
  br i1 %i932, label %bb977.loopexit, label %bb933

bb933:                                            ; preds = %bb929
  %i934 = sext i32 %i931 to i64
  %i935 = sext i32 %i886 to i64
  br label %bb936

bb936:                                            ; preds = %bb949.bb936_crit_edge, %bb933
  %i937 = phi i64 [ %i935, %bb933 ], [ %i954, %bb949.bb936_crit_edge ]
  %i938 = phi i32 [ %i888, %bb933 ], [ %i955, %bb949.bb936_crit_edge ]
  %i939 = sext i32 %i938 to i64
  br label %bb940

bb940:                                            ; preds = %bb959.bb940_crit_edge, %bb936
  %i941 = phi i64 [ %i939, %bb936 ], [ %i960, %bb959.bb940_crit_edge ]
  %i942 = getelementptr inbounds i32, ptr %i9, i64 %i941
  %i943 = load i32, ptr %i942, align 4, !tbaa !19
  %i944 = add i32 %i943, %i749
  %i945 = zext i32 %i944 to i64
  %i946 = getelementptr inbounds i8, ptr %i11, i64 %i945
  %i947 = load i8, ptr %i946, align 1, !tbaa !21
  %i948 = icmp eq i8 %i947, %i884
  br i1 %i948, label %bb949, label %bb957

bb949:                                            ; preds = %bb940
  %i950 = getelementptr inbounds i32, ptr %i9, i64 %i941
  %i951 = trunc i64 %i941 to i32
  %i952 = getelementptr inbounds i32, ptr %i9, i64 %i937
  %i953 = load i32, ptr %i952, align 4, !tbaa !19
  store i32 %i953, ptr %i950, align 4, !tbaa !19
  store i32 %i943, ptr %i952, align 4, !tbaa !19
  %i954 = add i64 %i937, -1
  %i955 = add nsw i32 %i951, -1
  %i956 = icmp slt i32 %i931, %i951
  br i1 %i956, label %bb949.bb936_crit_edge, label %bb975

bb949.bb936_crit_edge:                            ; preds = %bb949
  br label %bb936

bb957:                                            ; preds = %bb940
  %i958 = icmp ult i8 %i947, %i884
  br i1 %i958, label %bb962, label %bb959

bb959:                                            ; preds = %bb957
  %i960 = add nsw i64 %i941, -1
  %i961 = icmp sgt i64 %i941, %i934
  br i1 %i961, label %bb959.bb940_crit_edge, label %bb970

bb959.bb940_crit_edge:                            ; preds = %bb959
  br label %bb940

bb962:                                            ; preds = %bb957
  %i963 = getelementptr inbounds i32, ptr %i9, i64 %i941
  %i964 = trunc i64 %i937 to i32
  %i965 = trunc i64 %i941 to i32
  %i966 = getelementptr inbounds i32, ptr %i9, i64 %i934
  %i967 = load i32, ptr %i966, align 4, !tbaa !19
  store i32 %i943, ptr %i966, align 4, !tbaa !19
  store i32 %i967, ptr %i963, align 4, !tbaa !19
  %i968 = add nsw i32 %i931, 1
  %i969 = add nsw i32 %i965, -1
  br label %bb885

bb970:                                            ; preds = %bb959
  %i971 = tail call i64 @llvm.smin.i64(i64 %i939, i64 %i934)
  %i972 = trunc i64 %i937 to i32
  %i973 = trunc i64 %i971 to i32
  %i974 = add i32 %i973, -1
  br label %bb977

bb975:                                            ; preds = %bb949
  %i976 = trunc i64 %i954 to i32
  br label %bb977

bb977.loopexit:                                   ; preds = %bb929
  br label %bb977

bb977:                                            ; preds = %bb977.loopexit, %bb975, %bb970
  %i978 = phi i32 [ %i972, %bb970 ], [ %i976, %bb975 ], [ %i886, %bb977.loopexit ]
  %i979 = phi i32 [ %i974, %bb970 ], [ %i955, %bb975 ], [ %i888, %bb977.loopexit ]
  %i980 = icmp slt i32 %i978, %i930
  br i1 %i980, label %bb981, label %bb983

bb981:                                            ; preds = %bb977
  %i982 = add nsw i32 %i749, 1
  store i32 %i982, ptr %i743, align 4, !tbaa !19
  br label %bb744

bb983:                                            ; preds = %bb977
  %i984 = sub nsw i32 %i930, %i747
  %i985 = sub nsw i32 %i931, %i930
  %i986 = tail call i32 @llvm.smin.i32(i32 %i984, i32 %i985)
  %i987 = icmp sgt i32 %i986, 0
  br i1 %i987, label %bb988, label %bb983.bb1023_crit_edge

bb983.bb1023_crit_edge:                           ; preds = %bb983
  br label %bb1023

bb988:                                            ; preds = %bb983
  %i989 = sub i32 %i931, %i986
  %i990 = sext i32 %i989 to i64
  %i991 = and i32 %i986, 1
  %i992 = icmp eq i32 %i991, 0
  br i1 %i992, label %bb988.bb1001_crit_edge, label %bb993

bb988.bb1001_crit_edge:                           ; preds = %bb988
  br label %bb1001

bb993:                                            ; preds = %bb988
  %i994 = getelementptr inbounds i32, ptr %i9, i64 %i857
  %i995 = load i32, ptr %i994, align 4, !tbaa !19
  %i996 = getelementptr inbounds i32, ptr %i9, i64 %i990
  %i997 = load i32, ptr %i996, align 4, !tbaa !19
  store i32 %i997, ptr %i994, align 4, !tbaa !19
  store i32 %i995, ptr %i996, align 4, !tbaa !19
  %i998 = add nsw i64 %i857, 1
  %i999 = add nsw i64 %i990, 1
  %i1000 = add nsw i32 %i986, -1
  br label %bb1001

bb1001:                                           ; preds = %bb988.bb1001_crit_edge, %bb993
  %i1002 = phi i64 [ %i857, %bb988.bb1001_crit_edge ], [ %i998, %bb993 ]
  %i1003 = phi i64 [ %i990, %bb988.bb1001_crit_edge ], [ %i999, %bb993 ]
  %i1004 = phi i32 [ %i986, %bb988.bb1001_crit_edge ], [ %i1000, %bb993 ]
  %i1005 = icmp eq i32 %i986, 1
  br i1 %i1005, label %bb1001.bb1023_crit_edge, label %bb1006.preheader

bb1001.bb1023_crit_edge:                          ; preds = %bb1001
  br label %bb1023

bb1006.preheader:                                 ; preds = %bb1001
  br label %bb1006

bb1006:                                           ; preds = %bb1006.bb1006_crit_edge, %bb1006.preheader
  %i1007 = phi i64 [ %i1018, %bb1006.bb1006_crit_edge ], [ %i1002, %bb1006.preheader ]
  %i1008 = phi i64 [ %i1019, %bb1006.bb1006_crit_edge ], [ %i1003, %bb1006.preheader ]
  %i1009 = phi i32 [ %i1020, %bb1006.bb1006_crit_edge ], [ %i1004, %bb1006.preheader ]
  %i1010 = getelementptr inbounds i32, ptr %i9, i64 %i1007
  %i1011 = load i32, ptr %i1010, align 4, !tbaa !19
  %i1012 = getelementptr inbounds i32, ptr %i9, i64 %i1008
  %i1013 = load i32, ptr %i1012, align 4, !tbaa !19
  store i32 %i1013, ptr %i1010, align 4, !tbaa !19
  store i32 %i1011, ptr %i1012, align 4, !tbaa !19
  %i1014 = getelementptr i32, ptr %i701, i64 %i1007
  %i1015 = load i32, ptr %i1014, align 4, !tbaa !19
  %i1016 = getelementptr i32, ptr %i702, i64 %i1008
  %i1017 = load i32, ptr %i1016, align 4, !tbaa !19
  store i32 %i1017, ptr %i1014, align 4, !tbaa !19
  store i32 %i1015, ptr %i1016, align 4, !tbaa !19
  %i1018 = add nsw i64 %i1007, 2
  %i1019 = add nsw i64 %i1008, 2
  %i1020 = add nsw i32 %i1009, -2
  %i1021 = add i32 %i1009, -3
  %i1022 = icmp ult i32 %i1021, -2
  br i1 %i1022, label %bb1006.bb1006_crit_edge, label %bb1023.loopexit, !llvm.loop !40

bb1006.bb1006_crit_edge:                          ; preds = %bb1006
  br label %bb1006

bb1023.loopexit:                                  ; preds = %bb1006
  br label %bb1023

bb1023:                                           ; preds = %bb1001.bb1023_crit_edge, %bb983.bb1023_crit_edge, %bb1023.loopexit
  %i1024 = sub nsw i32 %i748, %i978
  %i1025 = sub nsw i32 %i978, %i979
  %i1026 = tail call i32 @llvm.smin.i32(i32 %i1024, i32 %i1025)
  %i1027 = icmp sgt i32 %i1026, 0
  br i1 %i1027, label %bb1028, label %bb1023.bb1064_crit_edge

bb1023.bb1064_crit_edge:                          ; preds = %bb1023
  br label %bb1064

bb1028:                                           ; preds = %bb1023
  %i1029 = sub i32 %i748, %i1026
  %i1030 = sext i32 %i1029 to i64
  %i1031 = sext i32 %i931 to i64
  %i1032 = and i32 %i1026, 1
  %i1033 = icmp eq i32 %i1032, 0
  br i1 %i1033, label %bb1028.bb1042_crit_edge, label %bb1034

bb1028.bb1042_crit_edge:                          ; preds = %bb1028
  br label %bb1042

bb1034:                                           ; preds = %bb1028
  %i1035 = add nsw i64 %i1030, 1
  %i1036 = getelementptr inbounds i32, ptr %i9, i64 %i1031
  %i1037 = load i32, ptr %i1036, align 4, !tbaa !19
  %i1038 = getelementptr inbounds i32, ptr %i9, i64 %i1035
  %i1039 = load i32, ptr %i1038, align 4, !tbaa !19
  store i32 %i1039, ptr %i1036, align 4, !tbaa !19
  store i32 %i1037, ptr %i1038, align 4, !tbaa !19
  %i1040 = add nsw i64 %i1031, 1
  %i1041 = add nsw i32 %i1026, -1
  br label %bb1042

bb1042:                                           ; preds = %bb1028.bb1042_crit_edge, %bb1034
  %i1043 = phi i64 [ %i1031, %bb1028.bb1042_crit_edge ], [ %i1040, %bb1034 ]
  %i1044 = phi i64 [ %i1030, %bb1028.bb1042_crit_edge ], [ %i1035, %bb1034 ]
  %i1045 = phi i32 [ %i1026, %bb1028.bb1042_crit_edge ], [ %i1041, %bb1034 ]
  %i1046 = icmp eq i32 %i1026, 1
  br i1 %i1046, label %bb1042.bb1064_crit_edge, label %bb1047.preheader

bb1042.bb1064_crit_edge:                          ; preds = %bb1042
  br label %bb1064

bb1047.preheader:                                 ; preds = %bb1042
  br label %bb1047

bb1047:                                           ; preds = %bb1047.bb1047_crit_edge, %bb1047.preheader
  %i1048 = phi i64 [ %i1060, %bb1047.bb1047_crit_edge ], [ %i1043, %bb1047.preheader ]
  %i1049 = phi i64 [ %i1055, %bb1047.bb1047_crit_edge ], [ %i1044, %bb1047.preheader ]
  %i1050 = phi i32 [ %i1061, %bb1047.bb1047_crit_edge ], [ %i1045, %bb1047.preheader ]
  %i1051 = getelementptr inbounds i32, ptr %i9, i64 %i1048
  %i1052 = load i32, ptr %i1051, align 4, !tbaa !19
  %i1053 = getelementptr i32, ptr %i703, i64 %i1049
  %i1054 = load i32, ptr %i1053, align 4, !tbaa !19
  store i32 %i1054, ptr %i1051, align 4, !tbaa !19
  store i32 %i1052, ptr %i1053, align 4, !tbaa !19
  %i1055 = add nsw i64 %i1049, 2
  %i1056 = getelementptr i32, ptr %i704, i64 %i1048
  %i1057 = load i32, ptr %i1056, align 4, !tbaa !19
  %i1058 = getelementptr inbounds i32, ptr %i9, i64 %i1055
  %i1059 = load i32, ptr %i1058, align 4, !tbaa !19
  store i32 %i1059, ptr %i1056, align 4, !tbaa !19
  store i32 %i1057, ptr %i1058, align 4, !tbaa !19
  %i1060 = add nsw i64 %i1048, 2
  %i1061 = add nsw i32 %i1050, -2
  %i1062 = add i32 %i1050, -3
  %i1063 = icmp ult i32 %i1062, -2
  br i1 %i1063, label %bb1047.bb1047_crit_edge, label %bb1064.loopexit, !llvm.loop !41

bb1047.bb1047_crit_edge:                          ; preds = %bb1047
  br label %bb1047

bb1064.loopexit:                                  ; preds = %bb1047
  br label %bb1064

bb1064:                                           ; preds = %bb1042.bb1064_crit_edge, %bb1023.bb1064_crit_edge, %bb1064.loopexit
  %i1065 = sub i32 %i747, %i930
  %i1066 = add i32 %i1065, %i931
  %i1067 = add nsw i32 %i1066, -1
  %i1068 = sub nsw i32 %i748, %i1025
  %i1069 = add nsw i32 %i1068, 1
  %i1070 = add nsw i32 %i749, 1
  %i1071 = sub nsw i32 %i1067, %i747
  %i1072 = sub nsw i32 %i748, %i1069
  %i1073 = icmp slt i32 %i1071, %i1072
  br i1 %i1073, label %bb1074, label %bb1064.bb1075_crit_edge

bb1064.bb1075_crit_edge:                          ; preds = %bb1064
  br label %bb1075

bb1074:                                           ; preds = %bb1064
  br label %bb1075

bb1075:                                           ; preds = %bb1064.bb1075_crit_edge, %bb1074
  %i1076 = phi i32 [ %i1071, %bb1074 ], [ %i1072, %bb1064.bb1075_crit_edge ]
  %i1077 = phi i32 [ %i747, %bb1074 ], [ %i1069, %bb1064.bb1075_crit_edge ]
  %i1078 = phi i32 [ %i1069, %bb1074 ], [ %i747, %bb1064.bb1075_crit_edge ]
  %i1079 = phi i32 [ %i1067, %bb1074 ], [ %i748, %bb1064.bb1075_crit_edge ]
  %i1080 = phi i32 [ %i748, %bb1074 ], [ %i1067, %bb1064.bb1075_crit_edge ]
  %i1081 = sub nsw i32 %i1068, %i1066
  %i1082 = icmp slt i32 %i1076, %i1081
  br i1 %i1082, label %bb1083, label %bb1075.bb1084_crit_edge

bb1075.bb1084_crit_edge:                          ; preds = %bb1075
  br label %bb1084

bb1083:                                           ; preds = %bb1075
  br label %bb1084

bb1084:                                           ; preds = %bb1075.bb1084_crit_edge, %bb1083
  %i1085 = phi i32 [ %i1081, %bb1083 ], [ %i1076, %bb1075.bb1084_crit_edge ]
  %i1086 = phi i32 [ %i1066, %bb1083 ], [ %i1077, %bb1075.bb1084_crit_edge ]
  %i1087 = phi i32 [ %i1079, %bb1083 ], [ %i1068, %bb1075.bb1084_crit_edge ]
  %i1088 = phi i32 [ %i1068, %bb1083 ], [ %i1079, %bb1075.bb1084_crit_edge ]
  %i1089 = phi i32 [ %i749, %bb1083 ], [ %i1070, %bb1075.bb1084_crit_edge ]
  %i1090 = phi i32 [ %i1070, %bb1083 ], [ %i749, %bb1075.bb1084_crit_edge ]
  %i1091 = phi i32 [ %i1077, %bb1083 ], [ %i1066, %bb1075.bb1084_crit_edge ]
  %i1092 = sub nsw i32 %i1080, %i1078
  %i1093 = icmp slt i32 %i1092, %i1085
  br i1 %i1093, label %bb1094, label %bb1084.bb1095_crit_edge

bb1084.bb1095_crit_edge:                          ; preds = %bb1084
  br label %bb1095

bb1094:                                           ; preds = %bb1084
  br label %bb1095

bb1095:                                           ; preds = %bb1084.bb1095_crit_edge, %bb1094
  %i1096 = phi i32 [ %i1078, %bb1094 ], [ %i1086, %bb1084.bb1095_crit_edge ]
  %i1097 = phi i32 [ %i1086, %bb1094 ], [ %i1078, %bb1084.bb1095_crit_edge ]
  %i1098 = phi i32 [ %i1080, %bb1094 ], [ %i1088, %bb1084.bb1095_crit_edge ]
  %i1099 = phi i32 [ %i1088, %bb1094 ], [ %i1080, %bb1084.bb1095_crit_edge ]
  %i1100 = phi i32 [ %i749, %bb1094 ], [ %i1090, %bb1084.bb1095_crit_edge ]
  %i1101 = phi i32 [ %i1090, %bb1094 ], [ %i749, %bb1084.bb1095_crit_edge ]
  store i32 %i1097, ptr %i741, align 4, !tbaa !19
  store i32 %i1099, ptr %i742, align 4, !tbaa !19
  store i32 %i1101, ptr %i743, align 4, !tbaa !19
  %i1102 = zext nneg i32 %i737 to i64
  %i1103 = getelementptr inbounds [100 x i32], ptr %i, i64 0, i64 %i1102
  store i32 %i1096, ptr %i1103, align 4, !tbaa !19
  %i1104 = getelementptr inbounds [100 x i32], ptr %i1, i64 0, i64 %i1102
  store i32 %i1098, ptr %i1104, align 4, !tbaa !19
  %i1105 = getelementptr inbounds [100 x i32], ptr %i2, i64 0, i64 %i1102
  store i32 %i1100, ptr %i1105, align 4, !tbaa !19
  %i1106 = add nuw nsw i32 %i737, 1
  %i1107 = zext nneg i32 %i1106 to i64
  %i1108 = getelementptr inbounds [100 x i32], ptr %i, i64 0, i64 %i1107
  store i32 %i1091, ptr %i1108, align 4, !tbaa !19
  %i1109 = getelementptr inbounds [100 x i32], ptr %i1, i64 0, i64 %i1107
  store i32 %i1087, ptr %i1109, align 4, !tbaa !19
  %i1110 = getelementptr inbounds [100 x i32], ptr %i2, i64 0, i64 %i1107
  store i32 %i1089, ptr %i1110, align 4, !tbaa !19
  %i1111 = add nuw nsw i32 %i737, 2
  br label %bb853

bb1112.loopexit:                                  ; preds = %bb842
  br label %bb1112

bb1112.loopexit1:                                 ; preds = %bb850
  br label %bb1112

bb1112:                                           ; preds = %bb1112.loopexit1, %bb1112.loopexit
  %i1113 = phi i32 [ %i846, %bb1112.loopexit ], [ %i851, %bb1112.loopexit1 ]
  call void @llvm.lifetime.end.p0(i64 400, ptr nonnull %i2) #31
  call void @llvm.lifetime.end.p0(i64 400, ptr nonnull %i1) #31
  call void @llvm.lifetime.end.p0(i64 400, ptr nonnull %i) #31
  br label %bb1357

bb1114:                                           ; preds = %bb853
  %i1115 = load i32, ptr %i7, align 4, !tbaa !19
  call void @llvm.lifetime.end.p0(i64 400, ptr nonnull %i2) #31
  call void @llvm.lifetime.end.p0(i64 400, ptr nonnull %i1) #31
  call void @llvm.lifetime.end.p0(i64 400, ptr nonnull %i) #31
  %i1116 = icmp sgt i32 %i1115, -1
  br i1 %i1116, label %bb1117, label %bb1357.loopexit

bb1117:                                           ; preds = %bb1114
  %i1118 = add i32 %i716, 1
  %i1119 = sub i32 %i1118, %i720
  %i1120 = add i32 %i1119, %i727
  %i1121 = load i32, ptr %i719, align 4, !tbaa !19
  br label %bb1122

bb1122:                                           ; preds = %bb723.bb1122_crit_edge, %bb718.bb1122_crit_edge, %bb1117
  %i1123 = phi i32 [ %i720, %bb718.bb1122_crit_edge ], [ %i1121, %bb1117 ], [ %i720, %bb723.bb1122_crit_edge ]
  %i1124 = phi i32 [ %i716, %bb718.bb1122_crit_edge ], [ %i1120, %bb1117 ], [ %i716, %bb723.bb1122_crit_edge ]
  %i1125 = or i32 %i1123, 2097152
  store i32 %i1125, ptr %i719, align 4, !tbaa !19
  br label %bb1126

bb1126:                                           ; preds = %bb714.bb1126_crit_edge, %bb1122
  %i1127 = phi i32 [ %i1124, %bb1122 ], [ %i716, %bb714.bb1126_crit_edge ]
  %i1128 = add nuw nsw i64 %i715, 1
  %i1129 = icmp eq i64 %i1128, 256
  br i1 %i1129, label %bb1130, label %bb1126.bb714_crit_edge, !llvm.loop !42

bb1126.bb714_crit_edge:                           ; preds = %bb1126
  br label %bb714

bb1130:                                           ; preds = %bb1126
  %i1131 = sext i32 %i709 to i64
  %i1132 = getelementptr inbounds [256 x i8], ptr %i4, i64 0, i64 %i1131
  %i1133 = load i8, ptr %i1132, align 1, !tbaa !21
  %i1134 = icmp eq i8 %i1133, 0
  br i1 %i1134, label %bb1130.bb1136_crit_edge, label %bb1135

bb1130.bb1136_crit_edge:                          ; preds = %bb1130
  br label %bb1136

bb1135:                                           ; preds = %bb1130
  tail call void @BZ2_bz__AssertH__fail(i32 noundef 1006) #31
  br label %bb1136

bb1136:                                           ; preds = %bb1130.bb1136_crit_edge, %bb1135
  %i1137 = getelementptr i32, ptr %i13, i64 %i1131
  br label %bb1138

bb1138:                                           ; preds = %bb1138.bb1138_crit_edge, %bb1136
  %i1139 = phi i64 [ 0, %bb1136 ], [ %i1161, %bb1138.bb1138_crit_edge ]
  %i1140 = shl nuw nsw i64 %i1139, 8
  %i1141 = getelementptr i32, ptr %i1137, i64 %i1140
  %i1142 = load i32, ptr %i1141, align 4, !tbaa !19
  %i1143 = and i32 %i1142, -2097153
  %i1144 = getelementptr inbounds [256 x i32], ptr %i5, i64 0, i64 %i1139
  store i32 %i1143, ptr %i1144, align 8, !tbaa !19
  %i1145 = getelementptr i32, ptr %i1141, i64 1
  %i1146 = load i32, ptr %i1145, align 4, !tbaa !19
  %i1147 = and i32 %i1146, -2097153
  %i1148 = add i32 %i1147, -1
  %i1149 = getelementptr inbounds [256 x i32], ptr %i6, i64 0, i64 %i1139
  store i32 %i1148, ptr %i1149, align 8, !tbaa !19
  %i1150 = or disjoint i64 %i1139, 1
  %i1151 = shl nuw nsw i64 %i1150, 8
  %i1152 = getelementptr i32, ptr %i1137, i64 %i1151
  %i1153 = load i32, ptr %i1152, align 4, !tbaa !19
  %i1154 = and i32 %i1153, -2097153
  %i1155 = getelementptr inbounds [256 x i32], ptr %i5, i64 0, i64 %i1150
  store i32 %i1154, ptr %i1155, align 4, !tbaa !19
  %i1156 = getelementptr i32, ptr %i1152, i64 1
  %i1157 = load i32, ptr %i1156, align 4, !tbaa !19
  %i1158 = and i32 %i1157, -2097153
  %i1159 = add i32 %i1158, -1
  %i1160 = getelementptr inbounds [256 x i32], ptr %i6, i64 0, i64 %i1150
  store i32 %i1159, ptr %i1160, align 4, !tbaa !19
  %i1161 = add nuw nsw i64 %i1139, 2
  %i1162 = icmp eq i64 %i1161, 256
  br i1 %i1162, label %bb1163, label %bb1138.bb1138_crit_edge, !llvm.loop !43

bb1138.bb1138_crit_edge:                          ; preds = %bb1138
  br label %bb1138

bb1163:                                           ; preds = %bb1138
  %i1164 = load i32, ptr %i713, align 4, !tbaa !19
  %i1165 = and i32 %i1164, -2097153
  %i1166 = getelementptr inbounds [256 x i32], ptr %i5, i64 0, i64 %i1131
  %i1167 = load i32, ptr %i1166, align 4, !tbaa !19
  %i1168 = icmp slt i32 %i1165, %i1167
  br i1 %i1168, label %bb1169, label %bb1163.bb1199_crit_edge

bb1163.bb1199_crit_edge:                          ; preds = %bb1163
  br label %bb1199

bb1169:                                           ; preds = %bb1163
  %i1170 = sext i32 %i1165 to i64
  br label %bb1171

bb1171:                                           ; preds = %bb1194.bb1171_crit_edge, %bb1169
  %i1172 = phi i32 [ %i1167, %bb1169 ], [ %i1195, %bb1194.bb1171_crit_edge ]
  %i1173 = phi i64 [ %i1170, %bb1169 ], [ %i1196, %bb1194.bb1171_crit_edge ]
  %i1174 = getelementptr inbounds i32, ptr %i9, i64 %i1173
  %i1175 = load i32, ptr %i1174, align 4, !tbaa !19
  %i1176 = add i32 %i1175, -1
  %i1177 = icmp slt i32 %i1176, 0
  %i1178 = select i1 %i1177, i32 %i15, i32 0
  %i1179 = add nsw i32 %i1178, %i1176
  %i1180 = sext i32 %i1179 to i64
  %i1181 = getelementptr inbounds i8, ptr %i11, i64 %i1180
  %i1182 = load i8, ptr %i1181, align 1, !tbaa !21
  %i1183 = zext i8 %i1182 to i64
  %i1184 = getelementptr inbounds [256 x i8], ptr %i4, i64 0, i64 %i1183
  %i1185 = load i8, ptr %i1184, align 1, !tbaa !21
  %i1186 = icmp eq i8 %i1185, 0
  br i1 %i1186, label %bb1187, label %bb1171.bb1194_crit_edge

bb1171.bb1194_crit_edge:                          ; preds = %bb1171
  br label %bb1194

bb1187:                                           ; preds = %bb1171
  %i1188 = getelementptr inbounds [256 x i32], ptr %i5, i64 0, i64 %i1183
  %i1189 = load i32, ptr %i1188, align 4, !tbaa !19
  %i1190 = add nsw i32 %i1189, 1
  store i32 %i1190, ptr %i1188, align 4, !tbaa !19
  %i1191 = sext i32 %i1189 to i64
  %i1192 = getelementptr inbounds i32, ptr %i9, i64 %i1191
  store i32 %i1179, ptr %i1192, align 4, !tbaa !19
  %i1193 = load i32, ptr %i1166, align 4, !tbaa !19
  br label %bb1194

bb1194:                                           ; preds = %bb1171.bb1194_crit_edge, %bb1187
  %i1195 = phi i32 [ %i1172, %bb1171.bb1194_crit_edge ], [ %i1193, %bb1187 ]
  %i1196 = add nsw i64 %i1173, 1
  %i1197 = sext i32 %i1195 to i64
  %i1198 = icmp slt i64 %i1196, %i1197
  br i1 %i1198, label %bb1194.bb1171_crit_edge, label %bb1199.loopexit, !llvm.loop !44

bb1194.bb1171_crit_edge:                          ; preds = %bb1194
  br label %bb1171

bb1199.loopexit:                                  ; preds = %bb1194
  br label %bb1199

bb1199:                                           ; preds = %bb1163.bb1199_crit_edge, %bb1199.loopexit
  %i1200 = phi i32 [ %i1167, %bb1163.bb1199_crit_edge ], [ %i1195, %bb1199.loopexit ]
  %i1201 = add i32 %i710, 256
  %i1202 = sext i32 %i1201 to i64
  %i1203 = getelementptr inbounds i32, ptr %i13, i64 %i1202
  %i1204 = load i32, ptr %i1203, align 4, !tbaa !19
  %i1205 = and i32 %i1204, -2097153
  %i1206 = getelementptr inbounds [256 x i32], ptr %i6, i64 0, i64 %i1131
  %i1207 = add i32 %i1205, -1
  %i1208 = load i32, ptr %i1206, align 4, !tbaa !19
  %i1209 = icmp sgt i32 %i1207, %i1208
  br i1 %i1209, label %bb1210, label %bb1199.bb1240_crit_edge

bb1199.bb1240_crit_edge:                          ; preds = %bb1199
  br label %bb1240

bb1210:                                           ; preds = %bb1199
  %i1211 = sext i32 %i1207 to i64
  br label %bb1212

bb1212:                                           ; preds = %bb1235.bb1212_crit_edge, %bb1210
  %i1213 = phi i64 [ %i1211, %bb1210 ], [ %i1237, %bb1235.bb1212_crit_edge ]
  %i1214 = phi i32 [ %i1208, %bb1210 ], [ %i1236, %bb1235.bb1212_crit_edge ]
  %i1215 = getelementptr inbounds i32, ptr %i9, i64 %i1213
  %i1216 = load i32, ptr %i1215, align 4, !tbaa !19
  %i1217 = add i32 %i1216, -1
  %i1218 = icmp slt i32 %i1217, 0
  %i1219 = select i1 %i1218, i32 %i15, i32 0
  %i1220 = add nsw i32 %i1219, %i1217
  %i1221 = sext i32 %i1220 to i64
  %i1222 = getelementptr inbounds i8, ptr %i11, i64 %i1221
  %i1223 = load i8, ptr %i1222, align 1, !tbaa !21
  %i1224 = zext i8 %i1223 to i64
  %i1225 = getelementptr inbounds [256 x i8], ptr %i4, i64 0, i64 %i1224
  %i1226 = load i8, ptr %i1225, align 1, !tbaa !21
  %i1227 = icmp eq i8 %i1226, 0
  br i1 %i1227, label %bb1228, label %bb1212.bb1235_crit_edge

bb1212.bb1235_crit_edge:                          ; preds = %bb1212
  br label %bb1235

bb1228:                                           ; preds = %bb1212
  %i1229 = getelementptr inbounds [256 x i32], ptr %i6, i64 0, i64 %i1224
  %i1230 = load i32, ptr %i1229, align 4, !tbaa !19
  %i1231 = add nsw i32 %i1230, -1
  store i32 %i1231, ptr %i1229, align 4, !tbaa !19
  %i1232 = sext i32 %i1230 to i64
  %i1233 = getelementptr inbounds i32, ptr %i9, i64 %i1232
  store i32 %i1220, ptr %i1233, align 4, !tbaa !19
  %i1234 = load i32, ptr %i1206, align 4, !tbaa !19
  br label %bb1235

bb1235:                                           ; preds = %bb1212.bb1235_crit_edge, %bb1228
  %i1236 = phi i32 [ %i1214, %bb1212.bb1235_crit_edge ], [ %i1234, %bb1228 ]
  %i1237 = add nsw i64 %i1213, -1
  %i1238 = sext i32 %i1236 to i64
  %i1239 = icmp sgt i64 %i1237, %i1238
  br i1 %i1239, label %bb1235.bb1212_crit_edge, label %bb1240.loopexit, !llvm.loop !45

bb1235.bb1212_crit_edge:                          ; preds = %bb1235
  br label %bb1212

bb1240.loopexit:                                  ; preds = %bb1235
  br label %bb1240

bb1240:                                           ; preds = %bb1199.bb1240_crit_edge, %bb1240.loopexit
  %i1241 = phi i32 [ %i1208, %bb1199.bb1240_crit_edge ], [ %i1236, %bb1240.loopexit ]
  %i1242 = add nsw i32 %i1200, -1
  %i1243 = icmp eq i32 %i1242, %i1241
  br i1 %i1243, label %bb1240.bb1249_crit_edge, label %bb1244

bb1240.bb1249_crit_edge:                          ; preds = %bb1240
  br label %bb1249

bb1244:                                           ; preds = %bb1240
  %i1245 = icmp eq i32 %i1200, 0
  %i1246 = icmp eq i32 %i1241, %i41
  %i1247 = and i1 %i1245, %i1246
  br i1 %i1247, label %bb1244.bb1249_crit_edge, label %bb1248

bb1244.bb1249_crit_edge:                          ; preds = %bb1244
  br label %bb1249

bb1248:                                           ; preds = %bb1244
  tail call void @BZ2_bz__AssertH__fail(i32 noundef 1007) #31
  br label %bb1249

bb1249:                                           ; preds = %bb1244.bb1249_crit_edge, %bb1240.bb1249_crit_edge, %bb1248
  br label %bb1250

bb1250:                                           ; preds = %bb1250.bb1250_crit_edge, %bb1249
  %i1251 = phi i64 [ 0, %bb1249 ], [ %i1271, %bb1250.bb1250_crit_edge ]
  %i1252 = shl nuw nsw i64 %i1251, 8
  %i1253 = getelementptr i32, ptr %i1137, i64 %i1252
  %i1254 = load i32, ptr %i1253, align 4, !tbaa !19
  %i1255 = or i32 %i1254, 2097152
  store i32 %i1255, ptr %i1253, align 4, !tbaa !19
  %i1256 = shl i64 %i1251, 8
  %i1257 = or disjoint i64 %i1256, 256
  %i1258 = getelementptr i32, ptr %i1137, i64 %i1257
  %i1259 = load i32, ptr %i1258, align 4, !tbaa !19
  %i1260 = or i32 %i1259, 2097152
  store i32 %i1260, ptr %i1258, align 4, !tbaa !19
  %i1261 = shl i64 %i1251, 8
  %i1262 = or disjoint i64 %i1261, 512
  %i1263 = getelementptr i32, ptr %i1137, i64 %i1262
  %i1264 = load i32, ptr %i1263, align 4, !tbaa !19
  %i1265 = or i32 %i1264, 2097152
  store i32 %i1265, ptr %i1263, align 4, !tbaa !19
  %i1266 = shl i64 %i1251, 8
  %i1267 = or disjoint i64 %i1266, 768
  %i1268 = getelementptr i32, ptr %i1137, i64 %i1267
  %i1269 = load i32, ptr %i1268, align 4, !tbaa !19
  %i1270 = or i32 %i1269, 2097152
  store i32 %i1270, ptr %i1268, align 4, !tbaa !19
  %i1271 = add nuw nsw i64 %i1251, 4
  %i1272 = icmp eq i64 %i1271, 256
  br i1 %i1272, label %bb1273, label %bb1250.bb1250_crit_edge, !llvm.loop !46

bb1250.bb1250_crit_edge:                          ; preds = %bb1250
  br label %bb1250

bb1273:                                           ; preds = %bb1250
  store i8 1, ptr %i1132, align 1, !tbaa !21
  %i1274 = icmp eq i64 %i706, 255
  br i1 %i1274, label %bb1349, label %bb1275

bb1275:                                           ; preds = %bb1273
  %i1276 = load i32, ptr %i713, align 4, !tbaa !19
  %i1277 = and i32 %i1276, -2097153
  %i1278 = load i32, ptr %i1203, align 4, !tbaa !19
  %i1279 = and i32 %i1278, -2097153
  %i1280 = sub i32 %i1279, %i1277
  br label %bb1281

bb1281:                                           ; preds = %bb1281.bb1281_crit_edge, %bb1275
  %i1282 = phi i32 [ 0, %bb1275 ], [ %i1285, %bb1281.bb1281_crit_edge ]
  %i1283 = ashr i32 %i1280, %i1282
  %i1284 = icmp sgt i32 %i1283, 65534
  %i1285 = add nuw nsw i32 %i1282, 1
  br i1 %i1284, label %bb1281.bb1281_crit_edge, label %bb1286, !llvm.loop !47

bb1281.bb1281_crit_edge:                          ; preds = %bb1281
  br label %bb1281

bb1286:                                           ; preds = %bb1281
  %i1287 = add nsw i32 %i1280, -1
  %i1288 = icmp sgt i32 %i1280, 0
  br i1 %i1288, label %bb1289, label %bb1286.bb1343_crit_edge

bb1286.bb1343_crit_edge:                          ; preds = %bb1286
  br label %bb1343

bb1289:                                           ; preds = %bb1286
  %i1290 = zext nneg i32 %i1280 to i64
  %i1291 = sext i32 %i1277 to i64
  %i1292 = getelementptr i32, ptr %i9, i64 %i1291
  %i1293 = and i64 %i1290, 1
  %i1294 = icmp eq i64 %i1293, 0
  br i1 %i1294, label %bb1289.bb1309_crit_edge, label %bb1295

bb1289.bb1309_crit_edge:                          ; preds = %bb1289
  br label %bb1309

bb1295:                                           ; preds = %bb1289
  %i1296 = add nsw i64 %i1290, -1
  %i1297 = getelementptr i32, ptr %i1292, i64 %i1296
  %i1298 = load i32, ptr %i1297, align 4, !tbaa !19
  %i1299 = trunc i64 %i1296 to i32
  %i1300 = lshr i32 %i1299, %i1282
  %i1301 = trunc i32 %i1300 to i16
  %i1302 = sext i32 %i1298 to i64
  %i1303 = getelementptr inbounds i16, ptr %i26, i64 %i1302
  store i16 %i1301, ptr %i1303, align 2, !tbaa !22
  %i1304 = icmp slt i32 %i1298, 34
  br i1 %i1304, label %bb1305, label %bb1295.bb1309_crit_edge

bb1295.bb1309_crit_edge:                          ; preds = %bb1295
  br label %bb1309

bb1305:                                           ; preds = %bb1295
  %i1306 = add nsw i32 %i1298, %i15
  %i1307 = sext i32 %i1306 to i64
  %i1308 = getelementptr inbounds i16, ptr %i26, i64 %i1307
  store i16 %i1301, ptr %i1308, align 2, !tbaa !22
  br label %bb1309

bb1309:                                           ; preds = %bb1295.bb1309_crit_edge, %bb1289.bb1309_crit_edge, %bb1305
  %i1310 = phi i64 [ %i1290, %bb1289.bb1309_crit_edge ], [ %i1296, %bb1305 ], [ %i1296, %bb1295.bb1309_crit_edge ]
  %i1311 = icmp eq i32 %i1280, 1
  br i1 %i1311, label %bb1309.bb1343_crit_edge, label %bb1312.preheader

bb1309.bb1343_crit_edge:                          ; preds = %bb1309
  br label %bb1343

bb1312.preheader:                                 ; preds = %bb1309
  br label %bb1312

bb1312:                                           ; preds = %bb1341.bb1312_crit_edge, %bb1312.preheader
  %i1313 = phi i64 [ %i1328, %bb1341.bb1312_crit_edge ], [ %i1310, %bb1312.preheader ]
  %i1314 = add nsw i64 %i1313, -1
  %i1315 = getelementptr i32, ptr %i1292, i64 %i1314
  %i1316 = load i32, ptr %i1315, align 4, !tbaa !19
  %i1317 = trunc i64 %i1314 to i32
  %i1318 = lshr i32 %i1317, %i1282
  %i1319 = trunc i32 %i1318 to i16
  %i1320 = sext i32 %i1316 to i64
  %i1321 = getelementptr inbounds i16, ptr %i26, i64 %i1320
  store i16 %i1319, ptr %i1321, align 2, !tbaa !22
  %i1322 = icmp slt i32 %i1316, 34
  br i1 %i1322, label %bb1323, label %bb1312.bb1327_crit_edge

bb1312.bb1327_crit_edge:                          ; preds = %bb1312
  br label %bb1327

bb1323:                                           ; preds = %bb1312
  %i1324 = add nsw i32 %i1316, %i15
  %i1325 = sext i32 %i1324 to i64
  %i1326 = getelementptr inbounds i16, ptr %i26, i64 %i1325
  store i16 %i1319, ptr %i1326, align 2, !tbaa !22
  br label %bb1327

bb1327:                                           ; preds = %bb1312.bb1327_crit_edge, %bb1323
  %i1328 = add nsw i64 %i1313, -2
  %i1329 = getelementptr i32, ptr %i1292, i64 %i1328
  %i1330 = load i32, ptr %i1329, align 4, !tbaa !19
  %i1331 = trunc i64 %i1328 to i32
  %i1332 = lshr i32 %i1331, %i1282
  %i1333 = trunc i32 %i1332 to i16
  %i1334 = sext i32 %i1330 to i64
  %i1335 = getelementptr inbounds i16, ptr %i26, i64 %i1334
  store i16 %i1333, ptr %i1335, align 2, !tbaa !22
  %i1336 = icmp slt i32 %i1330, 34
  br i1 %i1336, label %bb1337, label %bb1327.bb1341_crit_edge

bb1327.bb1341_crit_edge:                          ; preds = %bb1327
  br label %bb1341

bb1337:                                           ; preds = %bb1327
  %i1338 = add nsw i32 %i1330, %i15
  %i1339 = sext i32 %i1338 to i64
  %i1340 = getelementptr inbounds i16, ptr %i26, i64 %i1339
  store i16 %i1333, ptr %i1340, align 2, !tbaa !22
  br label %bb1341

bb1341:                                           ; preds = %bb1327.bb1341_crit_edge, %bb1337
  %i1342 = icmp ugt i64 %i1314, 1
  br i1 %i1342, label %bb1341.bb1312_crit_edge, label %bb1343.loopexit, !llvm.loop !48

bb1341.bb1312_crit_edge:                          ; preds = %bb1341
  br label %bb1312

bb1343.loopexit:                                  ; preds = %bb1341
  br label %bb1343

bb1343:                                           ; preds = %bb1309.bb1343_crit_edge, %bb1286.bb1343_crit_edge, %bb1343.loopexit
  %i1344 = ashr i32 %i1287, %i1282
  %i1345 = icmp slt i32 %i1344, 65536
  br i1 %i1345, label %bb1343.bb1347_crit_edge, label %bb1346

bb1343.bb1347_crit_edge:                          ; preds = %bb1343
  br label %bb1347

bb1346:                                           ; preds = %bb1343
  tail call void @BZ2_bz__AssertH__fail(i32 noundef 1002) #31
  br label %bb1347

bb1347:                                           ; preds = %bb1343.bb1347_crit_edge, %bb1346
  %i1348 = add nuw nsw i64 %i706, 1
  br label %bb705

bb1349:                                           ; preds = %bb1273
  br i1 %i34, label %bb1352, label %bb1350

bb1350:                                           ; preds = %bb1349
  %i1351 = load i32, ptr %i7, align 4, !tbaa !19
  br label %bb1357

bb1352:                                           ; preds = %bb1349
  %i1353 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i1354 = sub nsw i32 %i15, %i1127
  %i1355 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i1353, ptr noundef nonnull @.str.8, i32 noundef %i15, i32 noundef %i1127, i32 noundef %i1354) #32
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %i6) #31
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %i5) #31
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %i4) #31
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %i3) #31
  %i1356 = load i32, ptr %i7, align 4, !tbaa !19
  br label %bb1360

bb1357.loopexit:                                  ; preds = %bb1114
  br label %bb1357

bb1357:                                           ; preds = %bb1357.loopexit, %bb1350, %bb1112
  %i1358 = phi i32 [ %i1351, %bb1350 ], [ %i1113, %bb1112 ], [ %i1115, %bb1357.loopexit ]
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %i6) #31
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %i5) #31
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %i4) #31
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %i3) #31
  %i1359 = icmp sgt i32 %i17, 2
  br i1 %i1359, label %bb1357.bb1360_crit_edge, label %bb1357.bb1369_crit_edge

bb1357.bb1369_crit_edge:                          ; preds = %bb1357
  br label %bb1369

bb1357.bb1360_crit_edge:                          ; preds = %bb1357
  br label %bb1360

bb1360:                                           ; preds = %bb1357.bb1360_crit_edge, %bb1352
  %i1361 = phi i32 [ %i1356, %bb1352 ], [ %i1358, %bb1357.bb1360_crit_edge ]
  %i1362 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i1363 = sub nsw i32 %i33, %i1361
  %i1364 = sitofp i32 %i1363 to float
  %i1365 = sitofp i32 %i15 to float
  %i1366 = fdiv float %i1364, %i1365
  %i1367 = fpext float %i1366 to double
  %i1368 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i1362, ptr noundef nonnull @.str, i32 noundef %i1363, i32 noundef %i15, double noundef %i1367) #32
  br label %bb1369

bb1369:                                           ; preds = %bb1357.bb1369_crit_edge, %bb1360
  %i1370 = phi i32 [ %i1361, %bb1360 ], [ %i1358, %bb1357.bb1369_crit_edge ]
  %i1371 = icmp slt i32 %i1370, 0
  br i1 %i1371, label %bb1372, label %bb1369.bb1382_crit_edge

bb1369.bb1382_crit_edge:                          ; preds = %bb1369
  br label %bb1382

bb1372:                                           ; preds = %bb1369
  %i1373 = icmp sgt i32 %i17, 1
  br i1 %i1373, label %bb1374, label %bb1372.bb1377_crit_edge

bb1372.bb1377_crit_edge:                          ; preds = %bb1372
  br label %bb1377

bb1374:                                           ; preds = %bb1372
  %i1375 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i1376 = tail call i64 @fwrite(ptr nonnull @.str.1, i64 53, i64 1, ptr %i1375) #32
  br label %bb1377

bb1377:                                           ; preds = %bb1372.bb1377_crit_edge, %bb.bb1377_crit_edge, %bb1374
  %i1378 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 4
  %i1379 = load ptr, ptr %i1378, align 8, !tbaa !49
  %i1380 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 5
  %i1381 = load ptr, ptr %i1380, align 8, !tbaa !50
  tail call fastcc void @fallbackSort(ptr noundef %i1379, ptr noundef %i1381, ptr noundef %i13, i32 noundef %i15, i32 noundef %i17)
  br label %bb1382

bb1382:                                           ; preds = %bb1369.bb1382_crit_edge, %bb1377
  %i1383 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 7
  store i32 -1, ptr %i1383, align 8, !tbaa !51
  %i1384 = load i32, ptr %i14, align 4, !tbaa !16
  %i1385 = icmp sgt i32 %i1384, 0
  br i1 %i1385, label %bb1386, label %bb1382.bb1398_crit_edge

bb1382.bb1398_crit_edge:                          ; preds = %bb1382
  br label %bb1398

bb1386:                                           ; preds = %bb1382
  %i1387 = zext nneg i32 %i1384 to i64
  br label %bb1388

bb1388:                                           ; preds = %bb1395.bb1388_crit_edge, %bb1386
  %i1389 = phi i64 [ 0, %bb1386 ], [ %i1396, %bb1395.bb1388_crit_edge ]
  %i1390 = getelementptr inbounds i32, ptr %i9, i64 %i1389
  %i1391 = load i32, ptr %i1390, align 4, !tbaa !19
  %i1392 = icmp eq i32 %i1391, 0
  br i1 %i1392, label %bb1393, label %bb1395

bb1393:                                           ; preds = %bb1388
  %i1394 = trunc i64 %i1389 to i32
  store i32 %i1394, ptr %i1383, align 8, !tbaa !51
  br label %bb1399

bb1395:                                           ; preds = %bb1388
  %i1396 = add nuw nsw i64 %i1389, 1
  %i1397 = icmp eq i64 %i1396, %i1387
  br i1 %i1397, label %bb1398.loopexit, label %bb1395.bb1388_crit_edge, !llvm.loop !52

bb1395.bb1388_crit_edge:                          ; preds = %bb1395
  br label %bb1388

bb1398.loopexit:                                  ; preds = %bb1395
  br label %bb1398

bb1398:                                           ; preds = %bb1382.bb1398_crit_edge, %bb1398.loopexit
  tail call void @BZ2_bz__AssertH__fail(i32 noundef 1003) #31
  br label %bb1399

bb1399:                                           ; preds = %bb1398, %bb1393
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i7) #31
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #2

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.fshl.i16(i16, i16, i16) #2

; Function Attrs: nofree nounwind
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: inlinehint nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define internal fastcc zeroext i8 @mainGtU(i32 noundef %arg, i32 noundef %arg1, ptr nocapture noundef readonly %arg2, ptr nocapture noundef readonly %arg3, i32 noundef %arg4, ptr nocapture noundef %arg5) unnamed_addr #6 {
bb:
  %i = zext i32 %arg to i64
  %i6 = getelementptr inbounds i8, ptr %arg2, i64 %i
  %i7 = load i8, ptr %i6, align 1, !tbaa !21
  %i8 = zext i32 %arg1 to i64
  %i9 = getelementptr inbounds i8, ptr %arg2, i64 %i8
  %i10 = load i8, ptr %i9, align 1, !tbaa !21
  %i11 = icmp eq i8 %i7, %i10
  br i1 %i11, label %bb14, label %bb12

bb12:                                             ; preds = %bb
  %i13 = icmp ugt i8 %i7, %i10
  br label %bb324

bb14:                                             ; preds = %bb
  %i15 = add i32 %arg, 1
  %i16 = add i32 %arg1, 1
  %i17 = zext i32 %i15 to i64
  %i18 = getelementptr inbounds i8, ptr %arg2, i64 %i17
  %i19 = load i8, ptr %i18, align 1, !tbaa !21
  %i20 = zext i32 %i16 to i64
  %i21 = getelementptr inbounds i8, ptr %arg2, i64 %i20
  %i22 = load i8, ptr %i21, align 1, !tbaa !21
  %i23 = icmp eq i8 %i19, %i22
  br i1 %i23, label %bb26, label %bb24

bb24:                                             ; preds = %bb14
  %i25 = icmp ugt i8 %i19, %i22
  br label %bb324

bb26:                                             ; preds = %bb14
  %i27 = add i32 %arg, 2
  %i28 = add i32 %arg1, 2
  %i29 = zext i32 %i27 to i64
  %i30 = getelementptr inbounds i8, ptr %arg2, i64 %i29
  %i31 = load i8, ptr %i30, align 1, !tbaa !21
  %i32 = zext i32 %i28 to i64
  %i33 = getelementptr inbounds i8, ptr %arg2, i64 %i32
  %i34 = load i8, ptr %i33, align 1, !tbaa !21
  %i35 = icmp eq i8 %i31, %i34
  br i1 %i35, label %bb38, label %bb36

bb36:                                             ; preds = %bb26
  %i37 = icmp ugt i8 %i31, %i34
  br label %bb324

bb38:                                             ; preds = %bb26
  %i39 = add i32 %arg, 3
  %i40 = add i32 %arg1, 3
  %i41 = zext i32 %i39 to i64
  %i42 = getelementptr inbounds i8, ptr %arg2, i64 %i41
  %i43 = load i8, ptr %i42, align 1, !tbaa !21
  %i44 = zext i32 %i40 to i64
  %i45 = getelementptr inbounds i8, ptr %arg2, i64 %i44
  %i46 = load i8, ptr %i45, align 1, !tbaa !21
  %i47 = icmp eq i8 %i43, %i46
  br i1 %i47, label %bb50, label %bb48

bb48:                                             ; preds = %bb38
  %i49 = icmp ugt i8 %i43, %i46
  br label %bb324

bb50:                                             ; preds = %bb38
  %i51 = add i32 %arg, 4
  %i52 = add i32 %arg1, 4
  %i53 = zext i32 %i51 to i64
  %i54 = getelementptr inbounds i8, ptr %arg2, i64 %i53
  %i55 = load i8, ptr %i54, align 1, !tbaa !21
  %i56 = zext i32 %i52 to i64
  %i57 = getelementptr inbounds i8, ptr %arg2, i64 %i56
  %i58 = load i8, ptr %i57, align 1, !tbaa !21
  %i59 = icmp eq i8 %i55, %i58
  br i1 %i59, label %bb62, label %bb60

bb60:                                             ; preds = %bb50
  %i61 = icmp ugt i8 %i55, %i58
  br label %bb324

bb62:                                             ; preds = %bb50
  %i63 = add i32 %arg, 5
  %i64 = add i32 %arg1, 5
  %i65 = zext i32 %i63 to i64
  %i66 = getelementptr inbounds i8, ptr %arg2, i64 %i65
  %i67 = load i8, ptr %i66, align 1, !tbaa !21
  %i68 = zext i32 %i64 to i64
  %i69 = getelementptr inbounds i8, ptr %arg2, i64 %i68
  %i70 = load i8, ptr %i69, align 1, !tbaa !21
  %i71 = icmp eq i8 %i67, %i70
  br i1 %i71, label %bb74, label %bb72

bb72:                                             ; preds = %bb62
  %i73 = icmp ugt i8 %i67, %i70
  br label %bb324

bb74:                                             ; preds = %bb62
  %i75 = add i32 %arg, 6
  %i76 = add i32 %arg1, 6
  %i77 = zext i32 %i75 to i64
  %i78 = getelementptr inbounds i8, ptr %arg2, i64 %i77
  %i79 = load i8, ptr %i78, align 1, !tbaa !21
  %i80 = zext i32 %i76 to i64
  %i81 = getelementptr inbounds i8, ptr %arg2, i64 %i80
  %i82 = load i8, ptr %i81, align 1, !tbaa !21
  %i83 = icmp eq i8 %i79, %i82
  br i1 %i83, label %bb86, label %bb84

bb84:                                             ; preds = %bb74
  %i85 = icmp ugt i8 %i79, %i82
  br label %bb324

bb86:                                             ; preds = %bb74
  %i87 = add i32 %arg, 7
  %i88 = add i32 %arg1, 7
  %i89 = zext i32 %i87 to i64
  %i90 = getelementptr inbounds i8, ptr %arg2, i64 %i89
  %i91 = load i8, ptr %i90, align 1, !tbaa !21
  %i92 = zext i32 %i88 to i64
  %i93 = getelementptr inbounds i8, ptr %arg2, i64 %i92
  %i94 = load i8, ptr %i93, align 1, !tbaa !21
  %i95 = icmp eq i8 %i91, %i94
  br i1 %i95, label %bb98, label %bb96

bb96:                                             ; preds = %bb86
  %i97 = icmp ugt i8 %i91, %i94
  br label %bb324

bb98:                                             ; preds = %bb86
  %i99 = add i32 %arg, 8
  %i100 = add i32 %arg1, 8
  %i101 = zext i32 %i99 to i64
  %i102 = getelementptr inbounds i8, ptr %arg2, i64 %i101
  %i103 = load i8, ptr %i102, align 1, !tbaa !21
  %i104 = zext i32 %i100 to i64
  %i105 = getelementptr inbounds i8, ptr %arg2, i64 %i104
  %i106 = load i8, ptr %i105, align 1, !tbaa !21
  %i107 = icmp eq i8 %i103, %i106
  br i1 %i107, label %bb110, label %bb108

bb108:                                            ; preds = %bb98
  %i109 = icmp ugt i8 %i103, %i106
  br label %bb324

bb110:                                            ; preds = %bb98
  %i111 = add i32 %arg, 9
  %i112 = add i32 %arg1, 9
  %i113 = zext i32 %i111 to i64
  %i114 = getelementptr inbounds i8, ptr %arg2, i64 %i113
  %i115 = load i8, ptr %i114, align 1, !tbaa !21
  %i116 = zext i32 %i112 to i64
  %i117 = getelementptr inbounds i8, ptr %arg2, i64 %i116
  %i118 = load i8, ptr %i117, align 1, !tbaa !21
  %i119 = icmp eq i8 %i115, %i118
  br i1 %i119, label %bb122, label %bb120

bb120:                                            ; preds = %bb110
  %i121 = icmp ugt i8 %i115, %i118
  br label %bb324

bb122:                                            ; preds = %bb110
  %i123 = add i32 %arg, 10
  %i124 = add i32 %arg1, 10
  %i125 = zext i32 %i123 to i64
  %i126 = getelementptr inbounds i8, ptr %arg2, i64 %i125
  %i127 = load i8, ptr %i126, align 1, !tbaa !21
  %i128 = zext i32 %i124 to i64
  %i129 = getelementptr inbounds i8, ptr %arg2, i64 %i128
  %i130 = load i8, ptr %i129, align 1, !tbaa !21
  %i131 = icmp eq i8 %i127, %i130
  br i1 %i131, label %bb134, label %bb132

bb132:                                            ; preds = %bb122
  %i133 = icmp ugt i8 %i127, %i130
  br label %bb324

bb134:                                            ; preds = %bb122
  %i135 = add i32 %arg, 11
  %i136 = add i32 %arg1, 11
  %i137 = zext i32 %i135 to i64
  %i138 = getelementptr inbounds i8, ptr %arg2, i64 %i137
  %i139 = load i8, ptr %i138, align 1, !tbaa !21
  %i140 = zext i32 %i136 to i64
  %i141 = getelementptr inbounds i8, ptr %arg2, i64 %i140
  %i142 = load i8, ptr %i141, align 1, !tbaa !21
  %i143 = icmp eq i8 %i139, %i142
  br i1 %i143, label %bb146, label %bb144

bb144:                                            ; preds = %bb134
  %i145 = icmp ugt i8 %i139, %i142
  br label %bb324

bb146:                                            ; preds = %bb134
  %i147 = add i32 %arg, 12
  %i148 = add i32 %arg1, 12
  %i149 = add nuw i32 %arg4, 8
  br label %bb150

bb150:                                            ; preds = %bb311.bb150_crit_edge, %bb146
  %i151 = phi i32 [ %i148, %bb146 ], [ %i319, %bb311.bb150_crit_edge ]
  %i152 = phi i32 [ %i147, %bb146 ], [ %i316, %bb311.bb150_crit_edge ]
  %i153 = phi i32 [ %i149, %bb146 ], [ %i320, %bb311.bb150_crit_edge ]
  %i154 = zext i32 %i152 to i64
  %i155 = getelementptr inbounds i8, ptr %arg2, i64 %i154
  %i156 = load i8, ptr %i155, align 1, !tbaa !21
  %i157 = zext i32 %i151 to i64
  %i158 = getelementptr inbounds i8, ptr %arg2, i64 %i157
  %i159 = load i8, ptr %i158, align 1, !tbaa !21
  %i160 = icmp eq i8 %i156, %i159
  br i1 %i160, label %bb163, label %bb161

bb161:                                            ; preds = %bb150
  %i162 = icmp ugt i8 %i156, %i159
  br label %bb324

bb163:                                            ; preds = %bb150
  %i164 = getelementptr inbounds i16, ptr %arg3, i64 %i154
  %i165 = load i16, ptr %i164, align 2, !tbaa !22
  %i166 = getelementptr inbounds i16, ptr %arg3, i64 %i157
  %i167 = load i16, ptr %i166, align 2, !tbaa !22
  %i168 = icmp eq i16 %i165, %i167
  br i1 %i168, label %bb171, label %bb169

bb169:                                            ; preds = %bb163
  %i170 = icmp ugt i16 %i165, %i167
  br label %bb324

bb171:                                            ; preds = %bb163
  %i172 = add i32 %i152, 1
  %i173 = add i32 %i151, 1
  %i174 = zext i32 %i172 to i64
  %i175 = getelementptr inbounds i8, ptr %arg2, i64 %i174
  %i176 = load i8, ptr %i175, align 1, !tbaa !21
  %i177 = zext i32 %i173 to i64
  %i178 = getelementptr inbounds i8, ptr %arg2, i64 %i177
  %i179 = load i8, ptr %i178, align 1, !tbaa !21
  %i180 = icmp eq i8 %i176, %i179
  br i1 %i180, label %bb183, label %bb181

bb181:                                            ; preds = %bb171
  %i182 = icmp ugt i8 %i176, %i179
  br label %bb324

bb183:                                            ; preds = %bb171
  %i184 = getelementptr inbounds i16, ptr %arg3, i64 %i174
  %i185 = load i16, ptr %i184, align 2, !tbaa !22
  %i186 = getelementptr inbounds i16, ptr %arg3, i64 %i177
  %i187 = load i16, ptr %i186, align 2, !tbaa !22
  %i188 = icmp eq i16 %i185, %i187
  br i1 %i188, label %bb191, label %bb189

bb189:                                            ; preds = %bb183
  %i190 = icmp ugt i16 %i185, %i187
  br label %bb324

bb191:                                            ; preds = %bb183
  %i192 = add i32 %i152, 2
  %i193 = add i32 %i151, 2
  %i194 = zext i32 %i192 to i64
  %i195 = getelementptr inbounds i8, ptr %arg2, i64 %i194
  %i196 = load i8, ptr %i195, align 1, !tbaa !21
  %i197 = zext i32 %i193 to i64
  %i198 = getelementptr inbounds i8, ptr %arg2, i64 %i197
  %i199 = load i8, ptr %i198, align 1, !tbaa !21
  %i200 = icmp eq i8 %i196, %i199
  br i1 %i200, label %bb203, label %bb201

bb201:                                            ; preds = %bb191
  %i202 = icmp ugt i8 %i196, %i199
  br label %bb324

bb203:                                            ; preds = %bb191
  %i204 = getelementptr inbounds i16, ptr %arg3, i64 %i194
  %i205 = load i16, ptr %i204, align 2, !tbaa !22
  %i206 = getelementptr inbounds i16, ptr %arg3, i64 %i197
  %i207 = load i16, ptr %i206, align 2, !tbaa !22
  %i208 = icmp eq i16 %i205, %i207
  br i1 %i208, label %bb211, label %bb209

bb209:                                            ; preds = %bb203
  %i210 = icmp ugt i16 %i205, %i207
  br label %bb324

bb211:                                            ; preds = %bb203
  %i212 = add i32 %i152, 3
  %i213 = add i32 %i151, 3
  %i214 = zext i32 %i212 to i64
  %i215 = getelementptr inbounds i8, ptr %arg2, i64 %i214
  %i216 = load i8, ptr %i215, align 1, !tbaa !21
  %i217 = zext i32 %i213 to i64
  %i218 = getelementptr inbounds i8, ptr %arg2, i64 %i217
  %i219 = load i8, ptr %i218, align 1, !tbaa !21
  %i220 = icmp eq i8 %i216, %i219
  br i1 %i220, label %bb223, label %bb221

bb221:                                            ; preds = %bb211
  %i222 = icmp ugt i8 %i216, %i219
  br label %bb324

bb223:                                            ; preds = %bb211
  %i224 = getelementptr inbounds i16, ptr %arg3, i64 %i214
  %i225 = load i16, ptr %i224, align 2, !tbaa !22
  %i226 = getelementptr inbounds i16, ptr %arg3, i64 %i217
  %i227 = load i16, ptr %i226, align 2, !tbaa !22
  %i228 = icmp eq i16 %i225, %i227
  br i1 %i228, label %bb231, label %bb229

bb229:                                            ; preds = %bb223
  %i230 = icmp ugt i16 %i225, %i227
  br label %bb324

bb231:                                            ; preds = %bb223
  %i232 = add i32 %i152, 4
  %i233 = add i32 %i151, 4
  %i234 = zext i32 %i232 to i64
  %i235 = getelementptr inbounds i8, ptr %arg2, i64 %i234
  %i236 = load i8, ptr %i235, align 1, !tbaa !21
  %i237 = zext i32 %i233 to i64
  %i238 = getelementptr inbounds i8, ptr %arg2, i64 %i237
  %i239 = load i8, ptr %i238, align 1, !tbaa !21
  %i240 = icmp eq i8 %i236, %i239
  br i1 %i240, label %bb243, label %bb241

bb241:                                            ; preds = %bb231
  %i242 = icmp ugt i8 %i236, %i239
  br label %bb324

bb243:                                            ; preds = %bb231
  %i244 = getelementptr inbounds i16, ptr %arg3, i64 %i234
  %i245 = load i16, ptr %i244, align 2, !tbaa !22
  %i246 = getelementptr inbounds i16, ptr %arg3, i64 %i237
  %i247 = load i16, ptr %i246, align 2, !tbaa !22
  %i248 = icmp eq i16 %i245, %i247
  br i1 %i248, label %bb251, label %bb249

bb249:                                            ; preds = %bb243
  %i250 = icmp ugt i16 %i245, %i247
  br label %bb324

bb251:                                            ; preds = %bb243
  %i252 = add i32 %i152, 5
  %i253 = add i32 %i151, 5
  %i254 = zext i32 %i252 to i64
  %i255 = getelementptr inbounds i8, ptr %arg2, i64 %i254
  %i256 = load i8, ptr %i255, align 1, !tbaa !21
  %i257 = zext i32 %i253 to i64
  %i258 = getelementptr inbounds i8, ptr %arg2, i64 %i257
  %i259 = load i8, ptr %i258, align 1, !tbaa !21
  %i260 = icmp eq i8 %i256, %i259
  br i1 %i260, label %bb263, label %bb261

bb261:                                            ; preds = %bb251
  %i262 = icmp ugt i8 %i256, %i259
  br label %bb324

bb263:                                            ; preds = %bb251
  %i264 = getelementptr inbounds i16, ptr %arg3, i64 %i254
  %i265 = load i16, ptr %i264, align 2, !tbaa !22
  %i266 = getelementptr inbounds i16, ptr %arg3, i64 %i257
  %i267 = load i16, ptr %i266, align 2, !tbaa !22
  %i268 = icmp eq i16 %i265, %i267
  br i1 %i268, label %bb271, label %bb269

bb269:                                            ; preds = %bb263
  %i270 = icmp ugt i16 %i265, %i267
  br label %bb324

bb271:                                            ; preds = %bb263
  %i272 = add i32 %i152, 6
  %i273 = add i32 %i151, 6
  %i274 = zext i32 %i272 to i64
  %i275 = getelementptr inbounds i8, ptr %arg2, i64 %i274
  %i276 = load i8, ptr %i275, align 1, !tbaa !21
  %i277 = zext i32 %i273 to i64
  %i278 = getelementptr inbounds i8, ptr %arg2, i64 %i277
  %i279 = load i8, ptr %i278, align 1, !tbaa !21
  %i280 = icmp eq i8 %i276, %i279
  br i1 %i280, label %bb283, label %bb281

bb281:                                            ; preds = %bb271
  %i282 = icmp ugt i8 %i276, %i279
  br label %bb324

bb283:                                            ; preds = %bb271
  %i284 = getelementptr inbounds i16, ptr %arg3, i64 %i274
  %i285 = load i16, ptr %i284, align 2, !tbaa !22
  %i286 = getelementptr inbounds i16, ptr %arg3, i64 %i277
  %i287 = load i16, ptr %i286, align 2, !tbaa !22
  %i288 = icmp eq i16 %i285, %i287
  br i1 %i288, label %bb291, label %bb289

bb289:                                            ; preds = %bb283
  %i290 = icmp ugt i16 %i285, %i287
  br label %bb324

bb291:                                            ; preds = %bb283
  %i292 = add i32 %i152, 7
  %i293 = add i32 %i151, 7
  %i294 = zext i32 %i292 to i64
  %i295 = getelementptr inbounds i8, ptr %arg2, i64 %i294
  %i296 = load i8, ptr %i295, align 1, !tbaa !21
  %i297 = zext i32 %i293 to i64
  %i298 = getelementptr inbounds i8, ptr %arg2, i64 %i297
  %i299 = load i8, ptr %i298, align 1, !tbaa !21
  %i300 = icmp eq i8 %i296, %i299
  br i1 %i300, label %bb303, label %bb301

bb301:                                            ; preds = %bb291
  %i302 = icmp ugt i8 %i296, %i299
  br label %bb324

bb303:                                            ; preds = %bb291
  %i304 = getelementptr inbounds i16, ptr %arg3, i64 %i294
  %i305 = load i16, ptr %i304, align 2, !tbaa !22
  %i306 = getelementptr inbounds i16, ptr %arg3, i64 %i297
  %i307 = load i16, ptr %i306, align 2, !tbaa !22
  %i308 = icmp eq i16 %i305, %i307
  br i1 %i308, label %bb311, label %bb309

bb309:                                            ; preds = %bb303
  %i310 = icmp ugt i16 %i305, %i307
  br label %bb324

bb311:                                            ; preds = %bb303
  %i312 = add i32 %i152, 8
  %i313 = add i32 %i151, 8
  %i314 = icmp ult i32 %i312, %arg4
  %i315 = select i1 %i314, i32 0, i32 %arg4
  %i316 = sub i32 %i312, %i315
  %i317 = icmp ult i32 %i313, %arg4
  %i318 = select i1 %i317, i32 0, i32 %arg4
  %i319 = sub i32 %i313, %i318
  %i320 = add nsw i32 %i153, -8
  %i321 = load i32, ptr %arg5, align 4, !tbaa !19
  %i322 = add nsw i32 %i321, -1
  store i32 %i322, ptr %arg5, align 4, !tbaa !19
  %i323 = icmp sgt i32 %i153, 7
  br i1 %i323, label %bb311.bb150_crit_edge, label %bb324.loopexit, !llvm.loop !53

bb311.bb150_crit_edge:                            ; preds = %bb311
  br label %bb150

bb324.loopexit:                                   ; preds = %bb311
  br label %bb324

bb324:                                            ; preds = %bb324.loopexit, %bb309, %bb301, %bb289, %bb281, %bb269, %bb261, %bb249, %bb241, %bb229, %bb221, %bb209, %bb201, %bb189, %bb181, %bb169, %bb161, %bb144, %bb132, %bb120, %bb108, %bb96, %bb84, %bb72, %bb60, %bb48, %bb36, %bb24, %bb12
  %i325 = phi i1 [ %i13, %bb12 ], [ %i25, %bb24 ], [ %i37, %bb36 ], [ %i49, %bb48 ], [ %i61, %bb60 ], [ %i73, %bb72 ], [ %i85, %bb84 ], [ %i97, %bb96 ], [ %i109, %bb108 ], [ %i121, %bb120 ], [ %i133, %bb132 ], [ %i145, %bb144 ], [ %i162, %bb161 ], [ %i170, %bb169 ], [ %i182, %bb181 ], [ %i190, %bb189 ], [ %i202, %bb201 ], [ %i210, %bb209 ], [ %i222, %bb221 ], [ %i230, %bb229 ], [ %i242, %bb241 ], [ %i250, %bb249 ], [ %i262, %bb261 ], [ %i270, %bb269 ], [ %i282, %bb281 ], [ %i290, %bb289 ], [ %i302, %bb301 ], [ %i310, %bb309 ], [ false, %bb324.loopexit ]
  %i326 = zext i1 %i325 to i8
  ret i8 %i326
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.umax.i8(i8, i8) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.umin.i8(i8, i8) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @fallbackSort(ptr nocapture noundef %arg, ptr nocapture noundef %arg1, ptr nocapture noundef %arg2, i32 noundef %arg3, i32 noundef %arg4) unnamed_addr #0 {
bb:
  %i = alloca [100 x i32], align 16
  %i5 = alloca [100 x i32], align 16
  %i6 = alloca [257 x i32], align 16
  %i7 = alloca [256 x i32], align 16
  call void @llvm.lifetime.start.p0(i64 1028, ptr nonnull %i6) #31
  call void @llvm.lifetime.start.p0(i64 1024, ptr nonnull %i7) #31
  %i8 = icmp sgt i32 %arg4, 3
  br i1 %i8, label %bb9, label %bb.bb12_crit_edge

bb.bb12_crit_edge:                                ; preds = %bb
  br label %bb12

bb9:                                              ; preds = %bb
  %i10 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i11 = tail call i64 @fwrite(ptr nonnull @.str.2, i64 27, i64 1, ptr %i10) #32
  br label %bb12

bb12:                                             ; preds = %bb.bb12_crit_edge, %bb9
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(1028) %i6, i8 0, i64 1028, i1 false), !tbaa !19
  %i13 = icmp sgt i32 %arg3, 0
  br i1 %i13, label %bb14, label %bb12.bb37_crit_edge

bb12.bb37_crit_edge:                              ; preds = %bb12
  br label %bb37

bb14:                                             ; preds = %bb12
  %i15 = zext nneg i32 %arg3 to i64
  %i16 = and i64 %i15, 3
  %i17 = icmp ult i32 %arg3, 4
  br i1 %i17, label %bb14.bb20_crit_edge, label %bb18

bb14.bb20_crit_edge:                              ; preds = %bb14
  br label %bb20

bb18:                                             ; preds = %bb14
  %i19 = and i64 %i15, 2147483644
  br label %bb39

bb20.loopexit:                                    ; preds = %bb39
  br label %bb20

bb20:                                             ; preds = %bb14.bb20_crit_edge, %bb20.loopexit
  %i21 = phi i64 [ 0, %bb14.bb20_crit_edge ], [ %i69, %bb20.loopexit ]
  %i22 = icmp eq i64 %i16, 0
  br i1 %i22, label %bb20.bb35_crit_edge, label %bb23.preheader

bb20.bb35_crit_edge:                              ; preds = %bb20
  br label %bb35

bb23.preheader:                                   ; preds = %bb20
  br label %bb23

bb23:                                             ; preds = %bb23.bb23_crit_edge, %bb23.preheader
  %i24 = phi i64 [ %i32, %bb23.bb23_crit_edge ], [ %i21, %bb23.preheader ]
  %i25 = phi i64 [ %i33, %bb23.bb23_crit_edge ], [ 0, %bb23.preheader ]
  %i26 = getelementptr inbounds i8, ptr %arg1, i64 %i24
  %i27 = load i8, ptr %i26, align 1, !tbaa !21
  %i28 = zext i8 %i27 to i64
  %i29 = getelementptr inbounds [257 x i32], ptr %i6, i64 0, i64 %i28
  %i30 = load i32, ptr %i29, align 4, !tbaa !19
  %i31 = add nsw i32 %i30, 1
  store i32 %i31, ptr %i29, align 4, !tbaa !19
  %i32 = add nuw nsw i64 %i24, 1
  %i33 = add i64 %i25, 1
  %i34 = icmp eq i64 %i33, %i16
  br i1 %i34, label %bb35.loopexit, label %bb23.bb23_crit_edge, !llvm.loop !54

bb23.bb23_crit_edge:                              ; preds = %bb23
  br label %bb23

bb35.loopexit:                                    ; preds = %bb23
  br label %bb35

bb35:                                             ; preds = %bb20.bb35_crit_edge, %bb35.loopexit
  %i36 = load i32, ptr %i6, align 16, !tbaa !19
  br label %bb37

bb37:                                             ; preds = %bb12.bb37_crit_edge, %bb35
  %i38 = phi i32 [ %i36, %bb35 ], [ 0, %bb12.bb37_crit_edge ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(1024) %i7, ptr noundef nonnull align 16 dereferenceable(1024) %i6, i64 1024, i1 false), !tbaa !19
  br label %bb79

bb39:                                             ; preds = %bb39.bb39_crit_edge, %bb18
  %i40 = phi i64 [ 0, %bb18 ], [ %i69, %bb39.bb39_crit_edge ]
  %i41 = phi i64 [ 0, %bb18 ], [ %i70, %bb39.bb39_crit_edge ]
  %i42 = getelementptr inbounds i8, ptr %arg1, i64 %i40
  %i43 = load i8, ptr %i42, align 1, !tbaa !21
  %i44 = zext i8 %i43 to i64
  %i45 = getelementptr inbounds [257 x i32], ptr %i6, i64 0, i64 %i44
  %i46 = load i32, ptr %i45, align 4, !tbaa !19
  %i47 = add nsw i32 %i46, 1
  store i32 %i47, ptr %i45, align 4, !tbaa !19
  %i48 = or disjoint i64 %i40, 1
  %i49 = getelementptr inbounds i8, ptr %arg1, i64 %i48
  %i50 = load i8, ptr %i49, align 1, !tbaa !21
  %i51 = zext i8 %i50 to i64
  %i52 = getelementptr inbounds [257 x i32], ptr %i6, i64 0, i64 %i51
  %i53 = load i32, ptr %i52, align 4, !tbaa !19
  %i54 = add nsw i32 %i53, 1
  store i32 %i54, ptr %i52, align 4, !tbaa !19
  %i55 = or disjoint i64 %i40, 2
  %i56 = getelementptr inbounds i8, ptr %arg1, i64 %i55
  %i57 = load i8, ptr %i56, align 1, !tbaa !21
  %i58 = zext i8 %i57 to i64
  %i59 = getelementptr inbounds [257 x i32], ptr %i6, i64 0, i64 %i58
  %i60 = load i32, ptr %i59, align 4, !tbaa !19
  %i61 = add nsw i32 %i60, 1
  store i32 %i61, ptr %i59, align 4, !tbaa !19
  %i62 = or disjoint i64 %i40, 3
  %i63 = getelementptr inbounds i8, ptr %arg1, i64 %i62
  %i64 = load i8, ptr %i63, align 1, !tbaa !21
  %i65 = zext i8 %i64 to i64
  %i66 = getelementptr inbounds [257 x i32], ptr %i6, i64 0, i64 %i65
  %i67 = load i32, ptr %i66, align 4, !tbaa !19
  %i68 = add nsw i32 %i67, 1
  store i32 %i68, ptr %i66, align 4, !tbaa !19
  %i69 = add nuw nsw i64 %i40, 4
  %i70 = add i64 %i41, 4
  %i71 = icmp eq i64 %i70, %i19
  br i1 %i71, label %bb20.loopexit, label %bb39.bb39_crit_edge, !llvm.loop !56

bb39.bb39_crit_edge:                              ; preds = %bb39
  br label %bb39

bb72:                                             ; preds = %bb79
  br i1 %i13, label %bb73, label %bb72.bb137_crit_edge

bb72.bb137_crit_edge:                             ; preds = %bb72
  br label %bb137

bb73:                                             ; preds = %bb72
  %i74 = zext nneg i32 %arg3 to i64
  %i75 = and i64 %i74, 1
  %i76 = icmp eq i32 %arg3, 1
  br i1 %i76, label %bb73.bb124_crit_edge, label %bb77

bb73.bb124_crit_edge:                             ; preds = %bb73
  br label %bb124

bb77:                                             ; preds = %bb73
  %i78 = and i64 %i74, 2147483646
  br label %bb99

bb79:                                             ; preds = %bb79.bb79_crit_edge, %bb37
  %i80 = phi i32 [ %i38, %bb37 ], [ %i96, %bb79.bb79_crit_edge ]
  %i81 = phi i64 [ 1, %bb37 ], [ %i97, %bb79.bb79_crit_edge ]
  %i82 = getelementptr inbounds [257 x i32], ptr %i6, i64 0, i64 %i81
  %i83 = load i32, ptr %i82, align 4, !tbaa !19
  %i84 = add nsw i32 %i83, %i80
  store i32 %i84, ptr %i82, align 4, !tbaa !19
  %i85 = add nuw nsw i64 %i81, 1
  %i86 = getelementptr inbounds [257 x i32], ptr %i6, i64 0, i64 %i85
  %i87 = load i32, ptr %i86, align 4, !tbaa !19
  %i88 = add nsw i32 %i87, %i84
  store i32 %i88, ptr %i86, align 4, !tbaa !19
  %i89 = add nuw nsw i64 %i81, 2
  %i90 = getelementptr inbounds [257 x i32], ptr %i6, i64 0, i64 %i89
  %i91 = load i32, ptr %i90, align 4, !tbaa !19
  %i92 = add nsw i32 %i91, %i88
  store i32 %i92, ptr %i90, align 4, !tbaa !19
  %i93 = add nuw nsw i64 %i81, 3
  %i94 = getelementptr inbounds [257 x i32], ptr %i6, i64 0, i64 %i93
  %i95 = load i32, ptr %i94, align 4, !tbaa !19
  %i96 = add nsw i32 %i95, %i92
  store i32 %i96, ptr %i94, align 4, !tbaa !19
  %i97 = add nuw nsw i64 %i81, 4
  %i98 = icmp eq i64 %i97, 257
  br i1 %i98, label %bb72, label %bb79.bb79_crit_edge, !llvm.loop !57

bb79.bb79_crit_edge:                              ; preds = %bb79
  br label %bb79

bb99:                                             ; preds = %bb99.bb99_crit_edge, %bb77
  %i100 = phi i64 [ 0, %bb77 ], [ %i121, %bb99.bb99_crit_edge ]
  %i101 = phi i64 [ 0, %bb77 ], [ %i122, %bb99.bb99_crit_edge ]
  %i102 = getelementptr inbounds i8, ptr %arg1, i64 %i100
  %i103 = load i8, ptr %i102, align 1, !tbaa !21
  %i104 = zext i8 %i103 to i64
  %i105 = getelementptr inbounds [257 x i32], ptr %i6, i64 0, i64 %i104
  %i106 = load i32, ptr %i105, align 4, !tbaa !19
  %i107 = add nsw i32 %i106, -1
  store i32 %i107, ptr %i105, align 4, !tbaa !19
  %i108 = sext i32 %i107 to i64
  %i109 = getelementptr inbounds i32, ptr %arg, i64 %i108
  %i110 = trunc i64 %i100 to i32
  store i32 %i110, ptr %i109, align 4, !tbaa !19
  %i111 = or disjoint i64 %i100, 1
  %i112 = getelementptr inbounds i8, ptr %arg1, i64 %i111
  %i113 = load i8, ptr %i112, align 1, !tbaa !21
  %i114 = zext i8 %i113 to i64
  %i115 = getelementptr inbounds [257 x i32], ptr %i6, i64 0, i64 %i114
  %i116 = load i32, ptr %i115, align 4, !tbaa !19
  %i117 = add nsw i32 %i116, -1
  store i32 %i117, ptr %i115, align 4, !tbaa !19
  %i118 = sext i32 %i117 to i64
  %i119 = getelementptr inbounds i32, ptr %arg, i64 %i118
  %i120 = trunc i64 %i111 to i32
  store i32 %i120, ptr %i119, align 4, !tbaa !19
  %i121 = add nuw nsw i64 %i100, 2
  %i122 = add i64 %i101, 2
  %i123 = icmp eq i64 %i122, %i78
  br i1 %i123, label %bb124.loopexit, label %bb99.bb99_crit_edge, !llvm.loop !58

bb99.bb99_crit_edge:                              ; preds = %bb99
  br label %bb99

bb124.loopexit:                                   ; preds = %bb99
  br label %bb124

bb124:                                            ; preds = %bb73.bb124_crit_edge, %bb124.loopexit
  %i125 = phi i64 [ 0, %bb73.bb124_crit_edge ], [ %i121, %bb124.loopexit ]
  %i126 = icmp eq i64 %i75, 0
  br i1 %i126, label %bb124.bb137_crit_edge, label %bb127

bb124.bb137_crit_edge:                            ; preds = %bb124
  br label %bb137

bb127:                                            ; preds = %bb124
  %i128 = getelementptr inbounds i8, ptr %arg1, i64 %i125
  %i129 = load i8, ptr %i128, align 1, !tbaa !21
  %i130 = zext i8 %i129 to i64
  %i131 = getelementptr inbounds [257 x i32], ptr %i6, i64 0, i64 %i130
  %i132 = load i32, ptr %i131, align 4, !tbaa !19
  %i133 = add nsw i32 %i132, -1
  store i32 %i133, ptr %i131, align 4, !tbaa !19
  %i134 = sext i32 %i133 to i64
  %i135 = getelementptr inbounds i32, ptr %arg, i64 %i134
  %i136 = trunc i64 %i125 to i32
  store i32 %i136, ptr %i135, align 4, !tbaa !19
  br label %bb137

bb137:                                            ; preds = %bb124.bb137_crit_edge, %bb72.bb137_crit_edge, %bb127
  %i138 = icmp sgt i32 %arg3, -64
  br i1 %i138, label %bb139, label %bb137.bb145_crit_edge

bb137.bb145_crit_edge:                            ; preds = %bb137
  br label %bb145

bb139:                                            ; preds = %bb137
  %i140 = sdiv i32 %arg3, 32
  %i141 = add nsw i32 %i140, 1
  %i142 = zext nneg i32 %i141 to i64
  %i143 = shl nuw nsw i64 %i142, 2
  %i144 = add nuw nsw i64 %i143, 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %arg2, i8 0, i64 %i144, i1 false), !tbaa !19
  br label %bb145

bb145:                                            ; preds = %bb137.bb145_crit_edge, %bb139
  br label %bb146

bb146:                                            ; preds = %bb146.bb146_crit_edge, %bb145
  %i147 = phi i64 [ 0, %bb145 ], [ %i167, %bb146.bb146_crit_edge ]
  %i148 = getelementptr inbounds [257 x i32], ptr %i6, i64 0, i64 %i147
  %i149 = load i32, ptr %i148, align 8, !tbaa !19
  %i150 = and i32 %i149, 31
  %i151 = shl nuw i32 1, %i150
  %i152 = ashr i32 %i149, 5
  %i153 = sext i32 %i152 to i64
  %i154 = getelementptr inbounds i32, ptr %arg2, i64 %i153
  %i155 = load i32, ptr %i154, align 4, !tbaa !19
  %i156 = or i32 %i151, %i155
  store i32 %i156, ptr %i154, align 4, !tbaa !19
  %i157 = or disjoint i64 %i147, 1
  %i158 = getelementptr inbounds [257 x i32], ptr %i6, i64 0, i64 %i157
  %i159 = load i32, ptr %i158, align 4, !tbaa !19
  %i160 = and i32 %i159, 31
  %i161 = shl nuw i32 1, %i160
  %i162 = ashr i32 %i159, 5
  %i163 = sext i32 %i162 to i64
  %i164 = getelementptr inbounds i32, ptr %arg2, i64 %i163
  %i165 = load i32, ptr %i164, align 4, !tbaa !19
  %i166 = or i32 %i161, %i165
  store i32 %i166, ptr %i164, align 4, !tbaa !19
  %i167 = add nuw nsw i64 %i147, 2
  %i168 = icmp eq i64 %i167, 256
  br i1 %i168, label %bb176.preheader, label %bb146.bb146_crit_edge, !llvm.loop !59

bb146.bb146_crit_edge:                            ; preds = %bb146
  br label %bb146

bb176.preheader:                                  ; preds = %bb146
  br label %bb176

bb169:                                            ; preds = %bb176
  %i170 = getelementptr i32, ptr %arg, i64 -1
  %i171 = zext nneg i32 %arg3 to i64
  %i172 = getelementptr i32, ptr %arg, i64 1
  %i173 = getelementptr i32, ptr %arg, i64 1
  %i174 = getelementptr i32, ptr %arg, i64 1
  %i175 = getelementptr i32, ptr %arg, i64 1
  br label %bb198

bb176:                                            ; preds = %bb176.bb176_crit_edge, %bb176.preheader
  %i177 = phi i32 [ %i196, %bb176.bb176_crit_edge ], [ 0, %bb176.preheader ]
  %i178 = shl nuw nsw i32 %i177, 1
  %i179 = add nsw i32 %i178, %arg3
  %i180 = and i32 %i179, 31
  %i181 = shl nuw i32 1, %i180
  %i182 = ashr i32 %i179, 5
  %i183 = sext i32 %i182 to i64
  %i184 = getelementptr inbounds i32, ptr %arg2, i64 %i183
  %i185 = load i32, ptr %i184, align 4, !tbaa !19
  %i186 = or i32 %i185, %i181
  store i32 %i186, ptr %i184, align 4, !tbaa !19
  %i187 = add nsw i32 %i179, 1
  %i188 = and i32 %i187, 31
  %i189 = shl nuw i32 1, %i188
  %i190 = xor i32 %i189, -1
  %i191 = ashr i32 %i187, 5
  %i192 = sext i32 %i191 to i64
  %i193 = getelementptr inbounds i32, ptr %arg2, i64 %i192
  %i194 = load i32, ptr %i193, align 4, !tbaa !19
  %i195 = and i32 %i194, %i190
  store i32 %i195, ptr %i193, align 4, !tbaa !19
  %i196 = add nuw nsw i32 %i177, 1
  %i197 = icmp eq i32 %i196, 32
  br i1 %i197, label %bb169, label %bb176.bb176_crit_edge, !llvm.loop !60

bb176.bb176_crit_edge:                            ; preds = %bb176
  br label %bb176

bb198:                                            ; preds = %bb665, %bb169
  %i199 = phi i32 [ 1, %bb169 ], [ %i666, %bb665 ]
  br i1 %i8, label %bb200, label %bb198.bb203_crit_edge

bb198.bb203_crit_edge:                            ; preds = %bb198
  br label %bb203

bb200:                                            ; preds = %bb198
  %i201 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i202 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i201, ptr noundef nonnull @.str.3, i32 noundef %i199) #32
  br label %bb203

bb203:                                            ; preds = %bb198.bb203_crit_edge, %bb200
  br i1 %i13, label %bb204.preheader, label %bb203.bb227_crit_edge

bb203.bb227_crit_edge:                            ; preds = %bb203
  br label %bb227

bb204.preheader:                                  ; preds = %bb203
  br label %bb204

bb204:                                            ; preds = %bb204.bb204_crit_edge, %bb204.preheader
  %i205 = phi i64 [ %i225, %bb204.bb204_crit_edge ], [ 0, %bb204.preheader ]
  %i206 = phi i32 [ %i216, %bb204.bb204_crit_edge ], [ 0, %bb204.preheader ]
  %i207 = trunc i64 %i205 to i32
  %i208 = lshr i64 %i205, 5
  %i209 = and i64 %i208, 134217727
  %i210 = getelementptr inbounds i32, ptr %arg2, i64 %i209
  %i211 = load i32, ptr %i210, align 4, !tbaa !19
  %i212 = and i32 %i207, 31
  %i213 = shl nuw i32 1, %i212
  %i214 = and i32 %i211, %i213
  %i215 = icmp eq i32 %i214, 0
  %i216 = select i1 %i215, i32 %i206, i32 %i207
  %i217 = getelementptr inbounds i32, ptr %arg, i64 %i205
  %i218 = load i32, ptr %i217, align 4, !tbaa !19
  %i219 = sub i32 %i218, %i199
  %i220 = icmp slt i32 %i219, 0
  %i221 = select i1 %i220, i32 %arg3, i32 0
  %i222 = add nsw i32 %i221, %i219
  %i223 = sext i32 %i222 to i64
  %i224 = getelementptr inbounds i32, ptr %arg1, i64 %i223
  store i32 %i216, ptr %i224, align 4, !tbaa !19
  %i225 = add nuw nsw i64 %i205, 1
  %i226 = icmp eq i64 %i225, %i171
  br i1 %i226, label %bb227.loopexit, label %bb204.bb204_crit_edge, !llvm.loop !61

bb204.bb204_crit_edge:                            ; preds = %bb204
  br label %bb204

bb227.loopexit:                                   ; preds = %bb204
  br label %bb227

bb227:                                            ; preds = %bb203.bb227_crit_edge, %bb227.loopexit
  br label %bb228

bb228:                                            ; preds = %bb631, %bb227
  %i229 = phi i32 [ 0, %bb227 ], [ %i303, %bb631 ]
  %i230 = phi i32 [ 0, %bb227 ], [ %i312, %bb631 ]
  br label %bb231

bb231:                                            ; preds = %bb305.bb231_crit_edge, %bb228
  %i232 = phi i32 [ %i303, %bb305.bb231_crit_edge ], [ %i229, %bb228 ]
  br label %bb233

bb233:                                            ; preds = %bb233.bb233_crit_edge, %bb231
  %i234 = phi i32 [ %i232, %bb231 ], [ %i245, %bb233.bb233_crit_edge ]
  %i235 = ashr i32 %i234, 5
  %i236 = sext i32 %i235 to i64
  %i237 = getelementptr inbounds i32, ptr %arg2, i64 %i236
  %i238 = load i32, ptr %i237, align 4, !tbaa !19
  %i239 = and i32 %i234, 31
  %i240 = shl nuw i32 1, %i239
  %i241 = and i32 %i240, %i238
  %i242 = icmp ne i32 %i241, 0
  %i243 = icmp ne i32 %i239, 0
  %i244 = and i1 %i243, %i242
  %i245 = add nsw i32 %i234, 1
  br i1 %i244, label %bb233.bb233_crit_edge, label %bb246, !llvm.loop !62

bb233.bb233_crit_edge:                            ; preds = %bb233
  br label %bb233

bb246:                                            ; preds = %bb233
  br i1 %i242, label %bb247.preheader, label %bb246.bb266_crit_edge

bb246.bb266_crit_edge:                            ; preds = %bb246
  br label %bb266

bb247.preheader:                                  ; preds = %bb246
  br label %bb247

bb247:                                            ; preds = %bb247.bb247_crit_edge, %bb247.preheader
  %i248 = phi i32 [ %i254, %bb247.bb247_crit_edge ], [ %i234, %bb247.preheader ]
  %i249 = ashr i32 %i248, 5
  %i250 = sext i32 %i249 to i64
  %i251 = getelementptr inbounds i32, ptr %arg2, i64 %i250
  %i252 = load i32, ptr %i251, align 4, !tbaa !19
  %i253 = icmp eq i32 %i252, -1
  %i254 = add nsw i32 %i248, 32
  br i1 %i253, label %bb247.bb247_crit_edge, label %bb255.preheader, !llvm.loop !63

bb247.bb247_crit_edge:                            ; preds = %bb247
  br label %bb247

bb255.preheader:                                  ; preds = %bb247
  br label %bb255

bb255:                                            ; preds = %bb255.bb255_crit_edge, %bb255.preheader
  %i256 = phi i32 [ %i265, %bb255.bb255_crit_edge ], [ %i248, %bb255.preheader ]
  %i257 = ashr i32 %i256, 5
  %i258 = sext i32 %i257 to i64
  %i259 = getelementptr inbounds i32, ptr %arg2, i64 %i258
  %i260 = load i32, ptr %i259, align 4, !tbaa !19
  %i261 = and i32 %i256, 31
  %i262 = shl nuw i32 1, %i261
  %i263 = and i32 %i262, %i260
  %i264 = icmp eq i32 %i263, 0
  %i265 = add nsw i32 %i256, 1
  br i1 %i264, label %bb266.loopexit, label %bb255.bb255_crit_edge, !llvm.loop !64

bb255.bb255_crit_edge:                            ; preds = %bb255
  br label %bb255

bb266.loopexit:                                   ; preds = %bb255
  br label %bb266

bb266:                                            ; preds = %bb246.bb266_crit_edge, %bb266.loopexit
  %i267 = phi i32 [ %i234, %bb246.bb266_crit_edge ], [ %i256, %bb266.loopexit ]
  %i268 = icmp sgt i32 %i267, %arg3
  br i1 %i268, label %bb266.bb657_crit_edge, label %bb269.preheader

bb266.bb657_crit_edge:                            ; preds = %bb266
  br label %bb657

bb269.preheader:                                  ; preds = %bb266
  br label %bb269

bb269:                                            ; preds = %bb269.bb269_crit_edge, %bb269.preheader
  %i270 = phi i32 [ %i281, %bb269.bb269_crit_edge ], [ %i267, %bb269.preheader ]
  %i271 = ashr i32 %i270, 5
  %i272 = sext i32 %i271 to i64
  %i273 = getelementptr inbounds i32, ptr %arg2, i64 %i272
  %i274 = load i32, ptr %i273, align 4, !tbaa !19
  %i275 = and i32 %i270, 31
  %i276 = shl nuw i32 1, %i275
  %i277 = and i32 %i276, %i274
  %i278 = icmp eq i32 %i277, 0
  %i279 = icmp ne i32 %i275, 0
  %i280 = and i1 %i279, %i278
  %i281 = add nsw i32 %i270, 1
  br i1 %i280, label %bb269.bb269_crit_edge, label %bb282, !llvm.loop !65

bb269.bb269_crit_edge:                            ; preds = %bb269
  br label %bb269

bb282:                                            ; preds = %bb269
  br i1 %i278, label %bb283.preheader, label %bb282.bb302_crit_edge

bb282.bb302_crit_edge:                            ; preds = %bb282
  br label %bb302

bb283.preheader:                                  ; preds = %bb282
  br label %bb283

bb283:                                            ; preds = %bb283.bb283_crit_edge, %bb283.preheader
  %i284 = phi i32 [ %i290, %bb283.bb283_crit_edge ], [ %i270, %bb283.preheader ]
  %i285 = ashr i32 %i284, 5
  %i286 = sext i32 %i285 to i64
  %i287 = getelementptr inbounds i32, ptr %arg2, i64 %i286
  %i288 = load i32, ptr %i287, align 4, !tbaa !19
  %i289 = icmp eq i32 %i288, 0
  %i290 = add nsw i32 %i284, 32
  br i1 %i289, label %bb283.bb283_crit_edge, label %bb291.preheader, !llvm.loop !66

bb283.bb283_crit_edge:                            ; preds = %bb283
  br label %bb283

bb291.preheader:                                  ; preds = %bb283
  br label %bb291

bb291:                                            ; preds = %bb291.bb291_crit_edge, %bb291.preheader
  %i292 = phi i32 [ %i301, %bb291.bb291_crit_edge ], [ %i284, %bb291.preheader ]
  %i293 = ashr i32 %i292, 5
  %i294 = sext i32 %i293 to i64
  %i295 = getelementptr inbounds i32, ptr %arg2, i64 %i294
  %i296 = load i32, ptr %i295, align 4, !tbaa !19
  %i297 = and i32 %i292, 31
  %i298 = shl nuw i32 1, %i297
  %i299 = and i32 %i298, %i296
  %i300 = icmp eq i32 %i299, 0
  %i301 = add nsw i32 %i292, 1
  br i1 %i300, label %bb291.bb291_crit_edge, label %bb302.loopexit, !llvm.loop !67

bb291.bb291_crit_edge:                            ; preds = %bb291
  br label %bb291

bb302.loopexit:                                   ; preds = %bb291
  br label %bb302

bb302:                                            ; preds = %bb282.bb302_crit_edge, %bb302.loopexit
  %i303 = phi i32 [ %i270, %bb282.bb302_crit_edge ], [ %i292, %bb302.loopexit ]
  %i304 = icmp sgt i32 %i303, %arg3
  br i1 %i304, label %bb657split, label %bb305

bb305:                                            ; preds = %bb302
  %i306 = icmp sgt i32 %i303, %i267
  br i1 %i306, label %bb307, label %bb305.bb231_crit_edge

bb305.bb231_crit_edge:                            ; preds = %bb305
  br label %bb231

bb307:                                            ; preds = %bb305
  %i308 = add i32 %i267, -1
  %i309 = add nsw i32 %i303, -1
  %i310 = add i32 %i230, 1
  %i311 = sub i32 %i310, %i267
  %i312 = add i32 %i311, %i303
  call void @llvm.lifetime.start.p0(i64 400, ptr nonnull %i) #31
  call void @llvm.lifetime.start.p0(i64 400, ptr nonnull %i5) #31
  store i32 %i308, ptr %i, align 16, !tbaa !19
  store i32 %i309, ptr %i5, align 16, !tbaa !19
  br label %bb313

bb313:                                            ; preds = %bb526.bb313_crit_edge, %bb307
  %i314 = phi i16 [ 0, %bb307 ], [ %i418, %bb526.bb313_crit_edge ]
  %i315 = phi i32 [ 1, %bb307 ], [ %i527, %bb526.bb313_crit_edge ]
  %i316 = zext nneg i32 %i315 to i64
  br label %bb317

bb317:                                            ; preds = %bb409.bb317_crit_edge, %bb313
  %i318 = phi i64 [ %i316, %bb313 ], [ %i322, %bb409.bb317_crit_edge ]
  %i319 = icmp ult i64 %i318, 99
  br i1 %i319, label %bb317.bb321_crit_edge, label %bb320

bb317.bb321_crit_edge:                            ; preds = %bb317
  br label %bb321

bb320:                                            ; preds = %bb317
  tail call void @BZ2_bz__AssertH__fail(i32 noundef 1004) #31
  br label %bb321

bb321:                                            ; preds = %bb317.bb321_crit_edge, %bb320
  %i322 = add nsw i64 %i318, -1
  %i323 = getelementptr inbounds [100 x i32], ptr %i, i64 0, i64 %i322
  %i324 = load i32, ptr %i323, align 4, !tbaa !19
  %i325 = getelementptr inbounds [100 x i32], ptr %i5, i64 0, i64 %i322
  %i326 = load i32, ptr %i325, align 4, !tbaa !19
  %i327 = sub nsw i32 %i326, %i324
  %i328 = icmp slt i32 %i327, 10
  br i1 %i328, label %bb329, label %bb411

bb329:                                            ; preds = %bb321
  %i330 = icmp eq i32 %i324, %i326
  br i1 %i330, label %bb329.bb409_crit_edge, label %bb331

bb329.bb409_crit_edge:                            ; preds = %bb329
  br label %bb409

bb331:                                            ; preds = %bb329
  %i332 = icmp slt i32 %i327, 4
  %i333 = add i32 %i326, -4
  %i334 = icmp slt i32 %i333, %i324
  %i335 = or i1 %i332, %i334
  br i1 %i335, label %bb331.bb373_crit_edge, label %bb336

bb331.bb373_crit_edge:                            ; preds = %bb331
  br label %bb373

bb336:                                            ; preds = %bb331
  %i337 = sext i32 %i326 to i64
  %i338 = sext i32 %i333 to i64
  %i339 = sext i32 %i324 to i64
  %i340 = add nsw i64 %i337, -4
  br label %bb341

bb341:                                            ; preds = %bb366.bb341_crit_edge, %bb336
  %i342 = phi i64 [ %i338, %bb336 ], [ %i370, %bb366.bb341_crit_edge ]
  %i343 = phi i64 [ %i337, %bb336 ], [ %i372, %bb366.bb341_crit_edge ]
  %i344 = getelementptr inbounds i32, ptr %arg, i64 %i342
  %i345 = load i32, ptr %i344, align 4, !tbaa !19
  %i346 = sext i32 %i345 to i64
  %i347 = getelementptr inbounds i32, ptr %arg1, i64 %i346
  %i348 = load i32, ptr %i347, align 4, !tbaa !19
  %i349 = icmp sgt i64 %i342, %i340
  %i350 = trunc i64 %i342 to i32
  br i1 %i349, label %bb341.bb366_crit_edge, label %bb351.preheader

bb341.bb366_crit_edge:                            ; preds = %bb341
  br label %bb366

bb351.preheader:                                  ; preds = %bb341
  br label %bb351

bb351:                                            ; preds = %bb360.bb351_crit_edge, %bb351.preheader
  %i352 = phi i64 [ %i363, %bb360.bb351_crit_edge ], [ %i343, %bb351.preheader ]
  %i353 = phi i32 [ %i365, %bb360.bb351_crit_edge ], [ %i350, %bb351.preheader ]
  %i354 = getelementptr inbounds i32, ptr %arg, i64 %i352
  %i355 = load i32, ptr %i354, align 4, !tbaa !19
  %i356 = zext i32 %i355 to i64
  %i357 = getelementptr inbounds i32, ptr %arg1, i64 %i356
  %i358 = load i32, ptr %i357, align 4, !tbaa !19
  %i359 = icmp ugt i32 %i348, %i358
  br i1 %i359, label %bb360, label %bb351.bb366.loopexit_crit_edge

bb351.bb366.loopexit_crit_edge:                   ; preds = %bb351
  br label %bb366.loopexit

bb360:                                            ; preds = %bb351
  %i361 = sext i32 %i353 to i64
  %i362 = getelementptr inbounds i32, ptr %arg, i64 %i361
  store i32 %i355, ptr %i362, align 4, !tbaa !19
  %i363 = add nsw i64 %i352, 4
  %i364 = icmp sgt i64 %i363, %i337
  %i365 = trunc i64 %i352 to i32
  br i1 %i364, label %bb366.loopexitsplit, label %bb360.bb351_crit_edge, !llvm.loop !68

bb360.bb351_crit_edge:                            ; preds = %bb360
  br label %bb351

bb366.loopexitsplit:                              ; preds = %bb360
  br label %bb366.loopexit

bb366.loopexit:                                   ; preds = %bb366.loopexitsplit, %bb351.bb366.loopexit_crit_edge
  %i367.ph = phi i32 [ %i353, %bb351.bb366.loopexit_crit_edge ], [ %i365, %bb366.loopexitsplit ]
  br label %bb366

bb366:                                            ; preds = %bb341.bb366_crit_edge, %bb366.loopexit
  %i367 = phi i32 [ %i350, %bb341.bb366_crit_edge ], [ %i367.ph, %bb366.loopexit ]
  %i368 = sext i32 %i367 to i64
  %i369 = getelementptr inbounds i32, ptr %arg, i64 %i368
  store i32 %i345, ptr %i369, align 4, !tbaa !19
  %i370 = add nsw i64 %i342, -1
  %i371 = icmp sgt i64 %i342, %i339
  %i372 = add nsw i64 %i343, -1
  br i1 %i371, label %bb366.bb341_crit_edge, label %bb373.loopexit, !llvm.loop !69

bb366.bb341_crit_edge:                            ; preds = %bb366
  br label %bb341

bb373.loopexit:                                   ; preds = %bb366
  br label %bb373

bb373:                                            ; preds = %bb331.bb373_crit_edge, %bb373.loopexit
  %i374 = icmp sgt i32 %i326, %i324
  br i1 %i374, label %bb375, label %bb373.bb409_crit_edge

bb373.bb409_crit_edge:                            ; preds = %bb373
  br label %bb409

bb375:                                            ; preds = %bb373
  %i376 = sext i32 %i326 to i64
  %i377 = add i32 %i326, 1
  %i378 = sext i32 %i324 to i64
  br label %bb379

bb379:                                            ; preds = %bb404.bb379_crit_edge, %bb375
  %i380 = phi i64 [ %i376, %bb375 ], [ %i381, %bb404.bb379_crit_edge ]
  %i381 = add nsw i64 %i380, -1
  %i382 = getelementptr inbounds i32, ptr %arg, i64 %i381
  %i383 = load i32, ptr %i382, align 4, !tbaa !19
  %i384 = sext i32 %i383 to i64
  %i385 = getelementptr inbounds i32, ptr %arg1, i64 %i384
  %i386 = load i32, ptr %i385, align 4, !tbaa !19
  %i387 = icmp sgt i64 %i380, %i376
  %i388 = trunc i64 %i380 to i32
  br i1 %i387, label %bb379.bb404_crit_edge, label %bb389.preheader

bb379.bb404_crit_edge:                            ; preds = %bb379
  br label %bb404

bb389.preheader:                                  ; preds = %bb379
  br label %bb389

bb389:                                            ; preds = %bb397.bb389_crit_edge, %bb389.preheader
  %i390 = phi i64 [ %i399, %bb397.bb389_crit_edge ], [ %i380, %bb389.preheader ]
  %i391 = getelementptr inbounds i32, ptr %arg, i64 %i390
  %i392 = load i32, ptr %i391, align 4, !tbaa !19
  %i393 = zext i32 %i392 to i64
  %i394 = getelementptr inbounds i32, ptr %arg1, i64 %i393
  %i395 = load i32, ptr %i394, align 4, !tbaa !19
  %i396 = icmp ugt i32 %i386, %i395
  br i1 %i396, label %bb397, label %bb402

bb397:                                            ; preds = %bb389
  %i398 = getelementptr i32, ptr %i391, i64 -1
  store i32 %i392, ptr %i398, align 4, !tbaa !19
  %i399 = add nsw i64 %i390, 1
  %i400 = trunc i64 %i399 to i32
  %i401 = icmp eq i32 %i377, %i400
  br i1 %i401, label %bb404.loopexit, label %bb397.bb389_crit_edge, !llvm.loop !70

bb397.bb389_crit_edge:                            ; preds = %bb397
  br label %bb389

bb402:                                            ; preds = %bb389
  %i403 = trunc i64 %i390 to i32
  br label %bb404

bb404.loopexit:                                   ; preds = %bb397
  br label %bb404

bb404:                                            ; preds = %bb379.bb404_crit_edge, %bb404.loopexit, %bb402
  %i405 = phi i32 [ %i388, %bb379.bb404_crit_edge ], [ %i403, %bb402 ], [ %i377, %bb404.loopexit ]
  %i406 = sext i32 %i405 to i64
  %i407 = getelementptr i32, ptr %i170, i64 %i406
  store i32 %i383, ptr %i407, align 4, !tbaa !19
  %i408 = icmp sgt i64 %i381, %i378
  br i1 %i408, label %bb404.bb379_crit_edge, label %bb409.loopexit, !llvm.loop !71

bb404.bb379_crit_edge:                            ; preds = %bb404
  br label %bb379

bb409.loopexit:                                   ; preds = %bb404
  br label %bb409

bb409:                                            ; preds = %bb373.bb409_crit_edge, %bb329.bb409_crit_edge, %bb409.loopexit
  %i410 = icmp sgt i64 %i318, 1
  br i1 %i410, label %bb409.bb317_crit_edge, label %bb629.loopexit, !llvm.loop !72

bb409.bb317_crit_edge:                            ; preds = %bb409
  br label %bb317

bb411:                                            ; preds = %bb321
  %i412 = getelementptr inbounds [100 x i32], ptr %i, i64 0, i64 %i322
  %i413 = getelementptr inbounds [100 x i32], ptr %i5, i64 0, i64 %i322
  %i414 = trunc i64 %i318 to i32
  %i415 = trunc i64 %i322 to i32
  %i416 = mul i16 %i314, 7621
  %i417 = add i16 %i416, 1
  %i418 = and i16 %i417, 32767
  %i419 = urem i16 %i418, 3
  switch i16 %i419, label %bb423 [
    i16 0, label %bb411.bb424_crit_edge
    i16 1, label %bb420
  ]

bb411.bb424_crit_edge:                            ; preds = %bb411
  br label %bb424

bb420:                                            ; preds = %bb411
  %i421 = add nsw i32 %i326, %i324
  %i422 = ashr i32 %i421, 1
  br label %bb424

bb423:                                            ; preds = %bb411
  br label %bb424

bb424:                                            ; preds = %bb411.bb424_crit_edge, %bb423, %bb420
  %i425 = phi i32 [ %i422, %bb420 ], [ %i326, %bb423 ], [ %i324, %bb411.bb424_crit_edge ]
  %i426 = sext i32 %i425 to i64
  %i427 = getelementptr inbounds i32, ptr %arg, i64 %i426
  %i428 = load i32, ptr %i427, align 4, !tbaa !19
  %i429 = zext i32 %i428 to i64
  %i430 = getelementptr inbounds i32, ptr %arg1, i64 %i429
  %i431 = load i32, ptr %i430, align 4, !tbaa !19
  br label %bb432

bb432:                                            ; preds = %bb507, %bb424
  %i433 = phi i32 [ %i326, %bb424 ], [ %i509, %bb507 ]
  %i434 = phi i32 [ %i324, %bb424 ], [ %i476, %bb507 ]
  %i435 = phi i32 [ %i326, %bb424 ], [ %i514, %bb507 ]
  %i436 = phi i32 [ %i324, %bb424 ], [ %i513, %bb507 ]
  %i437 = icmp sgt i32 %i436, %i435
  br i1 %i437, label %bb432.bb475_crit_edge, label %bb438

bb432.bb475_crit_edge:                            ; preds = %bb432
  br label %bb475

bb438:                                            ; preds = %bb432
  %i439 = sext i32 %i435 to i64
  %i440 = sext i32 %i434 to i64
  br label %bb441

bb441:                                            ; preds = %bb453.bb441_crit_edge, %bb438
  %i442 = phi i64 [ %i440, %bb438 ], [ %i458, %bb453.bb441_crit_edge ]
  %i443 = phi i32 [ %i436, %bb438 ], [ %i459, %bb453.bb441_crit_edge ]
  %i444 = sext i32 %i443 to i64
  br label %bb445

bb445:                                            ; preds = %bb463.bb445_crit_edge, %bb441
  %i446 = phi i64 [ %i444, %bb441 ], [ %i464, %bb463.bb445_crit_edge ]
  %i447 = getelementptr inbounds i32, ptr %arg, i64 %i446
  %i448 = load i32, ptr %i447, align 4, !tbaa !19
  %i449 = zext i32 %i448 to i64
  %i450 = getelementptr inbounds i32, ptr %arg1, i64 %i449
  %i451 = load i32, ptr %i450, align 4, !tbaa !19
  %i452 = icmp eq i32 %i451, %i431
  br i1 %i452, label %bb453, label %bb461

bb453:                                            ; preds = %bb445
  %i454 = getelementptr inbounds i32, ptr %arg, i64 %i446
  %i455 = trunc i64 %i446 to i32
  %i456 = getelementptr inbounds i32, ptr %arg, i64 %i442
  %i457 = load i32, ptr %i456, align 4, !tbaa !19
  store i32 %i457, ptr %i454, align 4, !tbaa !19
  store i32 %i448, ptr %i456, align 4, !tbaa !19
  %i458 = add i64 %i442, 1
  %i459 = add nsw i32 %i455, 1
  %i460 = icmp sgt i32 %i435, %i455
  br i1 %i460, label %bb453.bb441_crit_edge, label %bb466

bb453.bb441_crit_edge:                            ; preds = %bb453
  br label %bb441

bb461:                                            ; preds = %bb445
  %i462 = icmp sgt i32 %i451, %i431
  br i1 %i462, label %bb468, label %bb463

bb463:                                            ; preds = %bb461
  %i464 = add nsw i64 %i446, 1
  %i465 = icmp slt i64 %i446, %i439
  br i1 %i465, label %bb463.bb445_crit_edge, label %bb471

bb463.bb445_crit_edge:                            ; preds = %bb463
  br label %bb445

bb466:                                            ; preds = %bb453
  %i467 = trunc i64 %i458 to i32
  br label %bb475

bb468:                                            ; preds = %bb461
  %i469 = trunc i64 %i442 to i32
  %i470 = trunc i64 %i446 to i32
  br label %bb475

bb471:                                            ; preds = %bb463
  %i472 = tail call i32 @llvm.smax.i32(i32 %i443, i32 %i435)
  %i473 = add i32 %i472, 1
  %i474 = trunc i64 %i442 to i32
  br label %bb475

bb475:                                            ; preds = %bb432.bb475_crit_edge, %bb471, %bb468, %bb466
  %i476 = phi i32 [ %i434, %bb432.bb475_crit_edge ], [ %i467, %bb466 ], [ %i469, %bb468 ], [ %i474, %bb471 ]
  %i477 = phi i32 [ %i436, %bb432.bb475_crit_edge ], [ %i459, %bb466 ], [ %i470, %bb468 ], [ %i473, %bb471 ]
  %i478 = icmp sgt i32 %i477, %i435
  br i1 %i478, label %bb522.loopexit, label %bb479

bb479:                                            ; preds = %bb475
  %i480 = sext i32 %i477 to i64
  %i481 = sext i32 %i433 to i64
  br label %bb482

bb482:                                            ; preds = %bb494.bb482_crit_edge, %bb479
  %i483 = phi i64 [ %i481, %bb479 ], [ %i499, %bb494.bb482_crit_edge ]
  %i484 = phi i32 [ %i435, %bb479 ], [ %i500, %bb494.bb482_crit_edge ]
  %i485 = sext i32 %i484 to i64
  br label %bb486

bb486:                                            ; preds = %bb504.bb486_crit_edge, %bb482
  %i487 = phi i64 [ %i485, %bb482 ], [ %i505, %bb504.bb486_crit_edge ]
  %i488 = getelementptr inbounds i32, ptr %arg, i64 %i487
  %i489 = load i32, ptr %i488, align 4, !tbaa !19
  %i490 = zext i32 %i489 to i64
  %i491 = getelementptr inbounds i32, ptr %arg1, i64 %i490
  %i492 = load i32, ptr %i491, align 4, !tbaa !19
  %i493 = icmp eq i32 %i492, %i431
  br i1 %i493, label %bb494, label %bb502

bb494:                                            ; preds = %bb486
  %i495 = getelementptr inbounds i32, ptr %arg, i64 %i487
  %i496 = trunc i64 %i487 to i32
  %i497 = getelementptr inbounds i32, ptr %arg, i64 %i483
  %i498 = load i32, ptr %i497, align 4, !tbaa !19
  store i32 %i498, ptr %i495, align 4, !tbaa !19
  store i32 %i489, ptr %i497, align 4, !tbaa !19
  %i499 = add i64 %i483, -1
  %i500 = add nsw i32 %i496, -1
  %i501 = icmp slt i32 %i477, %i496
  br i1 %i501, label %bb494.bb482_crit_edge, label %bb520

bb494.bb482_crit_edge:                            ; preds = %bb494
  br label %bb482

bb502:                                            ; preds = %bb486
  %i503 = icmp slt i32 %i492, %i431
  br i1 %i503, label %bb507, label %bb504

bb504:                                            ; preds = %bb502
  %i505 = add nsw i64 %i487, -1
  %i506 = icmp sgt i64 %i487, %i480
  br i1 %i506, label %bb504.bb486_crit_edge, label %bb515

bb504.bb486_crit_edge:                            ; preds = %bb504
  br label %bb486

bb507:                                            ; preds = %bb502
  %i508 = getelementptr inbounds i32, ptr %arg, i64 %i487
  %i509 = trunc i64 %i483 to i32
  %i510 = trunc i64 %i487 to i32
  %i511 = getelementptr inbounds i32, ptr %arg, i64 %i480
  %i512 = load i32, ptr %i511, align 4, !tbaa !19
  store i32 %i489, ptr %i511, align 4, !tbaa !19
  store i32 %i512, ptr %i508, align 4, !tbaa !19
  %i513 = add nsw i32 %i477, 1
  %i514 = add nsw i32 %i510, -1
  br label %bb432

bb515:                                            ; preds = %bb504
  %i516 = tail call i64 @llvm.smin.i64(i64 %i485, i64 %i480)
  %i517 = trunc i64 %i483 to i32
  %i518 = trunc i64 %i516 to i32
  %i519 = add i32 %i518, -1
  br label %bb522

bb520:                                            ; preds = %bb494
  %i521 = trunc i64 %i499 to i32
  br label %bb522

bb522.loopexit:                                   ; preds = %bb475
  br label %bb522

bb522:                                            ; preds = %bb522.loopexit, %bb520, %bb515
  %i523 = phi i32 [ %i517, %bb515 ], [ %i521, %bb520 ], [ %i433, %bb522.loopexit ]
  %i524 = phi i32 [ %i519, %bb515 ], [ %i500, %bb520 ], [ %i435, %bb522.loopexit ]
  %i525 = icmp slt i32 %i523, %i476
  br i1 %i525, label %bb522.bb526_crit_edge, label %bb529

bb522.bb526_crit_edge:                            ; preds = %bb522
  br label %bb526

bb526:                                            ; preds = %bb522.bb526_crit_edge, %bb625
  %i527 = phi i32 [ %i628, %bb625 ], [ %i415, %bb522.bb526_crit_edge ]
  %i528 = icmp sgt i32 %i527, 0
  br i1 %i528, label %bb526.bb313_crit_edge, label %bb629.loopexit1, !llvm.loop !72

bb526.bb313_crit_edge:                            ; preds = %bb526
  br label %bb313

bb529:                                            ; preds = %bb522
  %i530 = sub nsw i32 %i476, %i324
  %i531 = sub nsw i32 %i477, %i476
  %i532 = tail call i32 @llvm.smin.i32(i32 %i530, i32 %i531)
  %i533 = icmp sgt i32 %i532, 0
  br i1 %i533, label %bb534, label %bb529.bb570_crit_edge

bb529.bb570_crit_edge:                            ; preds = %bb529
  br label %bb570

bb534:                                            ; preds = %bb529
  %i535 = sub i32 %i477, %i532
  %i536 = sext i32 %i535 to i64
  %i537 = sext i32 %i324 to i64
  %i538 = and i32 %i532, 1
  %i539 = icmp eq i32 %i538, 0
  br i1 %i539, label %bb534.bb548_crit_edge, label %bb540

bb534.bb548_crit_edge:                            ; preds = %bb534
  br label %bb548

bb540:                                            ; preds = %bb534
  %i541 = getelementptr inbounds i32, ptr %arg, i64 %i537
  %i542 = load i32, ptr %i541, align 4, !tbaa !19
  %i543 = getelementptr inbounds i32, ptr %arg, i64 %i536
  %i544 = load i32, ptr %i543, align 4, !tbaa !19
  store i32 %i544, ptr %i541, align 4, !tbaa !19
  store i32 %i542, ptr %i543, align 4, !tbaa !19
  %i545 = add nsw i64 %i537, 1
  %i546 = add nsw i64 %i536, 1
  %i547 = add nsw i32 %i532, -1
  br label %bb548

bb548:                                            ; preds = %bb534.bb548_crit_edge, %bb540
  %i549 = phi i64 [ %i537, %bb534.bb548_crit_edge ], [ %i545, %bb540 ]
  %i550 = phi i64 [ %i536, %bb534.bb548_crit_edge ], [ %i546, %bb540 ]
  %i551 = phi i32 [ %i532, %bb534.bb548_crit_edge ], [ %i547, %bb540 ]
  %i552 = icmp eq i32 %i532, 1
  br i1 %i552, label %bb548.bb570_crit_edge, label %bb553.preheader

bb548.bb570_crit_edge:                            ; preds = %bb548
  br label %bb570

bb553.preheader:                                  ; preds = %bb548
  br label %bb553

bb553:                                            ; preds = %bb553.bb553_crit_edge, %bb553.preheader
  %i554 = phi i64 [ %i565, %bb553.bb553_crit_edge ], [ %i549, %bb553.preheader ]
  %i555 = phi i64 [ %i566, %bb553.bb553_crit_edge ], [ %i550, %bb553.preheader ]
  %i556 = phi i32 [ %i567, %bb553.bb553_crit_edge ], [ %i551, %bb553.preheader ]
  %i557 = getelementptr inbounds i32, ptr %arg, i64 %i554
  %i558 = load i32, ptr %i557, align 4, !tbaa !19
  %i559 = getelementptr inbounds i32, ptr %arg, i64 %i555
  %i560 = load i32, ptr %i559, align 4, !tbaa !19
  store i32 %i560, ptr %i557, align 4, !tbaa !19
  store i32 %i558, ptr %i559, align 4, !tbaa !19
  %i561 = getelementptr i32, ptr %i172, i64 %i554
  %i562 = load i32, ptr %i561, align 4, !tbaa !19
  %i563 = getelementptr i32, ptr %i173, i64 %i555
  %i564 = load i32, ptr %i563, align 4, !tbaa !19
  store i32 %i564, ptr %i561, align 4, !tbaa !19
  store i32 %i562, ptr %i563, align 4, !tbaa !19
  %i565 = add nsw i64 %i554, 2
  %i566 = add nsw i64 %i555, 2
  %i567 = add nsw i32 %i556, -2
  %i568 = add i32 %i556, -3
  %i569 = icmp ult i32 %i568, -2
  br i1 %i569, label %bb553.bb553_crit_edge, label %bb570.loopexit, !llvm.loop !73

bb553.bb553_crit_edge:                            ; preds = %bb553
  br label %bb553

bb570.loopexit:                                   ; preds = %bb553
  br label %bb570

bb570:                                            ; preds = %bb548.bb570_crit_edge, %bb529.bb570_crit_edge, %bb570.loopexit
  %i571 = sub nsw i32 %i326, %i523
  %i572 = sub nsw i32 %i523, %i524
  %i573 = tail call i32 @llvm.smin.i32(i32 %i571, i32 %i572)
  %i574 = icmp sgt i32 %i573, 0
  br i1 %i574, label %bb575, label %bb570.bb611_crit_edge

bb570.bb611_crit_edge:                            ; preds = %bb570
  br label %bb611

bb575:                                            ; preds = %bb570
  %i576 = sub i32 %i326, %i573
  %i577 = sext i32 %i576 to i64
  %i578 = sext i32 %i477 to i64
  %i579 = and i32 %i573, 1
  %i580 = icmp eq i32 %i579, 0
  br i1 %i580, label %bb575.bb589_crit_edge, label %bb581

bb575.bb589_crit_edge:                            ; preds = %bb575
  br label %bb589

bb581:                                            ; preds = %bb575
  %i582 = add nsw i64 %i577, 1
  %i583 = getelementptr inbounds i32, ptr %arg, i64 %i578
  %i584 = load i32, ptr %i583, align 4, !tbaa !19
  %i585 = getelementptr inbounds i32, ptr %arg, i64 %i582
  %i586 = load i32, ptr %i585, align 4, !tbaa !19
  store i32 %i586, ptr %i583, align 4, !tbaa !19
  store i32 %i584, ptr %i585, align 4, !tbaa !19
  %i587 = add nsw i64 %i578, 1
  %i588 = add nsw i32 %i573, -1
  br label %bb589

bb589:                                            ; preds = %bb575.bb589_crit_edge, %bb581
  %i590 = phi i64 [ %i578, %bb575.bb589_crit_edge ], [ %i587, %bb581 ]
  %i591 = phi i64 [ %i577, %bb575.bb589_crit_edge ], [ %i582, %bb581 ]
  %i592 = phi i32 [ %i573, %bb575.bb589_crit_edge ], [ %i588, %bb581 ]
  %i593 = icmp eq i32 %i573, 1
  br i1 %i593, label %bb589.bb611_crit_edge, label %bb594.preheader

bb589.bb611_crit_edge:                            ; preds = %bb589
  br label %bb611

bb594.preheader:                                  ; preds = %bb589
  br label %bb594

bb594:                                            ; preds = %bb594.bb594_crit_edge, %bb594.preheader
  %i595 = phi i64 [ %i607, %bb594.bb594_crit_edge ], [ %i590, %bb594.preheader ]
  %i596 = phi i64 [ %i602, %bb594.bb594_crit_edge ], [ %i591, %bb594.preheader ]
  %i597 = phi i32 [ %i608, %bb594.bb594_crit_edge ], [ %i592, %bb594.preheader ]
  %i598 = getelementptr inbounds i32, ptr %arg, i64 %i595
  %i599 = load i32, ptr %i598, align 4, !tbaa !19
  %i600 = getelementptr i32, ptr %i174, i64 %i596
  %i601 = load i32, ptr %i600, align 4, !tbaa !19
  store i32 %i601, ptr %i598, align 4, !tbaa !19
  store i32 %i599, ptr %i600, align 4, !tbaa !19
  %i602 = add nsw i64 %i596, 2
  %i603 = getelementptr i32, ptr %i175, i64 %i595
  %i604 = load i32, ptr %i603, align 4, !tbaa !19
  %i605 = getelementptr inbounds i32, ptr %arg, i64 %i602
  %i606 = load i32, ptr %i605, align 4, !tbaa !19
  store i32 %i606, ptr %i603, align 4, !tbaa !19
  store i32 %i604, ptr %i605, align 4, !tbaa !19
  %i607 = add nsw i64 %i595, 2
  %i608 = add nsw i32 %i597, -2
  %i609 = add i32 %i597, -3
  %i610 = icmp ult i32 %i609, -2
  br i1 %i610, label %bb594.bb594_crit_edge, label %bb611.loopexit, !llvm.loop !74

bb594.bb594_crit_edge:                            ; preds = %bb594
  br label %bb594

bb611.loopexit:                                   ; preds = %bb594
  br label %bb611

bb611:                                            ; preds = %bb589.bb611_crit_edge, %bb570.bb611_crit_edge, %bb611.loopexit
  %i612 = xor i32 %i476, -1
  %i613 = add i32 %i324, %i612
  %i614 = add i32 %i613, %i477
  %i615 = sub nsw i32 %i326, %i572
  %i616 = add nsw i32 %i615, 1
  %i617 = sub nsw i32 %i614, %i324
  %i618 = sub nsw i32 %i326, %i616
  %i619 = icmp sgt i32 %i617, %i618
  %i620 = and i64 %i318, 4294967295
  %i621 = getelementptr inbounds [100 x i32], ptr %i, i64 0, i64 %i620
  %i622 = getelementptr inbounds [100 x i32], ptr %i5, i64 0, i64 %i620
  br i1 %i619, label %bb623, label %bb624

bb623:                                            ; preds = %bb611
  store i32 %i614, ptr %i413, align 4, !tbaa !19
  br label %bb625

bb624:                                            ; preds = %bb611
  store i32 %i616, ptr %i412, align 4, !tbaa !19
  br label %bb625

bb625:                                            ; preds = %bb624, %bb623
  %i626 = phi i32 [ %i324, %bb624 ], [ %i616, %bb623 ]
  %i627 = phi i32 [ %i614, %bb624 ], [ %i326, %bb623 ]
  store i32 %i626, ptr %i621, align 4, !tbaa !19
  store i32 %i627, ptr %i622, align 4, !tbaa !19
  %i628 = add nuw nsw i32 %i414, 1
  br label %bb526

bb629.loopexit:                                   ; preds = %bb409
  br label %bb629

bb629.loopexit1:                                  ; preds = %bb526
  br label %bb629

bb629:                                            ; preds = %bb629.loopexit1, %bb629.loopexit
  call void @llvm.lifetime.end.p0(i64 400, ptr nonnull %i5) #31
  call void @llvm.lifetime.end.p0(i64 400, ptr nonnull %i) #31
  %i630 = icmp sgt i32 %i267, %i303
  br i1 %i630, label %bb629.bb631_crit_edge, label %bb632

bb629.bb631_crit_edge:                            ; preds = %bb629
  br label %bb631

bb631.loopexit:                                   ; preds = %bb652
  br label %bb631

bb631:                                            ; preds = %bb629.bb631_crit_edge, %bb631.loopexit
  br label %bb228

bb632:                                            ; preds = %bb629
  %i633 = sext i32 %i308 to i64
  br label %bb634

bb634:                                            ; preds = %bb652.bb634_crit_edge, %bb632
  %i635 = phi i64 [ %i633, %bb632 ], [ %i654, %bb652.bb634_crit_edge ]
  %i636 = phi i32 [ -1, %bb632 ], [ %i653, %bb652.bb634_crit_edge ]
  %i637 = getelementptr inbounds i32, ptr %arg, i64 %i635
  %i638 = load i32, ptr %i637, align 4, !tbaa !19
  %i639 = zext i32 %i638 to i64
  %i640 = getelementptr inbounds i32, ptr %arg1, i64 %i639
  %i641 = load i32, ptr %i640, align 4, !tbaa !19
  %i642 = icmp eq i32 %i636, %i641
  br i1 %i642, label %bb634.bb652_crit_edge, label %bb643

bb634.bb652_crit_edge:                            ; preds = %bb634
  br label %bb652

bb643:                                            ; preds = %bb634
  %i644 = trunc i64 %i635 to i32
  %i645 = and i32 %i644, 31
  %i646 = shl nuw i32 1, %i645
  %i647 = ashr i32 %i644, 5
  %i648 = sext i32 %i647 to i64
  %i649 = getelementptr inbounds i32, ptr %arg2, i64 %i648
  %i650 = load i32, ptr %i649, align 4, !tbaa !19
  %i651 = or i32 %i650, %i646
  store i32 %i651, ptr %i649, align 4, !tbaa !19
  br label %bb652

bb652:                                            ; preds = %bb634.bb652_crit_edge, %bb643
  %i653 = phi i32 [ %i641, %bb643 ], [ %i636, %bb634.bb652_crit_edge ]
  %i654 = add nsw i64 %i635, 1
  %i655 = trunc i64 %i654 to i32
  %i656 = icmp eq i32 %i303, %i655
  br i1 %i656, label %bb631.loopexit, label %bb652.bb634_crit_edge, !llvm.loop !75

bb652.bb634_crit_edge:                            ; preds = %bb652
  br label %bb634

bb657split:                                       ; preds = %bb302
  br label %bb657

bb657:                                            ; preds = %bb657split, %bb266.bb657_crit_edge
  br i1 %i8, label %bb658, label %bb667

bb658:                                            ; preds = %bb657
  %i659 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i660 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i659, ptr noundef nonnull @.str.4, i32 noundef %i230) #32
  %i661 = shl nsw i32 %i199, 1
  %i662 = icmp sgt i32 %i661, %arg3
  %i663 = icmp eq i32 %i230, 0
  %i664 = select i1 %i662, i1 true, i1 %i663
  br i1 %i664, label %bb672, label %bb658.bb665_crit_edge

bb658.bb665_crit_edge:                            ; preds = %bb658
  br label %bb665

bb665:                                            ; preds = %bb667.bb665_crit_edge, %bb658.bb665_crit_edge
  %i666 = phi i32 [ %i661, %bb658.bb665_crit_edge ], [ %i668, %bb667.bb665_crit_edge ]
  br label %bb198

bb667:                                            ; preds = %bb657
  %i668 = shl nsw i32 %i199, 1
  %i669 = icmp sgt i32 %i668, %arg3
  %i670 = icmp eq i32 %i230, 0
  %i671 = select i1 %i669, i1 true, i1 %i670
  br i1 %i671, label %bb675.loopexit, label %bb667.bb665_crit_edge

bb667.bb665_crit_edge:                            ; preds = %bb667
  br label %bb665

bb672:                                            ; preds = %bb658
  %i673 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i674 = tail call i64 @fwrite(ptr nonnull @.str.5, i64 33, i64 1, ptr %i673) #32
  br label %bb675

bb675.loopexit:                                   ; preds = %bb667
  br label %bb675

bb675:                                            ; preds = %bb675.loopexit, %bb672
  br i1 %i13, label %bb676, label %bb675.bb703_crit_edge

bb675.bb703_crit_edge:                            ; preds = %bb675
  br label %bb703

bb676:                                            ; preds = %bb675
  %i677 = zext nneg i32 %arg3 to i64
  br label %bb678

bb678:                                            ; preds = %bb689.bb678_crit_edge, %bb676
  %i679 = phi i64 [ 0, %bb676 ], [ %i697, %bb689.bb678_crit_edge ]
  %i680 = phi i64 [ 0, %bb676 ], [ %i684, %bb689.bb678_crit_edge ]
  %i681 = shl i64 %i680, 32
  %i682 = ashr exact i64 %i681, 32
  br label %bb683

bb683:                                            ; preds = %bb683.bb683_crit_edge, %bb678
  %i684 = phi i64 [ %i688, %bb683.bb683_crit_edge ], [ %i682, %bb678 ]
  %i685 = getelementptr inbounds [256 x i32], ptr %i7, i64 0, i64 %i684
  %i686 = load i32, ptr %i685, align 4, !tbaa !19
  %i687 = icmp eq i32 %i686, 0
  %i688 = add i64 %i684, 1
  br i1 %i687, label %bb683.bb683_crit_edge, label %bb689, !llvm.loop !76

bb683.bb683_crit_edge:                            ; preds = %bb683
  br label %bb683

bb689:                                            ; preds = %bb683
  %i690 = getelementptr inbounds [256 x i32], ptr %i7, i64 0, i64 %i684
  %i691 = add nsw i32 %i686, -1
  store i32 %i691, ptr %i690, align 4, !tbaa !19
  %i692 = trunc i64 %i684 to i8
  %i693 = getelementptr inbounds i32, ptr %arg, i64 %i679
  %i694 = load i32, ptr %i693, align 4, !tbaa !19
  %i695 = zext i32 %i694 to i64
  %i696 = getelementptr inbounds i8, ptr %arg1, i64 %i695
  store i8 %i692, ptr %i696, align 1, !tbaa !21
  %i697 = add nuw nsw i64 %i679, 1
  %i698 = icmp eq i64 %i697, %i677
  br i1 %i698, label %bb699, label %bb689.bb678_crit_edge, !llvm.loop !77

bb689.bb678_crit_edge:                            ; preds = %bb689
  br label %bb678

bb699:                                            ; preds = %bb689
  %i700 = trunc i64 %i684 to i32
  %i701 = icmp slt i32 %i700, 256
  br i1 %i701, label %bb699.bb703_crit_edge, label %bb702

bb699.bb703_crit_edge:                            ; preds = %bb699
  br label %bb703

bb702:                                            ; preds = %bb699
  tail call void @BZ2_bz__AssertH__fail(i32 noundef 1005) #31
  br label %bb703

bb703:                                            ; preds = %bb699.bb703_crit_edge, %bb675.bb703_crit_edge, %bb702
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %i7) #31
  call void @llvm.lifetime.end.p0(i64 1028, ptr nonnull %i6) #31
  ret void
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: nounwind uwtable
define dso_local i32 @main1(i32 noundef %arg, ptr nocapture noundef readonly %arg1) local_unnamed_addr #0 {
bb:
  store ptr null, ptr @outputHandleJustInCase, align 8, !tbaa !20
  store i8 0, ptr @smallMode, align 1, !tbaa !21
  store i8 0, ptr @keepInputFiles, align 1, !tbaa !21
  store i8 0, ptr @forceOverwrite, align 1, !tbaa !21
  store i8 1, ptr @noisy, align 1, !tbaa !21
  store i32 0, ptr @verbosity, align 4, !tbaa !19
  store i32 9, ptr @blockSize100k, align 4, !tbaa !19
  store i8 0, ptr @testFailsExist, align 1, !tbaa !21
  store i8 0, ptr @unzFailsExist, align 1, !tbaa !21
  store i32 0, ptr @numFileNames, align 4, !tbaa !19
  store i32 0, ptr @numFilesProcessed, align 4, !tbaa !19
  store i32 30, ptr @workFactor, align 4, !tbaa !19
  store i8 0, ptr @deleteOutputOnInterrupt, align 1, !tbaa !21
  store i32 0, ptr @exitValue, align 4, !tbaa !19
  %i = tail call ptr @signal(i32 noundef 11, ptr noundef nonnull @mySIGSEGVorSIGBUScatcher) #31
  %i2 = tail call ptr @signal(i32 noundef 7, ptr noundef nonnull @mySIGSEGVorSIGBUScatcher) #31
  %i3 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @inName, ptr noundef nonnull dereferenceable(7) @.str.6.15, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @inName, i64 0, i64 1024), align 16, !tbaa !21
  %i4 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @outName, ptr noundef nonnull dereferenceable(7) @.str.6.15, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @outName, i64 0, i64 1024), align 16, !tbaa !21
  %i5 = load ptr, ptr %arg1, align 8, !tbaa !20
  %i6 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %i5) #33
  %i7 = icmp ugt i64 %i6, 1024
  br i1 %i7, label %bb8, label %bb16

bb8:                                              ; preds = %bb
  %i9 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i10 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i9, ptr noundef nonnull @.str.47, ptr noundef %i5, i32 noundef 1024) #32
  %i11 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i12 = icmp slt i32 %i11, 1
  br i1 %i12, label %bb13, label %bb8.bb14_crit_edge

bb8.bb14_crit_edge:                               ; preds = %bb8
  br label %bb14

bb13:                                             ; preds = %bb8
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb14

bb14:                                             ; preds = %bb8.bb14_crit_edge, %bb13
  %i15 = phi i32 [ %i11, %bb8.bb14_crit_edge ], [ 1, %bb13 ]
  tail call void @exit(i32 noundef %i15) #34
  unreachable

bb16:                                             ; preds = %bb
  %i17 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @progNameReally, ptr noundef nonnull dereferenceable(1) %i5, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @progNameReally, i64 0, i64 1024), align 16, !tbaa !21
  store ptr @progNameReally, ptr @progName, align 8, !tbaa !20
  br label %bb18

bb18:                                             ; preds = %bb23, %bb16
  %i19 = phi ptr [ @progNameReally, %bb16 ], [ %i24, %bb23 ]
  %i20 = load i8, ptr %i19, align 1, !tbaa !21
  switch i8 %i20, label %bb18.bb23_crit_edge [
    i8 0, label %bb25
    i8 47, label %bb21
  ]

bb18.bb23_crit_edge:                              ; preds = %bb18
  br label %bb23

bb21:                                             ; preds = %bb18
  %i22 = getelementptr inbounds i8, ptr %i19, i64 1
  store ptr %i22, ptr @progName, align 8, !tbaa !20
  br label %bb23

bb23:                                             ; preds = %bb18.bb23_crit_edge, %bb21
  %i24 = getelementptr inbounds i8, ptr %i19, i64 1
  br label %bb18, !llvm.loop !78

bb25:                                             ; preds = %bb18
  %i26 = tail call ptr @getenv(ptr noundef nonnull @.str.7.16) #31
  %i27 = icmp eq ptr %i26, null
  br i1 %i27, label %bb25.bb120_crit_edge, label %bb28

bb25.bb120_crit_edge:                             ; preds = %bb25
  br label %bb120

bb28:                                             ; preds = %bb25
  %i29 = load i8, ptr %i26, align 1, !tbaa !21
  %i30 = icmp eq i8 %i29, 0
  br i1 %i30, label %bb28.bb120_crit_edge, label %bb31

bb28.bb120_crit_edge:                             ; preds = %bb28
  br label %bb120

bb31:                                             ; preds = %bb28
  %i32 = tail call ptr @__ctype_b_loc() #35
  br label %bb33

bb33:                                             ; preds = %bb113.bb33_crit_edge, %bb31
  %i34 = phi ptr [ null, %bb31 ], [ %i115, %bb113.bb33_crit_edge ]
  %i35 = phi ptr [ %i26, %bb31 ], [ %i118, %bb113.bb33_crit_edge ]
  %i36 = load ptr, ptr %i32, align 8, !tbaa !20
  br label %bb37

bb37:                                             ; preds = %bb37.bb37_crit_edge, %bb33
  %i38 = phi ptr [ %i45, %bb37.bb37_crit_edge ], [ %i35, %bb33 ]
  %i39 = load i8, ptr %i38, align 1, !tbaa !21
  %i40 = sext i8 %i39 to i64
  %i41 = getelementptr inbounds i16, ptr %i36, i64 %i40
  %i42 = load i16, ptr %i41, align 2, !tbaa !22
  %i43 = and i16 %i42, 8192
  %i44 = icmp eq i16 %i43, 0
  %i45 = getelementptr inbounds i8, ptr %i38, i64 1
  br i1 %i44, label %bb46, label %bb37.bb37_crit_edge, !llvm.loop !79

bb37.bb37_crit_edge:                              ; preds = %bb37
  br label %bb37

bb46:                                             ; preds = %bb37
  %i47 = icmp eq i8 %i39, 0
  br i1 %i47, label %bb46.bb120.loopexit_crit_edge, label %bb48.preheader

bb46.bb120.loopexit_crit_edge:                    ; preds = %bb46
  br label %bb120.loopexit

bb48.preheader:                                   ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb57.bb48_crit_edge, %bb48.preheader
  %i49 = phi i64 [ %i58, %bb57.bb48_crit_edge ], [ 0, %bb48.preheader ]
  %i50 = phi i8 [ %i61, %bb57.bb48_crit_edge ], [ %i39, %bb48.preheader ]
  %i51 = phi i32 [ %i59, %bb57.bb48_crit_edge ], [ 0, %bb48.preheader ]
  %i52 = sext i8 %i50 to i64
  %i53 = getelementptr inbounds i16, ptr %i36, i64 %i52
  %i54 = load i16, ptr %i53, align 2, !tbaa !22
  %i55 = and i16 %i54, 8192
  %i56 = icmp eq i16 %i55, 0
  br i1 %i56, label %bb57, label %bb63

bb57:                                             ; preds = %bb48
  %i58 = add nuw i64 %i49, 1
  %i59 = add nuw nsw i32 %i51, 1
  %i60 = getelementptr inbounds i8, ptr %i38, i64 %i58
  %i61 = load i8, ptr %i60, align 1, !tbaa !21
  %i62 = icmp eq i8 %i61, 0
  br i1 %i62, label %bb66.loopexit, label %bb57.bb48_crit_edge, !llvm.loop !80

bb57.bb48_crit_edge:                              ; preds = %bb57
  br label %bb48

bb63:                                             ; preds = %bb48
  %i64 = trunc i64 %i49 to i32
  %i65 = icmp eq i32 %i64, 0
  br i1 %i65, label %bb63.bb113_crit_edge, label %bb63.bb66_crit_edge

bb63.bb66_crit_edge:                              ; preds = %bb63
  br label %bb66

bb63.bb113_crit_edge:                             ; preds = %bb63
  br label %bb113

bb66.loopexit:                                    ; preds = %bb57
  br label %bb66

bb66:                                             ; preds = %bb63.bb66_crit_edge, %bb66.loopexit
  %i67 = phi i32 [ %i64, %bb63.bb66_crit_edge ], [ %i59, %bb66.loopexit ]
  %i68 = tail call i32 @llvm.umin.i32(i32 %i67, i32 1024)
  %i69 = zext nneg i32 %i68 to i64
  %i70 = and i64 %i69, 3
  %i71 = icmp ult i32 %i67, 4
  br i1 %i71, label %bb66.bb95_crit_edge, label %bb72

bb66.bb95_crit_edge:                              ; preds = %bb66
  br label %bb95

bb72:                                             ; preds = %bb66
  %i73 = and i64 %i69, 2044
  br label %bb74

bb74:                                             ; preds = %bb74.bb74_crit_edge, %bb72
  %i75 = phi i64 [ 0, %bb72 ], [ %i92, %bb74.bb74_crit_edge ]
  %i76 = phi i64 [ 0, %bb72 ], [ %i93, %bb74.bb74_crit_edge ]
  %i77 = getelementptr inbounds i8, ptr %i38, i64 %i75
  %i78 = load i8, ptr %i77, align 1, !tbaa !21
  %i79 = getelementptr inbounds [1034 x i8], ptr @tmpName, i64 0, i64 %i75
  store i8 %i78, ptr %i79, align 4, !tbaa !21
  %i80 = or disjoint i64 %i75, 1
  %i81 = getelementptr inbounds i8, ptr %i38, i64 %i80
  %i82 = load i8, ptr %i81, align 1, !tbaa !21
  %i83 = getelementptr inbounds [1034 x i8], ptr @tmpName, i64 0, i64 %i80
  store i8 %i82, ptr %i83, align 1, !tbaa !21
  %i84 = or disjoint i64 %i75, 2
  %i85 = getelementptr inbounds i8, ptr %i38, i64 %i84
  %i86 = load i8, ptr %i85, align 1, !tbaa !21
  %i87 = getelementptr inbounds [1034 x i8], ptr @tmpName, i64 0, i64 %i84
  store i8 %i86, ptr %i87, align 2, !tbaa !21
  %i88 = or disjoint i64 %i75, 3
  %i89 = getelementptr inbounds i8, ptr %i38, i64 %i88
  %i90 = load i8, ptr %i89, align 1, !tbaa !21
  %i91 = getelementptr inbounds [1034 x i8], ptr @tmpName, i64 0, i64 %i88
  store i8 %i90, ptr %i91, align 1, !tbaa !21
  %i92 = add nuw nsw i64 %i75, 4
  %i93 = add i64 %i76, 4
  %i94 = icmp eq i64 %i93, %i73
  br i1 %i94, label %bb95.loopexit, label %bb74.bb74_crit_edge, !llvm.loop !81

bb74.bb74_crit_edge:                              ; preds = %bb74
  br label %bb74

bb95.loopexit:                                    ; preds = %bb74
  br label %bb95

bb95:                                             ; preds = %bb66.bb95_crit_edge, %bb95.loopexit
  %i96 = phi i64 [ 0, %bb66.bb95_crit_edge ], [ %i92, %bb95.loopexit ]
  %i97 = icmp eq i64 %i70, 0
  br i1 %i97, label %bb95.bb107_crit_edge, label %bb98.preheader

bb95.bb107_crit_edge:                             ; preds = %bb95
  br label %bb107

bb98.preheader:                                   ; preds = %bb95
  br label %bb98

bb98:                                             ; preds = %bb98.bb98_crit_edge, %bb98.preheader
  %i99 = phi i64 [ %i104, %bb98.bb98_crit_edge ], [ %i96, %bb98.preheader ]
  %i100 = phi i64 [ %i105, %bb98.bb98_crit_edge ], [ 0, %bb98.preheader ]
  %i101 = getelementptr inbounds i8, ptr %i38, i64 %i99
  %i102 = load i8, ptr %i101, align 1, !tbaa !21
  %i103 = getelementptr inbounds [1034 x i8], ptr @tmpName, i64 0, i64 %i99
  store i8 %i102, ptr %i103, align 1, !tbaa !21
  %i104 = add nuw nsw i64 %i99, 1
  %i105 = add i64 %i100, 1
  %i106 = icmp eq i64 %i105, %i70
  br i1 %i106, label %bb107.loopexit, label %bb98.bb98_crit_edge, !llvm.loop !82

bb98.bb98_crit_edge:                              ; preds = %bb98
  br label %bb98

bb107.loopexit:                                   ; preds = %bb98
  br label %bb107

bb107:                                            ; preds = %bb95.bb107_crit_edge, %bb107.loopexit
  %i108 = getelementptr inbounds [1034 x i8], ptr @tmpName, i64 0, i64 %i69
  store i8 0, ptr %i108, align 1, !tbaa !21
  %i109 = tail call fastcc ptr @snocString(ptr noundef %i34, ptr noundef nonnull @tmpName)
  %i110 = zext i32 %i67 to i64
  %i111 = getelementptr inbounds i8, ptr %i38, i64 %i110
  %i112 = load i8, ptr %i111, align 1, !tbaa !21
  br label %bb113

bb113:                                            ; preds = %bb63.bb113_crit_edge, %bb107
  %i114 = phi i8 [ %i112, %bb107 ], [ 1, %bb63.bb113_crit_edge ]
  %i115 = phi ptr [ %i109, %bb107 ], [ %i34, %bb63.bb113_crit_edge ]
  %i116 = phi i32 [ %i67, %bb107 ], [ 0, %bb63.bb113_crit_edge ]
  %i117 = zext nneg i32 %i116 to i64
  %i118 = getelementptr inbounds i8, ptr %i38, i64 %i117
  %i119 = icmp eq i8 %i114, 0
  br i1 %i119, label %bb120.loopexitsplit, label %bb113.bb33_crit_edge

bb113.bb33_crit_edge:                             ; preds = %bb113
  br label %bb33

bb120.loopexitsplit:                              ; preds = %bb113
  br label %bb120.loopexit

bb120.loopexit:                                   ; preds = %bb120.loopexitsplit, %bb46.bb120.loopexit_crit_edge
  %i121.ph = phi ptr [ %i34, %bb46.bb120.loopexit_crit_edge ], [ %i115, %bb120.loopexitsplit ]
  br label %bb120

bb120:                                            ; preds = %bb28.bb120_crit_edge, %bb25.bb120_crit_edge, %bb120.loopexit
  %i121 = phi ptr [ null, %bb25.bb120_crit_edge ], [ null, %bb28.bb120_crit_edge ], [ %i121.ph, %bb120.loopexit ]
  %i122 = tail call ptr @getenv(ptr noundef nonnull @.str.8.17) #31
  %i123 = icmp eq ptr %i122, null
  br i1 %i123, label %bb120.bb216_crit_edge, label %bb124

bb120.bb216_crit_edge:                            ; preds = %bb120
  br label %bb216

bb124:                                            ; preds = %bb120
  %i125 = load i8, ptr %i122, align 1, !tbaa !21
  %i126 = icmp eq i8 %i125, 0
  br i1 %i126, label %bb124.bb216_crit_edge, label %bb127

bb124.bb216_crit_edge:                            ; preds = %bb124
  br label %bb216

bb127:                                            ; preds = %bb124
  %i128 = tail call ptr @__ctype_b_loc() #35
  br label %bb129

bb129:                                            ; preds = %bb209.bb129_crit_edge, %bb127
  %i130 = phi ptr [ %i121, %bb127 ], [ %i211, %bb209.bb129_crit_edge ]
  %i131 = phi ptr [ %i122, %bb127 ], [ %i214, %bb209.bb129_crit_edge ]
  %i132 = load ptr, ptr %i128, align 8, !tbaa !20
  br label %bb133

bb133:                                            ; preds = %bb133.bb133_crit_edge, %bb129
  %i134 = phi ptr [ %i141, %bb133.bb133_crit_edge ], [ %i131, %bb129 ]
  %i135 = load i8, ptr %i134, align 1, !tbaa !21
  %i136 = sext i8 %i135 to i64
  %i137 = getelementptr inbounds i16, ptr %i132, i64 %i136
  %i138 = load i16, ptr %i137, align 2, !tbaa !22
  %i139 = and i16 %i138, 8192
  %i140 = icmp eq i16 %i139, 0
  %i141 = getelementptr inbounds i8, ptr %i134, i64 1
  br i1 %i140, label %bb142, label %bb133.bb133_crit_edge, !llvm.loop !79

bb133.bb133_crit_edge:                            ; preds = %bb133
  br label %bb133

bb142:                                            ; preds = %bb133
  %i143 = icmp eq i8 %i135, 0
  br i1 %i143, label %bb142.bb216.loopexit_crit_edge, label %bb144.preheader

bb142.bb216.loopexit_crit_edge:                   ; preds = %bb142
  br label %bb216.loopexit

bb144.preheader:                                  ; preds = %bb142
  br label %bb144

bb144:                                            ; preds = %bb153.bb144_crit_edge, %bb144.preheader
  %i145 = phi i64 [ %i154, %bb153.bb144_crit_edge ], [ 0, %bb144.preheader ]
  %i146 = phi i8 [ %i157, %bb153.bb144_crit_edge ], [ %i135, %bb144.preheader ]
  %i147 = phi i32 [ %i155, %bb153.bb144_crit_edge ], [ 0, %bb144.preheader ]
  %i148 = sext i8 %i146 to i64
  %i149 = getelementptr inbounds i16, ptr %i132, i64 %i148
  %i150 = load i16, ptr %i149, align 2, !tbaa !22
  %i151 = and i16 %i150, 8192
  %i152 = icmp eq i16 %i151, 0
  br i1 %i152, label %bb153, label %bb159

bb153:                                            ; preds = %bb144
  %i154 = add nuw i64 %i145, 1
  %i155 = add nuw nsw i32 %i147, 1
  %i156 = getelementptr inbounds i8, ptr %i134, i64 %i154
  %i157 = load i8, ptr %i156, align 1, !tbaa !21
  %i158 = icmp eq i8 %i157, 0
  br i1 %i158, label %bb162.loopexit, label %bb153.bb144_crit_edge, !llvm.loop !80

bb153.bb144_crit_edge:                            ; preds = %bb153
  br label %bb144

bb159:                                            ; preds = %bb144
  %i160 = trunc i64 %i145 to i32
  %i161 = icmp eq i32 %i160, 0
  br i1 %i161, label %bb159.bb209_crit_edge, label %bb159.bb162_crit_edge

bb159.bb162_crit_edge:                            ; preds = %bb159
  br label %bb162

bb159.bb209_crit_edge:                            ; preds = %bb159
  br label %bb209

bb162.loopexit:                                   ; preds = %bb153
  br label %bb162

bb162:                                            ; preds = %bb159.bb162_crit_edge, %bb162.loopexit
  %i163 = phi i32 [ %i160, %bb159.bb162_crit_edge ], [ %i155, %bb162.loopexit ]
  %i164 = tail call i32 @llvm.umin.i32(i32 %i163, i32 1024)
  %i165 = zext nneg i32 %i164 to i64
  %i166 = and i64 %i165, 3
  %i167 = icmp ult i32 %i163, 4
  br i1 %i167, label %bb162.bb191_crit_edge, label %bb168

bb162.bb191_crit_edge:                            ; preds = %bb162
  br label %bb191

bb168:                                            ; preds = %bb162
  %i169 = and i64 %i165, 2044
  br label %bb170

bb170:                                            ; preds = %bb170.bb170_crit_edge, %bb168
  %i171 = phi i64 [ 0, %bb168 ], [ %i188, %bb170.bb170_crit_edge ]
  %i172 = phi i64 [ 0, %bb168 ], [ %i189, %bb170.bb170_crit_edge ]
  %i173 = getelementptr inbounds i8, ptr %i134, i64 %i171
  %i174 = load i8, ptr %i173, align 1, !tbaa !21
  %i175 = getelementptr inbounds [1034 x i8], ptr @tmpName, i64 0, i64 %i171
  store i8 %i174, ptr %i175, align 4, !tbaa !21
  %i176 = or disjoint i64 %i171, 1
  %i177 = getelementptr inbounds i8, ptr %i134, i64 %i176
  %i178 = load i8, ptr %i177, align 1, !tbaa !21
  %i179 = getelementptr inbounds [1034 x i8], ptr @tmpName, i64 0, i64 %i176
  store i8 %i178, ptr %i179, align 1, !tbaa !21
  %i180 = or disjoint i64 %i171, 2
  %i181 = getelementptr inbounds i8, ptr %i134, i64 %i180
  %i182 = load i8, ptr %i181, align 1, !tbaa !21
  %i183 = getelementptr inbounds [1034 x i8], ptr @tmpName, i64 0, i64 %i180
  store i8 %i182, ptr %i183, align 2, !tbaa !21
  %i184 = or disjoint i64 %i171, 3
  %i185 = getelementptr inbounds i8, ptr %i134, i64 %i184
  %i186 = load i8, ptr %i185, align 1, !tbaa !21
  %i187 = getelementptr inbounds [1034 x i8], ptr @tmpName, i64 0, i64 %i184
  store i8 %i186, ptr %i187, align 1, !tbaa !21
  %i188 = add nuw nsw i64 %i171, 4
  %i189 = add i64 %i172, 4
  %i190 = icmp eq i64 %i189, %i169
  br i1 %i190, label %bb191.loopexit, label %bb170.bb170_crit_edge, !llvm.loop !81

bb170.bb170_crit_edge:                            ; preds = %bb170
  br label %bb170

bb191.loopexit:                                   ; preds = %bb170
  br label %bb191

bb191:                                            ; preds = %bb162.bb191_crit_edge, %bb191.loopexit
  %i192 = phi i64 [ 0, %bb162.bb191_crit_edge ], [ %i188, %bb191.loopexit ]
  %i193 = icmp eq i64 %i166, 0
  br i1 %i193, label %bb191.bb203_crit_edge, label %bb194.preheader

bb191.bb203_crit_edge:                            ; preds = %bb191
  br label %bb203

bb194.preheader:                                  ; preds = %bb191
  br label %bb194

bb194:                                            ; preds = %bb194.bb194_crit_edge, %bb194.preheader
  %i195 = phi i64 [ %i200, %bb194.bb194_crit_edge ], [ %i192, %bb194.preheader ]
  %i196 = phi i64 [ %i201, %bb194.bb194_crit_edge ], [ 0, %bb194.preheader ]
  %i197 = getelementptr inbounds i8, ptr %i134, i64 %i195
  %i198 = load i8, ptr %i197, align 1, !tbaa !21
  %i199 = getelementptr inbounds [1034 x i8], ptr @tmpName, i64 0, i64 %i195
  store i8 %i198, ptr %i199, align 1, !tbaa !21
  %i200 = add nuw nsw i64 %i195, 1
  %i201 = add i64 %i196, 1
  %i202 = icmp eq i64 %i201, %i166
  br i1 %i202, label %bb203.loopexit, label %bb194.bb194_crit_edge, !llvm.loop !83

bb194.bb194_crit_edge:                            ; preds = %bb194
  br label %bb194

bb203.loopexit:                                   ; preds = %bb194
  br label %bb203

bb203:                                            ; preds = %bb191.bb203_crit_edge, %bb203.loopexit
  %i204 = getelementptr inbounds [1034 x i8], ptr @tmpName, i64 0, i64 %i165
  store i8 0, ptr %i204, align 1, !tbaa !21
  %i205 = tail call fastcc ptr @snocString(ptr noundef %i130, ptr noundef nonnull @tmpName)
  %i206 = zext i32 %i163 to i64
  %i207 = getelementptr inbounds i8, ptr %i134, i64 %i206
  %i208 = load i8, ptr %i207, align 1, !tbaa !21
  br label %bb209

bb209:                                            ; preds = %bb159.bb209_crit_edge, %bb203
  %i210 = phi i8 [ %i208, %bb203 ], [ 1, %bb159.bb209_crit_edge ]
  %i211 = phi ptr [ %i205, %bb203 ], [ %i130, %bb159.bb209_crit_edge ]
  %i212 = phi i32 [ %i163, %bb203 ], [ 0, %bb159.bb209_crit_edge ]
  %i213 = zext nneg i32 %i212 to i64
  %i214 = getelementptr inbounds i8, ptr %i134, i64 %i213
  %i215 = icmp eq i8 %i210, 0
  br i1 %i215, label %bb216.loopexitsplit, label %bb209.bb129_crit_edge

bb209.bb129_crit_edge:                            ; preds = %bb209
  br label %bb129

bb216.loopexitsplit:                              ; preds = %bb209
  br label %bb216.loopexit

bb216.loopexit:                                   ; preds = %bb216.loopexitsplit, %bb142.bb216.loopexit_crit_edge
  %i217.ph = phi ptr [ %i130, %bb142.bb216.loopexit_crit_edge ], [ %i211, %bb216.loopexitsplit ]
  br label %bb216

bb216:                                            ; preds = %bb124.bb216_crit_edge, %bb120.bb216_crit_edge, %bb216.loopexit
  %i217 = phi ptr [ %i121, %bb120.bb216_crit_edge ], [ %i121, %bb124.bb216_crit_edge ], [ %i217.ph, %bb216.loopexit ]
  %i218 = icmp sgt i32 %arg, 1
  br i1 %i218, label %bb219, label %bb216.bb229_crit_edge

bb216.bb229_crit_edge:                            ; preds = %bb216
  br label %bb229

bb219:                                            ; preds = %bb216
  %i220 = zext nneg i32 %arg to i64
  br label %bb221

bb221:                                            ; preds = %bb221.bb221_crit_edge, %bb219
  %i222 = phi i64 [ 1, %bb219 ], [ %i227, %bb221.bb221_crit_edge ]
  %i223 = phi ptr [ %i217, %bb219 ], [ %i226, %bb221.bb221_crit_edge ]
  %i224 = getelementptr inbounds ptr, ptr %arg1, i64 %i222
  %i225 = load ptr, ptr %i224, align 8, !tbaa !20
  %i226 = tail call fastcc ptr @snocString(ptr noundef %i223, ptr noundef %i225)
  %i227 = add nuw nsw i64 %i222, 1
  %i228 = icmp eq i64 %i227, %i220
  br i1 %i228, label %bb229.loopexit, label %bb221.bb221_crit_edge, !llvm.loop !84

bb221.bb221_crit_edge:                            ; preds = %bb221
  br label %bb221

bb229.loopexit:                                   ; preds = %bb221
  br label %bb229

bb229:                                            ; preds = %bb216.bb229_crit_edge, %bb229.loopexit
  %i230 = phi ptr [ %i217, %bb216.bb229_crit_edge ], [ %i226, %bb229.loopexit ]
  store i32 7, ptr @longestFileName, align 4, !tbaa !19
  store i32 0, ptr @numFileNames, align 4, !tbaa !19
  %i231 = icmp eq ptr %i230, null
  br i1 %i231, label %bb229.bb258_crit_edge, label %bb232.preheader

bb229.bb258_crit_edge:                            ; preds = %bb229
  br label %bb258

bb232.preheader:                                  ; preds = %bb229
  br label %bb232

bb232:                                            ; preds = %bb251.bb232_crit_edge, %bb232.preheader
  %i233 = phi i8 [ %i254, %bb251.bb232_crit_edge ], [ 1, %bb232.preheader ]
  %i234 = phi ptr [ %i256, %bb251.bb232_crit_edge ], [ %i230, %bb232.preheader ]
  %i235 = phi i32 [ %i253, %bb251.bb232_crit_edge ], [ 0, %bb232.preheader ]
  %i236 = phi i32 [ %i252, %bb251.bb232_crit_edge ], [ 7, %bb232.preheader ]
  %i237 = load ptr, ptr %i234, align 8, !tbaa !85
  %i238 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i237, ptr noundef nonnull dereferenceable(3) @.str.9.18) #33
  %i239 = icmp eq i32 %i238, 0
  br i1 %i239, label %bb232.bb251_crit_edge, label %bb240

bb232.bb251_crit_edge:                            ; preds = %bb232
  br label %bb251

bb240:                                            ; preds = %bb232
  %i241 = load i8, ptr %i237, align 1, !tbaa !21
  %i242 = icmp eq i8 %i241, 45
  %i243 = icmp ne i8 %i233, 0
  %i244 = select i1 %i242, i1 %i243, i1 false
  br i1 %i244, label %bb240.bb251_crit_edge, label %bb245

bb240.bb251_crit_edge:                            ; preds = %bb240
  br label %bb251

bb245:                                            ; preds = %bb240
  %i246 = add nsw i32 %i235, 1
  store i32 %i246, ptr @numFileNames, align 4, !tbaa !19
  %i247 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %i237) #33
  %i248 = trunc i64 %i247 to i32
  %i249 = icmp slt i32 %i236, %i248
  br i1 %i249, label %bb250, label %bb245.bb251_crit_edge

bb245.bb251_crit_edge:                            ; preds = %bb245
  br label %bb251

bb250:                                            ; preds = %bb245
  store i32 %i248, ptr @longestFileName, align 4, !tbaa !19
  br label %bb251

bb251:                                            ; preds = %bb245.bb251_crit_edge, %bb240.bb251_crit_edge, %bb232.bb251_crit_edge, %bb250
  %i252 = phi i32 [ %i236, %bb240.bb251_crit_edge ], [ %i248, %bb250 ], [ %i236, %bb245.bb251_crit_edge ], [ %i236, %bb232.bb251_crit_edge ]
  %i253 = phi i32 [ %i235, %bb240.bb251_crit_edge ], [ %i246, %bb250 ], [ %i246, %bb245.bb251_crit_edge ], [ %i235, %bb232.bb251_crit_edge ]
  %i254 = phi i8 [ %i233, %bb240.bb251_crit_edge ], [ %i233, %bb250 ], [ %i233, %bb245.bb251_crit_edge ], [ 0, %bb232.bb251_crit_edge ]
  %i255 = getelementptr inbounds %struct.zzzz, ptr %i234, i64 0, i32 1
  %i256 = load ptr, ptr %i255, align 8, !tbaa !20
  %i257 = icmp eq ptr %i256, null
  br i1 %i257, label %bb258.loopexit, label %bb251.bb232_crit_edge, !llvm.loop !87

bb251.bb232_crit_edge:                            ; preds = %bb251
  br label %bb232

bb258.loopexit:                                   ; preds = %bb251
  br label %bb258

bb258:                                            ; preds = %bb229.bb258_crit_edge, %bb258.loopexit
  %i259 = phi i32 [ 0, %bb229.bb258_crit_edge ], [ %i253, %bb258.loopexit ]
  %i260 = icmp eq i32 %i259, 0
  %i261 = select i1 %i260, i32 1, i32 3
  store i32 %i261, ptr @srcMode, align 4, !tbaa !19
  store i32 1, ptr @opMode, align 4, !tbaa !19
  %i262 = load ptr, ptr @progName, align 8, !tbaa !20
  %i263 = tail call ptr @strstr(ptr noundef nonnull dereferenceable(1) %i262, ptr noundef nonnull dereferenceable(1) @.str.10) #33
  %i264 = icmp eq ptr %i263, null
  br i1 %i264, label %bb265, label %bb258.bb268_crit_edge

bb258.bb268_crit_edge:                            ; preds = %bb258
  br label %bb268

bb265:                                            ; preds = %bb258
  %i266 = tail call ptr @strstr(ptr noundef nonnull dereferenceable(1) %i262, ptr noundef nonnull dereferenceable(1) @.str.11) #33
  %i267 = icmp eq ptr %i266, null
  br i1 %i267, label %bb265.bb269_crit_edge, label %bb265.bb268_crit_edge

bb265.bb268_crit_edge:                            ; preds = %bb265
  br label %bb268

bb265.bb269_crit_edge:                            ; preds = %bb265
  br label %bb269

bb268:                                            ; preds = %bb265.bb268_crit_edge, %bb258.bb268_crit_edge
  store i32 2, ptr @opMode, align 4, !tbaa !19
  br label %bb269

bb269:                                            ; preds = %bb265.bb269_crit_edge, %bb268
  %i270 = tail call ptr @strstr(ptr noundef nonnull dereferenceable(1) %i262, ptr noundef nonnull dereferenceable(1) @.str.12) #33
  %i271 = icmp eq ptr %i270, null
  br i1 %i271, label %bb272, label %bb269.bb281_crit_edge

bb269.bb281_crit_edge:                            ; preds = %bb269
  br label %bb281

bb272:                                            ; preds = %bb269
  %i273 = tail call ptr @strstr(ptr noundef nonnull dereferenceable(1) %i262, ptr noundef nonnull dereferenceable(1) @.str.13) #33
  %i274 = icmp eq ptr %i273, null
  br i1 %i274, label %bb275, label %bb272.bb281_crit_edge

bb272.bb281_crit_edge:                            ; preds = %bb272
  br label %bb281

bb275:                                            ; preds = %bb272
  %i276 = tail call ptr @strstr(ptr noundef nonnull dereferenceable(1) %i262, ptr noundef nonnull dereferenceable(1) @.str.14) #33
  %i277 = icmp eq ptr %i276, null
  br i1 %i277, label %bb278, label %bb275.bb281_crit_edge

bb275.bb281_crit_edge:                            ; preds = %bb275
  br label %bb281

bb278:                                            ; preds = %bb275
  %i279 = tail call ptr @strstr(ptr noundef nonnull dereferenceable(1) %i262, ptr noundef nonnull dereferenceable(1) @.str.15) #33
  %i280 = icmp eq ptr %i279, null
  br i1 %i280, label %bb278.bb283_crit_edge, label %bb278.bb281_crit_edge

bb278.bb281_crit_edge:                            ; preds = %bb278
  br label %bb281

bb278.bb283_crit_edge:                            ; preds = %bb278
  br label %bb283

bb281:                                            ; preds = %bb278.bb281_crit_edge, %bb275.bb281_crit_edge, %bb272.bb281_crit_edge, %bb269.bb281_crit_edge
  store i32 2, ptr @opMode, align 4, !tbaa !19
  %i282 = select i1 %i260, i32 1, i32 2
  store i32 %i282, ptr @srcMode, align 4, !tbaa !19
  br label %bb283

bb283:                                            ; preds = %bb278.bb283_crit_edge, %bb281
  br i1 %i231, label %bb283.bb442_crit_edge, label %bb284.preheader

bb283.bb442_crit_edge:                            ; preds = %bb283
  br label %bb442

bb284.preheader:                                  ; preds = %bb283
  br label %bb284

bb284:                                            ; preds = %bb337.bb284_crit_edge, %bb284.preheader
  %i285 = phi ptr [ %i339, %bb337.bb284_crit_edge ], [ %i230, %bb284.preheader ]
  %i286 = load ptr, ptr %i285, align 8, !tbaa !85
  %i287 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i286, ptr noundef nonnull dereferenceable(3) @.str.9.18) #33
  %i288 = icmp eq i32 %i287, 0
  br i1 %i288, label %bb284.bb341_crit_edge, label %bb289

bb284.bb341_crit_edge:                            ; preds = %bb284
  br label %bb341

bb289:                                            ; preds = %bb284
  %i290 = load i8, ptr %i286, align 1, !tbaa !21
  %i291 = icmp eq i8 %i290, 45
  br i1 %i291, label %bb292, label %bb289.bb337_crit_edge

bb289.bb337_crit_edge:                            ; preds = %bb289
  br label %bb337

bb292:                                            ; preds = %bb289
  %i293 = getelementptr inbounds i8, ptr %i286, i64 1
  %i294 = load i8, ptr %i293, align 1, !tbaa !21
  %i295 = icmp eq i8 %i294, 45
  br i1 %i295, label %bb292.bb337_crit_edge, label %bb296.preheader

bb292.bb337_crit_edge:                            ; preds = %bb292
  br label %bb337

bb296.preheader:                                  ; preds = %bb292
  br label %bb296

bb296:                                            ; preds = %bb296.preheader, %bb332
  %i297 = phi ptr [ %i333, %bb332 ], [ %i286, %bb296.preheader ]
  %i298 = phi i8 [ %i336, %bb332 ], [ %i294, %bb296.preheader ]
  %i299 = phi i64 [ %i334, %bb332 ], [ 1, %bb296.preheader ]
  switch i8 %i298, label %bb327 [
    i8 0, label %bb337.loopexit
    i8 99, label %bb300
    i8 100, label %bb301
    i8 122, label %bb302
    i8 102, label %bb303
    i8 116, label %bb304
    i8 107, label %bb305
    i8 115, label %bb306
    i8 113, label %bb307
    i8 49, label %bb308
    i8 50, label %bb309
    i8 51, label %bb310
    i8 52, label %bb311
    i8 53, label %bb312
    i8 54, label %bb313
    i8 55, label %bb314
    i8 56, label %bb315
    i8 57, label %bb316
    i8 86, label %bb296.bb317_crit_edge
    i8 76, label %bb296.bb317_crit_edge1
    i8 118, label %bb322
    i8 104, label %bb325
  ]

bb296.bb317_crit_edge1:                           ; preds = %bb296
  br label %bb317

bb296.bb317_crit_edge:                            ; preds = %bb296
  br label %bb317

bb300:                                            ; preds = %bb296
  store i32 2, ptr @srcMode, align 4, !tbaa !19
  br label %bb332

bb301:                                            ; preds = %bb296
  store i32 2, ptr @opMode, align 4, !tbaa !19
  br label %bb332

bb302:                                            ; preds = %bb296
  store i32 1, ptr @opMode, align 4, !tbaa !19
  br label %bb332

bb303:                                            ; preds = %bb296
  store i8 1, ptr @forceOverwrite, align 1, !tbaa !21
  br label %bb332

bb304:                                            ; preds = %bb296
  store i32 3, ptr @opMode, align 4, !tbaa !19
  br label %bb332

bb305:                                            ; preds = %bb296
  store i8 1, ptr @keepInputFiles, align 1, !tbaa !21
  br label %bb332

bb306:                                            ; preds = %bb296
  store i8 1, ptr @smallMode, align 1, !tbaa !21
  br label %bb332

bb307:                                            ; preds = %bb296
  store i8 0, ptr @noisy, align 1, !tbaa !21
  br label %bb332

bb308:                                            ; preds = %bb296
  store i32 1, ptr @blockSize100k, align 4, !tbaa !19
  br label %bb332

bb309:                                            ; preds = %bb296
  store i32 2, ptr @blockSize100k, align 4, !tbaa !19
  br label %bb332

bb310:                                            ; preds = %bb296
  store i32 3, ptr @blockSize100k, align 4, !tbaa !19
  br label %bb332

bb311:                                            ; preds = %bb296
  store i32 4, ptr @blockSize100k, align 4, !tbaa !19
  br label %bb332

bb312:                                            ; preds = %bb296
  store i32 5, ptr @blockSize100k, align 4, !tbaa !19
  br label %bb332

bb313:                                            ; preds = %bb296
  store i32 6, ptr @blockSize100k, align 4, !tbaa !19
  br label %bb332

bb314:                                            ; preds = %bb296
  store i32 7, ptr @blockSize100k, align 4, !tbaa !19
  br label %bb332

bb315:                                            ; preds = %bb296
  store i32 8, ptr @blockSize100k, align 4, !tbaa !19
  br label %bb332

bb316:                                            ; preds = %bb296
  store i32 9, ptr @blockSize100k, align 4, !tbaa !19
  br label %bb332

bb317:                                            ; preds = %bb296.bb317_crit_edge1, %bb296.bb317_crit_edge
  %i318 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i319 = tail call ptr @BZ2_bzlibVersion() #31
  %i320 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i318, ptr noundef nonnull @.str.49, ptr noundef %i319) #32
  %i321 = load ptr, ptr %i285, align 8, !tbaa !85
  br label %bb332

bb322:                                            ; preds = %bb296
  %i323 = load i32, ptr @verbosity, align 4, !tbaa !19
  %i324 = add nsw i32 %i323, 1
  store i32 %i324, ptr @verbosity, align 4, !tbaa !19
  br label %bb332

bb325:                                            ; preds = %bb296
  %i326 = load ptr, ptr @progName, align 8, !tbaa !20
  tail call fastcc void @usage(ptr noundef %i326)
  tail call void @exit(i32 noundef 0) #34
  unreachable

bb327:                                            ; preds = %bb296
  %i328 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i329 = load ptr, ptr @progName, align 8, !tbaa !20
  %i330 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i328, ptr noundef nonnull @.str.16, ptr noundef %i329, ptr noundef nonnull %i297) #32
  %i331 = load ptr, ptr @progName, align 8, !tbaa !20
  tail call fastcc void @usage(ptr noundef %i331)
  tail call void @exit(i32 noundef 1) #34
  unreachable

bb332:                                            ; preds = %bb322, %bb317, %bb316, %bb315, %bb314, %bb313, %bb312, %bb311, %bb310, %bb309, %bb308, %bb307, %bb306, %bb305, %bb304, %bb303, %bb302, %bb301, %bb300
  %i333 = phi ptr [ %i297, %bb300 ], [ %i297, %bb301 ], [ %i297, %bb302 ], [ %i297, %bb303 ], [ %i297, %bb304 ], [ %i297, %bb305 ], [ %i297, %bb306 ], [ %i297, %bb307 ], [ %i297, %bb308 ], [ %i297, %bb309 ], [ %i297, %bb310 ], [ %i297, %bb311 ], [ %i297, %bb312 ], [ %i297, %bb313 ], [ %i297, %bb314 ], [ %i297, %bb315 ], [ %i297, %bb316 ], [ %i321, %bb317 ], [ %i297, %bb322 ]
  %i334 = add nuw i64 %i299, 1
  %i335 = getelementptr inbounds i8, ptr %i333, i64 %i334
  %i336 = load i8, ptr %i335, align 1, !tbaa !21
  br label %bb296, !llvm.loop !88

bb337.loopexit:                                   ; preds = %bb296
  br label %bb337

bb337:                                            ; preds = %bb292.bb337_crit_edge, %bb289.bb337_crit_edge, %bb337.loopexit
  %i338 = getelementptr inbounds %struct.zzzz, ptr %i285, i64 0, i32 1
  %i339 = load ptr, ptr %i338, align 8, !tbaa !20
  %i340 = icmp eq ptr %i339, null
  br i1 %i340, label %bb341split, label %bb337.bb284_crit_edge, !llvm.loop !89

bb337.bb284_crit_edge:                            ; preds = %bb337
  br label %bb284

bb341split:                                       ; preds = %bb337
  br label %bb341

bb341:                                            ; preds = %bb341split, %bb284.bb341_crit_edge
  br label %bb342

bb342:                                            ; preds = %bb438.bb342_crit_edge, %bb341
  %i343 = phi ptr [ %i440, %bb438.bb342_crit_edge ], [ %i230, %bb341 ]
  %i344 = load ptr, ptr %i343, align 8, !tbaa !85
  %i345 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(3) @.str.9.18) #33
  %i346 = icmp eq i32 %i345, 0
  br i1 %i346, label %bb342.bb442.loopexit_crit_edge, label %bb347

bb342.bb442.loopexit_crit_edge:                   ; preds = %bb342
  br label %bb442.loopexit

bb347:                                            ; preds = %bb342
  %i348 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(9) @.str.17) #33
  %i349 = icmp eq i32 %i348, 0
  br i1 %i349, label %bb350, label %bb351

bb350:                                            ; preds = %bb347
  store i32 2, ptr @srcMode, align 4, !tbaa !19
  br label %bb438

bb351:                                            ; preds = %bb347
  %i352 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(13) @.str.18) #33
  %i353 = icmp eq i32 %i352, 0
  br i1 %i353, label %bb354, label %bb355

bb354:                                            ; preds = %bb351
  store i32 2, ptr @opMode, align 4, !tbaa !19
  br label %bb438

bb355:                                            ; preds = %bb351
  %i356 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(11) @.str.19) #33
  %i357 = icmp eq i32 %i356, 0
  br i1 %i357, label %bb358, label %bb359

bb358:                                            ; preds = %bb355
  store i32 1, ptr @opMode, align 4, !tbaa !19
  br label %bb438

bb359:                                            ; preds = %bb355
  %i360 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(8) @.str.20) #33
  %i361 = icmp eq i32 %i360, 0
  br i1 %i361, label %bb362, label %bb363

bb362:                                            ; preds = %bb359
  store i8 1, ptr @forceOverwrite, align 1, !tbaa !21
  br label %bb438

bb363:                                            ; preds = %bb359
  %i364 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(7) @.str.21) #33
  %i365 = icmp eq i32 %i364, 0
  br i1 %i365, label %bb366, label %bb367

bb366:                                            ; preds = %bb363
  store i32 3, ptr @opMode, align 4, !tbaa !19
  br label %bb438

bb367:                                            ; preds = %bb363
  %i368 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(7) @.str.22) #33
  %i369 = icmp eq i32 %i368, 0
  br i1 %i369, label %bb370, label %bb371

bb370:                                            ; preds = %bb367
  store i8 1, ptr @keepInputFiles, align 1, !tbaa !21
  br label %bb438

bb371:                                            ; preds = %bb367
  %i372 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(8) @.str.23) #33
  %i373 = icmp eq i32 %i372, 0
  br i1 %i373, label %bb374, label %bb375

bb374:                                            ; preds = %bb371
  store i8 1, ptr @smallMode, align 1, !tbaa !21
  br label %bb438

bb375:                                            ; preds = %bb371
  %i376 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(8) @.str.24) #33
  %i377 = icmp eq i32 %i376, 0
  br i1 %i377, label %bb378, label %bb379

bb378:                                            ; preds = %bb375
  store i8 0, ptr @noisy, align 1, !tbaa !21
  br label %bb438

bb379:                                            ; preds = %bb375
  %i380 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(10) @.str.25) #33
  %i381 = icmp eq i32 %i380, 0
  br i1 %i381, label %bb382, label %bb386

bb382:                                            ; preds = %bb379
  %i383 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i384 = tail call ptr @BZ2_bzlibVersion() #31
  %i385 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i383, ptr noundef nonnull @.str.49, ptr noundef %i384) #32
  br label %bb438

bb386:                                            ; preds = %bb379
  %i387 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(10) @.str.26) #33
  %i388 = icmp eq i32 %i387, 0
  br i1 %i388, label %bb389, label %bb393

bb389:                                            ; preds = %bb386
  %i390 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i391 = tail call ptr @BZ2_bzlibVersion() #31
  %i392 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i390, ptr noundef nonnull @.str.49, ptr noundef %i391) #32
  br label %bb438

bb393:                                            ; preds = %bb386
  %i394 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(14) @.str.27) #33
  %i395 = icmp eq i32 %i394, 0
  br i1 %i395, label %bb396, label %bb397

bb396:                                            ; preds = %bb393
  store i32 1, ptr @workFactor, align 4, !tbaa !19
  br label %bb438

bb397:                                            ; preds = %bb393
  %i398 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(18) @.str.28) #33
  %i399 = icmp eq i32 %i398, 0
  br i1 %i399, label %bb400, label %bb404

bb400:                                            ; preds = %bb397
  %i401 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i402 = load ptr, ptr @progName, align 8, !tbaa !20
  %i403 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i401, ptr noundef nonnull @.str.51, ptr noundef %i402, ptr noundef %i344) #32
  br label %bb438

bb404:                                            ; preds = %bb397
  %i405 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(18) @.str.29) #33
  %i406 = icmp eq i32 %i405, 0
  br i1 %i406, label %bb407, label %bb411

bb407:                                            ; preds = %bb404
  %i408 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i409 = load ptr, ptr @progName, align 8, !tbaa !20
  %i410 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i408, ptr noundef nonnull @.str.51, ptr noundef %i409, ptr noundef %i344) #32
  br label %bb438

bb411:                                            ; preds = %bb404
  %i412 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(7) @.str.30) #33
  %i413 = icmp eq i32 %i412, 0
  br i1 %i413, label %bb414, label %bb415

bb414:                                            ; preds = %bb411
  store i32 1, ptr @blockSize100k, align 4, !tbaa !19
  br label %bb438

bb415:                                            ; preds = %bb411
  %i416 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(7) @.str.31) #33
  %i417 = icmp eq i32 %i416, 0
  br i1 %i417, label %bb418, label %bb419

bb418:                                            ; preds = %bb415
  store i32 9, ptr @blockSize100k, align 4, !tbaa !19
  br label %bb438

bb419:                                            ; preds = %bb415
  %i420 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(10) @.str.32) #33
  %i421 = icmp eq i32 %i420, 0
  br i1 %i421, label %bb422, label %bb425

bb422:                                            ; preds = %bb419
  %i423 = load i32, ptr @verbosity, align 4, !tbaa !19
  %i424 = add nsw i32 %i423, 1
  store i32 %i424, ptr @verbosity, align 4, !tbaa !19
  br label %bb438

bb425:                                            ; preds = %bb419
  %i426 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(7) @.str.33) #33
  %i427 = icmp eq i32 %i426, 0
  br i1 %i427, label %bb428, label %bb430

bb428:                                            ; preds = %bb425
  %i429 = load ptr, ptr @progName, align 8, !tbaa !20
  tail call fastcc void @usage(ptr noundef %i429)
  tail call void @exit(i32 noundef 0) #34
  unreachable

bb430:                                            ; preds = %bb425
  %i431 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %i344, ptr noundef nonnull dereferenceable(3) @.str.9.18, i64 noundef 2) #33
  %i432 = icmp eq i32 %i431, 0
  br i1 %i432, label %bb433, label %bb430.bb438_crit_edge

bb430.bb438_crit_edge:                            ; preds = %bb430
  br label %bb438

bb433:                                            ; preds = %bb430
  %i434 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i435 = load ptr, ptr @progName, align 8, !tbaa !20
  %i436 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i434, ptr noundef nonnull @.str.16, ptr noundef %i435, ptr noundef %i344) #32
  %i437 = load ptr, ptr @progName, align 8, !tbaa !20
  tail call fastcc void @usage(ptr noundef %i437)
  tail call void @exit(i32 noundef 1) #34
  unreachable

bb438:                                            ; preds = %bb430.bb438_crit_edge, %bb422, %bb418, %bb414, %bb407, %bb400, %bb396, %bb389, %bb382, %bb378, %bb374, %bb370, %bb366, %bb362, %bb358, %bb354, %bb350
  %i439 = getelementptr inbounds %struct.zzzz, ptr %i343, i64 0, i32 1
  %i440 = load ptr, ptr %i439, align 8, !tbaa !20
  %i441 = icmp eq ptr %i440, null
  br i1 %i441, label %bb442.loopexitsplit, label %bb438.bb342_crit_edge, !llvm.loop !90

bb438.bb342_crit_edge:                            ; preds = %bb438
  br label %bb342

bb442.loopexitsplit:                              ; preds = %bb438
  br label %bb442.loopexit

bb442.loopexit:                                   ; preds = %bb442.loopexitsplit, %bb342.bb442.loopexit_crit_edge
  br label %bb442

bb442:                                            ; preds = %bb283.bb442_crit_edge, %bb442.loopexit
  %i443 = load i32, ptr @verbosity, align 4, !tbaa !19
  %i444 = icmp sgt i32 %i443, 4
  br i1 %i444, label %bb445, label %bb442.bb446_crit_edge

bb442.bb446_crit_edge:                            ; preds = %bb442
  br label %bb446

bb445:                                            ; preds = %bb442
  store i32 4, ptr @verbosity, align 4, !tbaa !19
  br label %bb446

bb446:                                            ; preds = %bb442.bb446_crit_edge, %bb445
  %i447 = load i32, ptr @opMode, align 4, !tbaa !19
  %i448 = icmp eq i32 %i447, 1
  %i449 = load i8, ptr @smallMode, align 1
  %i450 = icmp ne i8 %i449, 0
  %i451 = select i1 %i448, i1 %i450, i1 false
  %i452 = load i32, ptr @blockSize100k, align 4
  %i453 = icmp sgt i32 %i452, 2
  %i454 = select i1 %i451, i1 %i453, i1 false
  br i1 %i454, label %bb455, label %bb458

bb455:                                            ; preds = %bb446
  store i32 2, ptr @blockSize100k, align 4, !tbaa !19
  %i456 = load i32, ptr @srcMode, align 4
  %i457 = icmp eq i32 %i456, 2
  br label %bb467

bb458:                                            ; preds = %bb446
  %i459 = icmp eq i32 %i447, 3
  %i460 = load i32, ptr @srcMode, align 4
  %i461 = icmp eq i32 %i460, 2
  %i462 = select i1 %i459, i1 %i461, i1 false
  br i1 %i462, label %bb463, label %bb458.bb467_crit_edge

bb458.bb467_crit_edge:                            ; preds = %bb458
  br label %bb467

bb463:                                            ; preds = %bb458
  %i464 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i465 = load ptr, ptr @progName, align 8, !tbaa !20
  %i466 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i464, ptr noundef nonnull @.str.34, ptr noundef %i465) #32
  tail call void @exit(i32 noundef 1) #34
  unreachable

bb467:                                            ; preds = %bb458.bb467_crit_edge, %bb455
  %i468 = phi i32 [ %i456, %bb455 ], [ %i460, %bb458.bb467_crit_edge ]
  %i469 = phi i1 [ %i457, %bb455 ], [ %i461, %bb458.bb467_crit_edge ]
  %i470 = load i32, ptr @numFileNames, align 4
  %i471 = icmp eq i32 %i470, 0
  %i472 = select i1 %i469, i1 %i471, i1 false
  br i1 %i472, label %bb473, label %bb467.bb474_crit_edge

bb467.bb474_crit_edge:                            ; preds = %bb467
  br label %bb474

bb473:                                            ; preds = %bb467
  store i32 1, ptr @srcMode, align 4, !tbaa !19
  br label %bb474

bb474:                                            ; preds = %bb467.bb474_crit_edge, %bb473
  %i475 = phi i32 [ 1, %bb473 ], [ %i468, %bb467.bb474_crit_edge ]
  br i1 %i448, label %bb474.bb477_crit_edge, label %bb476

bb474.bb477_crit_edge:                            ; preds = %bb474
  br label %bb477

bb476:                                            ; preds = %bb474
  store i32 0, ptr @blockSize100k, align 4, !tbaa !19
  br label %bb477

bb477:                                            ; preds = %bb474.bb477_crit_edge, %bb476
  %i478 = icmp eq i32 %i475, 3
  br i1 %i478, label %bb479, label %bb477.bb484_crit_edge

bb477.bb484_crit_edge:                            ; preds = %bb477
  br label %bb484

bb479:                                            ; preds = %bb477
  %i480 = tail call ptr @signal(i32 noundef 2, ptr noundef nonnull @mySignalCatcher) #31
  %i481 = tail call ptr @signal(i32 noundef 15, ptr noundef nonnull @mySignalCatcher) #31
  %i482 = tail call ptr @signal(i32 noundef 1, ptr noundef nonnull @mySignalCatcher) #31
  %i483 = load i32, ptr @opMode, align 4, !tbaa !19
  br label %bb484

bb484:                                            ; preds = %bb477.bb484_crit_edge, %bb479
  %i485 = phi i32 [ %i483, %bb479 ], [ %i447, %bb477.bb484_crit_edge ]
  switch i32 %i485, label %bb543 [
    i32 1, label %bb486
    i32 2, label %bb510
  ]

bb486:                                            ; preds = %bb484
  %i487 = load i32, ptr @srcMode, align 4, !tbaa !19
  %i488 = icmp eq i32 %i487, 1
  br i1 %i488, label %bb490, label %bb489

bb489:                                            ; preds = %bb486
  br i1 %i231, label %bb489.bb591_crit_edge, label %bb491.preheader

bb489.bb591_crit_edge:                            ; preds = %bb489
  br label %bb591

bb491.preheader:                                  ; preds = %bb489
  br label %bb491

bb490:                                            ; preds = %bb486
  tail call fastcc void @compress(ptr noundef null)
  br label %bb581

bb491:                                            ; preds = %bb505.bb491_crit_edge, %bb491.preheader
  %i492 = phi i8 [ %i506, %bb505.bb491_crit_edge ], [ 1, %bb491.preheader ]
  %i493 = phi ptr [ %i508, %bb505.bb491_crit_edge ], [ %i230, %bb491.preheader ]
  %i494 = load ptr, ptr %i493, align 8, !tbaa !85
  %i495 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i494, ptr noundef nonnull dereferenceable(3) @.str.9.18) #33
  %i496 = icmp eq i32 %i495, 0
  br i1 %i496, label %bb491.bb505_crit_edge, label %bb497

bb491.bb505_crit_edge:                            ; preds = %bb491
  br label %bb505

bb497:                                            ; preds = %bb491
  %i498 = load i8, ptr %i494, align 1, !tbaa !21
  %i499 = icmp eq i8 %i498, 45
  %i500 = icmp ne i8 %i492, 0
  %i501 = select i1 %i499, i1 %i500, i1 false
  br i1 %i501, label %bb497.bb505_crit_edge, label %bb502

bb497.bb505_crit_edge:                            ; preds = %bb497
  br label %bb505

bb502:                                            ; preds = %bb497
  %i503 = load i32, ptr @numFilesProcessed, align 4, !tbaa !19
  %i504 = add nsw i32 %i503, 1
  store i32 %i504, ptr @numFilesProcessed, align 4, !tbaa !19
  tail call fastcc void @compress(ptr noundef nonnull %i494)
  br label %bb505

bb505:                                            ; preds = %bb497.bb505_crit_edge, %bb491.bb505_crit_edge, %bb502
  %i506 = phi i8 [ %i492, %bb497.bb505_crit_edge ], [ %i492, %bb502 ], [ 0, %bb491.bb505_crit_edge ]
  %i507 = getelementptr inbounds %struct.zzzz, ptr %i493, i64 0, i32 1
  %i508 = load ptr, ptr %i507, align 8, !tbaa !20
  %i509 = icmp eq ptr %i508, null
  br i1 %i509, label %bb581.loopexit, label %bb505.bb491_crit_edge, !llvm.loop !91

bb505.bb491_crit_edge:                            ; preds = %bb505
  br label %bb491

bb510:                                            ; preds = %bb484
  store i8 0, ptr @unzFailsExist, align 1, !tbaa !21
  %i511 = load i32, ptr @srcMode, align 4, !tbaa !19
  %i512 = icmp eq i32 %i511, 1
  br i1 %i512, label %bb514, label %bb513

bb513:                                            ; preds = %bb510
  br i1 %i231, label %bb513.bb591_crit_edge, label %bb515.preheader

bb513.bb591_crit_edge:                            ; preds = %bb513
  br label %bb591

bb515.preheader:                                  ; preds = %bb513
  br label %bb515

bb514:                                            ; preds = %bb510
  tail call fastcc void @uncompress(ptr noundef null)
  br label %bb534

bb515:                                            ; preds = %bb529.bb515_crit_edge, %bb515.preheader
  %i516 = phi i8 [ %i530, %bb529.bb515_crit_edge ], [ 1, %bb515.preheader ]
  %i517 = phi ptr [ %i532, %bb529.bb515_crit_edge ], [ %i230, %bb515.preheader ]
  %i518 = load ptr, ptr %i517, align 8, !tbaa !85
  %i519 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i518, ptr noundef nonnull dereferenceable(3) @.str.9.18) #33
  %i520 = icmp eq i32 %i519, 0
  br i1 %i520, label %bb515.bb529_crit_edge, label %bb521

bb515.bb529_crit_edge:                            ; preds = %bb515
  br label %bb529

bb521:                                            ; preds = %bb515
  %i522 = load i8, ptr %i518, align 1, !tbaa !21
  %i523 = icmp eq i8 %i522, 45
  %i524 = icmp ne i8 %i516, 0
  %i525 = select i1 %i523, i1 %i524, i1 false
  br i1 %i525, label %bb521.bb529_crit_edge, label %bb526

bb521.bb529_crit_edge:                            ; preds = %bb521
  br label %bb529

bb526:                                            ; preds = %bb521
  %i527 = load i32, ptr @numFilesProcessed, align 4, !tbaa !19
  %i528 = add nsw i32 %i527, 1
  store i32 %i528, ptr @numFilesProcessed, align 4, !tbaa !19
  tail call fastcc void @uncompress(ptr noundef nonnull %i518)
  br label %bb529

bb529:                                            ; preds = %bb521.bb529_crit_edge, %bb515.bb529_crit_edge, %bb526
  %i530 = phi i8 [ %i516, %bb521.bb529_crit_edge ], [ %i516, %bb526 ], [ 0, %bb515.bb529_crit_edge ]
  %i531 = getelementptr inbounds %struct.zzzz, ptr %i517, i64 0, i32 1
  %i532 = load ptr, ptr %i531, align 8, !tbaa !20
  %i533 = icmp eq ptr %i532, null
  br i1 %i533, label %bb534.loopexit, label %bb529.bb515_crit_edge, !llvm.loop !92

bb529.bb515_crit_edge:                            ; preds = %bb529
  br label %bb515

bb534.loopexit:                                   ; preds = %bb529
  br label %bb534

bb534:                                            ; preds = %bb534.loopexit, %bb514
  %i535 = load i8, ptr @unzFailsExist, align 1, !tbaa !21
  %i536 = icmp eq i8 %i535, 0
  br i1 %i536, label %bb534.bb581_crit_edge, label %bb537

bb534.bb581_crit_edge:                            ; preds = %bb534
  br label %bb581

bb537:                                            ; preds = %bb534
  %i538 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i539 = icmp slt i32 %i538, 2
  br i1 %i539, label %bb540, label %bb537.bb541_crit_edge

bb537.bb541_crit_edge:                            ; preds = %bb537
  br label %bb541

bb540:                                            ; preds = %bb537
  store i32 2, ptr @exitValue, align 4, !tbaa !19
  br label %bb541

bb541:                                            ; preds = %bb537.bb541_crit_edge, %bb540
  %i542 = phi i32 [ %i538, %bb537.bb541_crit_edge ], [ 2, %bb540 ]
  tail call void @exit(i32 noundef %i542) #34
  unreachable

bb543:                                            ; preds = %bb484
  store i8 0, ptr @testFailsExist, align 1, !tbaa !21
  %i544 = load i32, ptr @srcMode, align 4, !tbaa !19
  %i545 = icmp eq i32 %i544, 1
  br i1 %i545, label %bb547, label %bb546

bb546:                                            ; preds = %bb543
  br i1 %i231, label %bb546.bb567_crit_edge, label %bb548.preheader

bb546.bb567_crit_edge:                            ; preds = %bb546
  br label %bb567

bb548.preheader:                                  ; preds = %bb546
  br label %bb548

bb547:                                            ; preds = %bb543
  tail call fastcc void @testf(ptr noundef null)
  br label %bb567

bb548:                                            ; preds = %bb562.bb548_crit_edge, %bb548.preheader
  %i549 = phi i8 [ %i563, %bb562.bb548_crit_edge ], [ 1, %bb548.preheader ]
  %i550 = phi ptr [ %i565, %bb562.bb548_crit_edge ], [ %i230, %bb548.preheader ]
  %i551 = load ptr, ptr %i550, align 8, !tbaa !85
  %i552 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i551, ptr noundef nonnull dereferenceable(3) @.str.9.18) #33
  %i553 = icmp eq i32 %i552, 0
  br i1 %i553, label %bb548.bb562_crit_edge, label %bb554

bb548.bb562_crit_edge:                            ; preds = %bb548
  br label %bb562

bb554:                                            ; preds = %bb548
  %i555 = load i8, ptr %i551, align 1, !tbaa !21
  %i556 = icmp eq i8 %i555, 45
  %i557 = icmp ne i8 %i549, 0
  %i558 = select i1 %i556, i1 %i557, i1 false
  br i1 %i558, label %bb554.bb562_crit_edge, label %bb559

bb554.bb562_crit_edge:                            ; preds = %bb554
  br label %bb562

bb559:                                            ; preds = %bb554
  %i560 = load i32, ptr @numFilesProcessed, align 4, !tbaa !19
  %i561 = add nsw i32 %i560, 1
  store i32 %i561, ptr @numFilesProcessed, align 4, !tbaa !19
  tail call fastcc void @testf(ptr noundef nonnull %i551)
  br label %bb562

bb562:                                            ; preds = %bb554.bb562_crit_edge, %bb548.bb562_crit_edge, %bb559
  %i563 = phi i8 [ %i549, %bb554.bb562_crit_edge ], [ %i549, %bb559 ], [ 0, %bb548.bb562_crit_edge ]
  %i564 = getelementptr inbounds %struct.zzzz, ptr %i550, i64 0, i32 1
  %i565 = load ptr, ptr %i564, align 8, !tbaa !20
  %i566 = icmp eq ptr %i565, null
  br i1 %i566, label %bb567.loopexit, label %bb562.bb548_crit_edge, !llvm.loop !93

bb562.bb548_crit_edge:                            ; preds = %bb562
  br label %bb548

bb567.loopexit:                                   ; preds = %bb562
  br label %bb567

bb567:                                            ; preds = %bb546.bb567_crit_edge, %bb567.loopexit, %bb547
  %i568 = load i8, ptr @testFailsExist, align 1, !tbaa !21
  %i569 = icmp ne i8 %i568, 0
  %i570 = load i8, ptr @noisy, align 1
  %i571 = icmp ne i8 %i570, 0
  %i572 = select i1 %i569, i1 %i571, i1 false
  br i1 %i572, label %bb573, label %bb567.bb581_crit_edge

bb567.bb581_crit_edge:                            ; preds = %bb567
  br label %bb581

bb573:                                            ; preds = %bb567
  %i574 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i575 = tail call i64 @fwrite(ptr nonnull @.str.35, i64 112, i64 1, ptr %i574) #32
  %i576 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i577 = icmp slt i32 %i576, 2
  br i1 %i577, label %bb578, label %bb573.bb579_crit_edge

bb573.bb579_crit_edge:                            ; preds = %bb573
  br label %bb579

bb578:                                            ; preds = %bb573
  store i32 2, ptr @exitValue, align 4, !tbaa !19
  br label %bb579

bb579:                                            ; preds = %bb573.bb579_crit_edge, %bb578
  %i580 = phi i32 [ %i576, %bb573.bb579_crit_edge ], [ 2, %bb578 ]
  tail call void @exit(i32 noundef %i580) #34
  unreachable

bb581.loopexit:                                   ; preds = %bb505
  br label %bb581

bb581:                                            ; preds = %bb567.bb581_crit_edge, %bb534.bb581_crit_edge, %bb581.loopexit, %bb490
  br i1 %i231, label %bb581.bb591_crit_edge, label %bb582.preheader

bb581.bb591_crit_edge:                            ; preds = %bb581
  br label %bb591

bb582.preheader:                                  ; preds = %bb581
  br label %bb582

bb582:                                            ; preds = %bb589.bb582_crit_edge, %bb582.preheader
  %i583 = phi ptr [ %i585, %bb589.bb582_crit_edge ], [ %i230, %bb582.preheader ]
  %i584 = getelementptr inbounds %struct.zzzz, ptr %i583, i64 0, i32 1
  %i585 = load ptr, ptr %i584, align 8, !tbaa !94
  %i586 = load ptr, ptr %i583, align 8, !tbaa !85
  %i587 = icmp eq ptr %i586, null
  br i1 %i587, label %bb582.bb589_crit_edge, label %bb588

bb582.bb589_crit_edge:                            ; preds = %bb582
  br label %bb589

bb588:                                            ; preds = %bb582
  tail call void @free(ptr noundef nonnull %i586) #31
  br label %bb589

bb589:                                            ; preds = %bb582.bb589_crit_edge, %bb588
  tail call void @free(ptr noundef nonnull %i583) #31
  %i590 = icmp eq ptr %i585, null
  br i1 %i590, label %bb591.loopexit, label %bb589.bb582_crit_edge, !llvm.loop !95

bb589.bb582_crit_edge:                            ; preds = %bb589
  br label %bb582

bb591.loopexit:                                   ; preds = %bb589
  br label %bb591

bb591:                                            ; preds = %bb581.bb591_crit_edge, %bb513.bb591_crit_edge, %bb489.bb591_crit_edge, %bb591.loopexit
  %i592 = load i32, ptr @exitValue, align 4, !tbaa !19
  ret i32 %i592
}

; Function Attrs: noreturn nounwind uwtable
define internal void @mySIGSEGVorSIGBUScatcher(i32 %arg) #8 {
bb:
  %i = load i32, ptr @opMode, align 4, !tbaa !19
  %i1 = icmp eq i32 %i, 1
  %i2 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i3 = load ptr, ptr @progName, align 8, !tbaa !20
  %i4 = select i1 %i1, ptr @.str.36, ptr @.str.37
  %i5 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i2, ptr noundef nonnull %i4, ptr noundef %i3) #32
  %i6 = load i8, ptr @noisy, align 1, !tbaa !21
  %i7 = icmp eq i8 %i6, 0
  br i1 %i7, label %bb.bb11_crit_edge, label %bb8

bb.bb11_crit_edge:                                ; preds = %bb
  br label %bb11

bb8:                                              ; preds = %bb
  %i9 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i10 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i9, ptr noundef nonnull @.str.38, ptr noundef nonnull @inName, ptr noundef nonnull @outName) #32
  br label %bb11

bb11:                                             ; preds = %bb.bb11_crit_edge, %bb8
  %i12 = load i32, ptr @opMode, align 4, !tbaa !19
  %i13 = icmp eq i32 %i12, 1
  br i1 %i13, label %bb14, label %bb15

bb14:                                             ; preds = %bb11
  tail call fastcc void @cleanUpAndFail(i32 noundef 3) #36
  unreachable

bb15:                                             ; preds = %bb11
  tail call fastcc void @cadvise()
  tail call fastcc void @cleanUpAndFail(i32 noundef 2) #36
  unreachable
}

; Function Attrs: nounwind
declare ptr @signal(i32 noundef, ptr noundef) local_unnamed_addr #9

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @strncpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i64 noundef) local_unnamed_addr #10

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #12

; Function Attrs: nofree nounwind memory(read)
declare noundef ptr @getenv(ptr nocapture noundef) local_unnamed_addr #13

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare ptr @__ctype_b_loc() local_unnamed_addr #14

; Function Attrs: nounwind uwtable
define internal fastcc noundef ptr @snocString(ptr noundef %arg, ptr nocapture noundef readonly %arg1) unnamed_addr #0 {
bb:
  %i = icmp eq ptr %arg, null
  br i1 %i, label %bb2, label %bb16.preheader

bb16.preheader:                                   ; preds = %bb
  br label %bb16

bb2:                                              ; preds = %bb
  %i3 = tail call dereferenceable_or_null(16) ptr @calloc(i64 1, i64 16)
  %i4 = icmp eq ptr %i3, null
  br i1 %i4, label %bb5, label %bb6

bb5:                                              ; preds = %bb2
  tail call fastcc void @outOfMemory() #36
  unreachable

bb6:                                              ; preds = %bb2
  %i7 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %arg1) #33
  %i8 = shl i64 %i7, 32
  %i9 = add i64 %i8, 21474836480
  %i10 = ashr exact i64 %i9, 32
  %i11 = tail call noalias ptr @malloc(i64 noundef %i10) #37
  %i12 = icmp eq ptr %i11, null
  br i1 %i12, label %bb13, label %bb14

bb13:                                             ; preds = %bb6
  tail call fastcc void @outOfMemory() #36
  unreachable

bb14:                                             ; preds = %bb6
  store ptr %i11, ptr %i3, align 8, !tbaa !85
  %i15 = tail call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %i11, ptr noundef nonnull dereferenceable(1) %arg1) #31
  br label %bb36

bb16:                                             ; preds = %bb16.bb16_crit_edge, %bb16.preheader
  %i17 = phi ptr [ %i19, %bb16.bb16_crit_edge ], [ %arg, %bb16.preheader ]
  %i18 = getelementptr inbounds %struct.zzzz, ptr %i17, i64 0, i32 1
  %i19 = load ptr, ptr %i18, align 8, !tbaa !94
  %i20 = icmp eq ptr %i19, null
  br i1 %i20, label %bb21, label %bb16.bb16_crit_edge, !llvm.loop !96

bb16.bb16_crit_edge:                              ; preds = %bb16
  br label %bb16

bb21:                                             ; preds = %bb16
  %i22 = getelementptr inbounds %struct.zzzz, ptr %i17, i64 0, i32 1
  %i23 = tail call dereferenceable_or_null(16) ptr @calloc(i64 1, i64 16)
  %i24 = icmp eq ptr %i23, null
  br i1 %i24, label %bb25, label %bb26

bb25:                                             ; preds = %bb21
  tail call fastcc void @outOfMemory() #36
  unreachable

bb26:                                             ; preds = %bb21
  %i27 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %arg1) #33
  %i28 = shl i64 %i27, 32
  %i29 = add i64 %i28, 21474836480
  %i30 = ashr exact i64 %i29, 32
  %i31 = tail call noalias ptr @malloc(i64 noundef %i30) #37
  %i32 = icmp eq ptr %i31, null
  br i1 %i32, label %bb33, label %bb34

bb33:                                             ; preds = %bb26
  tail call fastcc void @outOfMemory() #36
  unreachable

bb34:                                             ; preds = %bb26
  store ptr %i31, ptr %i23, align 8, !tbaa !85
  %i35 = tail call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %i31, ptr noundef nonnull dereferenceable(1) %arg1) #31
  store ptr %i23, ptr %i22, align 8, !tbaa !94
  br label %bb36

bb36:                                             ; preds = %bb34, %bb14
  %i37 = phi ptr [ %i3, %bb14 ], [ %arg, %bb34 ]
  ret ptr %i37
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #11

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @strstr(ptr noundef, ptr nocapture noundef) local_unnamed_addr #11

; Function Attrs: nounwind uwtable
define internal fastcc void @usage(ptr noundef %arg) unnamed_addr #0 {
bb:
  %i = load ptr, ptr @stderr, align 8, !tbaa !20
  %i1 = tail call ptr @BZ2_bzlibVersion() #31
  %i2 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i, ptr noundef nonnull @.str.50, ptr noundef %i1, ptr noundef %arg) #32
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #11

; Function Attrs: noreturn nounwind uwtable
define internal void @mySignalCatcher(i32 %arg) #8 {
bb:
  %i = load ptr, ptr @stderr, align 8, !tbaa !20
  %i1 = load ptr, ptr @progName, align 8, !tbaa !20
  %i2 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i, ptr noundef nonnull @.str.52, ptr noundef %i1) #32
  tail call fastcc void @cleanUpAndFail(i32 noundef 1) #36
  unreachable
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compress(ptr noundef %arg) unnamed_addr #0 {
bb:
  %i = alloca %struct.timespec, align 8
  %i1 = alloca [5000 x i8], align 16
  %i2 = alloca i32, align 4
  %i3 = alloca i32, align 4
  %i4 = alloca i32, align 4
  %i5 = alloca i32, align 4
  %i6 = alloca i32, align 4
  %i7 = alloca i32, align 4
  %i8 = alloca [32 x i8], align 16
  %i9 = alloca [32 x i8], align 16
  %i10 = alloca %struct.stat, align 8
  %i11 = alloca %struct.stat, align 8
  %i12 = alloca %struct.stat, align 8
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %i12) #31
  store i8 0, ptr @deleteOutputOnInterrupt, align 1, !tbaa !21
  %i13 = icmp eq ptr %arg, null
  %i14 = load i32, ptr @srcMode, align 4
  %i15 = icmp ne i32 %i14, 1
  %i16 = select i1 %i13, i1 %i15, i1 false
  br i1 %i16, label %bb17, label %bb18

bb17:                                             ; preds = %bb
  tail call fastcc void @panic(ptr noundef nonnull @.str.53) #36
  unreachable

bb18:                                             ; preds = %bb
  switch i32 %i14, label %bb18.bb63_crit_edge [
    i32 1, label %bb19
    i32 3, label %bb22
    i32 2, label %bb49
  ]

bb18.bb63_crit_edge:                              ; preds = %bb18
  br label %bb63

bb19:                                             ; preds = %bb18
  %i20 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @inName, ptr noundef nonnull dereferenceable(8) @.str.54, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @inName, i64 0, i64 1024), align 16, !tbaa !21
  %i21 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @outName, ptr noundef nonnull dereferenceable(9) @.str.55, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @outName, i64 0, i64 1024), align 16, !tbaa !21
  br label %bb78

bb22:                                             ; preds = %bb18
  %i23 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %arg) #33
  %i24 = icmp ugt i64 %i23, 1024
  br i1 %i24, label %bb25, label %bb33

bb25:                                             ; preds = %bb22
  %i26 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i27 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i26, ptr noundef nonnull @.str.47, ptr noundef %arg, i32 noundef 1024) #32
  %i28 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i29 = icmp slt i32 %i28, 1
  br i1 %i29, label %bb30, label %bb25.bb31_crit_edge

bb25.bb31_crit_edge:                              ; preds = %bb25
  br label %bb31

bb30:                                             ; preds = %bb25
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb31

bb31:                                             ; preds = %bb25.bb31_crit_edge, %bb30
  %i32 = phi i32 [ %i28, %bb25.bb31_crit_edge ], [ 1, %bb30 ]
  tail call void @exit(i32 noundef %i32) #34
  unreachable

bb33:                                             ; preds = %bb22
  %i34 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @inName, ptr noundef nonnull dereferenceable(1) %arg, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @inName, i64 0, i64 1024), align 16, !tbaa !21
  %i35 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %arg) #33
  %i36 = icmp ugt i64 %i35, 1024
  br i1 %i36, label %bb37, label %bb45

bb37:                                             ; preds = %bb33
  %i38 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i39 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i38, ptr noundef nonnull @.str.47, ptr noundef %arg, i32 noundef 1024) #32
  %i40 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i41 = icmp slt i32 %i40, 1
  br i1 %i41, label %bb42, label %bb37.bb43_crit_edge

bb37.bb43_crit_edge:                              ; preds = %bb37
  br label %bb43

bb42:                                             ; preds = %bb37
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb43

bb43:                                             ; preds = %bb37.bb43_crit_edge, %bb42
  %i44 = phi i32 [ %i40, %bb37.bb43_crit_edge ], [ 1, %bb42 ]
  tail call void @exit(i32 noundef %i44) #34
  unreachable

bb45:                                             ; preds = %bb33
  %i46 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @outName, ptr noundef nonnull dereferenceable(1) %arg, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @outName, i64 0, i64 1024), align 16, !tbaa !21
  %i47 = tail call i64 @strlen(ptr nonnull dereferenceable(1) @outName)
  %i48 = getelementptr inbounds i8, ptr @outName, i64 %i47
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(5) %i48, ptr noundef nonnull align 1 dereferenceable(5) @.str.9, i64 5, i1 false)
  br label %bb63

bb49:                                             ; preds = %bb18
  %i50 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %arg) #33
  %i51 = icmp ugt i64 %i50, 1024
  br i1 %i51, label %bb52, label %bb60

bb52:                                             ; preds = %bb49
  %i53 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i54 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i53, ptr noundef nonnull @.str.47, ptr noundef %arg, i32 noundef 1024) #32
  %i55 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i56 = icmp slt i32 %i55, 1
  br i1 %i56, label %bb57, label %bb52.bb58_crit_edge

bb52.bb58_crit_edge:                              ; preds = %bb52
  br label %bb58

bb57:                                             ; preds = %bb52
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb58

bb58:                                             ; preds = %bb52.bb58_crit_edge, %bb57
  %i59 = phi i32 [ %i55, %bb52.bb58_crit_edge ], [ 1, %bb57 ]
  tail call void @exit(i32 noundef %i59) #34
  unreachable

bb60:                                             ; preds = %bb49
  %i61 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @inName, ptr noundef nonnull dereferenceable(1) %arg, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @inName, i64 0, i64 1024), align 16, !tbaa !21
  %i62 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @outName, ptr noundef nonnull dereferenceable(9) @.str.55, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @outName, i64 0, i64 1024), align 16, !tbaa !21
  br label %bb63

bb63:                                             ; preds = %bb18.bb63_crit_edge, %bb60, %bb45
  %i64 = tail call noalias ptr @fopen(ptr noundef nonnull @inName, ptr noundef nonnull @.str.66)
  %i65 = icmp eq ptr %i64, null
  br i1 %i65, label %bb68, label %bb66

bb66:                                             ; preds = %bb63
  %i67 = tail call i32 @fclose(ptr noundef nonnull %i64)
  br label %bb78

bb68:                                             ; preds = %bb63
  %i69 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i70 = load ptr, ptr @progName, align 8, !tbaa !20
  %i71 = tail call ptr @__errno_location() #35
  %i72 = load i32, ptr %i71, align 4, !tbaa !19
  %i73 = tail call ptr @strerror(i32 noundef %i72) #31
  %i74 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i69, ptr noundef nonnull @.str.57, ptr noundef %i70, ptr noundef nonnull @inName, ptr noundef %i73) #32
  %i75 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i76 = icmp slt i32 %i75, 1
  br i1 %i76, label %bb77, label %bb68.bb564_crit_edge

bb68.bb564_crit_edge:                             ; preds = %bb68
  br label %bb564

bb77:                                             ; preds = %bb68
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb564

bb78:                                             ; preds = %bb66, %bb19
  %i79 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) @inName) #33
  %i80 = trunc i64 %i79 to i32
  %i81 = shl i64 %i79, 32
  %i82 = ashr exact i64 %i81, 32
  %i83 = getelementptr inbounds i8, ptr @inName, i64 %i82
  %i84 = load ptr, ptr @zSuffix, align 16, !tbaa !20
  %i85 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %i84) #33
  %i86 = trunc i64 %i85 to i32
  %i87 = icmp slt i32 %i80, %i86
  br i1 %i87, label %bb78.bb107_crit_edge, label %bb88

bb78.bb107_crit_edge:                             ; preds = %bb78
  br label %bb107

bb88:                                             ; preds = %bb78
  %i89 = shl i64 %i85, 32
  %i90 = ashr exact i64 %i89, 32
  %i91 = sub nsw i64 0, %i90
  %i92 = getelementptr inbounds i8, ptr %i83, i64 %i91
  %i93 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i92, ptr noundef nonnull dereferenceable(1) %i84) #33
  %i94 = icmp eq i32 %i93, 0
  br i1 %i94, label %bb88.bb95_crit_edge, label %bb88.bb107_crit_edge

bb88.bb107_crit_edge:                             ; preds = %bb88
  br label %bb107

bb88.bb95_crit_edge:                              ; preds = %bb88
  br label %bb95

bb95:                                             ; preds = %bb136.bb95_crit_edge, %bb124.bb95_crit_edge, %bb112.bb95_crit_edge, %bb88.bb95_crit_edge
  %i96 = phi ptr [ %i84, %bb88.bb95_crit_edge ], [ %i108, %bb112.bb95_crit_edge ], [ %i120, %bb124.bb95_crit_edge ], [ %i132, %bb136.bb95_crit_edge ]
  %i97 = load i8, ptr @noisy, align 1, !tbaa !21
  %i98 = icmp eq i8 %i97, 0
  br i1 %i98, label %bb95.bb103_crit_edge, label %bb99

bb95.bb103_crit_edge:                             ; preds = %bb95
  br label %bb103

bb99:                                             ; preds = %bb95
  %i100 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i101 = load ptr, ptr @progName, align 8, !tbaa !20
  %i102 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i100, ptr noundef nonnull @.str.58, ptr noundef %i101, ptr noundef nonnull @inName, ptr noundef %i96) #32
  br label %bb103

bb103:                                            ; preds = %bb95.bb103_crit_edge, %bb99
  %i104 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i105 = icmp slt i32 %i104, 1
  br i1 %i105, label %bb106, label %bb103.bb564_crit_edge

bb103.bb564_crit_edge:                            ; preds = %bb103
  br label %bb564

bb106:                                            ; preds = %bb103
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb564

bb107:                                            ; preds = %bb88.bb107_crit_edge, %bb78.bb107_crit_edge
  %i108 = load ptr, ptr getelementptr inbounds ([4 x ptr], ptr @zSuffix, i64 0, i64 1), align 8, !tbaa !20
  %i109 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %i108) #33
  %i110 = trunc i64 %i109 to i32
  %i111 = icmp slt i32 %i80, %i110
  br i1 %i111, label %bb107.bb119_crit_edge, label %bb112

bb107.bb119_crit_edge:                            ; preds = %bb107
  br label %bb119

bb112:                                            ; preds = %bb107
  %i113 = shl i64 %i109, 32
  %i114 = ashr exact i64 %i113, 32
  %i115 = sub nsw i64 0, %i114
  %i116 = getelementptr inbounds i8, ptr %i83, i64 %i115
  %i117 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i116, ptr noundef nonnull dereferenceable(1) %i108) #33
  %i118 = icmp eq i32 %i117, 0
  br i1 %i118, label %bb112.bb95_crit_edge, label %bb112.bb119_crit_edge

bb112.bb119_crit_edge:                            ; preds = %bb112
  br label %bb119

bb112.bb95_crit_edge:                             ; preds = %bb112
  br label %bb95

bb119:                                            ; preds = %bb112.bb119_crit_edge, %bb107.bb119_crit_edge
  %i120 = load ptr, ptr getelementptr inbounds ([4 x ptr], ptr @zSuffix, i64 0, i64 2), align 16, !tbaa !20
  %i121 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %i120) #33
  %i122 = trunc i64 %i121 to i32
  %i123 = icmp slt i32 %i80, %i122
  br i1 %i123, label %bb119.bb131_crit_edge, label %bb124

bb119.bb131_crit_edge:                            ; preds = %bb119
  br label %bb131

bb124:                                            ; preds = %bb119
  %i125 = shl i64 %i121, 32
  %i126 = ashr exact i64 %i125, 32
  %i127 = sub nsw i64 0, %i126
  %i128 = getelementptr inbounds i8, ptr %i83, i64 %i127
  %i129 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i128, ptr noundef nonnull dereferenceable(1) %i120) #33
  %i130 = icmp eq i32 %i129, 0
  br i1 %i130, label %bb124.bb95_crit_edge, label %bb124.bb131_crit_edge

bb124.bb131_crit_edge:                            ; preds = %bb124
  br label %bb131

bb124.bb95_crit_edge:                             ; preds = %bb124
  br label %bb95

bb131:                                            ; preds = %bb124.bb131_crit_edge, %bb119.bb131_crit_edge
  %i132 = load ptr, ptr getelementptr inbounds ([4 x ptr], ptr @zSuffix, i64 0, i64 3), align 8, !tbaa !20
  %i133 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %i132) #33
  %i134 = trunc i64 %i133 to i32
  %i135 = icmp slt i32 %i80, %i134
  br i1 %i135, label %bb131.bb143_crit_edge, label %bb136

bb131.bb143_crit_edge:                            ; preds = %bb131
  br label %bb143

bb136:                                            ; preds = %bb131
  %i137 = shl i64 %i133, 32
  %i138 = ashr exact i64 %i137, 32
  %i139 = sub nsw i64 0, %i138
  %i140 = getelementptr inbounds i8, ptr %i83, i64 %i139
  %i141 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i140, ptr noundef nonnull dereferenceable(1) %i132) #33
  %i142 = icmp eq i32 %i141, 0
  br i1 %i142, label %bb136.bb95_crit_edge, label %bb136.bb143_crit_edge

bb136.bb143_crit_edge:                            ; preds = %bb136
  br label %bb143

bb136.bb95_crit_edge:                             ; preds = %bb136
  br label %bb95

bb143:                                            ; preds = %bb136.bb143_crit_edge, %bb131.bb143_crit_edge
  %i144 = load i32, ptr @srcMode, align 4
  %i145 = and i32 %i144, -2
  %i146 = icmp eq i32 %i145, 2
  br i1 %i146, label %bb147, label %bb143.bb162_crit_edge

bb143.bb162_crit_edge:                            ; preds = %bb143
  br label %bb162

bb147:                                            ; preds = %bb143
  %i148 = call i32 @stat(ptr noundef nonnull @inName, ptr noundef nonnull %i12) #31
  %i149 = getelementptr inbounds %struct.stat, ptr %i12, i64 0, i32 3
  %i150 = load i32, ptr %i149, align 8, !tbaa !97
  %i151 = and i32 %i150, 61440
  %i152 = icmp eq i32 %i151, 16384
  br i1 %i152, label %bb155, label %bb153

bb153:                                            ; preds = %bb147
  %i154 = load i32, ptr @srcMode, align 4, !tbaa !19
  br label %bb162

bb155:                                            ; preds = %bb147
  %i156 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i157 = load ptr, ptr @progName, align 8, !tbaa !20
  %i158 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i156, ptr noundef nonnull @.str.59, ptr noundef %i157, ptr noundef nonnull @inName) #32
  %i159 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i160 = icmp slt i32 %i159, 1
  br i1 %i160, label %bb161, label %bb155.bb564_crit_edge

bb155.bb564_crit_edge:                            ; preds = %bb155
  br label %bb564

bb161:                                            ; preds = %bb155
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb564

bb162:                                            ; preds = %bb143.bb162_crit_edge, %bb153
  %i163 = phi i32 [ %i154, %bb153 ], [ %i144, %bb143.bb162_crit_edge ]
  %i164 = icmp ne i32 %i163, 3
  %i165 = load i8, ptr @forceOverwrite, align 1
  %i166 = icmp ne i8 %i165, 0
  %i167 = select i1 %i164, i1 true, i1 %i166
  br i1 %i167, label %bb162.bb189_crit_edge, label %bb168

bb162.bb189_crit_edge:                            ; preds = %bb162
  br label %bb189

bb168:                                            ; preds = %bb162
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %i11) #31
  %i169 = call i32 @lstat(ptr noundef nonnull @inName, ptr noundef nonnull %i11) #31
  %i170 = icmp eq i32 %i169, 0
  %i171 = getelementptr inbounds %struct.stat, ptr %i11, i64 0, i32 3
  %i172 = load i32, ptr %i171, align 8
  %i173 = and i32 %i172, 61440
  %i174 = icmp eq i32 %i173, 32768
  %i175 = select i1 %i170, i1 %i174, i1 false
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %i11) #31
  br i1 %i175, label %bb187, label %bb176

bb176:                                            ; preds = %bb168
  %i177 = load i8, ptr @noisy, align 1, !tbaa !21
  %i178 = icmp eq i8 %i177, 0
  br i1 %i178, label %bb176.bb183_crit_edge, label %bb179

bb176.bb183_crit_edge:                            ; preds = %bb176
  br label %bb183

bb179:                                            ; preds = %bb176
  %i180 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i181 = load ptr, ptr @progName, align 8, !tbaa !20
  %i182 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i180, ptr noundef nonnull @.str.60, ptr noundef %i181, ptr noundef nonnull @inName) #32
  br label %bb183

bb183:                                            ; preds = %bb176.bb183_crit_edge, %bb179
  %i184 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i185 = icmp slt i32 %i184, 1
  br i1 %i185, label %bb186, label %bb183.bb564_crit_edge

bb183.bb564_crit_edge:                            ; preds = %bb183
  br label %bb564

bb186:                                            ; preds = %bb183
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb564

bb187:                                            ; preds = %bb168
  %i188 = load i32, ptr @srcMode, align 4, !tbaa !19
  br label %bb189

bb189:                                            ; preds = %bb162.bb189_crit_edge, %bb187
  %i190 = phi i32 [ %i188, %bb187 ], [ %i163, %bb162.bb189_crit_edge ]
  %i191 = icmp eq i32 %i190, 3
  br i1 %i191, label %bb192, label %bb189.bb208_crit_edge

bb189.bb208_crit_edge:                            ; preds = %bb189
  br label %bb208

bb192:                                            ; preds = %bb189
  %i193 = tail call noalias ptr @fopen(ptr noundef nonnull @outName, ptr noundef nonnull @.str.66)
  %i194 = icmp eq ptr %i193, null
  br i1 %i194, label %bb192.bb208_crit_edge, label %bb195

bb192.bb208_crit_edge:                            ; preds = %bb192
  br label %bb208

bb195:                                            ; preds = %bb192
  %i196 = tail call i32 @fclose(ptr noundef nonnull %i193)
  %i197 = load i8, ptr @forceOverwrite, align 1, !tbaa !21
  %i198 = icmp eq i8 %i197, 0
  br i1 %i198, label %bb201, label %bb199

bb199:                                            ; preds = %bb195
  %i200 = tail call i32 @remove(ptr noundef nonnull @outName) #31
  br label %bb208

bb201:                                            ; preds = %bb195
  %i202 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i203 = load ptr, ptr @progName, align 8, !tbaa !20
  %i204 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i202, ptr noundef nonnull @.str.61, ptr noundef %i203, ptr noundef nonnull @outName) #32
  %i205 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i206 = icmp slt i32 %i205, 1
  br i1 %i206, label %bb207, label %bb201.bb564_crit_edge

bb201.bb564_crit_edge:                            ; preds = %bb201
  br label %bb564

bb207:                                            ; preds = %bb201
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb564

bb208:                                            ; preds = %bb192.bb208_crit_edge, %bb189.bb208_crit_edge, %bb199
  %i209 = load i32, ptr @srcMode, align 4, !tbaa !19
  %i210 = icmp ne i32 %i209, 3
  %i211 = load i8, ptr @forceOverwrite, align 1
  %i212 = icmp ne i8 %i211, 0
  %i213 = select i1 %i210, i1 true, i1 %i212
  br i1 %i213, label %bb208.bb234_crit_edge, label %bb214

bb208.bb234_crit_edge:                            ; preds = %bb208
  br label %bb234

bb214:                                            ; preds = %bb208
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %i10) #31
  %i215 = call i32 @lstat(ptr noundef nonnull @inName, ptr noundef nonnull %i10) #31
  %i216 = icmp eq i32 %i215, 0
  %i217 = getelementptr inbounds %struct.stat, ptr %i10, i64 0, i32 2
  %i218 = load i64, ptr %i217, align 8
  %i219 = trunc i64 %i218 to i32
  %i220 = add i32 %i219, -1
  %i221 = select i1 %i216, i32 %i220, i32 0
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %i10) #31
  %i222 = icmp sgt i32 %i221, 0
  br i1 %i222, label %bb223, label %bb232

bb223:                                            ; preds = %bb214
  %i224 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i225 = load ptr, ptr @progName, align 8, !tbaa !20
  %i226 = icmp eq i32 %i221, 1
  %i227 = select i1 %i226, ptr @.str.4.13, ptr @.str.63
  %i228 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i224, ptr noundef nonnull @.str.62, ptr noundef %i225, ptr noundef nonnull @inName, i32 noundef %i221, ptr noundef nonnull %i227) #32
  %i229 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i230 = icmp slt i32 %i229, 1
  br i1 %i230, label %bb231, label %bb223.bb564_crit_edge

bb223.bb564_crit_edge:                            ; preds = %bb223
  br label %bb564

bb231:                                            ; preds = %bb223
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb564

bb232:                                            ; preds = %bb214
  %i233 = load i32, ptr @srcMode, align 4, !tbaa !19
  br label %bb234

bb234:                                            ; preds = %bb208.bb234_crit_edge, %bb232
  %i235 = phi i32 [ %i233, %bb232 ], [ %i209, %bb208.bb234_crit_edge ]
  %i236 = icmp eq i32 %i235, 3
  br i1 %i236, label %bb237, label %bb234.bb243_crit_edge

bb234.bb243_crit_edge:                            ; preds = %bb234
  br label %bb243

bb237:                                            ; preds = %bb234
  %i238 = tail call i32 @stat(ptr noundef nonnull @inName, ptr noundef nonnull @fileMetaInfo) #31
  %i239 = icmp eq i32 %i238, 0
  br i1 %i239, label %bb240, label %bb242

bb240:                                            ; preds = %bb237
  %i241 = load i32, ptr @srcMode, align 4, !tbaa !19
  br label %bb243

bb242:                                            ; preds = %bb237
  tail call fastcc void @ioError() #36
  unreachable

bb243:                                            ; preds = %bb234.bb243_crit_edge, %bb240
  %i244 = phi i32 [ %i241, %bb240 ], [ %i235, %bb234.bb243_crit_edge ]
  switch i32 %i244, label %bb329 [
    i32 1, label %bb245
    i32 2, label %bb261
    i32 3, label %bb293
  ]

bb245:                                            ; preds = %bb243
  %i246 = load ptr, ptr @stdin, align 8, !tbaa !20
  %i247 = load ptr, ptr @stdout, align 8, !tbaa !20
  %i248 = tail call i32 @fileno(ptr noundef %i247) #31
  %i249 = tail call i32 @isatty(i32 noundef %i248) #31
  %i250 = icmp eq i32 %i249, 0
  br i1 %i250, label %bb245.bb330_crit_edge, label %bb251

bb245.bb330_crit_edge:                            ; preds = %bb245
  br label %bb330

bb251:                                            ; preds = %bb245
  %i252 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i253 = load ptr, ptr @progName, align 8, !tbaa !20
  %i254 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i252, ptr noundef nonnull @.str.64, ptr noundef %i253) #32
  %i255 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i256 = load ptr, ptr @progName, align 8, !tbaa !20
  %i257 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i255, ptr noundef nonnull @.str.65, ptr noundef %i256, ptr noundef %i256) #32
  %i258 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i259 = icmp slt i32 %i258, 1
  br i1 %i259, label %bb260, label %bb251.bb564_crit_edge

bb251.bb564_crit_edge:                            ; preds = %bb251
  br label %bb564

bb260:                                            ; preds = %bb251
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb564

bb261:                                            ; preds = %bb243
  %i262 = tail call noalias ptr @fopen(ptr noundef nonnull @inName, ptr noundef nonnull @.str.66)
  %i263 = load ptr, ptr @stdout, align 8, !tbaa !20
  %i264 = tail call i32 @fileno(ptr noundef %i263) #31
  %i265 = tail call i32 @isatty(i32 noundef %i264) #31
  %i266 = icmp eq i32 %i265, 0
  br i1 %i266, label %bb281, label %bb267

bb267:                                            ; preds = %bb261
  %i268 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i269 = load ptr, ptr @progName, align 8, !tbaa !20
  %i270 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i268, ptr noundef nonnull @.str.64, ptr noundef %i269) #32
  %i271 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i272 = load ptr, ptr @progName, align 8, !tbaa !20
  %i273 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i271, ptr noundef nonnull @.str.65, ptr noundef %i272, ptr noundef %i272) #32
  %i274 = icmp eq ptr %i262, null
  br i1 %i274, label %bb267.bb277_crit_edge, label %bb275

bb267.bb277_crit_edge:                            ; preds = %bb267
  br label %bb277

bb275:                                            ; preds = %bb267
  %i276 = tail call i32 @fclose(ptr noundef nonnull %i262)
  br label %bb277

bb277:                                            ; preds = %bb267.bb277_crit_edge, %bb275
  %i278 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i279 = icmp slt i32 %i278, 1
  br i1 %i279, label %bb280, label %bb277.bb564_crit_edge

bb277.bb564_crit_edge:                            ; preds = %bb277
  br label %bb564

bb280:                                            ; preds = %bb277
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb564

bb281:                                            ; preds = %bb261
  %i282 = icmp eq ptr %i262, null
  br i1 %i282, label %bb283, label %bb281.bb330_crit_edge

bb281.bb330_crit_edge:                            ; preds = %bb281
  br label %bb330

bb283:                                            ; preds = %bb281
  %i284 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i285 = load ptr, ptr @progName, align 8, !tbaa !20
  %i286 = tail call ptr @__errno_location() #35
  %i287 = load i32, ptr %i286, align 4, !tbaa !19
  %i288 = tail call ptr @strerror(i32 noundef %i287) #31
  %i289 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i284, ptr noundef nonnull @.str.57, ptr noundef %i285, ptr noundef nonnull @inName, ptr noundef %i288) #32
  %i290 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i291 = icmp slt i32 %i290, 1
  br i1 %i291, label %bb292, label %bb283.bb564_crit_edge

bb283.bb564_crit_edge:                            ; preds = %bb283
  br label %bb564

bb292:                                            ; preds = %bb283
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb564

bb293:                                            ; preds = %bb243
  %i294 = tail call noalias ptr @fopen(ptr noundef nonnull @inName, ptr noundef nonnull @.str.66)
  %i295 = tail call i32 (ptr, i32, ...) @open(ptr noundef nonnull @outName, i32 noundef 193, i32 noundef 384) #31
  %i296 = icmp eq i32 %i295, -1
  br i1 %i296, label %bb293.bb302_crit_edge, label %bb297

bb293.bb302_crit_edge:                            ; preds = %bb293
  br label %bb302

bb297:                                            ; preds = %bb293
  %i298 = tail call noalias ptr @fdopen(i32 noundef %i295, ptr noundef nonnull @.str.67) #31
  %i299 = icmp eq ptr %i298, null
  br i1 %i299, label %bb300, label %bb316

bb300:                                            ; preds = %bb297
  %i301 = tail call i32 @close(i32 noundef %i295) #31
  br label %bb302

bb302:                                            ; preds = %bb293.bb302_crit_edge, %bb300
  %i303 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i304 = load ptr, ptr @progName, align 8, !tbaa !20
  %i305 = tail call ptr @__errno_location() #35
  %i306 = load i32, ptr %i305, align 4, !tbaa !19
  %i307 = tail call ptr @strerror(i32 noundef %i306) #31
  %i308 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i303, ptr noundef nonnull @.str.68, ptr noundef %i304, ptr noundef nonnull @outName, ptr noundef %i307) #32
  %i309 = icmp eq ptr %i294, null
  br i1 %i309, label %bb302.bb312_crit_edge, label %bb310

bb302.bb312_crit_edge:                            ; preds = %bb302
  br label %bb312

bb310:                                            ; preds = %bb302
  %i311 = tail call i32 @fclose(ptr noundef nonnull %i294)
  br label %bb312

bb312:                                            ; preds = %bb302.bb312_crit_edge, %bb310
  %i313 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i314 = icmp slt i32 %i313, 1
  br i1 %i314, label %bb315, label %bb312.bb564_crit_edge

bb312.bb564_crit_edge:                            ; preds = %bb312
  br label %bb564

bb315:                                            ; preds = %bb312
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb564

bb316:                                            ; preds = %bb297
  %i317 = icmp eq ptr %i294, null
  br i1 %i317, label %bb318, label %bb316.bb330_crit_edge

bb316.bb330_crit_edge:                            ; preds = %bb316
  br label %bb330

bb318:                                            ; preds = %bb316
  %i319 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i320 = load ptr, ptr @progName, align 8, !tbaa !20
  %i321 = tail call ptr @__errno_location() #35
  %i322 = load i32, ptr %i321, align 4, !tbaa !19
  %i323 = tail call ptr @strerror(i32 noundef %i322) #31
  %i324 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i319, ptr noundef nonnull @.str.57, ptr noundef %i320, ptr noundef nonnull @inName, ptr noundef %i323) #32
  %i325 = tail call i32 @fclose(ptr noundef nonnull %i298)
  %i326 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i327 = icmp slt i32 %i326, 1
  br i1 %i327, label %bb328, label %bb318.bb564_crit_edge

bb318.bb564_crit_edge:                            ; preds = %bb318
  br label %bb564

bb328:                                            ; preds = %bb318
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb564

bb329:                                            ; preds = %bb243
  tail call fastcc void @panic(ptr noundef nonnull @.str.69) #36
  unreachable

bb330:                                            ; preds = %bb316.bb330_crit_edge, %bb281.bb330_crit_edge, %bb245.bb330_crit_edge
  %i331 = phi ptr [ %i298, %bb316.bb330_crit_edge ], [ %i263, %bb281.bb330_crit_edge ], [ %i247, %bb245.bb330_crit_edge ]
  %i332 = phi ptr [ %i294, %bb316.bb330_crit_edge ], [ %i262, %bb281.bb330_crit_edge ], [ %i246, %bb245.bb330_crit_edge ]
  %i333 = load i32, ptr @verbosity, align 4, !tbaa !19
  %i334 = icmp sgt i32 %i333, 0
  br i1 %i334, label %bb335, label %bb330.bb340_crit_edge

bb330.bb340_crit_edge:                            ; preds = %bb330
  br label %bb340

bb335:                                            ; preds = %bb330
  %i336 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i337 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i336, ptr noundef nonnull @.str.70, ptr noundef nonnull @inName) #32
  tail call fastcc void @pad()
  %i338 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i339 = tail call i32 @fflush(ptr noundef %i338)
  br label %bb340

bb340:                                            ; preds = %bb330.bb340_crit_edge, %bb335
  store ptr %i331, ptr @outputHandleJustInCase, align 8, !tbaa !20
  store i8 1, ptr @deleteOutputOnInterrupt, align 1, !tbaa !21
  call void @llvm.lifetime.start.p0(i64 5000, ptr nonnull %i1) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i2) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i3) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i4) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i5) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i6) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i7) #31
  %i341 = tail call i32 @ferror(ptr noundef %i332) #31
  %i342 = icmp eq i32 %i341, 0
  br i1 %i342, label %bb343, label %bb340.bb544_crit_edge

bb340.bb544_crit_edge:                            ; preds = %bb340
  br label %bb544

bb343:                                            ; preds = %bb340
  %i344 = tail call i32 @ferror(ptr noundef %i331) #31
  %i345 = icmp eq i32 %i344, 0
  br i1 %i345, label %bb346, label %bb343.bb544_crit_edge

bb343.bb544_crit_edge:                            ; preds = %bb343
  br label %bb544

bb346:                                            ; preds = %bb343
  %i347 = load i32, ptr @blockSize100k, align 4, !tbaa !19
  %i348 = load i32, ptr @verbosity, align 4, !tbaa !19
  %i349 = load i32, ptr @workFactor, align 4, !tbaa !19
  %i350 = call ptr @BZ2_bzWriteOpen(ptr noundef nonnull %i6, ptr noundef %i331, i32 noundef %i347, i32 noundef %i348, i32 noundef %i349) #31
  %i351 = load i32, ptr %i6, align 4, !tbaa !19
  %i352 = icmp eq i32 %i351, 0
  br i1 %i352, label %bb353, label %bb346.bb540_crit_edge

bb346.bb540_crit_edge:                            ; preds = %bb346
  br label %bb540

bb353:                                            ; preds = %bb346
  %i354 = load i32, ptr @verbosity, align 4, !tbaa !19
  %i355 = icmp sgt i32 %i354, 1
  br i1 %i355, label %bb356, label %bb353.bb359_crit_edge

bb353.bb359_crit_edge:                            ; preds = %bb353
  br label %bb359

bb356:                                            ; preds = %bb353
  %i357 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i358 = call i32 @fputc(i32 10, ptr %i357)
  br label %bb359

bb359:                                            ; preds = %bb353.bb359_crit_edge, %bb356
  br label %bb360

bb360:                                            ; preds = %bb372.bb360_crit_edge, %bb359
  %i361 = call i32 @fgetc(ptr noundef %i332)
  %i362 = icmp eq i32 %i361, -1
  br i1 %i362, label %bb375, label %bb363

bb363:                                            ; preds = %bb360
  %i364 = call i32 @ungetc(i32 noundef %i361, ptr noundef %i332)
  %i365 = call i64 @fread(ptr noundef nonnull %i1, i64 noundef 1, i64 noundef 5000, ptr noundef %i332)
  %i366 = trunc i64 %i365 to i32
  %i367 = call i32 @ferror(ptr noundef %i332) #31
  %i368 = icmp eq i32 %i367, 0
  br i1 %i368, label %bb369, label %bb544.loopexit

bb369:                                            ; preds = %bb363
  %i370 = icmp sgt i32 %i366, 0
  br i1 %i370, label %bb371, label %bb369.bb372_crit_edge

bb369.bb372_crit_edge:                            ; preds = %bb369
  br label %bb372

bb371:                                            ; preds = %bb369
  call void @BZ2_bzWrite(ptr noundef nonnull %i6, ptr noundef %i350, ptr noundef nonnull %i1, i32 noundef %i366) #31
  br label %bb372

bb372:                                            ; preds = %bb369.bb372_crit_edge, %bb371
  %i373 = load i32, ptr %i6, align 4, !tbaa !19
  %i374 = icmp eq i32 %i373, 0
  br i1 %i374, label %bb372.bb360_crit_edge, label %bb540.loopexit

bb372.bb360_crit_edge:                            ; preds = %bb372
  br label %bb360

bb375:                                            ; preds = %bb360
  call void @BZ2_bzWriteClose64(ptr noundef nonnull %i6, ptr noundef %i350, i32 noundef 0, ptr noundef nonnull %i2, ptr noundef nonnull %i3, ptr noundef nonnull %i4, ptr noundef nonnull %i5) #31
  %i376 = load i32, ptr %i6, align 4, !tbaa !19
  %i377 = icmp eq i32 %i376, 0
  br i1 %i377, label %bb378, label %bb375.bb540_crit_edge

bb375.bb540_crit_edge:                            ; preds = %bb375
  br label %bb540

bb378:                                            ; preds = %bb375
  %i379 = call i32 @ferror(ptr noundef %i331) #31
  %i380 = icmp eq i32 %i379, 0
  br i1 %i380, label %bb381, label %bb378.bb544_crit_edge

bb378.bb544_crit_edge:                            ; preds = %bb378
  br label %bb544

bb381:                                            ; preds = %bb378
  %i382 = call i32 @fflush(ptr noundef %i331)
  %i383 = icmp eq i32 %i382, -1
  br i1 %i383, label %bb381.bb544_crit_edge, label %bb384

bb381.bb544_crit_edge:                            ; preds = %bb381
  br label %bb544

bb384:                                            ; preds = %bb381
  %i385 = load ptr, ptr @stdout, align 8, !tbaa !20
  %i386 = icmp eq ptr %i385, %i331
  br i1 %i386, label %bb384.bb401_crit_edge, label %bb387

bb384.bb401_crit_edge:                            ; preds = %bb384
  br label %bb401

bb387:                                            ; preds = %bb384
  %i388 = call i32 @fileno(ptr noundef %i331) #31
  %i389 = icmp slt i32 %i388, 0
  br i1 %i389, label %bb387.bb544_crit_edge, label %bb390

bb387.bb544_crit_edge:                            ; preds = %bb387
  br label %bb544

bb390:                                            ; preds = %bb387
  %i391 = load i32, ptr getelementptr inbounds (%struct.stat, ptr @fileMetaInfo, i64 0, i32 3), align 8, !tbaa !97
  %i392 = call i32 @fchmod(i32 noundef %i388, i32 noundef %i391) #31
  %i393 = icmp eq i32 %i392, 0
  br i1 %i393, label %bb395, label %bb394

bb394:                                            ; preds = %bb390
  call fastcc void @ioError() #36
  unreachable

bb395:                                            ; preds = %bb390
  %i396 = load i32, ptr getelementptr inbounds (%struct.stat, ptr @fileMetaInfo, i64 0, i32 4), align 4, !tbaa !101
  %i397 = load i32, ptr getelementptr inbounds (%struct.stat, ptr @fileMetaInfo, i64 0, i32 5), align 8, !tbaa !102
  %i398 = call i32 @fchown(i32 noundef %i388, i32 noundef %i396, i32 noundef %i397) #31
  %i399 = call i32 @fclose(ptr noundef %i331)
  store ptr null, ptr @outputHandleJustInCase, align 8, !tbaa !20
  %i400 = icmp eq i32 %i399, -1
  br i1 %i400, label %bb395.bb544_crit_edge, label %bb395.bb401_crit_edge

bb395.bb401_crit_edge:                            ; preds = %bb395
  br label %bb401

bb395.bb544_crit_edge:                            ; preds = %bb395
  br label %bb544

bb401:                                            ; preds = %bb395.bb401_crit_edge, %bb384.bb401_crit_edge
  store ptr null, ptr @outputHandleJustInCase, align 8, !tbaa !20
  %i402 = call i32 @ferror(ptr noundef %i332) #31
  %i403 = icmp eq i32 %i402, 0
  br i1 %i403, label %bb404, label %bb401.bb544_crit_edge

bb401.bb544_crit_edge:                            ; preds = %bb401
  br label %bb544

bb404:                                            ; preds = %bb401
  %i405 = call i32 @fclose(ptr noundef %i332)
  %i406 = icmp eq i32 %i405, -1
  br i1 %i406, label %bb404.bb544_crit_edge, label %bb407

bb404.bb544_crit_edge:                            ; preds = %bb404
  br label %bb544

bb407:                                            ; preds = %bb404
  %i408 = load i32, ptr @verbosity, align 4, !tbaa !19
  %i409 = icmp sgt i32 %i408, 0
  br i1 %i409, label %bb410, label %bb407.bb546_crit_edge

bb407.bb546_crit_edge:                            ; preds = %bb407
  br label %bb546

bb410:                                            ; preds = %bb407
  %i411 = load i32, ptr %i2, align 4, !tbaa !19
  %i412 = icmp eq i32 %i411, 0
  %i413 = load i32, ptr %i3, align 4
  %i414 = icmp eq i32 %i413, 0
  %i415 = select i1 %i412, i1 %i414, i1 false
  br i1 %i415, label %bb416, label %bb419

bb416:                                            ; preds = %bb410
  %i417 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i418 = call i64 @fwrite(ptr nonnull @.str.74, i64 21, i64 1, ptr %i417) #32
  br label %bb546

bb419:                                            ; preds = %bb410
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %i8) #31
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %i9) #31
  %i420 = lshr i32 %i413, 24
  %i421 = trunc i32 %i420 to i8
  %i422 = lshr i32 %i413, 16
  %i423 = trunc i32 %i422 to i8
  %i424 = lshr i32 %i413, 8
  %i425 = trunc i32 %i424 to i8
  %i426 = trunc i32 %i413 to i8
  %i427 = lshr i32 %i411, 24
  %i428 = trunc i32 %i427 to i8
  %i429 = lshr i32 %i411, 16
  %i430 = trunc i32 %i429 to i8
  %i431 = lshr i32 %i411, 8
  %i432 = trunc i32 %i431 to i8
  %i433 = trunc i32 %i411 to i8
  %i434 = load i32, ptr %i4, align 4, !tbaa !19
  %i435 = load i32, ptr %i5, align 4, !tbaa !19
  %i436 = lshr i32 %i435, 24
  %i437 = trunc i32 %i436 to i8
  %i438 = lshr i32 %i435, 16
  %i439 = trunc i32 %i438 to i8
  %i440 = lshr i32 %i435, 8
  %i441 = trunc i32 %i440 to i8
  %i442 = trunc i32 %i435 to i8
  %i443 = lshr i32 %i434, 24
  %i444 = trunc i32 %i443 to i8
  %i445 = lshr i32 %i434, 16
  %i446 = trunc i32 %i445 to i8
  %i447 = lshr i32 %i434, 8
  %i448 = trunc i32 %i447 to i8
  %i449 = trunc i32 %i434 to i8
  %i450 = uitofp i8 %i433 to double
  %i451 = uitofp i8 %i432 to double
  %i452 = call double @llvm.fmuladd.f64(double %i451, double 2.560000e+02, double %i450)
  %i453 = uitofp i8 %i430 to double
  %i454 = call double @llvm.fmuladd.f64(double %i453, double 6.553600e+04, double %i452)
  %i455 = uitofp i8 %i428 to double
  %i456 = call double @llvm.fmuladd.f64(double %i455, double 0x4170000000000000, double %i454)
  %i457 = uitofp i8 %i426 to double
  %i458 = call double @llvm.fmuladd.f64(double %i457, double 0x41F0000000000000, double %i456)
  %i459 = uitofp i8 %i425 to double
  %i460 = call double @llvm.fmuladd.f64(double %i459, double 0x4270000000000000, double %i458)
  %i461 = uitofp i8 %i423 to double
  %i462 = call double @llvm.fmuladd.f64(double %i461, double 0x42F0000000000000, double %i460)
  %i463 = uitofp i8 %i421 to double
  %i464 = call double @llvm.fmuladd.f64(double %i463, double 0x4370000000000000, double %i462)
  %i465 = uitofp i8 %i449 to double
  %i466 = uitofp i8 %i448 to double
  %i467 = call double @llvm.fmuladd.f64(double %i466, double 2.560000e+02, double %i465)
  %i468 = uitofp i8 %i446 to double
  %i469 = call double @llvm.fmuladd.f64(double %i468, double 6.553600e+04, double %i467)
  %i470 = uitofp i8 %i444 to double
  %i471 = call double @llvm.fmuladd.f64(double %i470, double 0x4170000000000000, double %i469)
  %i472 = uitofp i8 %i442 to double
  %i473 = call double @llvm.fmuladd.f64(double %i472, double 0x41F0000000000000, double %i471)
  %i474 = uitofp i8 %i441 to double
  %i475 = call double @llvm.fmuladd.f64(double %i474, double 0x4270000000000000, double %i473)
  %i476 = uitofp i8 %i439 to double
  %i477 = call double @llvm.fmuladd.f64(double %i476, double 0x42F0000000000000, double %i475)
  %i478 = uitofp i8 %i437 to double
  %i479 = call double @llvm.fmuladd.f64(double %i478, double 0x4370000000000000, double %i477)
  %i480 = zext nneg i32 %i420 to i64
  %i481 = shl nuw i64 %i480, 56
  %i482 = and i32 %i422, 255
  %i483 = zext nneg i32 %i482 to i64
  %i484 = shl nuw nsw i64 %i483, 48
  %i485 = or disjoint i64 %i484, %i481
  %i486 = and i32 %i424, 255
  %i487 = zext nneg i32 %i486 to i64
  %i488 = shl nuw nsw i64 %i487, 40
  %i489 = or disjoint i64 %i485, %i488
  %i490 = and i32 %i413, 255
  %i491 = zext nneg i32 %i490 to i64
  %i492 = shl nuw nsw i64 %i491, 32
  %i493 = or disjoint i64 %i489, %i492
  %i494 = and i32 %i411, -16777216
  %i495 = zext i32 %i494 to i64
  %i496 = or disjoint i64 %i493, %i495
  %i497 = and i32 %i411, 16711680
  %i498 = zext nneg i32 %i497 to i64
  %i499 = or disjoint i64 %i496, %i498
  %i500 = and i32 %i411, 255
  %i501 = zext nneg i32 %i500 to i64
  %i502 = and i32 %i411, 65280
  %i503 = zext nneg i32 %i502 to i64
  %i504 = or disjoint i64 %i499, %i503
  %i505 = or i64 %i504, %i501
  call fastcc void @uInt64_toAscii(ptr noundef nonnull %i8, i64 %i505)
  %i506 = zext nneg i32 %i436 to i64
  %i507 = shl nuw i64 %i506, 56
  %i508 = and i32 %i438, 255
  %i509 = zext nneg i32 %i508 to i64
  %i510 = shl nuw nsw i64 %i509, 48
  %i511 = or disjoint i64 %i510, %i507
  %i512 = and i32 %i440, 255
  %i513 = zext nneg i32 %i512 to i64
  %i514 = shl nuw nsw i64 %i513, 40
  %i515 = or disjoint i64 %i511, %i514
  %i516 = and i32 %i435, 255
  %i517 = zext nneg i32 %i516 to i64
  %i518 = shl nuw nsw i64 %i517, 32
  %i519 = or disjoint i64 %i515, %i518
  %i520 = and i32 %i434, -16777216
  %i521 = zext i32 %i520 to i64
  %i522 = or disjoint i64 %i519, %i521
  %i523 = and i32 %i434, 16711680
  %i524 = zext nneg i32 %i523 to i64
  %i525 = or disjoint i64 %i522, %i524
  %i526 = and i32 %i434, 255
  %i527 = zext nneg i32 %i526 to i64
  %i528 = and i32 %i434, 65280
  %i529 = zext nneg i32 %i528 to i64
  %i530 = or disjoint i64 %i525, %i529
  %i531 = or i64 %i530, %i527
  call fastcc void @uInt64_toAscii(ptr noundef nonnull %i9, i64 %i531)
  %i532 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i533 = fdiv double %i464, %i479
  %i534 = fmul double %i479, 8.000000e+00
  %i535 = fdiv double %i534, %i464
  %i536 = fdiv double %i479, %i464
  %i537 = fsub double 1.000000e+00, %i536
  %i538 = fmul double %i537, 1.000000e+02
  %i539 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i532, ptr noundef nonnull @.str.75, double noundef %i533, double noundef %i535, double noundef %i538, ptr noundef nonnull %i8, ptr noundef nonnull %i9) #32
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %i9) #31
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %i8) #31
  br label %bb546

bb540.loopexit:                                   ; preds = %bb372
  br label %bb540

bb540:                                            ; preds = %bb375.bb540_crit_edge, %bb346.bb540_crit_edge, %bb540.loopexit
  call void @BZ2_bzWriteClose64(ptr noundef nonnull %i7, ptr noundef %i350, i32 noundef 1, ptr noundef nonnull %i2, ptr noundef nonnull %i3, ptr noundef nonnull %i4, ptr noundef nonnull %i5) #31
  %i541 = load i32, ptr %i6, align 4, !tbaa !19
  switch i32 %i541, label %bb545 [
    i32 -9, label %bb542
    i32 -3, label %bb543
    i32 -6, label %bb540.bb544_crit_edge
  ]

bb540.bb544_crit_edge:                            ; preds = %bb540
  br label %bb544

bb542:                                            ; preds = %bb540
  call fastcc void @configError() #36
  unreachable

bb543:                                            ; preds = %bb540
  call fastcc void @outOfMemory() #36
  unreachable

bb544.loopexit:                                   ; preds = %bb363
  br label %bb544

bb544:                                            ; preds = %bb540.bb544_crit_edge, %bb404.bb544_crit_edge, %bb401.bb544_crit_edge, %bb395.bb544_crit_edge, %bb387.bb544_crit_edge, %bb381.bb544_crit_edge, %bb378.bb544_crit_edge, %bb343.bb544_crit_edge, %bb340.bb544_crit_edge, %bb544.loopexit
  call fastcc void @ioError() #36
  unreachable

bb545:                                            ; preds = %bb540
  call fastcc void @panic(ptr noundef nonnull @.str.76) #36
  unreachable

bb546:                                            ; preds = %bb407.bb546_crit_edge, %bb419, %bb416
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i7) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i6) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i5) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i4) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i3) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i2) #31
  call void @llvm.lifetime.end.p0(i64 5000, ptr nonnull %i1) #31
  store ptr null, ptr @outputHandleJustInCase, align 8, !tbaa !20
  %i547 = load i32, ptr @srcMode, align 4, !tbaa !19
  %i548 = icmp eq i32 %i547, 3
  br i1 %i548, label %bb549, label %bb546.bb563_crit_edge

bb546.bb563_crit_edge:                            ; preds = %bb546
  br label %bb563

bb549:                                            ; preds = %bb546
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %i) #31
  %i550 = load i64, ptr getelementptr inbounds (%struct.stat, ptr @fileMetaInfo, i64 0, i32 11), align 8, !tbaa !103
  store i64 %i550, ptr %i, align 8, !tbaa !104
  %i551 = load i64, ptr getelementptr inbounds (%struct.stat, ptr @fileMetaInfo, i64 0, i32 12), align 8, !tbaa !106
  %i552 = getelementptr inbounds %struct.timespec, ptr %i, i64 0, i32 1
  store i64 %i551, ptr %i552, align 8, !tbaa !107
  %i553 = call i32 @utime(ptr noundef nonnull @outName, ptr noundef nonnull %i) #31
  %i554 = icmp eq i32 %i553, 0
  br i1 %i554, label %bb556, label %bb555

bb555:                                            ; preds = %bb549
  call fastcc void @ioError() #36
  unreachable

bb556:                                            ; preds = %bb549
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %i) #31
  store i8 0, ptr @deleteOutputOnInterrupt, align 1, !tbaa !21
  %i557 = load i8, ptr @keepInputFiles, align 1, !tbaa !21
  %i558 = icmp eq i8 %i557, 0
  br i1 %i558, label %bb559, label %bb556.bb563_crit_edge

bb556.bb563_crit_edge:                            ; preds = %bb556
  br label %bb563

bb559:                                            ; preds = %bb556
  %i560 = call i32 @remove(ptr noundef nonnull @inName) #31
  %i561 = icmp eq i32 %i560, 0
  br i1 %i561, label %bb559.bb563_crit_edge, label %bb562

bb559.bb563_crit_edge:                            ; preds = %bb559
  br label %bb563

bb562:                                            ; preds = %bb559
  call fastcc void @ioError() #36
  unreachable

bb563:                                            ; preds = %bb559.bb563_crit_edge, %bb556.bb563_crit_edge, %bb546.bb563_crit_edge
  store i8 0, ptr @deleteOutputOnInterrupt, align 1, !tbaa !21
  br label %bb564

bb564:                                            ; preds = %bb318.bb564_crit_edge, %bb312.bb564_crit_edge, %bb283.bb564_crit_edge, %bb277.bb564_crit_edge, %bb251.bb564_crit_edge, %bb223.bb564_crit_edge, %bb201.bb564_crit_edge, %bb183.bb564_crit_edge, %bb155.bb564_crit_edge, %bb103.bb564_crit_edge, %bb68.bb564_crit_edge, %bb563, %bb328, %bb315, %bb292, %bb280, %bb260, %bb231, %bb207, %bb186, %bb161, %bb106, %bb77
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %i12) #31
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @uncompress(ptr noundef %arg) unnamed_addr #0 {
bb:
  %i = alloca %struct.timespec, align 8
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %i3 = alloca [5000 x i8], align 16
  %i4 = alloca [5000 x i8], align 16
  %i5 = alloca i32, align 4
  %i6 = alloca ptr, align 8
  %i7 = alloca %struct.stat, align 8
  %i8 = alloca %struct.stat, align 8
  %i9 = alloca %struct.stat, align 8
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %i9) #31
  store i8 0, ptr @deleteOutputOnInterrupt, align 1, !tbaa !21
  %i10 = icmp eq ptr %arg, null
  %i11 = load i32, ptr @srcMode, align 4
  %i12 = icmp ne i32 %i11, 1
  %i13 = select i1 %i10, i1 %i12, i1 false
  br i1 %i13, label %bb14, label %bb15

bb14:                                             ; preds = %bb
  tail call fastcc void @panic(ptr noundef nonnull @.str.79) #36
  unreachable

bb15:                                             ; preds = %bb
  switch i32 %i11, label %bb15.bb121_crit_edge [
    i32 1, label %bb16
    i32 3, label %bb19
    i32 2, label %bb107
  ]

bb15.bb121_crit_edge:                             ; preds = %bb15
  br label %bb121

bb16:                                             ; preds = %bb15
  %i17 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @inName, ptr noundef nonnull dereferenceable(8) @.str.54, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @inName, i64 0, i64 1024), align 16, !tbaa !21
  %i18 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @outName, ptr noundef nonnull dereferenceable(9) @.str.55, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @outName, i64 0, i64 1024), align 16, !tbaa !21
  br label %bb188

bb19:                                             ; preds = %bb15
  %i20 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %arg) #33
  %i21 = icmp ugt i64 %i20, 1024
  br i1 %i21, label %bb22, label %bb30

bb22:                                             ; preds = %bb19
  %i23 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i24 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i23, ptr noundef nonnull @.str.47, ptr noundef %arg, i32 noundef 1024) #32
  %i25 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i26 = icmp slt i32 %i25, 1
  br i1 %i26, label %bb27, label %bb22.bb28_crit_edge

bb22.bb28_crit_edge:                              ; preds = %bb22
  br label %bb28

bb27:                                             ; preds = %bb22
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb28

bb28:                                             ; preds = %bb22.bb28_crit_edge, %bb27
  %i29 = phi i32 [ %i25, %bb22.bb28_crit_edge ], [ 1, %bb27 ]
  tail call void @exit(i32 noundef %i29) #34
  unreachable

bb30:                                             ; preds = %bb19
  %i31 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @inName, ptr noundef nonnull dereferenceable(1) %arg, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @inName, i64 0, i64 1024), align 16, !tbaa !21
  %i32 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %arg) #33
  %i33 = icmp ugt i64 %i32, 1024
  br i1 %i33, label %bb34, label %bb42

bb34:                                             ; preds = %bb30
  %i35 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i36 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i35, ptr noundef nonnull @.str.47, ptr noundef %arg, i32 noundef 1024) #32
  %i37 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i38 = icmp slt i32 %i37, 1
  br i1 %i38, label %bb39, label %bb34.bb40_crit_edge

bb34.bb40_crit_edge:                              ; preds = %bb34
  br label %bb40

bb39:                                             ; preds = %bb34
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb40

bb40:                                             ; preds = %bb34.bb40_crit_edge, %bb39
  %i41 = phi i32 [ %i37, %bb34.bb40_crit_edge ], [ 1, %bb39 ]
  tail call void @exit(i32 noundef %i41) #34
  unreachable

bb42:                                             ; preds = %bb30
  %i43 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @outName, ptr noundef nonnull dereferenceable(1) %arg, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @outName, i64 0, i64 1024), align 16, !tbaa !21
  %i44 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) @outName) #33
  %i45 = trunc i64 %i44 to i32
  %i46 = shl i64 %i44, 32
  %i47 = ashr exact i64 %i46, 32
  %i48 = getelementptr inbounds i8, ptr @outName, i64 %i47
  %i49 = load ptr, ptr @zSuffix, align 16, !tbaa !20
  %i50 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %i49) #33
  %i51 = trunc i64 %i50 to i32
  %i52 = icmp slt i32 %i45, %i51
  br i1 %i52, label %bb42.bb68_crit_edge, label %bb53

bb42.bb68_crit_edge:                              ; preds = %bb42
  br label %bb68

bb53:                                             ; preds = %bb42
  %i54 = shl i64 %i50, 32
  %i55 = ashr exact i64 %i54, 32
  %i56 = sub nsw i64 0, %i55
  %i57 = getelementptr inbounds i8, ptr %i48, i64 %i56
  %i58 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i57, ptr noundef nonnull dereferenceable(1) %i49) #33
  %i59 = icmp eq i32 %i58, 0
  br i1 %i59, label %bb53.bb60_crit_edge, label %bb53.bb68_crit_edge

bb53.bb68_crit_edge:                              ; preds = %bb53
  br label %bb68

bb53.bb60_crit_edge:                              ; preds = %bb53
  br label %bb60

bb60:                                             ; preds = %bb97.bb60_crit_edge, %bb85.bb60_crit_edge, %bb73.bb60_crit_edge, %bb53.bb60_crit_edge
  %i61 = phi i64 [ 0, %bb53.bb60_crit_edge ], [ 1, %bb73.bb60_crit_edge ], [ 2, %bb85.bb60_crit_edge ], [ 3, %bb97.bb60_crit_edge ]
  %i62 = phi i64 [ %i50, %bb53.bb60_crit_edge ], [ %i70, %bb73.bb60_crit_edge ], [ %i82, %bb85.bb60_crit_edge ], [ %i94, %bb97.bb60_crit_edge ]
  %i63 = getelementptr inbounds [4 x ptr], ptr @unzSuffix, i64 0, i64 %i61
  %i64 = load ptr, ptr %i63, align 8, !tbaa !20
  %i65 = sub i64 %i44, %i62
  %i66 = getelementptr inbounds i8, ptr @outName, i64 %i65
  store i8 0, ptr %i66, align 1, !tbaa !21
  %i67 = tail call ptr @strcat(ptr noundef nonnull dereferenceable(1) @outName, ptr noundef nonnull dereferenceable(1) %i64) #31
  br label %bb121

bb68:                                             ; preds = %bb53.bb68_crit_edge, %bb42.bb68_crit_edge
  %i69 = load ptr, ptr getelementptr inbounds ([4 x ptr], ptr @zSuffix, i64 0, i64 1), align 8, !tbaa !20
  %i70 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %i69) #33
  %i71 = trunc i64 %i70 to i32
  %i72 = icmp slt i32 %i45, %i71
  br i1 %i72, label %bb68.bb80_crit_edge, label %bb73

bb68.bb80_crit_edge:                              ; preds = %bb68
  br label %bb80

bb73:                                             ; preds = %bb68
  %i74 = shl i64 %i70, 32
  %i75 = ashr exact i64 %i74, 32
  %i76 = sub nsw i64 0, %i75
  %i77 = getelementptr inbounds i8, ptr %i48, i64 %i76
  %i78 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i77, ptr noundef nonnull dereferenceable(1) %i69) #33
  %i79 = icmp eq i32 %i78, 0
  br i1 %i79, label %bb73.bb60_crit_edge, label %bb73.bb80_crit_edge

bb73.bb80_crit_edge:                              ; preds = %bb73
  br label %bb80

bb73.bb60_crit_edge:                              ; preds = %bb73
  br label %bb60

bb80:                                             ; preds = %bb73.bb80_crit_edge, %bb68.bb80_crit_edge
  %i81 = load ptr, ptr getelementptr inbounds ([4 x ptr], ptr @zSuffix, i64 0, i64 2), align 16, !tbaa !20
  %i82 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %i81) #33
  %i83 = trunc i64 %i82 to i32
  %i84 = icmp slt i32 %i45, %i83
  br i1 %i84, label %bb80.bb92_crit_edge, label %bb85

bb80.bb92_crit_edge:                              ; preds = %bb80
  br label %bb92

bb85:                                             ; preds = %bb80
  %i86 = shl i64 %i82, 32
  %i87 = ashr exact i64 %i86, 32
  %i88 = sub nsw i64 0, %i87
  %i89 = getelementptr inbounds i8, ptr %i48, i64 %i88
  %i90 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i89, ptr noundef nonnull dereferenceable(1) %i81) #33
  %i91 = icmp eq i32 %i90, 0
  br i1 %i91, label %bb85.bb60_crit_edge, label %bb85.bb92_crit_edge

bb85.bb92_crit_edge:                              ; preds = %bb85
  br label %bb92

bb85.bb60_crit_edge:                              ; preds = %bb85
  br label %bb60

bb92:                                             ; preds = %bb85.bb92_crit_edge, %bb80.bb92_crit_edge
  %i93 = load ptr, ptr getelementptr inbounds ([4 x ptr], ptr @zSuffix, i64 0, i64 3), align 8, !tbaa !20
  %i94 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %i93) #33
  %i95 = trunc i64 %i94 to i32
  %i96 = icmp slt i32 %i45, %i95
  br i1 %i96, label %bb92.bb104_crit_edge, label %bb97

bb92.bb104_crit_edge:                             ; preds = %bb92
  br label %bb104

bb97:                                             ; preds = %bb92
  %i98 = shl i64 %i94, 32
  %i99 = ashr exact i64 %i98, 32
  %i100 = sub nsw i64 0, %i99
  %i101 = getelementptr inbounds i8, ptr %i48, i64 %i100
  %i102 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %i101, ptr noundef nonnull dereferenceable(1) %i93) #33
  %i103 = icmp eq i32 %i102, 0
  br i1 %i103, label %bb97.bb60_crit_edge, label %bb97.bb104_crit_edge

bb97.bb104_crit_edge:                             ; preds = %bb97
  br label %bb104

bb97.bb60_crit_edge:                              ; preds = %bb97
  br label %bb60

bb104:                                            ; preds = %bb97.bb104_crit_edge, %bb92.bb104_crit_edge
  %i105 = tail call i64 @strlen(ptr nonnull dereferenceable(1) @outName)
  %i106 = getelementptr inbounds i8, ptr @outName, i64 %i105
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(5) %i106, ptr noundef nonnull align 1 dereferenceable(5) @.str.80, i64 5, i1 false)
  br label %bb121

bb107:                                            ; preds = %bb15
  %i108 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %arg) #33
  %i109 = icmp ugt i64 %i108, 1024
  br i1 %i109, label %bb110, label %bb118

bb110:                                            ; preds = %bb107
  %i111 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i112 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i111, ptr noundef nonnull @.str.47, ptr noundef %arg, i32 noundef 1024) #32
  %i113 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i114 = icmp slt i32 %i113, 1
  br i1 %i114, label %bb115, label %bb110.bb116_crit_edge

bb110.bb116_crit_edge:                            ; preds = %bb110
  br label %bb116

bb115:                                            ; preds = %bb110
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb116

bb116:                                            ; preds = %bb110.bb116_crit_edge, %bb115
  %i117 = phi i32 [ %i113, %bb110.bb116_crit_edge ], [ 1, %bb115 ]
  tail call void @exit(i32 noundef %i117) #34
  unreachable

bb118:                                            ; preds = %bb107
  %i119 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @inName, ptr noundef nonnull dereferenceable(1) %arg, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @inName, i64 0, i64 1024), align 16, !tbaa !21
  %i120 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @outName, ptr noundef nonnull dereferenceable(9) @.str.55, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @outName, i64 0, i64 1024), align 16, !tbaa !21
  br label %bb121

bb121:                                            ; preds = %bb15.bb121_crit_edge, %bb118, %bb104, %bb60
  %i122 = phi i1 [ false, %bb118 ], [ true, %bb104 ], [ false, %bb60 ], [ false, %bb15.bb121_crit_edge ]
  %i123 = tail call noalias ptr @fopen(ptr noundef nonnull @inName, ptr noundef nonnull @.str.66)
  %i124 = icmp eq ptr %i123, null
  br i1 %i124, label %bb125, label %bb135

bb125:                                            ; preds = %bb121
  %i126 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i127 = load ptr, ptr @progName, align 8, !tbaa !20
  %i128 = tail call ptr @__errno_location() #35
  %i129 = load i32, ptr %i128, align 4, !tbaa !19
  %i130 = tail call ptr @strerror(i32 noundef %i129) #31
  %i131 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i126, ptr noundef nonnull @.str.57, ptr noundef %i127, ptr noundef nonnull @inName, ptr noundef %i130) #32
  %i132 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i133 = icmp slt i32 %i132, 1
  br i1 %i133, label %bb134, label %bb125.bb569_crit_edge

bb125.bb569_crit_edge:                            ; preds = %bb125
  br label %bb569

bb134:                                            ; preds = %bb125
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb569

bb135:                                            ; preds = %bb121
  %i136 = tail call i32 @fclose(ptr noundef nonnull %i123)
  %i137 = load i32, ptr @srcMode, align 4
  %i138 = and i32 %i137, -2
  %i139 = icmp eq i32 %i138, 2
  br i1 %i139, label %bb140, label %bb135.bb155_crit_edge

bb135.bb155_crit_edge:                            ; preds = %bb135
  br label %bb155

bb140:                                            ; preds = %bb135
  %i141 = call i32 @stat(ptr noundef nonnull @inName, ptr noundef nonnull %i9) #31
  %i142 = getelementptr inbounds %struct.stat, ptr %i9, i64 0, i32 3
  %i143 = load i32, ptr %i142, align 8, !tbaa !97
  %i144 = and i32 %i143, 61440
  %i145 = icmp eq i32 %i144, 16384
  br i1 %i145, label %bb148, label %bb146

bb146:                                            ; preds = %bb140
  %i147 = load i32, ptr @srcMode, align 4, !tbaa !19
  br label %bb155

bb148:                                            ; preds = %bb140
  %i149 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i150 = load ptr, ptr @progName, align 8, !tbaa !20
  %i151 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i149, ptr noundef nonnull @.str.59, ptr noundef %i150, ptr noundef nonnull @inName) #32
  %i152 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i153 = icmp slt i32 %i152, 1
  br i1 %i153, label %bb154, label %bb148.bb569_crit_edge

bb148.bb569_crit_edge:                            ; preds = %bb148
  br label %bb569

bb154:                                            ; preds = %bb148
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb569

bb155:                                            ; preds = %bb135.bb155_crit_edge, %bb146
  %i156 = phi i32 [ %i147, %bb146 ], [ %i137, %bb135.bb155_crit_edge ]
  %i157 = icmp ne i32 %i156, 3
  %i158 = load i8, ptr @forceOverwrite, align 1
  %i159 = icmp ne i8 %i158, 0
  %i160 = select i1 %i157, i1 true, i1 %i159
  br i1 %i160, label %bb155.bb180_crit_edge, label %bb161

bb155.bb180_crit_edge:                            ; preds = %bb155
  br label %bb180

bb161:                                            ; preds = %bb155
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %i8) #31
  %i162 = call i32 @lstat(ptr noundef nonnull @inName, ptr noundef nonnull %i8) #31
  %i163 = icmp eq i32 %i162, 0
  %i164 = getelementptr inbounds %struct.stat, ptr %i8, i64 0, i32 3
  %i165 = load i32, ptr %i164, align 8
  %i166 = and i32 %i165, 61440
  %i167 = icmp eq i32 %i166, 32768
  %i168 = select i1 %i163, i1 %i167, i1 false
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %i8) #31
  br i1 %i168, label %bb161.bb180_crit_edge, label %bb169

bb161.bb180_crit_edge:                            ; preds = %bb161
  br label %bb180

bb169:                                            ; preds = %bb161
  %i170 = load i8, ptr @noisy, align 1, !tbaa !21
  %i171 = icmp eq i8 %i170, 0
  br i1 %i171, label %bb169.bb176_crit_edge, label %bb172

bb169.bb176_crit_edge:                            ; preds = %bb169
  br label %bb176

bb172:                                            ; preds = %bb169
  %i173 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i174 = load ptr, ptr @progName, align 8, !tbaa !20
  %i175 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i173, ptr noundef nonnull @.str.60, ptr noundef %i174, ptr noundef nonnull @inName) #32
  br label %bb176

bb176:                                            ; preds = %bb169.bb176_crit_edge, %bb172
  %i177 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i178 = icmp slt i32 %i177, 1
  br i1 %i178, label %bb179, label %bb176.bb569_crit_edge

bb176.bb569_crit_edge:                            ; preds = %bb176
  br label %bb569

bb179:                                            ; preds = %bb176
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb569

bb180:                                            ; preds = %bb161.bb180_crit_edge, %bb155.bb180_crit_edge
  %i181 = load i8, ptr @noisy, align 1
  %i182 = icmp ne i8 %i181, 0
  %i183 = select i1 %i122, i1 %i182, i1 false
  br i1 %i183, label %bb184, label %bb180.bb188_crit_edge

bb180.bb188_crit_edge:                            ; preds = %bb180
  br label %bb188

bb184:                                            ; preds = %bb180
  %i185 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i186 = load ptr, ptr @progName, align 8, !tbaa !20
  %i187 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i185, ptr noundef nonnull @.str.81, ptr noundef %i186, ptr noundef nonnull @inName, ptr noundef nonnull @outName) #32
  br label %bb188

bb188:                                            ; preds = %bb180.bb188_crit_edge, %bb184, %bb16
  %i189 = load i32, ptr @srcMode, align 4, !tbaa !19
  %i190 = icmp eq i32 %i189, 3
  br i1 %i190, label %bb191, label %bb188.bb207_crit_edge

bb188.bb207_crit_edge:                            ; preds = %bb188
  br label %bb207

bb191:                                            ; preds = %bb188
  %i192 = tail call noalias ptr @fopen(ptr noundef nonnull @outName, ptr noundef nonnull @.str.66)
  %i193 = icmp eq ptr %i192, null
  br i1 %i193, label %bb191.bb207_crit_edge, label %bb194

bb191.bb207_crit_edge:                            ; preds = %bb191
  br label %bb207

bb194:                                            ; preds = %bb191
  %i195 = tail call i32 @fclose(ptr noundef nonnull %i192)
  %i196 = load i8, ptr @forceOverwrite, align 1, !tbaa !21
  %i197 = icmp eq i8 %i196, 0
  br i1 %i197, label %bb200, label %bb198

bb198:                                            ; preds = %bb194
  %i199 = tail call i32 @remove(ptr noundef nonnull @outName) #31
  br label %bb207

bb200:                                            ; preds = %bb194
  %i201 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i202 = load ptr, ptr @progName, align 8, !tbaa !20
  %i203 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i201, ptr noundef nonnull @.str.61, ptr noundef %i202, ptr noundef nonnull @outName) #32
  %i204 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i205 = icmp slt i32 %i204, 1
  br i1 %i205, label %bb206, label %bb200.bb569_crit_edge

bb200.bb569_crit_edge:                            ; preds = %bb200
  br label %bb569

bb206:                                            ; preds = %bb200
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb569

bb207:                                            ; preds = %bb191.bb207_crit_edge, %bb188.bb207_crit_edge, %bb198
  %i208 = load i32, ptr @srcMode, align 4, !tbaa !19
  %i209 = icmp ne i32 %i208, 3
  %i210 = load i8, ptr @forceOverwrite, align 1
  %i211 = icmp ne i8 %i210, 0
  %i212 = select i1 %i209, i1 true, i1 %i211
  br i1 %i212, label %bb207.bb233_crit_edge, label %bb213

bb207.bb233_crit_edge:                            ; preds = %bb207
  br label %bb233

bb213:                                            ; preds = %bb207
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %i7) #31
  %i214 = call i32 @lstat(ptr noundef nonnull @inName, ptr noundef nonnull %i7) #31
  %i215 = icmp eq i32 %i214, 0
  %i216 = getelementptr inbounds %struct.stat, ptr %i7, i64 0, i32 2
  %i217 = load i64, ptr %i216, align 8
  %i218 = trunc i64 %i217 to i32
  %i219 = add i32 %i218, -1
  %i220 = select i1 %i215, i32 %i219, i32 0
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %i7) #31
  %i221 = icmp sgt i32 %i220, 0
  br i1 %i221, label %bb222, label %bb231

bb222:                                            ; preds = %bb213
  %i223 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i224 = load ptr, ptr @progName, align 8, !tbaa !20
  %i225 = icmp eq i32 %i220, 1
  %i226 = select i1 %i225, ptr @.str.4.13, ptr @.str.63
  %i227 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i223, ptr noundef nonnull @.str.62, ptr noundef %i224, ptr noundef nonnull @inName, i32 noundef %i220, ptr noundef nonnull %i226) #32
  %i228 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i229 = icmp slt i32 %i228, 1
  br i1 %i229, label %bb230, label %bb222.bb569_crit_edge

bb222.bb569_crit_edge:                            ; preds = %bb222
  br label %bb569

bb230:                                            ; preds = %bb222
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb569

bb231:                                            ; preds = %bb213
  %i232 = load i32, ptr @srcMode, align 4, !tbaa !19
  br label %bb233

bb233:                                            ; preds = %bb207.bb233_crit_edge, %bb231
  %i234 = phi i32 [ %i232, %bb231 ], [ %i208, %bb207.bb233_crit_edge ]
  %i235 = icmp eq i32 %i234, 3
  br i1 %i235, label %bb236, label %bb233.bb242_crit_edge

bb233.bb242_crit_edge:                            ; preds = %bb233
  br label %bb242

bb236:                                            ; preds = %bb233
  %i237 = tail call i32 @stat(ptr noundef nonnull @inName, ptr noundef nonnull @fileMetaInfo) #31
  %i238 = icmp eq i32 %i237, 0
  br i1 %i238, label %bb239, label %bb241

bb239:                                            ; preds = %bb236
  %i240 = load i32, ptr @srcMode, align 4, !tbaa !19
  br label %bb242

bb241:                                            ; preds = %bb236
  tail call fastcc void @ioError() #36
  unreachable

bb242:                                            ; preds = %bb233.bb242_crit_edge, %bb239
  %i243 = phi i32 [ %i240, %bb239 ], [ %i234, %bb233.bb242_crit_edge ]
  switch i32 %i243, label %bb310 [
    i32 1, label %bb244
    i32 2, label %bb260
    i32 3, label %bb274
  ]

bb244:                                            ; preds = %bb242
  %i245 = load ptr, ptr @stdin, align 8, !tbaa !20
  %i246 = load ptr, ptr @stdout, align 8, !tbaa !20
  %i247 = tail call i32 @fileno(ptr noundef %i245) #31
  %i248 = tail call i32 @isatty(i32 noundef %i247) #31
  %i249 = icmp eq i32 %i248, 0
  br i1 %i249, label %bb244.bb311_crit_edge, label %bb250

bb244.bb311_crit_edge:                            ; preds = %bb244
  br label %bb311

bb250:                                            ; preds = %bb244
  %i251 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i252 = load ptr, ptr @progName, align 8, !tbaa !20
  %i253 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i251, ptr noundef nonnull @.str.82, ptr noundef %i252) #32
  %i254 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i255 = load ptr, ptr @progName, align 8, !tbaa !20
  %i256 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i254, ptr noundef nonnull @.str.65, ptr noundef %i255, ptr noundef %i255) #32
  %i257 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i258 = icmp slt i32 %i257, 1
  br i1 %i258, label %bb259, label %bb250.bb569_crit_edge

bb250.bb569_crit_edge:                            ; preds = %bb250
  br label %bb569

bb259:                                            ; preds = %bb250
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb569

bb260:                                            ; preds = %bb242
  %i261 = tail call noalias ptr @fopen(ptr noundef nonnull @inName, ptr noundef nonnull @.str.66)
  %i262 = load ptr, ptr @stdout, align 8, !tbaa !20
  %i263 = icmp eq ptr %i261, null
  br i1 %i263, label %bb264, label %bb260.bb311_crit_edge

bb260.bb311_crit_edge:                            ; preds = %bb260
  br label %bb311

bb264:                                            ; preds = %bb260
  %i265 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i266 = load ptr, ptr @progName, align 8, !tbaa !20
  %i267 = tail call ptr @__errno_location() #35
  %i268 = load i32, ptr %i267, align 4, !tbaa !19
  %i269 = tail call ptr @strerror(i32 noundef %i268) #31
  %i270 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i265, ptr noundef nonnull @.str.83, ptr noundef %i266, ptr noundef nonnull @inName, ptr noundef %i269) #32
  %i271 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i272 = icmp slt i32 %i271, 1
  br i1 %i272, label %bb273, label %bb264.bb569_crit_edge

bb264.bb569_crit_edge:                            ; preds = %bb264
  br label %bb569

bb273:                                            ; preds = %bb264
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb569

bb274:                                            ; preds = %bb242
  %i275 = tail call noalias ptr @fopen(ptr noundef nonnull @inName, ptr noundef nonnull @.str.66)
  %i276 = tail call i32 (ptr, i32, ...) @open(ptr noundef nonnull @outName, i32 noundef 193, i32 noundef 384) #31
  %i277 = icmp eq i32 %i276, -1
  br i1 %i277, label %bb274.bb283_crit_edge, label %bb278

bb274.bb283_crit_edge:                            ; preds = %bb274
  br label %bb283

bb278:                                            ; preds = %bb274
  %i279 = tail call noalias ptr @fdopen(i32 noundef %i276, ptr noundef nonnull @.str.67) #31
  %i280 = icmp eq ptr %i279, null
  br i1 %i280, label %bb281, label %bb297

bb281:                                            ; preds = %bb278
  %i282 = tail call i32 @close(i32 noundef %i276) #31
  br label %bb283

bb283:                                            ; preds = %bb274.bb283_crit_edge, %bb281
  %i284 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i285 = load ptr, ptr @progName, align 8, !tbaa !20
  %i286 = tail call ptr @__errno_location() #35
  %i287 = load i32, ptr %i286, align 4, !tbaa !19
  %i288 = tail call ptr @strerror(i32 noundef %i287) #31
  %i289 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i284, ptr noundef nonnull @.str.68, ptr noundef %i285, ptr noundef nonnull @outName, ptr noundef %i288) #32
  %i290 = icmp eq ptr %i275, null
  br i1 %i290, label %bb283.bb293_crit_edge, label %bb291

bb283.bb293_crit_edge:                            ; preds = %bb283
  br label %bb293

bb291:                                            ; preds = %bb283
  %i292 = tail call i32 @fclose(ptr noundef nonnull %i275)
  br label %bb293

bb293:                                            ; preds = %bb283.bb293_crit_edge, %bb291
  %i294 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i295 = icmp slt i32 %i294, 1
  br i1 %i295, label %bb296, label %bb293.bb569_crit_edge

bb293.bb569_crit_edge:                            ; preds = %bb293
  br label %bb569

bb296:                                            ; preds = %bb293
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb569

bb297:                                            ; preds = %bb278
  %i298 = icmp eq ptr %i275, null
  br i1 %i298, label %bb299, label %bb297.bb311_crit_edge

bb297.bb311_crit_edge:                            ; preds = %bb297
  br label %bb311

bb299:                                            ; preds = %bb297
  %i300 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i301 = load ptr, ptr @progName, align 8, !tbaa !20
  %i302 = tail call ptr @__errno_location() #35
  %i303 = load i32, ptr %i302, align 4, !tbaa !19
  %i304 = tail call ptr @strerror(i32 noundef %i303) #31
  %i305 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i300, ptr noundef nonnull @.str.57, ptr noundef %i301, ptr noundef nonnull @inName, ptr noundef %i304) #32
  %i306 = tail call i32 @fclose(ptr noundef nonnull %i279)
  %i307 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i308 = icmp slt i32 %i307, 1
  br i1 %i308, label %bb309, label %bb299.bb569_crit_edge

bb299.bb569_crit_edge:                            ; preds = %bb299
  br label %bb569

bb309:                                            ; preds = %bb299
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb569

bb310:                                            ; preds = %bb242
  tail call fastcc void @panic(ptr noundef nonnull @.str.84) #36
  unreachable

bb311:                                            ; preds = %bb297.bb311_crit_edge, %bb260.bb311_crit_edge, %bb244.bb311_crit_edge
  %i312 = phi ptr [ %i279, %bb297.bb311_crit_edge ], [ %i262, %bb260.bb311_crit_edge ], [ %i246, %bb244.bb311_crit_edge ]
  %i313 = phi ptr [ %i275, %bb297.bb311_crit_edge ], [ %i261, %bb260.bb311_crit_edge ], [ %i245, %bb244.bb311_crit_edge ]
  %i314 = load i32, ptr @verbosity, align 4, !tbaa !19
  %i315 = icmp sgt i32 %i314, 0
  br i1 %i315, label %bb316, label %bb311.bb338_crit_edge

bb311.bb338_crit_edge:                            ; preds = %bb311
  br label %bb338

bb316:                                            ; preds = %bb311
  %i317 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i318 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i317, ptr noundef nonnull @.str.70, ptr noundef nonnull @inName) #32
  %i319 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) @inName) #33
  %i320 = trunc i64 %i319 to i32
  %i321 = load i32, ptr @longestFileName, align 4, !tbaa !19
  %i322 = icmp sgt i32 %i321, %i320
  br i1 %i322, label %bb323.preheader, label %bb316.bb335_crit_edge

bb316.bb335_crit_edge:                            ; preds = %bb316
  br label %bb335

bb323.preheader:                                  ; preds = %bb316
  br label %bb323

bb323:                                            ; preds = %bb323.preheader, %bb330
  %i324 = phi i32 [ %i334, %bb330 ], [ %i321, %bb323.preheader ]
  %i325 = phi i32 [ %i333, %bb330 ], [ 1, %bb323.preheader ]
  %i326 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) @inName) #33
  %i327 = trunc i64 %i326 to i32
  %i328 = sub nsw i32 %i324, %i327
  %i329 = icmp sgt i32 %i325, %i328
  br i1 %i329, label %bb335.loopexit, label %bb330

bb330:                                            ; preds = %bb323
  %i331 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i332 = tail call i32 @fputc(i32 32, ptr %i331)
  %i333 = add nuw nsw i32 %i325, 1
  %i334 = load i32, ptr @longestFileName, align 4, !tbaa !19
  br label %bb323, !llvm.loop !108

bb335.loopexit:                                   ; preds = %bb323
  br label %bb335

bb335:                                            ; preds = %bb316.bb335_crit_edge, %bb335.loopexit
  %i336 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i337 = tail call i32 @fflush(ptr noundef %i336)
  br label %bb338

bb338:                                            ; preds = %bb311.bb338_crit_edge, %bb335
  store ptr %i312, ptr @outputHandleJustInCase, align 8, !tbaa !20
  store i8 1, ptr @deleteOutputOnInterrupt, align 1, !tbaa !21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i1) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i2) #31
  call void @llvm.lifetime.start.p0(i64 5000, ptr nonnull %i3) #31
  call void @llvm.lifetime.start.p0(i64 5000, ptr nonnull %i4) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i5) #31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %i6) #31
  store i32 0, ptr %i5, align 4, !tbaa !19
  %i339 = tail call i32 @ferror(ptr noundef %i312) #31
  %i340 = icmp eq i32 %i339, 0
  br i1 %i340, label %bb341, label %bb338.bb502_crit_edge

bb338.bb502_crit_edge:                            ; preds = %bb338
  br label %bb502

bb341:                                            ; preds = %bb338
  %i342 = tail call i32 @ferror(ptr noundef %i313) #31
  %i343 = icmp eq i32 %i342, 0
  br i1 %i343, label %bb344.preheader, label %bb341.bb502_crit_edge

bb341.bb502_crit_edge:                            ; preds = %bb341
  br label %bb502

bb344.preheader:                                  ; preds = %bb341
  br label %bb344

bb344:                                            ; preds = %bb344.preheader, %bb436
  %i345 = phi i32 [ %i437, %bb436 ], [ 0, %bb344.preheader ]
  %i346 = phi i32 [ %i356, %bb436 ], [ 0, %bb344.preheader ]
  %i347 = load i32, ptr @verbosity, align 4, !tbaa !19
  %i348 = load i8, ptr @smallMode, align 1, !tbaa !21
  %i349 = zext i8 %i348 to i32
  %i350 = call ptr @BZ2_bzReadOpen(ptr noundef nonnull %i1, ptr noundef %i313, i32 noundef %i347, i32 noundef %i349, ptr noundef nonnull %i4, i32 noundef %i345) #31
  %i351 = icmp eq ptr %i350, null
  %i352 = load i32, ptr %i1, align 4
  %i353 = icmp ne i32 %i352, 0
  %i354 = select i1 %i351, i1 true, i1 %i353
  br i1 %i354, label %bb498.loopexit2, label %bb355

bb355:                                            ; preds = %bb344
  %i356 = add nuw nsw i32 %i346, 1
  br label %bb359

bb357:                                            ; preds = %bb373
  %i358 = load i32, ptr %i1, align 4, !tbaa !19
  br label %bb359

bb359:                                            ; preds = %bb357, %bb355
  %i360 = phi i32 [ %i358, %bb357 ], [ 0, %bb355 ]
  switch i32 %i360, label %bb498.loopexit [
    i32 0, label %bb361
    i32 4, label %bb376
  ]

bb361:                                            ; preds = %bb359
  %i362 = call i32 @BZ2_bzRead(ptr noundef nonnull %i1, ptr noundef %i350, ptr noundef nonnull %i3, i32 noundef 5000) #31
  %i363 = load i32, ptr %i1, align 4
  %i364 = icmp eq i32 %i363, -5
  br i1 %i364, label %bb477, label %bb365

bb365:                                            ; preds = %bb361
  %i366 = and i32 %i363, -5
  %i367 = icmp eq i32 %i366, 0
  %i368 = icmp sgt i32 %i362, 0
  %i369 = select i1 %i367, i1 %i368, i1 false
  br i1 %i369, label %bb370, label %bb365.bb373_crit_edge

bb365.bb373_crit_edge:                            ; preds = %bb365
  br label %bb373

bb370:                                            ; preds = %bb365
  %i371 = zext nneg i32 %i362 to i64
  %i372 = call i64 @fwrite(ptr noundef nonnull %i3, i64 noundef 1, i64 noundef %i371, ptr noundef %i312)
  br label %bb373

bb373:                                            ; preds = %bb365.bb373_crit_edge, %bb370
  %i374 = call i32 @ferror(ptr noundef %i312) #31
  %i375 = icmp eq i32 %i374, 0
  br i1 %i375, label %bb357, label %bb502.loopexit1, !llvm.loop !109

bb376:                                            ; preds = %bb359
  call void @BZ2_bzReadGetUnused(ptr noundef nonnull %i1, ptr noundef %i350, ptr noundef nonnull %i6, ptr noundef nonnull %i5) #31
  %i377 = load i32, ptr %i1, align 4, !tbaa !19
  %i378 = icmp eq i32 %i377, 0
  br i1 %i378, label %bb380, label %bb379

bb379:                                            ; preds = %bb376
  call fastcc void @panic(ptr noundef nonnull @.str.88) #36
  unreachable

bb380:                                            ; preds = %bb376
  %i381 = load ptr, ptr %i6, align 8, !tbaa !20
  %i382 = load i32, ptr %i5, align 4, !tbaa !19
  %i383 = icmp sgt i32 %i382, 0
  br i1 %i383, label %bb384, label %bb380.bb423_crit_edge

bb380.bb423_crit_edge:                            ; preds = %bb380
  br label %bb423

bb384:                                            ; preds = %bb380
  %i385 = zext nneg i32 %i382 to i64
  %i386 = and i64 %i385, 3
  %i387 = icmp ult i32 %i382, 4
  br i1 %i387, label %bb384.bb411_crit_edge, label %bb388

bb384.bb411_crit_edge:                            ; preds = %bb384
  br label %bb411

bb388:                                            ; preds = %bb384
  %i389 = and i64 %i385, 2147483644
  br label %bb390

bb390:                                            ; preds = %bb390.bb390_crit_edge, %bb388
  %i391 = phi i64 [ 0, %bb388 ], [ %i408, %bb390.bb390_crit_edge ]
  %i392 = phi i64 [ 0, %bb388 ], [ %i409, %bb390.bb390_crit_edge ]
  %i393 = getelementptr inbounds i8, ptr %i381, i64 %i391
  %i394 = load i8, ptr %i393, align 1, !tbaa !21
  %i395 = getelementptr inbounds [5000 x i8], ptr %i4, i64 0, i64 %i391
  store i8 %i394, ptr %i395, align 4, !tbaa !21
  %i396 = or disjoint i64 %i391, 1
  %i397 = getelementptr inbounds i8, ptr %i381, i64 %i396
  %i398 = load i8, ptr %i397, align 1, !tbaa !21
  %i399 = getelementptr inbounds [5000 x i8], ptr %i4, i64 0, i64 %i396
  store i8 %i398, ptr %i399, align 1, !tbaa !21
  %i400 = or disjoint i64 %i391, 2
  %i401 = getelementptr inbounds i8, ptr %i381, i64 %i400
  %i402 = load i8, ptr %i401, align 1, !tbaa !21
  %i403 = getelementptr inbounds [5000 x i8], ptr %i4, i64 0, i64 %i400
  store i8 %i402, ptr %i403, align 2, !tbaa !21
  %i404 = or disjoint i64 %i391, 3
  %i405 = getelementptr inbounds i8, ptr %i381, i64 %i404
  %i406 = load i8, ptr %i405, align 1, !tbaa !21
  %i407 = getelementptr inbounds [5000 x i8], ptr %i4, i64 0, i64 %i404
  store i8 %i406, ptr %i407, align 1, !tbaa !21
  %i408 = add nuw nsw i64 %i391, 4
  %i409 = add i64 %i392, 4
  %i410 = icmp eq i64 %i409, %i389
  br i1 %i410, label %bb411.loopexit, label %bb390.bb390_crit_edge, !llvm.loop !110

bb390.bb390_crit_edge:                            ; preds = %bb390
  br label %bb390

bb411.loopexit:                                   ; preds = %bb390
  br label %bb411

bb411:                                            ; preds = %bb384.bb411_crit_edge, %bb411.loopexit
  %i412 = phi i64 [ 0, %bb384.bb411_crit_edge ], [ %i408, %bb411.loopexit ]
  %i413 = icmp eq i64 %i386, 0
  br i1 %i413, label %bb411.bb423_crit_edge, label %bb414.preheader

bb411.bb423_crit_edge:                            ; preds = %bb411
  br label %bb423

bb414.preheader:                                  ; preds = %bb411
  br label %bb414

bb414:                                            ; preds = %bb414.bb414_crit_edge, %bb414.preheader
  %i415 = phi i64 [ %i420, %bb414.bb414_crit_edge ], [ %i412, %bb414.preheader ]
  %i416 = phi i64 [ %i421, %bb414.bb414_crit_edge ], [ 0, %bb414.preheader ]
  %i417 = getelementptr inbounds i8, ptr %i381, i64 %i415
  %i418 = load i8, ptr %i417, align 1, !tbaa !21
  %i419 = getelementptr inbounds [5000 x i8], ptr %i4, i64 0, i64 %i415
  store i8 %i418, ptr %i419, align 1, !tbaa !21
  %i420 = add nuw nsw i64 %i415, 1
  %i421 = add i64 %i416, 1
  %i422 = icmp eq i64 %i421, %i386
  br i1 %i422, label %bb423.loopexit, label %bb414.bb414_crit_edge, !llvm.loop !111

bb414.bb414_crit_edge:                            ; preds = %bb414
  br label %bb414

bb423.loopexit:                                   ; preds = %bb414
  br label %bb423

bb423:                                            ; preds = %bb411.bb423_crit_edge, %bb380.bb423_crit_edge, %bb423.loopexit
  call void @BZ2_bzReadClose(ptr noundef nonnull %i1, ptr noundef %i350) #31
  %i424 = load i32, ptr %i1, align 4, !tbaa !19
  %i425 = icmp eq i32 %i424, 0
  br i1 %i425, label %bb427, label %bb426

bb426:                                            ; preds = %bb423
  call fastcc void @panic(ptr noundef nonnull @.str.88) #36
  unreachable

bb427:                                            ; preds = %bb423
  %i428 = load i32, ptr %i5, align 4, !tbaa !19
  %i429 = icmp eq i32 %i428, 0
  br i1 %i429, label %bb430, label %bb427.bb436_crit_edge

bb427.bb436_crit_edge:                            ; preds = %bb427
  br label %bb436

bb430:                                            ; preds = %bb427
  %i431 = call i32 @fgetc(ptr noundef %i313)
  %i432 = icmp eq i32 %i431, -1
  br i1 %i432, label %bb438.loopexit3, label %bb433

bb433:                                            ; preds = %bb430
  %i434 = call i32 @ungetc(i32 noundef %i431, ptr noundef %i313)
  %i435 = load i32, ptr %i5, align 4, !tbaa !19
  br label %bb436

bb436:                                            ; preds = %bb427.bb436_crit_edge, %bb433
  %i437 = phi i32 [ %i435, %bb433 ], [ %i428, %bb427.bb436_crit_edge ]
  br label %bb344

bb438.loopexit:                                   ; preds = %bb481
  br label %bb438

bb438.loopexit3:                                  ; preds = %bb430
  br label %bb438

bb438:                                            ; preds = %bb438.loopexit3, %bb438.loopexit
  %i439 = call i32 @ferror(ptr noundef %i313) #31
  %i440 = icmp eq i32 %i439, 0
  br i1 %i440, label %bb441, label %bb438.bb502_crit_edge

bb438.bb502_crit_edge:                            ; preds = %bb438
  br label %bb502

bb441:                                            ; preds = %bb438
  %i442 = load ptr, ptr @stdout, align 8, !tbaa !20
  %i443 = icmp eq ptr %i442, %i312
  br i1 %i443, label %bb441.bb456_crit_edge, label %bb444

bb441.bb456_crit_edge:                            ; preds = %bb441
  br label %bb456

bb444:                                            ; preds = %bb441
  %i445 = call i32 @fileno(ptr noundef %i312) #31
  %i446 = icmp slt i32 %i445, 0
  br i1 %i446, label %bb444.bb502_crit_edge, label %bb447

bb444.bb502_crit_edge:                            ; preds = %bb444
  br label %bb502

bb447:                                            ; preds = %bb444
  %i448 = load i32, ptr getelementptr inbounds (%struct.stat, ptr @fileMetaInfo, i64 0, i32 3), align 8, !tbaa !97
  %i449 = call i32 @fchmod(i32 noundef %i445, i32 noundef %i448) #31
  %i450 = icmp eq i32 %i449, 0
  br i1 %i450, label %bb452, label %bb451

bb451:                                            ; preds = %bb447
  call fastcc void @ioError() #36
  unreachable

bb452:                                            ; preds = %bb447
  %i453 = load i32, ptr getelementptr inbounds (%struct.stat, ptr @fileMetaInfo, i64 0, i32 4), align 4, !tbaa !101
  %i454 = load i32, ptr getelementptr inbounds (%struct.stat, ptr @fileMetaInfo, i64 0, i32 5), align 8, !tbaa !102
  %i455 = call i32 @fchown(i32 noundef %i445, i32 noundef %i453, i32 noundef %i454) #31
  br label %bb456

bb456:                                            ; preds = %bb441.bb456_crit_edge, %bb452
  %i457 = call i32 @fclose(ptr noundef %i313)
  %i458 = icmp eq i32 %i457, -1
  br i1 %i458, label %bb456.bb502_crit_edge, label %bb459

bb456.bb502_crit_edge:                            ; preds = %bb456
  br label %bb502

bb459:                                            ; preds = %bb456
  %i460 = call i32 @ferror(ptr noundef %i312) #31
  %i461 = icmp eq i32 %i460, 0
  br i1 %i461, label %bb462, label %bb459.bb502_crit_edge

bb459.bb502_crit_edge:                            ; preds = %bb459
  br label %bb502

bb462:                                            ; preds = %bb459
  %i463 = call i32 @fflush(ptr noundef %i312)
  %i464 = icmp eq i32 %i463, 0
  br i1 %i464, label %bb465, label %bb462.bb502_crit_edge

bb462.bb502_crit_edge:                            ; preds = %bb462
  br label %bb502

bb465:                                            ; preds = %bb462
  %i466 = load ptr, ptr @stdout, align 8, !tbaa !20
  %i467 = icmp eq ptr %i466, %i312
  br i1 %i467, label %bb465.bb471_crit_edge, label %bb468

bb465.bb471_crit_edge:                            ; preds = %bb465
  br label %bb471

bb468:                                            ; preds = %bb465
  %i469 = call i32 @fclose(ptr noundef %i312)
  store ptr null, ptr @outputHandleJustInCase, align 8, !tbaa !20
  %i470 = icmp eq i32 %i469, -1
  br i1 %i470, label %bb468.bb502_crit_edge, label %bb468.bb471_crit_edge

bb468.bb471_crit_edge:                            ; preds = %bb468
  br label %bb471

bb468.bb502_crit_edge:                            ; preds = %bb468
  br label %bb502

bb471:                                            ; preds = %bb468.bb471_crit_edge, %bb465.bb471_crit_edge
  store ptr null, ptr @outputHandleJustInCase, align 8, !tbaa !20
  %i472 = load i32, ptr @verbosity, align 4, !tbaa !19
  %i473 = icmp sgt i32 %i472, 1
  br i1 %i473, label %bb474, label %bb471.bb526_crit_edge

bb471.bb526_crit_edge:                            ; preds = %bb471
  br label %bb526

bb474:                                            ; preds = %bb471
  %i475 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i476 = call i64 @fwrite(ptr nonnull @.str.89, i64 5, i64 1, ptr %i475) #32
  br label %bb526

bb477:                                            ; preds = %bb361
  %i478 = load i8, ptr @forceOverwrite, align 1, !tbaa !21
  %i479 = icmp eq i8 %i478, 0
  br i1 %i479, label %bb477.bb498_crit_edge, label %bb480

bb477.bb498_crit_edge:                            ; preds = %bb477
  br label %bb498

bb480:                                            ; preds = %bb477
  call void @rewind(ptr noundef %i313)
  br label %bb481

bb481:                                            ; preds = %bb495.bb481_crit_edge, %bb480
  %i482 = call i32 @fgetc(ptr noundef %i313)
  %i483 = icmp eq i32 %i482, -1
  br i1 %i483, label %bb438.loopexit, label %bb484

bb484:                                            ; preds = %bb481
  %i485 = call i32 @ungetc(i32 noundef %i482, ptr noundef %i313)
  %i486 = call i64 @fread(ptr noundef nonnull %i3, i64 noundef 1, i64 noundef 5000, ptr noundef %i313)
  %i487 = call i32 @ferror(ptr noundef %i313) #31
  %i488 = icmp eq i32 %i487, 0
  br i1 %i488, label %bb489, label %bb484.bb502.loopexit_crit_edge

bb484.bb502.loopexit_crit_edge:                   ; preds = %bb484
  br label %bb502.loopexit

bb489:                                            ; preds = %bb484
  %i490 = trunc i64 %i486 to i32
  %i491 = icmp sgt i32 %i490, 0
  br i1 %i491, label %bb492, label %bb489.bb495_crit_edge

bb489.bb495_crit_edge:                            ; preds = %bb489
  br label %bb495

bb492:                                            ; preds = %bb489
  %i493 = and i64 %i486, 4294967295
  %i494 = call i64 @fwrite(ptr noundef nonnull %i3, i64 noundef 1, i64 noundef %i493, ptr noundef %i312)
  br label %bb495

bb495:                                            ; preds = %bb489.bb495_crit_edge, %bb492
  %i496 = call i32 @ferror(ptr noundef %i312) #31
  %i497 = icmp eq i32 %i496, 0
  br i1 %i497, label %bb495.bb481_crit_edge, label %bb502.loopexitsplit

bb495.bb481_crit_edge:                            ; preds = %bb495
  br label %bb481

bb498.loopexit:                                   ; preds = %bb359
  br label %bb498

bb498.loopexit2:                                  ; preds = %bb344
  br label %bb498

bb498:                                            ; preds = %bb477.bb498_crit_edge, %bb498.loopexit2, %bb498.loopexit
  %i499 = phi i32 [ %i356, %bb477.bb498_crit_edge ], [ %i356, %bb498.loopexit ], [ %i346, %bb498.loopexit2 ]
  call void @BZ2_bzReadClose(ptr noundef nonnull %i2, ptr noundef %i350) #31
  %i500 = load i32, ptr %i1, align 4, !tbaa !19
  switch i32 %i500, label %bb525 [
    i32 -9, label %bb501
    i32 -6, label %bb498.bb502_crit_edge
    i32 -4, label %bb503
    i32 -3, label %bb504
    i32 -7, label %bb505
    i32 -5, label %bb506
  ]

bb498.bb502_crit_edge:                            ; preds = %bb498
  br label %bb502

bb501:                                            ; preds = %bb498
  call fastcc void @configError() #36
  unreachable

bb502.loopexitsplit:                              ; preds = %bb495
  br label %bb502.loopexit

bb502.loopexit:                                   ; preds = %bb502.loopexitsplit, %bb484.bb502.loopexit_crit_edge
  br label %bb502

bb502.loopexit1:                                  ; preds = %bb373
  br label %bb502

bb502:                                            ; preds = %bb498.bb502_crit_edge, %bb468.bb502_crit_edge, %bb462.bb502_crit_edge, %bb459.bb502_crit_edge, %bb456.bb502_crit_edge, %bb444.bb502_crit_edge, %bb438.bb502_crit_edge, %bb341.bb502_crit_edge, %bb338.bb502_crit_edge, %bb502.loopexit1, %bb502.loopexit
  call fastcc void @ioError() #36
  unreachable

bb503:                                            ; preds = %bb498
  call fastcc void @crcError() #36
  unreachable

bb504:                                            ; preds = %bb498
  call fastcc void @outOfMemory() #36
  unreachable

bb505:                                            ; preds = %bb498
  call fastcc void @compressedStreamEOF() #36
  unreachable

bb506:                                            ; preds = %bb498
  %i507 = load ptr, ptr @stdin, align 8, !tbaa !20
  %i508 = icmp eq ptr %i507, %i313
  br i1 %i508, label %bb506.bb511_crit_edge, label %bb509

bb506.bb511_crit_edge:                            ; preds = %bb506
  br label %bb511

bb509:                                            ; preds = %bb506
  %i510 = call i32 @fclose(ptr noundef %i313)
  br label %bb511

bb511:                                            ; preds = %bb506.bb511_crit_edge, %bb509
  %i512 = load ptr, ptr @stdout, align 8, !tbaa !20
  %i513 = icmp eq ptr %i512, %i312
  br i1 %i513, label %bb511.bb516_crit_edge, label %bb514

bb511.bb516_crit_edge:                            ; preds = %bb511
  br label %bb516

bb514:                                            ; preds = %bb511
  %i515 = call i32 @fclose(ptr noundef %i312)
  br label %bb516

bb516:                                            ; preds = %bb511.bb516_crit_edge, %bb514
  %i517 = icmp eq i32 %i499, 1
  br i1 %i517, label %bb543, label %bb518

bb518:                                            ; preds = %bb516
  %i519 = load i8, ptr @noisy, align 1, !tbaa !21
  %i520 = icmp eq i8 %i519, 0
  br i1 %i520, label %bb518.bb526_crit_edge, label %bb521

bb518.bb526_crit_edge:                            ; preds = %bb518
  br label %bb526

bb521:                                            ; preds = %bb518
  %i522 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i523 = load ptr, ptr @progName, align 8, !tbaa !20
  %i524 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i522, ptr noundef nonnull @.str.90, ptr noundef %i523, ptr noundef nonnull @inName) #32
  br label %bb526

bb525:                                            ; preds = %bb498
  call fastcc void @panic(ptr noundef nonnull @.str.91) #36
  unreachable

bb526:                                            ; preds = %bb518.bb526_crit_edge, %bb471.bb526_crit_edge, %bb521, %bb474
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i6) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i5) #31
  call void @llvm.lifetime.end.p0(i64 5000, ptr nonnull %i4) #31
  call void @llvm.lifetime.end.p0(i64 5000, ptr nonnull %i3) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i2) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i1) #31
  store ptr null, ptr @outputHandleJustInCase, align 8, !tbaa !20
  %i527 = load i32, ptr @srcMode, align 4, !tbaa !19
  %i528 = icmp eq i32 %i527, 3
  br i1 %i528, label %bb529, label %bb526.bb550_crit_edge

bb526.bb550_crit_edge:                            ; preds = %bb526
  br label %bb550

bb529:                                            ; preds = %bb526
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %i) #31
  %i530 = load i64, ptr getelementptr inbounds (%struct.stat, ptr @fileMetaInfo, i64 0, i32 11), align 8, !tbaa !103
  store i64 %i530, ptr %i, align 8, !tbaa !104
  %i531 = load i64, ptr getelementptr inbounds (%struct.stat, ptr @fileMetaInfo, i64 0, i32 12), align 8, !tbaa !106
  %i532 = getelementptr inbounds %struct.timespec, ptr %i, i64 0, i32 1
  store i64 %i531, ptr %i532, align 8, !tbaa !107
  %i533 = call i32 @utime(ptr noundef nonnull @outName, ptr noundef nonnull %i) #31
  %i534 = icmp eq i32 %i533, 0
  br i1 %i534, label %bb536, label %bb535

bb535:                                            ; preds = %bb529
  call fastcc void @ioError() #36
  unreachable

bb536:                                            ; preds = %bb529
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %i) #31
  store i8 0, ptr @deleteOutputOnInterrupt, align 1, !tbaa !21
  %i537 = load i8, ptr @keepInputFiles, align 1, !tbaa !21
  %i538 = icmp eq i8 %i537, 0
  br i1 %i538, label %bb539, label %bb536.bb550_crit_edge

bb536.bb550_crit_edge:                            ; preds = %bb536
  br label %bb550

bb539:                                            ; preds = %bb536
  %i540 = call i32 @remove(ptr noundef nonnull @inName) #31
  %i541 = icmp eq i32 %i540, 0
  br i1 %i541, label %bb539.bb550_crit_edge, label %bb542

bb539.bb550_crit_edge:                            ; preds = %bb539
  br label %bb550

bb542:                                            ; preds = %bb539
  call fastcc void @ioError() #36
  unreachable

bb543:                                            ; preds = %bb516
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i6) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i5) #31
  call void @llvm.lifetime.end.p0(i64 5000, ptr nonnull %i4) #31
  call void @llvm.lifetime.end.p0(i64 5000, ptr nonnull %i3) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i2) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i1) #31
  store ptr null, ptr @outputHandleJustInCase, align 8, !tbaa !20
  store i8 1, ptr @unzFailsExist, align 1, !tbaa !21
  store i8 0, ptr @deleteOutputOnInterrupt, align 1, !tbaa !21
  %i544 = load i32, ptr @srcMode, align 4, !tbaa !19
  %i545 = icmp eq i32 %i544, 3
  br i1 %i545, label %bb546, label %bb543.bb556_crit_edge

bb543.bb556_crit_edge:                            ; preds = %bb543
  br label %bb556

bb546:                                            ; preds = %bb543
  %i547 = call i32 @remove(ptr noundef nonnull @outName) #31
  %i548 = icmp eq i32 %i547, 0
  br i1 %i548, label %bb546.bb556_crit_edge, label %bb549

bb546.bb556_crit_edge:                            ; preds = %bb546
  br label %bb556

bb549:                                            ; preds = %bb546
  call fastcc void @ioError() #36
  unreachable

bb550:                                            ; preds = %bb539.bb550_crit_edge, %bb536.bb550_crit_edge, %bb526.bb550_crit_edge
  store i8 0, ptr @deleteOutputOnInterrupt, align 1, !tbaa !21
  %i551 = load i32, ptr @verbosity, align 4, !tbaa !19
  %i552 = icmp sgt i32 %i551, 0
  br i1 %i552, label %bb553, label %bb550.bb569_crit_edge

bb550.bb569_crit_edge:                            ; preds = %bb550
  br label %bb569

bb553:                                            ; preds = %bb550
  %i554 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i555 = call i64 @fwrite(ptr nonnull @.str.85, i64 5, i64 1, ptr %i554) #32
  br label %bb569

bb556:                                            ; preds = %bb546.bb556_crit_edge, %bb543.bb556_crit_edge
  store i8 0, ptr @deleteOutputOnInterrupt, align 1, !tbaa !21
  %i557 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i558 = icmp slt i32 %i557, 2
  br i1 %i558, label %bb559, label %bb556.bb560_crit_edge

bb556.bb560_crit_edge:                            ; preds = %bb556
  br label %bb560

bb559:                                            ; preds = %bb556
  store i32 2, ptr @exitValue, align 4, !tbaa !19
  br label %bb560

bb560:                                            ; preds = %bb556.bb560_crit_edge, %bb559
  %i561 = load i32, ptr @verbosity, align 4, !tbaa !19
  %i562 = icmp sgt i32 %i561, 0
  %i563 = load ptr, ptr @stderr, align 8, !tbaa !20
  br i1 %i562, label %bb564, label %bb566

bb564:                                            ; preds = %bb560
  %i565 = call i64 @fwrite(ptr nonnull @.str.86, i64 18, i64 1, ptr %i563) #32
  br label %bb569

bb566:                                            ; preds = %bb560
  %i567 = load ptr, ptr @progName, align 8, !tbaa !20
  %i568 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i563, ptr noundef nonnull @.str.87, ptr noundef %i567, ptr noundef nonnull @inName) #32
  br label %bb569

bb569:                                            ; preds = %bb550.bb569_crit_edge, %bb299.bb569_crit_edge, %bb293.bb569_crit_edge, %bb264.bb569_crit_edge, %bb250.bb569_crit_edge, %bb222.bb569_crit_edge, %bb200.bb569_crit_edge, %bb176.bb569_crit_edge, %bb148.bb569_crit_edge, %bb125.bb569_crit_edge, %bb566, %bb564, %bb553, %bb309, %bb296, %bb273, %bb259, %bb230, %bb206, %bb179, %bb154, %bb134
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %i9) #31
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @testf(ptr noundef %arg) unnamed_addr #0 {
bb:
  %i = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca [5000 x i8], align 16
  %i3 = alloca [5000 x i8], align 16
  %i4 = alloca i32, align 4
  %i5 = alloca ptr, align 8
  %i6 = alloca %struct.stat, align 8
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %i6) #31
  store i8 0, ptr @deleteOutputOnInterrupt, align 1, !tbaa !21
  %i7 = icmp eq ptr %arg, null
  %i8 = load i32, ptr @srcMode, align 4
  %i9 = icmp ne i32 %i8, 1
  %i10 = select i1 %i7, i1 %i9, i1 false
  br i1 %i10, label %bb11, label %bb12

bb11:                                             ; preds = %bb
  tail call fastcc void @panic(ptr noundef nonnull @.str.94) #36
  unreachable

bb12:                                             ; preds = %bb
  %i13 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @outName, ptr noundef nonnull dereferenceable(7) @.str.6.15, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @outName, i64 0, i64 1024), align 16, !tbaa !21
  switch i32 %i8, label %bb12.bb40_crit_edge [
    i32 1, label %bb14
    i32 3, label %bb16
    i32 2, label %bb27
  ]

bb12.bb40_crit_edge:                              ; preds = %bb12
  br label %bb40

bb14:                                             ; preds = %bb12
  %i15 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @inName, ptr noundef nonnull dereferenceable(8) @.str.54, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @inName, i64 0, i64 1024), align 16, !tbaa !21
  br label %bb72

bb16:                                             ; preds = %bb12
  %i17 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %arg) #33
  %i18 = icmp ugt i64 %i17, 1024
  br i1 %i18, label %bb19, label %bb16.bb38_crit_edge

bb16.bb38_crit_edge:                              ; preds = %bb16
  br label %bb38

bb19:                                             ; preds = %bb16
  %i20 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i21 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i20, ptr noundef nonnull @.str.47, ptr noundef %arg, i32 noundef 1024) #32
  %i22 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i23 = icmp slt i32 %i22, 1
  br i1 %i23, label %bb24, label %bb19.bb25_crit_edge

bb19.bb25_crit_edge:                              ; preds = %bb19
  br label %bb25

bb24:                                             ; preds = %bb19
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb25

bb25:                                             ; preds = %bb19.bb25_crit_edge, %bb24
  %i26 = phi i32 [ %i22, %bb19.bb25_crit_edge ], [ 1, %bb24 ]
  tail call void @exit(i32 noundef %i26) #34
  unreachable

bb27:                                             ; preds = %bb12
  %i28 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %arg) #33
  %i29 = icmp ugt i64 %i28, 1024
  br i1 %i29, label %bb30, label %bb27.bb38_crit_edge

bb27.bb38_crit_edge:                              ; preds = %bb27
  br label %bb38

bb30:                                             ; preds = %bb27
  %i31 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i32 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i31, ptr noundef nonnull @.str.47, ptr noundef %arg, i32 noundef 1024) #32
  %i33 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i34 = icmp slt i32 %i33, 1
  br i1 %i34, label %bb35, label %bb30.bb36_crit_edge

bb30.bb36_crit_edge:                              ; preds = %bb30
  br label %bb36

bb35:                                             ; preds = %bb30
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb36

bb36:                                             ; preds = %bb30.bb36_crit_edge, %bb35
  %i37 = phi i32 [ %i33, %bb30.bb36_crit_edge ], [ 1, %bb35 ]
  tail call void @exit(i32 noundef %i37) #34
  unreachable

bb38:                                             ; preds = %bb27.bb38_crit_edge, %bb16.bb38_crit_edge
  %i39 = tail call ptr @strncpy(ptr noundef nonnull dereferenceable(1) @inName, ptr noundef nonnull dereferenceable(1) %arg, i64 noundef 1024) #31
  store i8 0, ptr getelementptr inbounds ([1034 x i8], ptr @inName, i64 0, i64 1024), align 16, !tbaa !21
  br label %bb40

bb40:                                             ; preds = %bb12.bb40_crit_edge, %bb38
  %i41 = tail call noalias ptr @fopen(ptr noundef nonnull @inName, ptr noundef nonnull @.str.66)
  %i42 = icmp eq ptr %i41, null
  br i1 %i42, label %bb43, label %bb53

bb43:                                             ; preds = %bb40
  %i44 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i45 = load ptr, ptr @progName, align 8, !tbaa !20
  %i46 = tail call ptr @__errno_location() #35
  %i47 = load i32, ptr %i46, align 4, !tbaa !19
  %i48 = tail call ptr @strerror(i32 noundef %i47) #31
  %i49 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i44, ptr noundef nonnull @.str.95, ptr noundef %i45, ptr noundef nonnull @inName, ptr noundef %i48) #32
  %i50 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i51 = icmp slt i32 %i50, 1
  br i1 %i51, label %bb52, label %bb43.bb270_crit_edge

bb43.bb270_crit_edge:                             ; preds = %bb43
  br label %bb270

bb52:                                             ; preds = %bb43
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb270

bb53:                                             ; preds = %bb40
  %i54 = tail call i32 @fclose(ptr noundef nonnull %i41)
  %i55 = load i32, ptr @srcMode, align 4, !tbaa !19
  %i56 = icmp eq i32 %i55, 1
  br i1 %i56, label %bb53.bb72_crit_edge, label %bb57

bb53.bb72_crit_edge:                              ; preds = %bb53
  br label %bb72

bb57:                                             ; preds = %bb53
  %i58 = call i32 @stat(ptr noundef nonnull @inName, ptr noundef nonnull %i6) #31
  %i59 = getelementptr inbounds %struct.stat, ptr %i6, i64 0, i32 3
  %i60 = load i32, ptr %i59, align 8, !tbaa !97
  %i61 = and i32 %i60, 61440
  %i62 = icmp eq i32 %i61, 16384
  br i1 %i62, label %bb63, label %bb70

bb63:                                             ; preds = %bb57
  %i64 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i65 = load ptr, ptr @progName, align 8, !tbaa !20
  %i66 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i64, ptr noundef nonnull @.str.59, ptr noundef %i65, ptr noundef nonnull @inName) #32
  %i67 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i68 = icmp slt i32 %i67, 1
  br i1 %i68, label %bb69, label %bb63.bb270_crit_edge

bb63.bb270_crit_edge:                             ; preds = %bb63
  br label %bb270

bb69:                                             ; preds = %bb63
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb270

bb70:                                             ; preds = %bb57
  %i71 = load i32, ptr @srcMode, align 4, !tbaa !19
  switch i32 %i71, label %bb102 [
    i32 1, label %bb70.bb72_crit_edge
    i32 2, label %bb70.bb89_crit_edge
    i32 3, label %bb70.bb89_crit_edge2
  ]

bb70.bb89_crit_edge2:                             ; preds = %bb70
  br label %bb89

bb70.bb89_crit_edge:                              ; preds = %bb70
  br label %bb89

bb70.bb72_crit_edge:                              ; preds = %bb70
  br label %bb72

bb72:                                             ; preds = %bb70.bb72_crit_edge, %bb53.bb72_crit_edge, %bb14
  %i73 = load ptr, ptr @stdin, align 8, !tbaa !20
  %i74 = tail call i32 @fileno(ptr noundef %i73) #31
  %i75 = tail call i32 @isatty(i32 noundef %i74) #31
  %i76 = icmp eq i32 %i75, 0
  br i1 %i76, label %bb87, label %bb77

bb77:                                             ; preds = %bb72
  %i78 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i79 = load ptr, ptr @progName, align 8, !tbaa !20
  %i80 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i78, ptr noundef nonnull @.str.82, ptr noundef %i79) #32
  %i81 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i82 = load ptr, ptr @progName, align 8, !tbaa !20
  %i83 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i81, ptr noundef nonnull @.str.65, ptr noundef %i82, ptr noundef %i82) #32
  %i84 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i85 = icmp slt i32 %i84, 1
  br i1 %i85, label %bb86, label %bb77.bb270_crit_edge

bb77.bb270_crit_edge:                             ; preds = %bb77
  br label %bb270

bb86:                                             ; preds = %bb77
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb270

bb87:                                             ; preds = %bb72
  %i88 = load ptr, ptr @stdin, align 8, !tbaa !20
  br label %bb103

bb89:                                             ; preds = %bb70.bb89_crit_edge2, %bb70.bb89_crit_edge
  %i90 = tail call noalias ptr @fopen(ptr noundef nonnull @inName, ptr noundef nonnull @.str.66)
  %i91 = icmp eq ptr %i90, null
  br i1 %i91, label %bb92, label %bb89.bb103_crit_edge

bb89.bb103_crit_edge:                             ; preds = %bb89
  br label %bb103

bb92:                                             ; preds = %bb89
  %i93 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i94 = load ptr, ptr @progName, align 8, !tbaa !20
  %i95 = tail call ptr @__errno_location() #35
  %i96 = load i32, ptr %i95, align 4, !tbaa !19
  %i97 = tail call ptr @strerror(i32 noundef %i96) #31
  %i98 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i93, ptr noundef nonnull @.str.83, ptr noundef %i94, ptr noundef nonnull @inName, ptr noundef %i97) #32
  %i99 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i100 = icmp slt i32 %i99, 1
  br i1 %i100, label %bb101, label %bb92.bb270_crit_edge

bb92.bb270_crit_edge:                             ; preds = %bb92
  br label %bb270

bb101:                                            ; preds = %bb92
  store i32 1, ptr @exitValue, align 4, !tbaa !19
  br label %bb270

bb102:                                            ; preds = %bb70
  tail call fastcc void @panic(ptr noundef nonnull @.str.96) #36
  unreachable

bb103:                                            ; preds = %bb89.bb103_crit_edge, %bb87
  %i104 = phi ptr [ %i90, %bb89.bb103_crit_edge ], [ %i88, %bb87 ]
  %i105 = load i32, ptr @verbosity, align 4, !tbaa !19
  %i106 = icmp sgt i32 %i105, 0
  br i1 %i106, label %bb107, label %bb103.bb129_crit_edge

bb103.bb129_crit_edge:                            ; preds = %bb103
  br label %bb129

bb107:                                            ; preds = %bb103
  %i108 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i109 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i108, ptr noundef nonnull @.str.70, ptr noundef nonnull @inName) #32
  %i110 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) @inName) #33
  %i111 = trunc i64 %i110 to i32
  %i112 = load i32, ptr @longestFileName, align 4, !tbaa !19
  %i113 = icmp sgt i32 %i112, %i111
  br i1 %i113, label %bb114.preheader, label %bb107.bb126_crit_edge

bb107.bb126_crit_edge:                            ; preds = %bb107
  br label %bb126

bb114.preheader:                                  ; preds = %bb107
  br label %bb114

bb114:                                            ; preds = %bb114.preheader, %bb121
  %i115 = phi i32 [ %i125, %bb121 ], [ %i112, %bb114.preheader ]
  %i116 = phi i32 [ %i124, %bb121 ], [ 1, %bb114.preheader ]
  %i117 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) @inName) #33
  %i118 = trunc i64 %i117 to i32
  %i119 = sub nsw i32 %i115, %i118
  %i120 = icmp sgt i32 %i116, %i119
  br i1 %i120, label %bb126.loopexit, label %bb121

bb121:                                            ; preds = %bb114
  %i122 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i123 = tail call i32 @fputc(i32 32, ptr %i122)
  %i124 = add nuw nsw i32 %i116, 1
  %i125 = load i32, ptr @longestFileName, align 4, !tbaa !19
  br label %bb114, !llvm.loop !108

bb126.loopexit:                                   ; preds = %bb114
  br label %bb126

bb126:                                            ; preds = %bb107.bb126_crit_edge, %bb126.loopexit
  %i127 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i128 = tail call i32 @fflush(ptr noundef %i127)
  br label %bb129

bb129:                                            ; preds = %bb103.bb129_crit_edge, %bb126
  store ptr null, ptr @outputHandleJustInCase, align 8, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i1) #31
  call void @llvm.lifetime.start.p0(i64 5000, ptr nonnull %i2) #31
  call void @llvm.lifetime.start.p0(i64 5000, ptr nonnull %i3) #31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i4) #31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %i5) #31
  store i32 0, ptr %i4, align 4, !tbaa !19
  %i130 = tail call i32 @ferror(ptr noundef %i104) #31
  %i131 = icmp eq i32 %i130, 0
  br i1 %i131, label %bb132.preheader, label %bb129.bb236_crit_edge

bb129.bb236_crit_edge:                            ; preds = %bb129
  br label %bb236

bb132.preheader:                                  ; preds = %bb129
  br label %bb132

bb132:                                            ; preds = %bb132.preheader, %bb211
  %i133 = phi i32 [ %i212, %bb211 ], [ 0, %bb132.preheader ]
  %i134 = phi i32 [ %i144, %bb211 ], [ 0, %bb132.preheader ]
  %i135 = load i32, ptr @verbosity, align 4, !tbaa !19
  %i136 = load i8, ptr @smallMode, align 1, !tbaa !21
  %i137 = zext i8 %i136 to i32
  %i138 = call ptr @BZ2_bzReadOpen(ptr noundef nonnull %i, ptr noundef %i104, i32 noundef %i135, i32 noundef %i137, ptr noundef nonnull %i3, i32 noundef %i133) #31
  %i139 = icmp eq ptr %i138, null
  %i140 = load i32, ptr %i, align 4
  %i141 = icmp ne i32 %i140, 0
  %i142 = select i1 %i139, i1 true, i1 %i141
  br i1 %i142, label %bb225.loopexit1, label %bb143

bb143:                                            ; preds = %bb132
  %i144 = add nuw nsw i32 %i134, 1
  br label %bb145

bb145:                                            ; preds = %bb147.bb145_crit_edge, %bb143
  %i146 = phi i32 [ %i149, %bb147.bb145_crit_edge ], [ 0, %bb143 ]
  switch i32 %i146, label %bb145.bb225.loopexit_crit_edge [
    i32 0, label %bb147
    i32 4, label %bb151
  ]

bb145.bb225.loopexit_crit_edge:                   ; preds = %bb145
  br label %bb225.loopexit

bb147:                                            ; preds = %bb145
  %i148 = call i32 @BZ2_bzRead(ptr noundef nonnull %i, ptr noundef %i138, ptr noundef nonnull %i2, i32 noundef 5000) #31
  %i149 = load i32, ptr %i, align 4, !tbaa !19
  %i150 = icmp eq i32 %i149, -5
  br i1 %i150, label %bb225.loopexitsplit, label %bb147.bb145_crit_edge, !llvm.loop !112

bb147.bb145_crit_edge:                            ; preds = %bb147
  br label %bb145

bb151:                                            ; preds = %bb145
  call void @BZ2_bzReadGetUnused(ptr noundef nonnull %i, ptr noundef %i138, ptr noundef nonnull %i5, ptr noundef nonnull %i4) #31
  %i152 = load i32, ptr %i, align 4, !tbaa !19
  %i153 = icmp eq i32 %i152, 0
  br i1 %i153, label %bb155, label %bb154

bb154:                                            ; preds = %bb151
  call fastcc void @panic(ptr noundef nonnull @.str.98) #36
  unreachable

bb155:                                            ; preds = %bb151
  %i156 = load ptr, ptr %i5, align 8, !tbaa !20
  %i157 = load i32, ptr %i4, align 4, !tbaa !19
  %i158 = icmp sgt i32 %i157, 0
  br i1 %i158, label %bb159, label %bb155.bb198_crit_edge

bb155.bb198_crit_edge:                            ; preds = %bb155
  br label %bb198

bb159:                                            ; preds = %bb155
  %i160 = zext nneg i32 %i157 to i64
  %i161 = and i64 %i160, 3
  %i162 = icmp ult i32 %i157, 4
  br i1 %i162, label %bb159.bb186_crit_edge, label %bb163

bb159.bb186_crit_edge:                            ; preds = %bb159
  br label %bb186

bb163:                                            ; preds = %bb159
  %i164 = and i64 %i160, 2147483644
  br label %bb165

bb165:                                            ; preds = %bb165.bb165_crit_edge, %bb163
  %i166 = phi i64 [ 0, %bb163 ], [ %i183, %bb165.bb165_crit_edge ]
  %i167 = phi i64 [ 0, %bb163 ], [ %i184, %bb165.bb165_crit_edge ]
  %i168 = getelementptr inbounds i8, ptr %i156, i64 %i166
  %i169 = load i8, ptr %i168, align 1, !tbaa !21
  %i170 = getelementptr inbounds [5000 x i8], ptr %i3, i64 0, i64 %i166
  store i8 %i169, ptr %i170, align 4, !tbaa !21
  %i171 = or disjoint i64 %i166, 1
  %i172 = getelementptr inbounds i8, ptr %i156, i64 %i171
  %i173 = load i8, ptr %i172, align 1, !tbaa !21
  %i174 = getelementptr inbounds [5000 x i8], ptr %i3, i64 0, i64 %i171
  store i8 %i173, ptr %i174, align 1, !tbaa !21
  %i175 = or disjoint i64 %i166, 2
  %i176 = getelementptr inbounds i8, ptr %i156, i64 %i175
  %i177 = load i8, ptr %i176, align 1, !tbaa !21
  %i178 = getelementptr inbounds [5000 x i8], ptr %i3, i64 0, i64 %i175
  store i8 %i177, ptr %i178, align 2, !tbaa !21
  %i179 = or disjoint i64 %i166, 3
  %i180 = getelementptr inbounds i8, ptr %i156, i64 %i179
  %i181 = load i8, ptr %i180, align 1, !tbaa !21
  %i182 = getelementptr inbounds [5000 x i8], ptr %i3, i64 0, i64 %i179
  store i8 %i181, ptr %i182, align 1, !tbaa !21
  %i183 = add nuw nsw i64 %i166, 4
  %i184 = add i64 %i167, 4
  %i185 = icmp eq i64 %i184, %i164
  br i1 %i185, label %bb186.loopexit, label %bb165.bb165_crit_edge, !llvm.loop !113

bb165.bb165_crit_edge:                            ; preds = %bb165
  br label %bb165

bb186.loopexit:                                   ; preds = %bb165
  br label %bb186

bb186:                                            ; preds = %bb159.bb186_crit_edge, %bb186.loopexit
  %i187 = phi i64 [ 0, %bb159.bb186_crit_edge ], [ %i183, %bb186.loopexit ]
  %i188 = icmp eq i64 %i161, 0
  br i1 %i188, label %bb186.bb198_crit_edge, label %bb189.preheader

bb186.bb198_crit_edge:                            ; preds = %bb186
  br label %bb198

bb189.preheader:                                  ; preds = %bb186
  br label %bb189

bb189:                                            ; preds = %bb189.bb189_crit_edge, %bb189.preheader
  %i190 = phi i64 [ %i195, %bb189.bb189_crit_edge ], [ %i187, %bb189.preheader ]
  %i191 = phi i64 [ %i196, %bb189.bb189_crit_edge ], [ 0, %bb189.preheader ]
  %i192 = getelementptr inbounds i8, ptr %i156, i64 %i190
  %i193 = load i8, ptr %i192, align 1, !tbaa !21
  %i194 = getelementptr inbounds [5000 x i8], ptr %i3, i64 0, i64 %i190
  store i8 %i193, ptr %i194, align 1, !tbaa !21
  %i195 = add nuw nsw i64 %i190, 1
  %i196 = add i64 %i191, 1
  %i197 = icmp eq i64 %i196, %i161
  br i1 %i197, label %bb198.loopexit, label %bb189.bb189_crit_edge, !llvm.loop !114

bb189.bb189_crit_edge:                            ; preds = %bb189
  br label %bb189

bb198.loopexit:                                   ; preds = %bb189
  br label %bb198

bb198:                                            ; preds = %bb186.bb198_crit_edge, %bb155.bb198_crit_edge, %bb198.loopexit
  call void @BZ2_bzReadClose(ptr noundef nonnull %i, ptr noundef %i138) #31
  %i199 = load i32, ptr %i, align 4, !tbaa !19
  %i200 = icmp eq i32 %i199, 0
  br i1 %i200, label %bb202, label %bb201

bb201:                                            ; preds = %bb198
  call fastcc void @panic(ptr noundef nonnull @.str.98) #36
  unreachable

bb202:                                            ; preds = %bb198
  %i203 = load i32, ptr %i4, align 4, !tbaa !19
  %i204 = icmp eq i32 %i203, 0
  br i1 %i204, label %bb205, label %bb202.bb211_crit_edge

bb202.bb211_crit_edge:                            ; preds = %bb202
  br label %bb211

bb205:                                            ; preds = %bb202
  %i206 = call i32 @fgetc(ptr noundef %i104)
  %i207 = icmp eq i32 %i206, -1
  br i1 %i207, label %bb213, label %bb208

bb208:                                            ; preds = %bb205
  %i209 = call i32 @ungetc(i32 noundef %i206, ptr noundef %i104)
  %i210 = load i32, ptr %i4, align 4, !tbaa !19
  br label %bb211

bb211:                                            ; preds = %bb202.bb211_crit_edge, %bb208
  %i212 = phi i32 [ %i210, %bb208 ], [ %i203, %bb202.bb211_crit_edge ]
  br label %bb132

bb213:                                            ; preds = %bb205
  %i214 = call i32 @ferror(ptr noundef %i104) #31
  %i215 = icmp eq i32 %i214, 0
  br i1 %i215, label %bb216, label %bb213.bb236_crit_edge

bb213.bb236_crit_edge:                            ; preds = %bb213
  br label %bb236

bb216:                                            ; preds = %bb213
  %i217 = call i32 @fclose(ptr noundef %i104)
  %i218 = icmp eq i32 %i217, -1
  br i1 %i218, label %bb216.bb236_crit_edge, label %bb219

bb216.bb236_crit_edge:                            ; preds = %bb216
  br label %bb236

bb219:                                            ; preds = %bb216
  %i220 = load i32, ptr @verbosity, align 4
  %i221 = icmp sgt i32 %i220, 1
  br i1 %i221, label %bb222, label %bb219.bb263_crit_edge

bb219.bb263_crit_edge:                            ; preds = %bb219
  br label %bb263

bb222:                                            ; preds = %bb219
  %i223 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i224 = call i64 @fwrite(ptr nonnull @.str.89, i64 5, i64 1, ptr %i223) #32
  br label %bb261

bb225.loopexitsplit:                              ; preds = %bb147
  br label %bb225.loopexit

bb225.loopexit:                                   ; preds = %bb225.loopexitsplit, %bb145.bb225.loopexit_crit_edge
  br label %bb225

bb225.loopexit1:                                  ; preds = %bb132
  br label %bb225

bb225:                                            ; preds = %bb225.loopexit1, %bb225.loopexit
  %i226 = phi i32 [ %i144, %bb225.loopexit ], [ %i134, %bb225.loopexit1 ]
  call void @BZ2_bzReadClose(ptr noundef nonnull %i1, ptr noundef %i138) #31
  %i227 = load i32, ptr @verbosity, align 4, !tbaa !19
  %i228 = icmp eq i32 %i227, 0
  br i1 %i228, label %bb229, label %bb225.bb233_crit_edge

bb225.bb233_crit_edge:                            ; preds = %bb225
  br label %bb233

bb229:                                            ; preds = %bb225
  %i230 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i231 = load ptr, ptr @progName, align 8, !tbaa !20
  %i232 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i230, ptr noundef nonnull @.str.99, ptr noundef %i231, ptr noundef nonnull @inName) #32
  br label %bb233

bb233:                                            ; preds = %bb225.bb233_crit_edge, %bb229
  %i234 = load i32, ptr %i, align 4, !tbaa !19
  switch i32 %i234, label %bb260 [
    i32 -9, label %bb235
    i32 -6, label %bb233.bb236_crit_edge
    i32 -4, label %bb237
    i32 -3, label %bb240
    i32 -7, label %bb241
    i32 -5, label %bb244
  ]

bb233.bb236_crit_edge:                            ; preds = %bb233
  br label %bb236

bb235:                                            ; preds = %bb233
  call fastcc void @configError() #36
  unreachable

bb236:                                            ; preds = %bb233.bb236_crit_edge, %bb216.bb236_crit_edge, %bb213.bb236_crit_edge, %bb129.bb236_crit_edge
  call fastcc void @ioError() #36
  unreachable

bb237:                                            ; preds = %bb233
  %i238 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i239 = call i64 @fwrite(ptr nonnull @.str.100, i64 35, i64 1, ptr %i238) #32
  br label %bb269

bb240:                                            ; preds = %bb233
  call fastcc void @outOfMemory() #36
  unreachable

bb241:                                            ; preds = %bb233
  %i242 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i243 = call i64 @fwrite(ptr nonnull @.str.101, i64 23, i64 1, ptr %i242) #32
  br label %bb269

bb244:                                            ; preds = %bb233
  %i245 = load ptr, ptr @stdin, align 8, !tbaa !20
  %i246 = icmp eq ptr %i245, %i104
  br i1 %i246, label %bb244.bb249_crit_edge, label %bb247

bb244.bb249_crit_edge:                            ; preds = %bb244
  br label %bb249

bb247:                                            ; preds = %bb244
  %i248 = call i32 @fclose(ptr noundef %i104)
  br label %bb249

bb249:                                            ; preds = %bb244.bb249_crit_edge, %bb247
  %i250 = icmp eq i32 %i226, 1
  br i1 %i250, label %bb251, label %bb254

bb251:                                            ; preds = %bb249
  %i252 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i253 = call i64 @fwrite(ptr nonnull @.str.102, i64 45, i64 1, ptr %i252) #32
  br label %bb269

bb254:                                            ; preds = %bb249
  %i255 = load i8, ptr @noisy, align 1, !tbaa !21
  %i256 = icmp eq i8 %i255, 0
  br i1 %i256, label %bb254.bb261_crit_edge, label %bb257

bb254.bb261_crit_edge:                            ; preds = %bb254
  br label %bb261

bb257:                                            ; preds = %bb254
  %i258 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i259 = call i64 @fwrite(ptr nonnull @.str.103, i64 35, i64 1, ptr %i258) #32
  br label %bb261

bb260:                                            ; preds = %bb233
  call fastcc void @panic(ptr noundef nonnull @.str.104) #36
  unreachable

bb261:                                            ; preds = %bb254.bb261_crit_edge, %bb257, %bb222
  %i262 = load i32, ptr @verbosity, align 4
  br label %bb263

bb263:                                            ; preds = %bb219.bb263_crit_edge, %bb261
  %i264 = phi i32 [ %i262, %bb261 ], [ %i220, %bb219.bb263_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i5) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i4) #31
  call void @llvm.lifetime.end.p0(i64 5000, ptr nonnull %i3) #31
  call void @llvm.lifetime.end.p0(i64 5000, ptr nonnull %i2) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i1) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i) #31
  %i265 = icmp sgt i32 %i264, 0
  br i1 %i265, label %bb266, label %bb263.bb270_crit_edge

bb263.bb270_crit_edge:                            ; preds = %bb263
  br label %bb270

bb266:                                            ; preds = %bb263
  %i267 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i268 = call i64 @fwrite(ptr nonnull @.str.97, i64 3, i64 1, ptr %i267) #32
  br label %bb270

bb269:                                            ; preds = %bb251, %bb241, %bb237
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i5) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i4) #31
  call void @llvm.lifetime.end.p0(i64 5000, ptr nonnull %i3) #31
  call void @llvm.lifetime.end.p0(i64 5000, ptr nonnull %i2) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i1) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i) #31
  store i8 1, ptr @testFailsExist, align 1, !tbaa !21
  br label %bb270

bb270:                                            ; preds = %bb263.bb270_crit_edge, %bb92.bb270_crit_edge, %bb77.bb270_crit_edge, %bb63.bb270_crit_edge, %bb43.bb270_crit_edge, %bb269, %bb266, %bb101, %bb86, %bb69, %bb52
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %i6) #31
  ret void
}

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #15

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @panic(ptr noundef %arg) unnamed_addr #8 {
bb:
  %i = load ptr, ptr @stderr, align 8, !tbaa !20
  %i1 = load ptr, ptr @progName, align 8, !tbaa !20
  %i2 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i, ptr noundef nonnull @.str.71, ptr noundef %i1, ptr noundef %arg) #32
  tail call fastcc void @showFileNames()
  tail call fastcc void @cleanUpAndFail(i32 noundef 3) #36
  unreachable
}

; Function Attrs: nofree nounwind
declare noalias noundef ptr @fopen(ptr nocapture noundef readonly, ptr nocapture noundef readonly) local_unnamed_addr #5

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare ptr @__errno_location() local_unnamed_addr #14

; Function Attrs: nounwind
declare ptr @strerror(i32 noundef) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare noundef i32 @fclose(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @stat(ptr nocapture noundef readonly, ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @fileno(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @isatty(i32 noundef) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare noundef i32 @fputc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @fflush(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind memory(read)
declare noundef i32 @ferror(ptr nocapture noundef) local_unnamed_addr #13

; Function Attrs: nofree nounwind
declare noundef i32 @fgetc(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @ungetc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @configError() unnamed_addr #8 {
bb:
  %i = load ptr, ptr @stderr, align 8, !tbaa !20
  %i1 = tail call i64 @fwrite(ptr nonnull @.str.77, i64 235, i64 1, ptr %i) #32
  %i2 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i3 = icmp slt i32 %i2, 3
  br i1 %i3, label %bb4, label %bb.bb5_crit_edge

bb.bb5_crit_edge:                                 ; preds = %bb
  br label %bb5

bb4:                                              ; preds = %bb
  store i32 3, ptr @exitValue, align 4, !tbaa !19
  br label %bb5

bb5:                                              ; preds = %bb.bb5_crit_edge, %bb4
  %i6 = phi i32 [ %i2, %bb.bb5_crit_edge ], [ 3, %bb4 ]
  tail call void @exit(i32 noundef %i6) #34
  unreachable
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @ioError() unnamed_addr #8 {
bb:
  %i = load ptr, ptr @stderr, align 8, !tbaa !20
  %i1 = load ptr, ptr @progName, align 8, !tbaa !20
  %i2 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i, ptr noundef nonnull @.str.78, ptr noundef %i1) #32
  %i3 = load ptr, ptr @progName, align 8, !tbaa !20
  tail call void @perror(ptr noundef %i3) #32
  tail call fastcc void @showFileNames()
  tail call fastcc void @cleanUpAndFail(i32 noundef 1) #36
  unreachable
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @outOfMemory() unnamed_addr #8 {
bb:
  %i = load ptr, ptr @stderr, align 8, !tbaa !20
  %i1 = load ptr, ptr @progName, align 8, !tbaa !20
  %i2 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i, ptr noundef nonnull @.str.48, ptr noundef %i1) #32
  tail call fastcc void @showFileNames()
  tail call fastcc void @cleanUpAndFail(i32 noundef 1) #36
  unreachable
}

; Function Attrs: nofree nounwind uwtable
define internal fastcc void @showFileNames() unnamed_addr #16 {
bb:
  %i = load i8, ptr @noisy, align 1, !tbaa !21
  %i1 = icmp eq i8 %i, 0
  br i1 %i1, label %bb.bb5_crit_edge, label %bb2

bb.bb5_crit_edge:                                 ; preds = %bb
  br label %bb5

bb2:                                              ; preds = %bb
  %i3 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i4 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i3, ptr noundef nonnull @.str.38, ptr noundef nonnull @inName, ptr noundef nonnull @outName) #32
  br label %bb5

bb5:                                              ; preds = %bb.bb5_crit_edge, %bb2
  ret void
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @cleanUpAndFail(i32 noundef %arg) unnamed_addr #8 {
bb:
  %i = alloca %struct.stat, align 8
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %i) #31
  %i1 = load i32, ptr @srcMode, align 4, !tbaa !19
  %i2 = icmp eq i32 %i1, 3
  %i3 = load i32, ptr @opMode, align 4
  %i4 = icmp ne i32 %i3, 3
  %i5 = select i1 %i2, i1 %i4, i1 false
  %i6 = load i8, ptr @deleteOutputOnInterrupt, align 1
  %i7 = icmp ne i8 %i6, 0
  %i8 = select i1 %i5, i1 %i7, i1 false
  br i1 %i8, label %bb9, label %bb.bb42_crit_edge

bb.bb42_crit_edge:                                ; preds = %bb
  br label %bb42

bb9:                                              ; preds = %bb
  %i10 = call i32 @stat(ptr noundef nonnull @inName, ptr noundef nonnull %i) #31
  %i11 = icmp eq i32 %i10, 0
  br i1 %i11, label %bb12, label %bb27

bb12:                                             ; preds = %bb9
  %i13 = load i8, ptr @noisy, align 1, !tbaa !21
  %i14 = icmp eq i8 %i13, 0
  br i1 %i14, label %bb12.bb19_crit_edge, label %bb15

bb12.bb19_crit_edge:                              ; preds = %bb12
  br label %bb19

bb15:                                             ; preds = %bb12
  %i16 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i17 = load ptr, ptr @progName, align 8, !tbaa !20
  %i18 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i16, ptr noundef nonnull @.str.39, ptr noundef %i17, ptr noundef nonnull @outName) #32
  br label %bb19

bb19:                                             ; preds = %bb12.bb19_crit_edge, %bb15
  %i20 = load ptr, ptr @outputHandleJustInCase, align 8, !tbaa !20
  %i21 = icmp eq ptr %i20, null
  br i1 %i21, label %bb19.bb24_crit_edge, label %bb22

bb19.bb24_crit_edge:                              ; preds = %bb19
  br label %bb24

bb22:                                             ; preds = %bb19
  %i23 = tail call i32 @fclose(ptr noundef nonnull %i20)
  br label %bb24

bb24:                                             ; preds = %bb19.bb24_crit_edge, %bb22
  %i25 = tail call i32 @remove(ptr noundef nonnull @outName) #31
  %i26 = icmp eq i32 %i25, 0
  br i1 %i26, label %bb24.bb42_crit_edge, label %bb24.bb37_crit_edge

bb24.bb37_crit_edge:                              ; preds = %bb24
  br label %bb37

bb24.bb42_crit_edge:                              ; preds = %bb24
  br label %bb42

bb27:                                             ; preds = %bb9
  %i28 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i29 = load ptr, ptr @progName, align 8, !tbaa !20
  %i30 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i28, ptr noundef nonnull @.str.41, ptr noundef %i29) #32
  %i31 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i32 = load ptr, ptr @progName, align 8, !tbaa !20
  %i33 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i31, ptr noundef nonnull @.str.42, ptr noundef %i32) #32
  %i34 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i35 = load ptr, ptr @progName, align 8, !tbaa !20
  %i36 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i34, ptr noundef nonnull @.str.43, ptr noundef %i35, ptr noundef nonnull @outName) #32
  br label %bb37

bb37:                                             ; preds = %bb24.bb37_crit_edge, %bb27
  %i38 = phi ptr [ @.str.44, %bb27 ], [ @.str.40, %bb24.bb37_crit_edge ]
  %i39 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i40 = load ptr, ptr @progName, align 8, !tbaa !20
  %i41 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i39, ptr noundef nonnull %i38, ptr noundef %i40) #32
  br label %bb42

bb42:                                             ; preds = %bb24.bb42_crit_edge, %bb.bb42_crit_edge, %bb37
  %i43 = load i8, ptr @noisy, align 1, !tbaa !21
  %i44 = icmp ne i8 %i43, 0
  %i45 = load i32, ptr @numFileNames, align 4
  %i46 = icmp sgt i32 %i45, 0
  %i47 = select i1 %i44, i1 %i46, i1 false
  br i1 %i47, label %bb48, label %bb42.bb56_crit_edge

bb42.bb56_crit_edge:                              ; preds = %bb42
  br label %bb56

bb48:                                             ; preds = %bb42
  %i49 = load i32, ptr @numFilesProcessed, align 4, !tbaa !19
  %i50 = icmp slt i32 %i49, %i45
  br i1 %i50, label %bb51, label %bb48.bb56_crit_edge

bb48.bb56_crit_edge:                              ; preds = %bb48
  br label %bb56

bb51:                                             ; preds = %bb48
  %i52 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i53 = load ptr, ptr @progName, align 8, !tbaa !20
  %i54 = sub nsw i32 %i45, %i49
  %i55 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i52, ptr noundef nonnull @.str.45, ptr noundef %i53, ptr noundef %i53, i32 noundef %i45, i32 noundef %i54) #32
  br label %bb56

bb56:                                             ; preds = %bb48.bb56_crit_edge, %bb42.bb56_crit_edge, %bb51
  %i57 = load i32, ptr @exitValue, align 4, !tbaa !19
  %i58 = icmp slt i32 %i57, %arg
  br i1 %i58, label %bb59, label %bb56.bb60_crit_edge

bb56.bb60_crit_edge:                              ; preds = %bb56
  br label %bb60

bb59:                                             ; preds = %bb56
  store i32 %arg, ptr @exitValue, align 4, !tbaa !19
  br label %bb60

bb60:                                             ; preds = %bb56.bb60_crit_edge, %bb59
  %i61 = phi i32 [ %i57, %bb56.bb60_crit_edge ], [ %arg, %bb59 ]
  tail call void @exit(i32 noundef %i61) #34
  unreachable
}

; Function Attrs: nofree nounwind
declare noundef i32 @remove(ptr nocapture noundef readonly) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @perror(ptr nocapture noundef readonly) local_unnamed_addr #5

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @strcat(ptr noalias noundef returned, ptr noalias nocapture noundef readonly) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare noundef i32 @lstat(ptr nocapture noundef readonly, ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nofree
declare noundef i32 @open(ptr nocapture noundef readonly, i32 noundef, ...) local_unnamed_addr #17

; Function Attrs: nofree nounwind
declare noalias noundef ptr @fdopen(i32 noundef, ptr nocapture noundef readonly) local_unnamed_addr #5

declare i32 @close(i32 noundef) local_unnamed_addr #18

; Function Attrs: nounwind
declare i32 @fchmod(i32 noundef, i32 noundef) local_unnamed_addr #9

; Function Attrs: nounwind
declare i32 @fchown(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @rewind(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i64 @fread(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @crcError() unnamed_addr #8 {
bb:
  %i = load ptr, ptr @stderr, align 8, !tbaa !20
  %i1 = load ptr, ptr @progName, align 8, !tbaa !20
  %i2 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i, ptr noundef nonnull @.str.92, ptr noundef %i1) #32
  tail call fastcc void @showFileNames()
  tail call fastcc void @cadvise()
  tail call fastcc void @cleanUpAndFail(i32 noundef 2) #36
  unreachable
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @compressedStreamEOF() unnamed_addr #8 {
bb:
  %i = load i8, ptr @noisy, align 1, !tbaa !21
  %i1 = icmp eq i8 %i, 0
  br i1 %i1, label %bb.bb17_crit_edge, label %bb2

bb.bb17_crit_edge:                                ; preds = %bb
  br label %bb17

bb2:                                              ; preds = %bb
  %i3 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i4 = load ptr, ptr @progName, align 8, !tbaa !20
  %i5 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i3, ptr noundef nonnull @.str.93, ptr noundef %i4) #32
  %i6 = load ptr, ptr @progName, align 8, !tbaa !20
  tail call void @perror(ptr noundef %i6) #32
  %i7 = load i8, ptr @noisy, align 1, !tbaa !21
  %i8 = icmp eq i8 %i7, 0
  br i1 %i8, label %bb2.bb17_crit_edge, label %bb9

bb2.bb17_crit_edge:                               ; preds = %bb2
  br label %bb17

bb9:                                              ; preds = %bb2
  %i10 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i11 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i10, ptr noundef nonnull @.str.38, ptr noundef nonnull @inName, ptr noundef nonnull @outName) #32
  %i12 = load i8, ptr @noisy, align 1, !tbaa !21
  %i13 = icmp eq i8 %i12, 0
  br i1 %i13, label %bb9.bb17_crit_edge, label %bb14

bb9.bb17_crit_edge:                               ; preds = %bb9
  br label %bb17

bb14:                                             ; preds = %bb9
  %i15 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i16 = tail call i64 @fwrite(ptr nonnull @.str.46, i64 240, i64 1, ptr %i15) #32
  br label %bb17

bb17:                                             ; preds = %bb9.bb17_crit_edge, %bb2.bb17_crit_edge, %bb.bb17_crit_edge, %bb14
  tail call fastcc void @cleanUpAndFail(i32 noundef 2) #36
  unreachable
}

; Function Attrs: nofree nounwind
declare noundef i32 @utime(ptr nocapture noundef readonly, ptr nocapture noundef readonly) local_unnamed_addr #5

; Function Attrs: nofree nounwind uwtable
define internal fastcc void @cadvise() unnamed_addr #16 {
bb:
  %i = load i8, ptr @noisy, align 1, !tbaa !21
  %i1 = icmp eq i8 %i, 0
  br i1 %i1, label %bb.bb5_crit_edge, label %bb2

bb.bb5_crit_edge:                                 ; preds = %bb
  br label %bb5

bb2:                                              ; preds = %bb
  %i3 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i4 = tail call i64 @fwrite(ptr nonnull @.str.46, i64 240, i64 1, ptr %i3) #32
  br label %bb5

bb5:                                              ; preds = %bb.bb5_crit_edge, %bb2
  ret void
}

; Function Attrs: nofree nounwind uwtable
define internal fastcc void @pad() unnamed_addr #16 {
bb:
  %i = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) @inName) #33
  %i1 = trunc i64 %i to i32
  %i2 = load i32, ptr @longestFileName, align 4, !tbaa !19
  %i3 = icmp sgt i32 %i2, %i1
  br i1 %i3, label %bb4.preheader, label %bb.bb16_crit_edge

bb.bb16_crit_edge:                                ; preds = %bb
  br label %bb16

bb4.preheader:                                    ; preds = %bb
  br label %bb4

bb4:                                              ; preds = %bb4.preheader, %bb11
  %i5 = phi i32 [ %i15, %bb11 ], [ %i2, %bb4.preheader ]
  %i6 = phi i32 [ %i14, %bb11 ], [ 1, %bb4.preheader ]
  %i7 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) @inName) #33
  %i8 = trunc i64 %i7 to i32
  %i9 = sub nsw i32 %i5, %i8
  %i10 = icmp sgt i32 %i6, %i9
  br i1 %i10, label %bb16.loopexit, label %bb11

bb11:                                             ; preds = %bb4
  %i12 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i13 = tail call i32 @fputc(i32 32, ptr %i12)
  %i14 = add nuw nsw i32 %i6, 1
  %i15 = load i32, ptr @longestFileName, align 4, !tbaa !19
  br label %bb4, !llvm.loop !108

bb16.loopexit:                                    ; preds = %bb4
  br label %bb16

bb16:                                             ; preds = %bb.bb16_crit_edge, %bb16.loopexit
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #2

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: write) uwtable
define internal fastcc void @uInt64_toAscii(ptr nocapture noundef writeonly %arg, i64 %arg1) unnamed_addr #19 {
bb:
  %i = alloca [32 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %i) #31
  %i2 = trunc i64 %arg1 to i16
  %i3 = lshr i64 %arg1, 8
  %i4 = trunc i64 %i3 to i16
  %i5 = lshr i64 %arg1, 16
  %i6 = trunc i64 %i5 to i16
  %i7 = lshr i64 %arg1, 24
  %i8 = trunc i64 %i7 to i16
  %i9 = lshr i64 %arg1, 32
  %i10 = trunc i64 %i9 to i16
  %i11 = lshr i64 %arg1, 40
  %i12 = trunc i64 %i11 to i16
  %i13 = lshr i64 %arg1, 48
  %i14 = trunc i64 %i13 to i16
  %i15 = lshr i64 %arg1, 56
  %i16 = trunc i64 %i15 to i8
  br label %bb17

bb17:                                             ; preds = %bb17.bb17_crit_edge, %bb
  %i18 = phi i32 [ %i88, %bb17.bb17_crit_edge ], [ 1, %bb ]
  %i19 = phi i64 [ %i69, %bb17.bb17_crit_edge ], [ 0, %bb ]
  %i20 = phi i8 [ %i28, %bb17.bb17_crit_edge ], [ %i16, %bb ]
  %i21 = phi i16 [ %i34, %bb17.bb17_crit_edge ], [ %i14, %bb ]
  %i22 = phi i16 [ %i39, %bb17.bb17_crit_edge ], [ %i12, %bb ]
  %i23 = phi i16 [ %i44, %bb17.bb17_crit_edge ], [ %i10, %bb ]
  %i24 = phi i16 [ %i49, %bb17.bb17_crit_edge ], [ %i8, %bb ]
  %i25 = phi i16 [ %i54, %bb17.bb17_crit_edge ], [ %i6, %bb ]
  %i26 = phi i16 [ %i59, %bb17.bb17_crit_edge ], [ %i4, %bb ]
  %i27 = phi i16 [ %i64, %bb17.bb17_crit_edge ], [ %i2, %bb ]
  %i28 = udiv i8 %i20, 10
  %i29 = urem i8 %i20, 10
  %i30 = zext nneg i8 %i29 to i16
  %i31 = shl nuw nsw i16 %i30, 8
  %i32 = and i16 %i21, 255
  %i33 = or disjoint i16 %i31, %i32
  %i34 = udiv i16 %i33, 10
  %i35 = urem i16 %i33, 10
  %i36 = shl nuw nsw i16 %i35, 8
  %i37 = and i16 %i22, 255
  %i38 = or disjoint i16 %i36, %i37
  %i39 = udiv i16 %i38, 10
  %i40 = urem i16 %i38, 10
  %i41 = shl nuw nsw i16 %i40, 8
  %i42 = and i16 %i23, 255
  %i43 = or disjoint i16 %i41, %i42
  %i44 = udiv i16 %i43, 10
  %i45 = urem i16 %i43, 10
  %i46 = shl nuw nsw i16 %i45, 8
  %i47 = and i16 %i24, 255
  %i48 = or disjoint i16 %i46, %i47
  %i49 = udiv i16 %i48, 10
  %i50 = urem i16 %i48, 10
  %i51 = shl nuw nsw i16 %i50, 8
  %i52 = and i16 %i25, 255
  %i53 = or disjoint i16 %i51, %i52
  %i54 = udiv i16 %i53, 10
  %i55 = urem i16 %i53, 10
  %i56 = shl nuw nsw i16 %i55, 8
  %i57 = and i16 %i26, 255
  %i58 = or disjoint i16 %i56, %i57
  %i59 = udiv i16 %i58, 10
  %i60 = urem i16 %i58, 10
  %i61 = shl nuw nsw i16 %i60, 8
  %i62 = and i16 %i27, 255
  %i63 = or disjoint i16 %i61, %i62
  %i64 = udiv i16 %i63, 10
  %i65 = urem i16 %i63, 10
  %i66 = trunc i16 %i65 to i8
  %i67 = or disjoint i8 %i66, 48
  %i68 = getelementptr inbounds [32 x i8], ptr %i, i64 0, i64 %i19
  store i8 %i67, ptr %i68, align 1, !tbaa !21
  %i69 = add nuw i64 %i19, 1
  %i70 = or i16 %i59, %i54
  %i71 = or i16 %i70, %i64
  %i72 = and i16 %i71, 255
  %i73 = icmp ne i16 %i72, 0
  %i74 = and i16 %i49, 255
  %i75 = icmp ne i16 %i74, 0
  %i76 = select i1 %i73, i1 true, i1 %i75
  %i77 = and i16 %i44, 255
  %i78 = icmp ne i16 %i77, 0
  %i79 = select i1 %i76, i1 true, i1 %i78
  %i80 = and i16 %i39, 255
  %i81 = icmp ne i16 %i80, 0
  %i82 = select i1 %i79, i1 true, i1 %i81
  %i83 = and i16 %i34, 255
  %i84 = icmp ne i16 %i83, 0
  %i85 = select i1 %i82, i1 true, i1 %i84
  %i86 = icmp ugt i8 %i20, 9
  %i87 = select i1 %i85, i1 true, i1 %i86
  %i88 = add nuw i32 %i18, 1
  br i1 %i87, label %bb17.bb17_crit_edge, label %bb89, !llvm.loop !115

bb17.bb17_crit_edge:                              ; preds = %bb17
  br label %bb17

bb89:                                             ; preds = %bb17
  %i90 = and i64 %i69, 4294967295
  %i91 = getelementptr inbounds i8, ptr %arg, i64 %i90
  store i8 0, ptr %i91, align 1, !tbaa !21
  %i92 = shl i64 %i19, 32
  %i93 = ashr exact i64 %i92, 32
  %i94 = zext i32 %i18 to i64
  %i95 = and i64 %i94, 3
  %i96 = icmp ult i64 %i19, 3
  br i1 %i96, label %bb89.bb124_crit_edge, label %bb97

bb89.bb124_crit_edge:                             ; preds = %bb89
  br label %bb124

bb97:                                             ; preds = %bb89
  %i98 = and i64 %i94, 4294967292
  br label %bb99

bb99:                                             ; preds = %bb99.bb99_crit_edge, %bb97
  %i100 = phi i64 [ 0, %bb97 ], [ %i121, %bb99.bb99_crit_edge ]
  %i101 = phi i64 [ 0, %bb97 ], [ %i122, %bb99.bb99_crit_edge ]
  %i102 = sub nsw i64 %i93, %i100
  %i103 = getelementptr inbounds [32 x i8], ptr %i, i64 0, i64 %i102
  %i104 = load i8, ptr %i103, align 1, !tbaa !21
  %i105 = getelementptr inbounds i8, ptr %arg, i64 %i100
  store i8 %i104, ptr %i105, align 1, !tbaa !21
  %i106 = or disjoint i64 %i100, 1
  %i107 = sub nsw i64 %i93, %i106
  %i108 = getelementptr inbounds [32 x i8], ptr %i, i64 0, i64 %i107
  %i109 = load i8, ptr %i108, align 1, !tbaa !21
  %i110 = getelementptr inbounds i8, ptr %arg, i64 %i106
  store i8 %i109, ptr %i110, align 1, !tbaa !21
  %i111 = or disjoint i64 %i100, 2
  %i112 = sub nsw i64 %i93, %i111
  %i113 = getelementptr inbounds [32 x i8], ptr %i, i64 0, i64 %i112
  %i114 = load i8, ptr %i113, align 1, !tbaa !21
  %i115 = getelementptr inbounds i8, ptr %arg, i64 %i111
  store i8 %i114, ptr %i115, align 1, !tbaa !21
  %i116 = or disjoint i64 %i100, 3
  %i117 = sub nsw i64 %i93, %i116
  %i118 = getelementptr inbounds [32 x i8], ptr %i, i64 0, i64 %i117
  %i119 = load i8, ptr %i118, align 1, !tbaa !21
  %i120 = getelementptr inbounds i8, ptr %arg, i64 %i116
  store i8 %i119, ptr %i120, align 1, !tbaa !21
  %i121 = add nuw nsw i64 %i100, 4
  %i122 = add i64 %i101, 4
  %i123 = icmp eq i64 %i122, %i98
  br i1 %i123, label %bb124.loopexit, label %bb99.bb99_crit_edge, !llvm.loop !116

bb99.bb99_crit_edge:                              ; preds = %bb99
  br label %bb99

bb124.loopexit:                                   ; preds = %bb99
  br label %bb124

bb124:                                            ; preds = %bb89.bb124_crit_edge, %bb124.loopexit
  %i125 = phi i64 [ 0, %bb89.bb124_crit_edge ], [ %i121, %bb124.loopexit ]
  %i126 = icmp eq i64 %i95, 0
  br i1 %i126, label %bb124.bb137_crit_edge, label %bb127.preheader

bb124.bb137_crit_edge:                            ; preds = %bb124
  br label %bb137

bb127.preheader:                                  ; preds = %bb124
  br label %bb127

bb127:                                            ; preds = %bb127.bb127_crit_edge, %bb127.preheader
  %i128 = phi i64 [ %i134, %bb127.bb127_crit_edge ], [ %i125, %bb127.preheader ]
  %i129 = phi i64 [ %i135, %bb127.bb127_crit_edge ], [ 0, %bb127.preheader ]
  %i130 = sub nsw i64 %i93, %i128
  %i131 = getelementptr inbounds [32 x i8], ptr %i, i64 0, i64 %i130
  %i132 = load i8, ptr %i131, align 1, !tbaa !21
  %i133 = getelementptr inbounds i8, ptr %arg, i64 %i128
  store i8 %i132, ptr %i133, align 1, !tbaa !21
  %i134 = add nuw nsw i64 %i128, 1
  %i135 = add i64 %i129, 1
  %i136 = icmp eq i64 %i135, %i95
  br i1 %i136, label %bb137.loopexit, label %bb127.bb127_crit_edge, !llvm.loop !117

bb127.bb127_crit_edge:                            ; preds = %bb127
  br label %bb127

bb137.loopexit:                                   ; preds = %bb127
  br label %bb137

bb137:                                            ; preds = %bb124.bb137_crit_edge, %bb137.loopexit
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %i) #31
  ret void
}

; Function Attrs: nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @calloc(i64 noundef, i64 noundef) local_unnamed_addr #20

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #21

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #10

; Function Attrs: noreturn nounwind uwtable
define dso_local void @BZ2_bz__AssertH__fail(i32 noundef %arg) local_unnamed_addr #8 {
bb:
  %i = load ptr, ptr @stderr, align 8, !tbaa !20
  %i1 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i, ptr noundef nonnull @.str.56, i32 noundef %arg, ptr noundef nonnull @.str.5.57) #32
  %i2 = icmp eq i32 %arg, 1007
  br i1 %i2, label %bb3, label %bb.bb6_crit_edge

bb.bb6_crit_edge:                                 ; preds = %bb
  br label %bb6

bb3:                                              ; preds = %bb
  %i4 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i5 = tail call i64 @fwrite(ptr nonnull @.str.1.58, i64 1056, i64 1, ptr %i4) #32
  br label %bb6

bb6:                                              ; preds = %bb.bb6_crit_edge, %bb3
  tail call void @exit(i32 noundef 3) #34
  unreachable
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef nonnull ptr @BZ2_bzlibVersion() local_unnamed_addr #22 {
bb:
  ret ptr @.str.5.57
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @BZ2_bzCompressInit(ptr noundef %arg, i32 noundef %arg1, i32 noundef %arg2, i32 noundef %arg3) local_unnamed_addr #0 {
bb:
  %i = icmp eq ptr %arg, null
  %i4 = add i32 %arg1, -10
  %i5 = icmp ult i32 %i4, -9
  %i6 = or i1 %i, %i5
  %i7 = icmp ugt i32 %arg3, 250
  %i8 = or i1 %i6, %i7
  br i1 %i8, label %bb.bb94_crit_edge, label %bb9

bb.bb94_crit_edge:                                ; preds = %bb
  br label %bb94

bb9:                                              ; preds = %bb
  %i10 = icmp eq i32 %arg3, 0
  %i11 = select i1 %i10, i32 30, i32 %arg3
  %i12 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 9
  %i13 = load ptr, ptr %i12, align 8, !tbaa !118
  %i14 = icmp eq ptr %i13, null
  br i1 %i14, label %bb15, label %bb9.bb16_crit_edge

bb9.bb16_crit_edge:                               ; preds = %bb9
  br label %bb16

bb15:                                             ; preds = %bb9
  store ptr @default_bzalloc, ptr %i12, align 8, !tbaa !118
  br label %bb16

bb16:                                             ; preds = %bb9.bb16_crit_edge, %bb15
  %i17 = phi ptr [ @default_bzalloc, %bb15 ], [ %i13, %bb9.bb16_crit_edge ]
  %i18 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 10
  %i19 = load ptr, ptr %i18, align 8, !tbaa !120
  %i20 = icmp eq ptr %i19, null
  br i1 %i20, label %bb21, label %bb16.bb22_crit_edge

bb16.bb22_crit_edge:                              ; preds = %bb16
  br label %bb22

bb21:                                             ; preds = %bb16
  store ptr @default_bzfree, ptr %i18, align 8, !tbaa !120
  br label %bb22

bb22:                                             ; preds = %bb16.bb22_crit_edge, %bb21
  %i23 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 11
  %i24 = load ptr, ptr %i23, align 8, !tbaa !121
  %i25 = tail call ptr %i17(ptr noundef %i24, i32 noundef 55768, i32 noundef 1) #31
  %i26 = icmp eq ptr %i25, null
  br i1 %i26, label %bb22.bb94_crit_edge, label %bb27

bb22.bb94_crit_edge:                              ; preds = %bb22
  br label %bb94

bb27:                                             ; preds = %bb22
  store ptr %arg, ptr %i25, align 8, !tbaa !122
  %i28 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 4
  %i29 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 5
  %i30 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 6
  %i31 = mul nuw nsw i32 %arg1, 100000
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %i28, i8 0, i64 24, i1 false)
  %i32 = load ptr, ptr %i12, align 8, !tbaa !118
  %i33 = load ptr, ptr %i23, align 8, !tbaa !121
  %i34 = mul nuw nsw i32 %arg1, 400000
  %i35 = tail call ptr %i32(ptr noundef %i33, i32 noundef %i34, i32 noundef 1) #31
  store ptr %i35, ptr %i28, align 8, !tbaa !49
  %i36 = load ptr, ptr %i12, align 8, !tbaa !118
  %i37 = load ptr, ptr %i23, align 8, !tbaa !121
  %i38 = add nuw nsw i32 %i34, 136
  %i39 = tail call ptr %i36(ptr noundef %i37, i32 noundef %i38, i32 noundef 1) #31
  store ptr %i39, ptr %i29, align 8, !tbaa !50
  %i40 = load ptr, ptr %i12, align 8, !tbaa !118
  %i41 = load ptr, ptr %i23, align 8, !tbaa !121
  %i42 = tail call ptr %i40(ptr noundef %i41, i32 noundef 262148, i32 noundef 1) #31
  store ptr %i42, ptr %i30, align 8, !tbaa !15
  %i43 = load ptr, ptr %i28, align 8, !tbaa !49
  %i44 = icmp eq ptr %i43, null
  br i1 %i44, label %bb27.bb53_crit_edge, label %bb45

bb27.bb53_crit_edge:                              ; preds = %bb27
  br label %bb53

bb45:                                             ; preds = %bb27
  %i46 = load ptr, ptr %i29, align 8, !tbaa !50
  %i47 = icmp eq ptr %i46, null
  %i48 = icmp eq ptr %i42, null
  %i49 = select i1 %i47, i1 true, i1 %i48
  br i1 %i49, label %bb50, label %bb68

bb50:                                             ; preds = %bb45
  %i51 = load ptr, ptr %i18, align 8, !tbaa !120
  %i52 = load ptr, ptr %i23, align 8, !tbaa !121
  tail call void %i51(ptr noundef %i52, ptr noundef nonnull %i43) #31
  br label %bb53

bb53:                                             ; preds = %bb27.bb53_crit_edge, %bb50
  %i54 = load ptr, ptr %i29, align 8, !tbaa !50
  %i55 = icmp eq ptr %i54, null
  br i1 %i55, label %bb53.bb59_crit_edge, label %bb56

bb53.bb59_crit_edge:                              ; preds = %bb53
  br label %bb59

bb56:                                             ; preds = %bb53
  %i57 = load ptr, ptr %i18, align 8, !tbaa !120
  %i58 = load ptr, ptr %i23, align 8, !tbaa !121
  tail call void %i57(ptr noundef %i58, ptr noundef nonnull %i54) #31
  br label %bb59

bb59:                                             ; preds = %bb53.bb59_crit_edge, %bb56
  %i60 = load ptr, ptr %i30, align 8, !tbaa !15
  %i61 = icmp eq ptr %i60, null
  br i1 %i61, label %bb59.bb65_crit_edge, label %bb62

bb59.bb65_crit_edge:                              ; preds = %bb59
  br label %bb65

bb62:                                             ; preds = %bb59
  %i63 = load ptr, ptr %i18, align 8, !tbaa !120
  %i64 = load ptr, ptr %i23, align 8, !tbaa !121
  tail call void %i63(ptr noundef %i64, ptr noundef nonnull %i60) #31
  br label %bb65

bb65:                                             ; preds = %bb59.bb65_crit_edge, %bb62
  %i66 = load ptr, ptr %i18, align 8, !tbaa !120
  %i67 = load ptr, ptr %i23, align 8, !tbaa !121
  tail call void %i66(ptr noundef %i67, ptr noundef nonnull %i25) #31
  br label %bb94

bb68:                                             ; preds = %bb45
  %i69 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 29
  %i70 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 2
  store i32 2, ptr %i70, align 4, !tbaa !123
  %i71 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 1
  store i32 2, ptr %i71, align 8, !tbaa !124
  %i72 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 27
  store i32 0, ptr %i72, align 4, !tbaa !125
  %i73 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 30
  store i32 %arg1, ptr %i73, align 8, !tbaa !126
  %i74 = add nsw i32 %i31, -19
  %i75 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 18
  store i32 %i74, ptr %i75, align 8, !tbaa !127
  %i76 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 28
  store i32 %arg2, ptr %i76, align 8, !tbaa !17
  %i77 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 12
  store i32 %i11, ptr %i77, align 8, !tbaa !18
  %i78 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 9
  store ptr %i46, ptr %i78, align 8, !tbaa !14
  %i79 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 10
  store ptr %i43, ptr %i79, align 8, !tbaa !128
  %i80 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 11
  store ptr null, ptr %i80, align 8, !tbaa !129
  %i81 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 8
  store ptr %i43, ptr %i81, align 8, !tbaa !8
  %i82 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 8
  store ptr %i25, ptr %i82, align 8, !tbaa !130
  %i83 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 2
  store i32 0, ptr %i83, align 4, !tbaa !131
  %i84 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 3
  store i32 0, ptr %i84, align 8, !tbaa !132
  %i85 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 6
  store i32 0, ptr %i85, align 4, !tbaa !133
  %i86 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 7
  store i32 0, ptr %i86, align 8, !tbaa !134
  %i87 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 13
  store i32 256, ptr %i87, align 4, !tbaa !135
  %i88 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 14
  store i32 0, ptr %i88, align 8, !tbaa !136
  %i89 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 17
  store i32 0, ptr %i89, align 4, !tbaa !16
  %i90 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 19
  store i32 0, ptr %i90, align 4, !tbaa !137
  %i91 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 20
  store i32 0, ptr %i91, align 8, !tbaa !138
  %i92 = getelementptr inbounds %struct.EState, ptr %i25, i64 0, i32 26
  store i32 -1, ptr %i92, align 8, !tbaa !139
  %i93 = getelementptr i8, ptr %i25, i64 128
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(256) %i93, i8 0, i64 256, i1 false), !tbaa !21
  store i32 1, ptr %i69, align 4, !tbaa !140
  br label %bb94

bb94:                                             ; preds = %bb22.bb94_crit_edge, %bb.bb94_crit_edge, %bb68, %bb65
  %i95 = phi i32 [ -3, %bb65 ], [ 0, %bb68 ], [ -2, %bb.bb94_crit_edge ], [ -3, %bb22.bb94_crit_edge ]
  ret i32 %i95
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(inaccessiblemem: readwrite) uwtable
define internal noalias noundef ptr @default_bzalloc(ptr nocapture readnone %arg, i32 noundef %arg1, i32 noundef %arg2) #23 {
bb:
  %i = mul nsw i32 %arg2, %arg1
  %i3 = sext i32 %i to i64
  %i4 = tail call noalias ptr @malloc(i64 noundef %i3) #37
  ret ptr %i4
}

; Function Attrs: mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define internal void @default_bzfree(ptr nocapture readnone %arg, ptr noundef %arg1) #24 {
bb:
  %i = icmp eq ptr %arg1, null
  br i1 %i, label %bb.bb3_crit_edge, label %bb2

bb.bb3_crit_edge:                                 ; preds = %bb
  br label %bb3

bb2:                                              ; preds = %bb
  tail call void @free(ptr noundef nonnull %arg1) #31
  br label %bb3

bb3:                                              ; preds = %bb.bb3_crit_edge, %bb2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @BZ2_bzCompress(ptr noundef readonly %arg, i32 noundef %arg1) local_unnamed_addr #0 {
bb:
  %i = icmp eq ptr %arg, null
  br i1 %i, label %bb.bb79_crit_edge, label %bb2

bb.bb79_crit_edge:                                ; preds = %bb
  br label %bb79

bb2:                                              ; preds = %bb
  %i3 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 8
  %i4 = load ptr, ptr %i3, align 8, !tbaa !130
  %i5 = icmp eq ptr %i4, null
  br i1 %i5, label %bb2.bb79_crit_edge, label %bb6

bb2.bb79_crit_edge:                               ; preds = %bb2
  br label %bb79

bb6:                                              ; preds = %bb2
  %i7 = load ptr, ptr %i4, align 8, !tbaa !122
  %i8 = icmp eq ptr %i7, %arg
  br i1 %i8, label %bb9, label %bb6.bb79_crit_edge

bb6.bb79_crit_edge:                               ; preds = %bb6
  br label %bb79

bb9:                                              ; preds = %bb6
  %i10 = getelementptr inbounds %struct.EState, ptr %i4, i64 0, i32 1
  %i11 = load i32, ptr %i10, align 8, !tbaa !124
  %i12 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 1
  %i13 = getelementptr inbounds %struct.EState, ptr %i4, i64 0, i32 3
  switch i32 %arg1, label %bb17 [
    i32 0, label %bb16
    i32 1, label %bb15
    i32 2, label %bb14
  ]

bb14:                                             ; preds = %bb9
  switch i32 %i11, label %bb14.bb79_crit_edge [
    i32 1, label %bb14.bb77_crit_edge
    i32 2, label %bb49
    i32 3, label %bb14.bb25_crit_edge
    i32 4, label %bb14.bb52_crit_edge
  ]

bb14.bb52_crit_edge:                              ; preds = %bb14
  br label %bb52

bb14.bb25_crit_edge:                              ; preds = %bb14
  br label %bb25

bb14.bb77_crit_edge:                              ; preds = %bb14
  br label %bb77

bb14.bb79_crit_edge:                              ; preds = %bb14
  br label %bb79

bb15:                                             ; preds = %bb9
  switch i32 %i11, label %bb15.bb79_crit_edge [
    i32 1, label %bb15.bb77_crit_edge
    i32 2, label %bb23
    i32 3, label %bb15.bb26_crit_edge
    i32 4, label %bb15.bb51_crit_edge
  ]

bb15.bb51_crit_edge:                              ; preds = %bb15
  br label %bb51

bb15.bb26_crit_edge:                              ; preds = %bb15
  br label %bb26

bb15.bb77_crit_edge:                              ; preds = %bb15
  br label %bb77

bb15.bb79_crit_edge:                              ; preds = %bb15
  br label %bb79

bb16:                                             ; preds = %bb9
  switch i32 %i11, label %bb16.bb79_crit_edge [
    i32 1, label %bb16.bb77_crit_edge
    i32 2, label %bb19
    i32 3, label %bb16.bb25_crit_edge
    i32 4, label %bb16.bb51_crit_edge
  ]

bb16.bb51_crit_edge:                              ; preds = %bb16
  br label %bb51

bb16.bb25_crit_edge:                              ; preds = %bb16
  br label %bb25

bb16.bb77_crit_edge:                              ; preds = %bb16
  br label %bb77

bb16.bb79_crit_edge:                              ; preds = %bb16
  br label %bb79

bb17:                                             ; preds = %bb9
  switch i32 %i11, label %bb17.bb79_crit_edge [
    i32 1, label %bb17.bb77_crit_edge
    i32 2, label %bb18
    i32 3, label %bb17.bb25_crit_edge
    i32 4, label %bb17.bb51_crit_edge
  ]

bb17.bb51_crit_edge:                              ; preds = %bb17
  br label %bb51

bb17.bb25_crit_edge:                              ; preds = %bb17
  br label %bb25

bb17.bb77_crit_edge:                              ; preds = %bb17
  br label %bb77

bb17.bb79_crit_edge:                              ; preds = %bb17
  br label %bb79

bb18:                                             ; preds = %bb17
  br label %bb77

bb19:                                             ; preds = %bb16
  %i20 = tail call fastcc zeroext i8 @handle_compress(ptr nonnull %i4)
  %i21 = icmp eq i8 %i20, 0
  %i22 = select i1 %i21, i32 -2, i32 1
  br label %bb79

bb23:                                             ; preds = %bb15
  %i24 = load i32, ptr %i12, align 8, !tbaa !141
  store i32 %i24, ptr %i13, align 8, !tbaa !142
  store i32 3, ptr %i10, align 8, !tbaa !124
  br label %bb26

bb25:                                             ; preds = %bb17.bb25_crit_edge, %bb16.bb25_crit_edge, %bb14.bb25_crit_edge
  br label %bb79

bb26:                                             ; preds = %bb15.bb26_crit_edge, %bb23
  %i27 = load i32, ptr %i13, align 8, !tbaa !142
  %i28 = load i32, ptr %i12, align 8, !tbaa !141
  %i29 = icmp eq i32 %i27, %i28
  br i1 %i29, label %bb30, label %bb26.bb79_crit_edge

bb26.bb79_crit_edge:                              ; preds = %bb26
  br label %bb79

bb30:                                             ; preds = %bb26
  %i31 = tail call fastcc zeroext i8 @handle_compress(ptr nonnull %i4)
  %i32 = load i32, ptr %i13, align 8, !tbaa !142
  %i33 = icmp eq i32 %i32, 0
  br i1 %i33, label %bb34, label %bb30.bb79_crit_edge

bb30.bb79_crit_edge:                              ; preds = %bb30
  br label %bb79

bb34:                                             ; preds = %bb30
  %i35 = getelementptr inbounds %struct.EState, ptr %i4, i64 0, i32 13
  %i36 = load i32, ptr %i35, align 4, !tbaa !135
  %i37 = icmp ult i32 %i36, 256
  br i1 %i37, label %bb38, label %bb34.bb42_crit_edge

bb34.bb42_crit_edge:                              ; preds = %bb34
  br label %bb42

bb38:                                             ; preds = %bb34
  %i39 = getelementptr inbounds %struct.EState, ptr %i4, i64 0, i32 14
  %i40 = load i32, ptr %i39, align 8, !tbaa !136
  %i41 = icmp sgt i32 %i40, 0
  br i1 %i41, label %bb38.bb79_crit_edge, label %bb38.bb42_crit_edge

bb38.bb42_crit_edge:                              ; preds = %bb38
  br label %bb42

bb38.bb79_crit_edge:                              ; preds = %bb38
  br label %bb79

bb42:                                             ; preds = %bb38.bb42_crit_edge, %bb34.bb42_crit_edge
  %i43 = getelementptr inbounds %struct.EState, ptr %i4, i64 0, i32 20
  %i44 = load i32, ptr %i43, align 8, !tbaa !138
  %i45 = getelementptr inbounds %struct.EState, ptr %i4, i64 0, i32 19
  %i46 = load i32, ptr %i45, align 4, !tbaa !137
  %i47 = icmp slt i32 %i44, %i46
  br i1 %i47, label %bb42.bb79_crit_edge, label %bb48

bb42.bb79_crit_edge:                              ; preds = %bb42
  br label %bb79

bb48:                                             ; preds = %bb42
  store i32 2, ptr %i10, align 8, !tbaa !124
  br label %bb79

bb49:                                             ; preds = %bb14
  %i50 = load i32, ptr %i12, align 8, !tbaa !141
  store i32 %i50, ptr %i13, align 8, !tbaa !142
  store i32 4, ptr %i10, align 8, !tbaa !124
  br label %bb52

bb51:                                             ; preds = %bb17.bb51_crit_edge, %bb16.bb51_crit_edge, %bb15.bb51_crit_edge
  br label %bb79

bb52:                                             ; preds = %bb14.bb52_crit_edge, %bb49
  %i53 = load i32, ptr %i13, align 8, !tbaa !142
  %i54 = load i32, ptr %i12, align 8, !tbaa !141
  %i55 = icmp eq i32 %i53, %i54
  br i1 %i55, label %bb56, label %bb52.bb79_crit_edge

bb52.bb79_crit_edge:                              ; preds = %bb52
  br label %bb79

bb56:                                             ; preds = %bb52
  %i57 = tail call fastcc zeroext i8 @handle_compress(ptr nonnull %i4)
  %i58 = icmp eq i8 %i57, 0
  br i1 %i58, label %bb56.bb79_crit_edge, label %bb59

bb56.bb79_crit_edge:                              ; preds = %bb56
  br label %bb79

bb59:                                             ; preds = %bb56
  %i60 = load i32, ptr %i13, align 8, !tbaa !142
  %i61 = icmp eq i32 %i60, 0
  br i1 %i61, label %bb62, label %bb59.bb79_crit_edge

bb59.bb79_crit_edge:                              ; preds = %bb59
  br label %bb79

bb62:                                             ; preds = %bb59
  %i63 = getelementptr inbounds %struct.EState, ptr %i4, i64 0, i32 13
  %i64 = load i32, ptr %i63, align 4, !tbaa !135
  %i65 = icmp ult i32 %i64, 256
  br i1 %i65, label %bb66, label %bb62.bb70_crit_edge

bb62.bb70_crit_edge:                              ; preds = %bb62
  br label %bb70

bb66:                                             ; preds = %bb62
  %i67 = getelementptr inbounds %struct.EState, ptr %i4, i64 0, i32 14
  %i68 = load i32, ptr %i67, align 8, !tbaa !136
  %i69 = icmp sgt i32 %i68, 0
  br i1 %i69, label %bb66.bb79_crit_edge, label %bb66.bb70_crit_edge

bb66.bb70_crit_edge:                              ; preds = %bb66
  br label %bb70

bb66.bb79_crit_edge:                              ; preds = %bb66
  br label %bb79

bb70:                                             ; preds = %bb66.bb70_crit_edge, %bb62.bb70_crit_edge
  %i71 = getelementptr inbounds %struct.EState, ptr %i4, i64 0, i32 20
  %i72 = load i32, ptr %i71, align 8, !tbaa !138
  %i73 = getelementptr inbounds %struct.EState, ptr %i4, i64 0, i32 19
  %i74 = load i32, ptr %i73, align 4, !tbaa !137
  %i75 = icmp slt i32 %i72, %i74
  br i1 %i75, label %bb70.bb79_crit_edge, label %bb76

bb70.bb79_crit_edge:                              ; preds = %bb70
  br label %bb79

bb76:                                             ; preds = %bb70
  store i32 1, ptr %i10, align 8, !tbaa !124
  br label %bb79

bb77:                                             ; preds = %bb17.bb77_crit_edge, %bb16.bb77_crit_edge, %bb15.bb77_crit_edge, %bb14.bb77_crit_edge, %bb18
  %i78 = phi i32 [ -1, %bb16.bb77_crit_edge ], [ -2, %bb18 ], [ -1, %bb17.bb77_crit_edge ], [ -1, %bb15.bb77_crit_edge ], [ -1, %bb14.bb77_crit_edge ]
  br label %bb79

bb79:                                             ; preds = %bb70.bb79_crit_edge, %bb66.bb79_crit_edge, %bb59.bb79_crit_edge, %bb56.bb79_crit_edge, %bb52.bb79_crit_edge, %bb42.bb79_crit_edge, %bb38.bb79_crit_edge, %bb30.bb79_crit_edge, %bb26.bb79_crit_edge, %bb17.bb79_crit_edge, %bb16.bb79_crit_edge, %bb15.bb79_crit_edge, %bb14.bb79_crit_edge, %bb6.bb79_crit_edge, %bb2.bb79_crit_edge, %bb.bb79_crit_edge, %bb77, %bb76, %bb51, %bb48, %bb25, %bb19
  %i80 = phi i32 [ 4, %bb76 ], [ 1, %bb48 ], [ %i22, %bb19 ], [ -2, %bb.bb79_crit_edge ], [ -2, %bb2.bb79_crit_edge ], [ -2, %bb6.bb79_crit_edge ], [ -1, %bb26.bb79_crit_edge ], [ 2, %bb42.bb79_crit_edge ], [ 2, %bb30.bb79_crit_edge ], [ -1, %bb52.bb79_crit_edge ], [ -1, %bb56.bb79_crit_edge ], [ 3, %bb70.bb79_crit_edge ], [ 3, %bb59.bb79_crit_edge ], [ 2, %bb38.bb79_crit_edge ], [ 3, %bb66.bb79_crit_edge ], [ %i78, %bb77 ], [ 0, %bb17.bb79_crit_edge ], [ 0, %bb16.bb79_crit_edge ], [ -1, %bb25 ], [ -1, %bb51 ], [ 0, %bb15.bb79_crit_edge ], [ 0, %bb14.bb79_crit_edge ]
  ret i32 %i80
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @handle_compress(ptr %arg) unnamed_addr #0 {
bb:
  %i = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 13
  %i1 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 14
  %i2 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 2
  %i3 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 20
  %i4 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i5 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 11
  %i6 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 1
  %i7 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 3
  %i8 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 17
  %i9 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 26
  %i10 = getelementptr i8, ptr %arg, i64 128
  %i11 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 29
  %i12 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 18
  %i13 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 9
  br label %bb14

bb14:                                             ; preds = %bb391, %bb
  %i15 = phi i8 [ 0, %bb ], [ %i119, %bb391 ]
  %i16 = phi i8 [ 0, %bb ], [ %i369, %bb391 ]
  %i17 = load i32, ptr %i2, align 4, !tbaa !123
  br label %bb18

bb18:                                             ; preds = %bb18.bb18_crit_edge, %bb14
  switch i32 %i17, label %bb18.bb18_crit_edge [
    i32 1, label %bb19
    i32 2, label %bb114.loopexit
  ]

bb18.bb18_crit_edge:                              ; preds = %bb18
  br label %bb18

bb19:                                             ; preds = %bb18
  %i20 = load ptr, ptr %arg, align 8, !tbaa !122
  %i21 = getelementptr inbounds %struct.bz_stream, ptr %i20, i64 0, i32 5
  %i22 = load i32, ptr %i21, align 8, !tbaa !143
  %i23 = icmp eq i32 %i22, 0
  %i24 = load i32, ptr %i3, align 8, !tbaa !138
  br i1 %i23, label %bb19.bb83_crit_edge, label %bb25

bb19.bb83_crit_edge:                              ; preds = %bb19
  br label %bb83

bb25:                                             ; preds = %bb19
  %i26 = load i32, ptr %i4, align 4, !tbaa !137
  %i27 = icmp slt i32 %i24, %i26
  br i1 %i27, label %bb28, label %bb25.bb83_crit_edge

bb25.bb83_crit_edge:                              ; preds = %bb25
  br label %bb83

bb28:                                             ; preds = %bb25
  %i29 = load ptr, ptr %i5, align 8, !tbaa !129
  %i30 = sext i32 %i24 to i64
  %i31 = getelementptr inbounds i8, ptr %i29, i64 %i30
  %i32 = load i8, ptr %i31, align 1, !tbaa !21
  %i33 = getelementptr inbounds %struct.bz_stream, ptr %i20, i64 0, i32 4
  %i34 = load ptr, ptr %i33, align 8, !tbaa !144
  store i8 %i32, ptr %i34, align 1, !tbaa !21
  %i35 = load i32, ptr %i3, align 8, !tbaa !138
  %i36 = add nsw i32 %i35, 1
  store i32 %i36, ptr %i3, align 8, !tbaa !138
  %i37 = load ptr, ptr %arg, align 8, !tbaa !122
  %i38 = getelementptr inbounds %struct.bz_stream, ptr %i37, i64 0, i32 5
  %i39 = load i32, ptr %i38, align 8, !tbaa !143
  %i40 = add i32 %i39, -1
  store i32 %i40, ptr %i38, align 8, !tbaa !143
  %i41 = getelementptr inbounds %struct.bz_stream, ptr %i37, i64 0, i32 4
  %i42 = load ptr, ptr %i41, align 8, !tbaa !144
  %i43 = getelementptr inbounds i8, ptr %i42, i64 1
  store ptr %i43, ptr %i41, align 8, !tbaa !144
  %i44 = getelementptr inbounds %struct.bz_stream, ptr %i37, i64 0, i32 6
  %i45 = load i32, ptr %i44, align 4, !tbaa !133
  %i46 = add i32 %i45, 1
  store i32 %i46, ptr %i44, align 4, !tbaa !133
  %i47 = icmp eq i32 %i46, 0
  br i1 %i47, label %bb48, label %bb28.bb52_crit_edge

bb28.bb52_crit_edge:                              ; preds = %bb28
  br label %bb52

bb48:                                             ; preds = %bb28
  %i49 = getelementptr inbounds %struct.bz_stream, ptr %i37, i64 0, i32 7
  %i50 = load i32, ptr %i49, align 8, !tbaa !134
  %i51 = add i32 %i50, 1
  store i32 %i51, ptr %i49, align 8, !tbaa !134
  br label %bb52

bb52:                                             ; preds = %bb28.bb52_crit_edge, %bb48
  %i53 = icmp eq i32 %i40, 0
  br i1 %i53, label %bb52.bb83_crit_edge, label %bb54.preheader

bb52.bb83_crit_edge:                              ; preds = %bb52
  br label %bb83

bb54.preheader:                                   ; preds = %bb52
  br label %bb54

bb54:                                             ; preds = %bb81.bb54_crit_edge, %bb54.preheader
  %i55 = phi ptr [ %i72, %bb81.bb54_crit_edge ], [ %i43, %bb54.preheader ]
  %i56 = phi i32 [ %i65, %bb81.bb54_crit_edge ], [ %i36, %bb54.preheader ]
  %i57 = load i32, ptr %i4, align 4, !tbaa !137
  %i58 = icmp slt i32 %i56, %i57
  br i1 %i58, label %bb59, label %bb54.bb83.loopexit_crit_edge

bb54.bb83.loopexit_crit_edge:                     ; preds = %bb54
  br label %bb83.loopexit

bb59:                                             ; preds = %bb54
  %i60 = load ptr, ptr %i5, align 8, !tbaa !129
  %i61 = sext i32 %i56 to i64
  %i62 = getelementptr inbounds i8, ptr %i60, i64 %i61
  %i63 = load i8, ptr %i62, align 1, !tbaa !21
  store i8 %i63, ptr %i55, align 1, !tbaa !21
  %i64 = load i32, ptr %i3, align 8, !tbaa !138
  %i65 = add nsw i32 %i64, 1
  store i32 %i65, ptr %i3, align 8, !tbaa !138
  %i66 = load ptr, ptr %arg, align 8, !tbaa !122
  %i67 = getelementptr inbounds %struct.bz_stream, ptr %i66, i64 0, i32 5
  %i68 = load i32, ptr %i67, align 8, !tbaa !143
  %i69 = add i32 %i68, -1
  store i32 %i69, ptr %i67, align 8, !tbaa !143
  %i70 = getelementptr inbounds %struct.bz_stream, ptr %i66, i64 0, i32 4
  %i71 = load ptr, ptr %i70, align 8, !tbaa !144
  %i72 = getelementptr inbounds i8, ptr %i71, i64 1
  store ptr %i72, ptr %i70, align 8, !tbaa !144
  %i73 = getelementptr inbounds %struct.bz_stream, ptr %i66, i64 0, i32 6
  %i74 = load i32, ptr %i73, align 4, !tbaa !133
  %i75 = add i32 %i74, 1
  store i32 %i75, ptr %i73, align 4, !tbaa !133
  %i76 = icmp eq i32 %i75, 0
  br i1 %i76, label %bb77, label %bb59.bb81_crit_edge

bb59.bb81_crit_edge:                              ; preds = %bb59
  br label %bb81

bb77:                                             ; preds = %bb59
  %i78 = getelementptr inbounds %struct.bz_stream, ptr %i66, i64 0, i32 7
  %i79 = load i32, ptr %i78, align 8, !tbaa !134
  %i80 = add i32 %i79, 1
  store i32 %i80, ptr %i78, align 8, !tbaa !134
  br label %bb81

bb81:                                             ; preds = %bb59.bb81_crit_edge, %bb77
  %i82 = icmp eq i32 %i69, 0
  br i1 %i82, label %bb83.loopexitsplit, label %bb81.bb54_crit_edge, !llvm.loop !145

bb81.bb54_crit_edge:                              ; preds = %bb81
  br label %bb54

bb83.loopexitsplit:                               ; preds = %bb81
  br label %bb83.loopexit

bb83.loopexit:                                    ; preds = %bb83.loopexitsplit, %bb54.bb83.loopexit_crit_edge
  %i84.ph = phi i32 [ %i56, %bb54.bb83.loopexit_crit_edge ], [ %i65, %bb83.loopexitsplit ]
  br label %bb83

bb83:                                             ; preds = %bb52.bb83_crit_edge, %bb25.bb83_crit_edge, %bb19.bb83_crit_edge, %bb83.loopexit
  %i84 = phi i32 [ %i24, %bb19.bb83_crit_edge ], [ %i24, %bb25.bb83_crit_edge ], [ %i36, %bb52.bb83_crit_edge ], [ %i84.ph, %bb83.loopexit ]
  %i85 = phi i8 [ 0, %bb19.bb83_crit_edge ], [ 0, %bb25.bb83_crit_edge ], [ 1, %bb52.bb83_crit_edge ], [ 1, %bb83.loopexit ]
  %i86 = or i8 %i85, %i15
  %i87 = load i32, ptr %i4, align 4, !tbaa !137
  %i88 = icmp slt i32 %i84, %i87
  br i1 %i88, label %bb83.bb394_crit_edge, label %bb89

bb83.bb394_crit_edge:                             ; preds = %bb83
  br label %bb394

bb89:                                             ; preds = %bb83
  %i90 = load i32, ptr %i6, align 8, !tbaa !124
  %i91 = icmp eq i32 %i90, 4
  br i1 %i91, label %bb92, label %bb89.bb101_crit_edge

bb89.bb101_crit_edge:                             ; preds = %bb89
  br label %bb101

bb92:                                             ; preds = %bb89
  %i93 = load i32, ptr %i7, align 8, !tbaa !142
  %i94 = icmp eq i32 %i93, 0
  br i1 %i94, label %bb95, label %bb92.bb101_crit_edge

bb92.bb101_crit_edge:                             ; preds = %bb92
  br label %bb101

bb95:                                             ; preds = %bb92
  %i96 = load i32, ptr %i, align 4, !tbaa !135
  %i97 = icmp ult i32 %i96, 256
  br i1 %i97, label %bb98, label %bb95.bb394split_crit_edge

bb95.bb394split_crit_edge:                        ; preds = %bb95
  br label %bb394split

bb98:                                             ; preds = %bb95
  %i99 = load i32, ptr %i1, align 8, !tbaa !136
  %i100 = icmp sgt i32 %i99, 0
  br i1 %i100, label %bb98.bb101_crit_edge, label %bb98.bb394splitsplit_crit_edge

bb98.bb394splitsplit_crit_edge:                   ; preds = %bb98
  br label %bb394splitsplit

bb98.bb101_crit_edge:                             ; preds = %bb98
  br label %bb101

bb101:                                            ; preds = %bb98.bb101_crit_edge, %bb92.bb101_crit_edge, %bb89.bb101_crit_edge
  store i32 0, ptr %i8, align 4, !tbaa !16
  store i32 0, ptr %i4, align 4, !tbaa !137
  store i32 0, ptr %i3, align 8, !tbaa !138
  store i32 -1, ptr %i9, align 8, !tbaa !139
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(256) %i10, i8 0, i64 256, i1 false), !tbaa !21
  %i102 = load i32, ptr %i11, align 4, !tbaa !140
  %i103 = add nsw i32 %i102, 1
  store i32 %i103, ptr %i11, align 4, !tbaa !140
  store i32 2, ptr %i2, align 4, !tbaa !123
  %i104 = icmp eq i32 %i90, 3
  br i1 %i104, label %bb105, label %bb101.bb117_crit_edge

bb101.bb117_crit_edge:                            ; preds = %bb101
  br label %bb117

bb105:                                            ; preds = %bb101
  %i106 = load i32, ptr %i7, align 8, !tbaa !142
  %i107 = icmp eq i32 %i106, 0
  br i1 %i107, label %bb108, label %bb105.bb114_crit_edge

bb105.bb114_crit_edge:                            ; preds = %bb105
  br label %bb114

bb108:                                            ; preds = %bb105
  %i109 = load i32, ptr %i, align 4, !tbaa !135
  %i110 = icmp ult i32 %i109, 256
  br i1 %i110, label %bb111, label %bb108.bb394splitsplitsplit_crit_edge

bb108.bb394splitsplitsplit_crit_edge:             ; preds = %bb108
  br label %bb394splitsplitsplit

bb111:                                            ; preds = %bb108
  %i112 = load i32, ptr %i1, align 8, !tbaa !136
  %i113 = icmp sgt i32 %i112, 0
  br i1 %i113, label %bb111.bb114_crit_edge, label %bb111.bb394splitsplitsplitsplit_crit_edge

bb111.bb394splitsplitsplitsplit_crit_edge:        ; preds = %bb111
  br label %bb394splitsplitsplitsplit

bb111.bb114_crit_edge:                            ; preds = %bb111
  br label %bb114

bb114.loopexit:                                   ; preds = %bb18
  br label %bb114

bb114:                                            ; preds = %bb111.bb114_crit_edge, %bb105.bb114_crit_edge, %bb114.loopexit
  %i115 = phi i8 [ %i86, %bb111.bb114_crit_edge ], [ %i86, %bb105.bb114_crit_edge ], [ %i15, %bb114.loopexit ]
  %i116 = load i32, ptr %i6, align 8, !tbaa !124
  br label %bb117

bb117:                                            ; preds = %bb101.bb117_crit_edge, %bb114
  %i118 = phi i32 [ %i116, %bb114 ], [ %i90, %bb101.bb117_crit_edge ]
  %i119 = phi i8 [ %i115, %bb114 ], [ %i86, %bb101.bb117_crit_edge ]
  %i120 = icmp eq i32 %i118, 2
  %i121 = load i32, ptr %i8, align 4, !tbaa !16
  %i122 = load i32, ptr %i12, align 8, !tbaa !127
  %i123 = icmp slt i32 %i121, %i122
  br i1 %i120, label %bb193, label %bb124

bb124:                                            ; preds = %bb117
  br i1 %i123, label %bb125, label %bb124.bb365_crit_edge

bb124.bb365_crit_edge:                            ; preds = %bb124
  br label %bb365

bb125:                                            ; preds = %bb124
  %i126 = load ptr, ptr %arg, align 8, !tbaa !122
  %i127 = getelementptr inbounds %struct.bz_stream, ptr %i126, i64 0, i32 1
  %i128 = load i32, ptr %i127, align 8, !tbaa !141
  %i129 = icmp eq i32 %i128, 0
  br i1 %i129, label %bb125.bb365_crit_edge, label %bb130

bb125.bb365_crit_edge:                            ; preds = %bb125
  br label %bb365

bb130:                                            ; preds = %bb125
  %i131 = load i32, ptr %i7, align 8, !tbaa !142
  %i132 = icmp eq i32 %i131, 0
  br i1 %i132, label %bb130.bb365_crit_edge, label %bb133

bb130.bb365_crit_edge:                            ; preds = %bb130
  br label %bb365

bb133:                                            ; preds = %bb130
  %i134 = load ptr, ptr %i126, align 8, !tbaa !147
  %i135 = load i8, ptr %i134, align 1, !tbaa !21
  %i136 = zext i8 %i135 to i32
  %i137 = load i32, ptr %i, align 4, !tbaa !135
  %i138 = icmp eq i32 %i137, %i136
  %i139 = load i32, ptr %i1, align 8, !tbaa !136
  br i1 %i138, label %bb162, label %bb140

bb140:                                            ; preds = %bb133
  %i141 = icmp eq i32 %i139, 1
  br i1 %i141, label %bb144, label %bb142

bb142:                                            ; preds = %bb140
  %i143 = icmp ult i32 %i137, 256
  br i1 %i143, label %bb142.bb166_crit_edge, label %bb142.bb167_crit_edge

bb142.bb167_crit_edge:                            ; preds = %bb142
  br label %bb167

bb142.bb166_crit_edge:                            ; preds = %bb142
  br label %bb166

bb144:                                            ; preds = %bb140
  %i145 = trunc i32 %i137 to i8
  %i146 = load i32, ptr %i9, align 8, !tbaa !139
  %i147 = shl i32 %i146, 8
  %i148 = lshr i32 %i146, 24
  %i149 = and i32 %i137, 255
  %i150 = xor i32 %i148, %i149
  %i151 = zext nneg i32 %i150 to i64
  %i152 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %i151
  %i153 = load i32, ptr %i152, align 4, !tbaa !19
  %i154 = xor i32 %i147, %i153
  store i32 %i154, ptr %i9, align 8, !tbaa !139
  %i155 = zext i32 %i137 to i64
  %i156 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i155
  store i8 1, ptr %i156, align 1, !tbaa !21
  %i157 = load ptr, ptr %i13, align 8, !tbaa !14
  %i158 = sext i32 %i121 to i64
  %i159 = getelementptr inbounds i8, ptr %i157, i64 %i158
  store i8 %i145, ptr %i159, align 1, !tbaa !21
  %i160 = load i32, ptr %i8, align 4, !tbaa !16
  %i161 = add nsw i32 %i160, 1
  store i32 %i161, ptr %i8, align 4, !tbaa !16
  store i32 %i136, ptr %i, align 4, !tbaa !135
  br label %bb168

bb162:                                            ; preds = %bb133
  %i163 = icmp eq i32 %i139, 255
  br i1 %i163, label %bb162.bb166_crit_edge, label %bb164

bb162.bb166_crit_edge:                            ; preds = %bb162
  br label %bb166

bb164:                                            ; preds = %bb162
  %i165 = add nsw i32 %i139, 1
  store i32 %i165, ptr %i1, align 8, !tbaa !136
  br label %bb168

bb166:                                            ; preds = %bb162.bb166_crit_edge, %bb142.bb166_crit_edge
  tail call fastcc void @add_pair_to_block(ptr noundef nonnull %arg)
  br label %bb167

bb167:                                            ; preds = %bb142.bb167_crit_edge, %bb166
  store i32 %i136, ptr %i, align 4, !tbaa !135
  store i32 1, ptr %i1, align 8, !tbaa !136
  br label %bb168

bb168:                                            ; preds = %bb167, %bb164, %bb144
  %i169 = load ptr, ptr %arg, align 8, !tbaa !122
  %i170 = load ptr, ptr %i169, align 8, !tbaa !147
  %i171 = getelementptr inbounds i8, ptr %i170, i64 1
  store ptr %i171, ptr %i169, align 8, !tbaa !147
  %i172 = getelementptr inbounds %struct.bz_stream, ptr %i169, i64 0, i32 1
  %i173 = load i32, ptr %i172, align 8, !tbaa !141
  %i174 = add i32 %i173, -1
  store i32 %i174, ptr %i172, align 8, !tbaa !141
  %i175 = getelementptr inbounds %struct.bz_stream, ptr %i169, i64 0, i32 2
  %i176 = load i32, ptr %i175, align 4, !tbaa !131
  %i177 = add i32 %i176, 1
  store i32 %i177, ptr %i175, align 4, !tbaa !131
  %i178 = icmp eq i32 %i177, 0
  br i1 %i178, label %bb179, label %bb168.bb183_crit_edge

bb168.bb183_crit_edge:                            ; preds = %bb168
  br label %bb183

bb179:                                            ; preds = %bb168
  %i180 = getelementptr inbounds %struct.bz_stream, ptr %i169, i64 0, i32 3
  %i181 = load i32, ptr %i180, align 8, !tbaa !132
  %i182 = add i32 %i181, 1
  store i32 %i182, ptr %i180, align 8, !tbaa !132
  br label %bb183

bb183:                                            ; preds = %bb168.bb183_crit_edge, %bb179
  %i184 = load i32, ptr %i7, align 8, !tbaa !142
  %i185 = add i32 %i184, -1
  store i32 %i185, ptr %i7, align 8, !tbaa !142
  %i186 = load i32, ptr %i8, align 4, !tbaa !16
  %i187 = load i32, ptr %i12, align 8, !tbaa !127
  %i188 = icmp slt i32 %i186, %i187
  br i1 %i188, label %bb189, label %bb183.bb365_crit_edge

bb183.bb365_crit_edge:                            ; preds = %bb183
  br label %bb365

bb189:                                            ; preds = %bb183
  %i190 = icmp eq i32 %i174, 0
  %i191 = icmp eq i32 %i185, 0
  %i192 = select i1 %i190, i1 true, i1 %i191
  br i1 %i192, label %bb189.bb365_crit_edge, label %bb312.preheader

bb189.bb365_crit_edge:                            ; preds = %bb189
  br label %bb365

bb312.preheader:                                  ; preds = %bb189
  br label %bb312

bb193:                                            ; preds = %bb117
  br i1 %i123, label %bb194, label %bb193.bb365_crit_edge

bb193.bb365_crit_edge:                            ; preds = %bb193
  br label %bb365

bb194:                                            ; preds = %bb193
  %i195 = load ptr, ptr %arg, align 8, !tbaa !122
  %i196 = getelementptr inbounds %struct.bz_stream, ptr %i195, i64 0, i32 1
  %i197 = load i32, ptr %i196, align 8, !tbaa !141
  %i198 = icmp eq i32 %i197, 0
  br i1 %i198, label %bb194.bb365_crit_edge, label %bb199

bb194.bb365_crit_edge:                            ; preds = %bb194
  br label %bb365

bb199:                                            ; preds = %bb194
  %i200 = load ptr, ptr %i195, align 8, !tbaa !147
  %i201 = load i8, ptr %i200, align 1, !tbaa !21
  %i202 = zext i8 %i201 to i32
  %i203 = load i32, ptr %i, align 4, !tbaa !135
  %i204 = icmp eq i32 %i203, %i202
  %i205 = load i32, ptr %i1, align 8, !tbaa !136
  br i1 %i204, label %bb228, label %bb206

bb206:                                            ; preds = %bb199
  %i207 = icmp eq i32 %i205, 1
  br i1 %i207, label %bb210, label %bb208

bb208:                                            ; preds = %bb206
  %i209 = icmp ult i32 %i203, 256
  br i1 %i209, label %bb208.bb232_crit_edge, label %bb208.bb233_crit_edge

bb208.bb233_crit_edge:                            ; preds = %bb208
  br label %bb233

bb208.bb232_crit_edge:                            ; preds = %bb208
  br label %bb232

bb210:                                            ; preds = %bb206
  %i211 = trunc i32 %i203 to i8
  %i212 = load i32, ptr %i9, align 8, !tbaa !139
  %i213 = shl i32 %i212, 8
  %i214 = lshr i32 %i212, 24
  %i215 = and i32 %i203, 255
  %i216 = xor i32 %i214, %i215
  %i217 = zext nneg i32 %i216 to i64
  %i218 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %i217
  %i219 = load i32, ptr %i218, align 4, !tbaa !19
  %i220 = xor i32 %i213, %i219
  store i32 %i220, ptr %i9, align 8, !tbaa !139
  %i221 = zext i32 %i203 to i64
  %i222 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i221
  store i8 1, ptr %i222, align 1, !tbaa !21
  %i223 = load ptr, ptr %i13, align 8, !tbaa !14
  %i224 = sext i32 %i121 to i64
  %i225 = getelementptr inbounds i8, ptr %i223, i64 %i224
  store i8 %i211, ptr %i225, align 1, !tbaa !21
  %i226 = load i32, ptr %i8, align 4, !tbaa !16
  %i227 = add nsw i32 %i226, 1
  store i32 %i227, ptr %i8, align 4, !tbaa !16
  store i32 %i202, ptr %i, align 4, !tbaa !135
  br label %bb234

bb228:                                            ; preds = %bb199
  %i229 = icmp eq i32 %i205, 255
  br i1 %i229, label %bb228.bb232_crit_edge, label %bb230

bb228.bb232_crit_edge:                            ; preds = %bb228
  br label %bb232

bb230:                                            ; preds = %bb228
  %i231 = add nsw i32 %i205, 1
  store i32 %i231, ptr %i1, align 8, !tbaa !136
  br label %bb234

bb232:                                            ; preds = %bb228.bb232_crit_edge, %bb208.bb232_crit_edge
  tail call fastcc void @add_pair_to_block(ptr noundef nonnull %arg)
  br label %bb233

bb233:                                            ; preds = %bb208.bb233_crit_edge, %bb232
  store i32 %i202, ptr %i, align 4, !tbaa !135
  store i32 1, ptr %i1, align 8, !tbaa !136
  br label %bb234

bb234:                                            ; preds = %bb233, %bb230, %bb210
  %i235 = load ptr, ptr %arg, align 8, !tbaa !122
  %i236 = load ptr, ptr %i235, align 8, !tbaa !147
  %i237 = getelementptr inbounds i8, ptr %i236, i64 1
  store ptr %i237, ptr %i235, align 8, !tbaa !147
  %i238 = getelementptr inbounds %struct.bz_stream, ptr %i235, i64 0, i32 1
  %i239 = load i32, ptr %i238, align 8, !tbaa !141
  %i240 = add i32 %i239, -1
  store i32 %i240, ptr %i238, align 8, !tbaa !141
  %i241 = getelementptr inbounds %struct.bz_stream, ptr %i235, i64 0, i32 2
  %i242 = load i32, ptr %i241, align 4, !tbaa !131
  %i243 = add i32 %i242, 1
  store i32 %i243, ptr %i241, align 4, !tbaa !131
  %i244 = icmp eq i32 %i243, 0
  br i1 %i244, label %bb245, label %bb234.bb249_crit_edge

bb234.bb249_crit_edge:                            ; preds = %bb234
  br label %bb249

bb245:                                            ; preds = %bb234
  %i246 = getelementptr inbounds %struct.bz_stream, ptr %i235, i64 0, i32 3
  %i247 = load i32, ptr %i246, align 8, !tbaa !132
  %i248 = add i32 %i247, 1
  store i32 %i248, ptr %i246, align 8, !tbaa !132
  br label %bb249

bb249:                                            ; preds = %bb234.bb249_crit_edge, %bb245
  %i250 = load i32, ptr %i8, align 4, !tbaa !16
  %i251 = load i32, ptr %i12, align 8, !tbaa !127
  %i252 = icmp sge i32 %i250, %i251
  %i253 = icmp eq i32 %i240, 0
  %i254 = select i1 %i252, i1 true, i1 %i253
  br i1 %i254, label %bb249.bb365_crit_edge, label %bb255.preheader

bb249.bb365_crit_edge:                            ; preds = %bb249
  br label %bb365

bb255.preheader:                                  ; preds = %bb249
  br label %bb255

bb255:                                            ; preds = %bb302.bb255_crit_edge, %bb255.preheader
  %i256 = phi i32 [ %i303, %bb302.bb255_crit_edge ], [ %i250, %bb255.preheader ]
  %i257 = phi ptr [ %i290, %bb302.bb255_crit_edge ], [ %i237, %bb255.preheader ]
  %i258 = phi i32 [ %i260, %bb302.bb255_crit_edge ], [ %i202, %bb255.preheader ]
  %i259 = load i8, ptr %i257, align 1, !tbaa !21
  %i260 = zext i8 %i259 to i32
  %i261 = icmp eq i32 %i258, %i260
  %i262 = load i32, ptr %i1, align 8, !tbaa !136
  br i1 %i261, label %bb282, label %bb263

bb263:                                            ; preds = %bb255
  %i264 = icmp eq i32 %i262, 1
  br i1 %i264, label %bb265, label %bb263.bb284_crit_edge

bb263.bb284_crit_edge:                            ; preds = %bb263
  br label %bb284

bb265:                                            ; preds = %bb263
  %i266 = trunc i32 %i258 to i8
  %i267 = load i32, ptr %i9, align 8, !tbaa !139
  %i268 = shl i32 %i267, 8
  %i269 = lshr i32 %i267, 24
  %i270 = xor i32 %i269, %i258
  %i271 = zext nneg i32 %i270 to i64
  %i272 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %i271
  %i273 = load i32, ptr %i272, align 4, !tbaa !19
  %i274 = xor i32 %i268, %i273
  store i32 %i274, ptr %i9, align 8, !tbaa !139
  %i275 = zext nneg i32 %i258 to i64
  %i276 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i275
  store i8 1, ptr %i276, align 1, !tbaa !21
  %i277 = load ptr, ptr %i13, align 8, !tbaa !14
  %i278 = sext i32 %i256 to i64
  %i279 = getelementptr inbounds i8, ptr %i277, i64 %i278
  store i8 %i266, ptr %i279, align 1, !tbaa !21
  %i280 = load i32, ptr %i8, align 4, !tbaa !16
  %i281 = add nsw i32 %i280, 1
  store i32 %i281, ptr %i8, align 4, !tbaa !16
  store i32 %i260, ptr %i, align 4, !tbaa !135
  br label %bb287

bb282:                                            ; preds = %bb255
  %i283 = icmp eq i32 %i262, 255
  br i1 %i283, label %bb282.bb284_crit_edge, label %bb285

bb282.bb284_crit_edge:                            ; preds = %bb282
  br label %bb284

bb284:                                            ; preds = %bb282.bb284_crit_edge, %bb263.bb284_crit_edge
  tail call fastcc void @add_pair_to_block(ptr noundef nonnull %arg)
  store i32 %i260, ptr %i, align 4, !tbaa !135
  store i32 1, ptr %i1, align 8, !tbaa !136
  br label %bb287

bb285:                                            ; preds = %bb282
  %i286 = add nsw i32 %i262, 1
  store i32 %i286, ptr %i1, align 8, !tbaa !136
  br label %bb287

bb287:                                            ; preds = %bb285, %bb284, %bb265
  %i288 = load ptr, ptr %arg, align 8, !tbaa !122
  %i289 = load ptr, ptr %i288, align 8, !tbaa !147
  %i290 = getelementptr inbounds i8, ptr %i289, i64 1
  store ptr %i290, ptr %i288, align 8, !tbaa !147
  %i291 = getelementptr inbounds %struct.bz_stream, ptr %i288, i64 0, i32 1
  %i292 = load i32, ptr %i291, align 8, !tbaa !141
  %i293 = add i32 %i292, -1
  store i32 %i293, ptr %i291, align 8, !tbaa !141
  %i294 = getelementptr inbounds %struct.bz_stream, ptr %i288, i64 0, i32 2
  %i295 = load i32, ptr %i294, align 4, !tbaa !131
  %i296 = add i32 %i295, 1
  store i32 %i296, ptr %i294, align 4, !tbaa !131
  %i297 = icmp eq i32 %i296, 0
  br i1 %i297, label %bb298, label %bb287.bb302_crit_edge

bb287.bb302_crit_edge:                            ; preds = %bb287
  br label %bb302

bb298:                                            ; preds = %bb287
  %i299 = getelementptr inbounds %struct.bz_stream, ptr %i288, i64 0, i32 3
  %i300 = load i32, ptr %i299, align 8, !tbaa !132
  %i301 = add i32 %i300, 1
  store i32 %i301, ptr %i299, align 8, !tbaa !132
  br label %bb302

bb302:                                            ; preds = %bb287.bb302_crit_edge, %bb298
  %i303 = load i32, ptr %i8, align 4, !tbaa !16
  %i304 = load i32, ptr %i12, align 8, !tbaa !127
  %i305 = icmp sge i32 %i303, %i304
  %i306 = icmp eq i32 %i293, 0
  %i307 = select i1 %i305, i1 true, i1 %i306
  br i1 %i307, label %bb365.loopexit, label %bb302.bb255_crit_edge, !llvm.loop !148

bb302.bb255_crit_edge:                            ; preds = %bb302
  br label %bb255

bb308:                                            ; preds = %bb359
  %i309 = icmp eq i32 %i350, 0
  %i310 = icmp eq i32 %i361, 0
  %i311 = select i1 %i309, i1 true, i1 %i310
  br i1 %i311, label %bb308.bb365.loopexit1_crit_edge, label %bb308.bb312_crit_edge, !llvm.loop !149

bb308.bb312_crit_edge:                            ; preds = %bb308
  br label %bb312

bb308.bb365.loopexit1_crit_edge:                  ; preds = %bb308
  br label %bb365.loopexit1

bb312:                                            ; preds = %bb308.bb312_crit_edge, %bb312.preheader
  %i313 = phi i32 [ %i362, %bb308.bb312_crit_edge ], [ %i186, %bb312.preheader ]
  %i314 = phi ptr [ %i347, %bb308.bb312_crit_edge ], [ %i171, %bb312.preheader ]
  %i315 = phi i32 [ %i317, %bb308.bb312_crit_edge ], [ %i136, %bb312.preheader ]
  %i316 = load i8, ptr %i314, align 1, !tbaa !21
  %i317 = zext i8 %i316 to i32
  %i318 = icmp eq i32 %i315, %i317
  %i319 = load i32, ptr %i1, align 8, !tbaa !136
  br i1 %i318, label %bb339, label %bb320

bb320:                                            ; preds = %bb312
  %i321 = icmp eq i32 %i319, 1
  br i1 %i321, label %bb322, label %bb320.bb341_crit_edge

bb320.bb341_crit_edge:                            ; preds = %bb320
  br label %bb341

bb322:                                            ; preds = %bb320
  %i323 = trunc i32 %i315 to i8
  %i324 = load i32, ptr %i9, align 8, !tbaa !139
  %i325 = shl i32 %i324, 8
  %i326 = lshr i32 %i324, 24
  %i327 = xor i32 %i326, %i315
  %i328 = zext nneg i32 %i327 to i64
  %i329 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %i328
  %i330 = load i32, ptr %i329, align 4, !tbaa !19
  %i331 = xor i32 %i325, %i330
  store i32 %i331, ptr %i9, align 8, !tbaa !139
  %i332 = zext nneg i32 %i315 to i64
  %i333 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i332
  store i8 1, ptr %i333, align 1, !tbaa !21
  %i334 = load ptr, ptr %i13, align 8, !tbaa !14
  %i335 = sext i32 %i313 to i64
  %i336 = getelementptr inbounds i8, ptr %i334, i64 %i335
  store i8 %i323, ptr %i336, align 1, !tbaa !21
  %i337 = load i32, ptr %i8, align 4, !tbaa !16
  %i338 = add nsw i32 %i337, 1
  store i32 %i338, ptr %i8, align 4, !tbaa !16
  store i32 %i317, ptr %i, align 4, !tbaa !135
  br label %bb344

bb339:                                            ; preds = %bb312
  %i340 = icmp eq i32 %i319, 255
  br i1 %i340, label %bb339.bb341_crit_edge, label %bb342

bb339.bb341_crit_edge:                            ; preds = %bb339
  br label %bb341

bb341:                                            ; preds = %bb339.bb341_crit_edge, %bb320.bb341_crit_edge
  tail call fastcc void @add_pair_to_block(ptr noundef nonnull %arg)
  store i32 %i317, ptr %i, align 4, !tbaa !135
  store i32 1, ptr %i1, align 8, !tbaa !136
  br label %bb344

bb342:                                            ; preds = %bb339
  %i343 = add nsw i32 %i319, 1
  store i32 %i343, ptr %i1, align 8, !tbaa !136
  br label %bb344

bb344:                                            ; preds = %bb342, %bb341, %bb322
  %i345 = load ptr, ptr %arg, align 8, !tbaa !122
  %i346 = load ptr, ptr %i345, align 8, !tbaa !147
  %i347 = getelementptr inbounds i8, ptr %i346, i64 1
  store ptr %i347, ptr %i345, align 8, !tbaa !147
  %i348 = getelementptr inbounds %struct.bz_stream, ptr %i345, i64 0, i32 1
  %i349 = load i32, ptr %i348, align 8, !tbaa !141
  %i350 = add i32 %i349, -1
  store i32 %i350, ptr %i348, align 8, !tbaa !141
  %i351 = getelementptr inbounds %struct.bz_stream, ptr %i345, i64 0, i32 2
  %i352 = load i32, ptr %i351, align 4, !tbaa !131
  %i353 = add i32 %i352, 1
  store i32 %i353, ptr %i351, align 4, !tbaa !131
  %i354 = icmp eq i32 %i353, 0
  br i1 %i354, label %bb355, label %bb344.bb359_crit_edge

bb344.bb359_crit_edge:                            ; preds = %bb344
  br label %bb359

bb355:                                            ; preds = %bb344
  %i356 = getelementptr inbounds %struct.bz_stream, ptr %i345, i64 0, i32 3
  %i357 = load i32, ptr %i356, align 8, !tbaa !132
  %i358 = add i32 %i357, 1
  store i32 %i358, ptr %i356, align 8, !tbaa !132
  br label %bb359

bb359:                                            ; preds = %bb344.bb359_crit_edge, %bb355
  %i360 = load i32, ptr %i7, align 8, !tbaa !142
  %i361 = add i32 %i360, -1
  store i32 %i361, ptr %i7, align 8, !tbaa !142
  %i362 = load i32, ptr %i8, align 4, !tbaa !16
  %i363 = load i32, ptr %i12, align 8, !tbaa !127
  %i364 = icmp slt i32 %i362, %i363
  br i1 %i364, label %bb308, label %bb365.loopexit1split, !llvm.loop !149

bb365.loopexit:                                   ; preds = %bb302
  br label %bb365

bb365.loopexit1split:                             ; preds = %bb359
  br label %bb365.loopexit1

bb365.loopexit1:                                  ; preds = %bb365.loopexit1split, %bb308.bb365.loopexit1_crit_edge
  br label %bb365

bb365:                                            ; preds = %bb249.bb365_crit_edge, %bb194.bb365_crit_edge, %bb193.bb365_crit_edge, %bb189.bb365_crit_edge, %bb183.bb365_crit_edge, %bb130.bb365_crit_edge, %bb125.bb365_crit_edge, %bb124.bb365_crit_edge, %bb365.loopexit1, %bb365.loopexit
  %i366 = phi i32 [ %i122, %bb193.bb365_crit_edge ], [ %i122, %bb124.bb365_crit_edge ], [ %i122, %bb194.bb365_crit_edge ], [ %i251, %bb249.bb365_crit_edge ], [ %i122, %bb125.bb365_crit_edge ], [ %i122, %bb130.bb365_crit_edge ], [ %i187, %bb183.bb365_crit_edge ], [ %i187, %bb189.bb365_crit_edge ], [ %i304, %bb365.loopexit ], [ %i363, %bb365.loopexit1 ]
  %i367 = phi i32 [ %i121, %bb193.bb365_crit_edge ], [ %i121, %bb124.bb365_crit_edge ], [ %i121, %bb194.bb365_crit_edge ], [ %i250, %bb249.bb365_crit_edge ], [ %i121, %bb125.bb365_crit_edge ], [ %i121, %bb130.bb365_crit_edge ], [ %i186, %bb183.bb365_crit_edge ], [ %i186, %bb189.bb365_crit_edge ], [ %i303, %bb365.loopexit ], [ %i362, %bb365.loopexit1 ]
  %i368 = phi i8 [ 0, %bb193.bb365_crit_edge ], [ 0, %bb124.bb365_crit_edge ], [ 0, %bb194.bb365_crit_edge ], [ 1, %bb249.bb365_crit_edge ], [ 0, %bb125.bb365_crit_edge ], [ 0, %bb130.bb365_crit_edge ], [ 1, %bb183.bb365_crit_edge ], [ 1, %bb189.bb365_crit_edge ], [ 1, %bb365.loopexit ], [ 1, %bb365.loopexit1 ]
  %i369 = or i8 %i368, %i16
  %i370 = load i32, ptr %i6, align 8, !tbaa !124
  %i371 = icmp eq i32 %i370, 2
  br i1 %i371, label %bb365.bb384_crit_edge, label %bb372

bb365.bb384_crit_edge:                            ; preds = %bb365
  br label %bb384

bb372:                                            ; preds = %bb365
  %i373 = load i32, ptr %i7, align 8, !tbaa !142
  %i374 = icmp eq i32 %i373, 0
  br i1 %i374, label %bb375, label %bb372.bb384_crit_edge

bb372.bb384_crit_edge:                            ; preds = %bb372
  br label %bb384

bb375:                                            ; preds = %bb372
  %i376 = load i32, ptr %i, align 4, !tbaa !135
  %i377 = icmp ult i32 %i376, 256
  br i1 %i377, label %bb378, label %bb375.bb380_crit_edge

bb375.bb380_crit_edge:                            ; preds = %bb375
  br label %bb380

bb378:                                            ; preds = %bb375
  tail call fastcc void @add_pair_to_block(ptr noundef nonnull %arg)
  %i379 = load i32, ptr %i6, align 8, !tbaa !124
  br label %bb380

bb380:                                            ; preds = %bb375.bb380_crit_edge, %bb378
  %i381 = phi i32 [ %i370, %bb375.bb380_crit_edge ], [ %i379, %bb378 ]
  store i32 256, ptr %i, align 4, !tbaa !135
  store i32 0, ptr %i1, align 8, !tbaa !136
  %i382 = icmp eq i32 %i381, 4
  %i383 = zext i1 %i382 to i8
  br label %bb392

bb384:                                            ; preds = %bb372.bb384_crit_edge, %bb365.bb384_crit_edge
  %i385 = icmp slt i32 %i367, %i366
  br i1 %i385, label %bb386, label %bb384.bb392_crit_edge

bb384.bb392_crit_edge:                            ; preds = %bb384
  br label %bb392

bb386:                                            ; preds = %bb384
  %i387 = load ptr, ptr %arg, align 8, !tbaa !122
  %i388 = getelementptr inbounds %struct.bz_stream, ptr %i387, i64 0, i32 1
  %i389 = load i32, ptr %i388, align 8, !tbaa !141
  %i390 = icmp eq i32 %i389, 0
  br i1 %i390, label %bb394splitsplitsplitsplitsplit, label %bb386.bb391_crit_edge

bb386.bb391_crit_edge:                            ; preds = %bb386
  br label %bb391

bb391:                                            ; preds = %bb386.bb391_crit_edge, %bb392
  br label %bb14

bb392:                                            ; preds = %bb384.bb392_crit_edge, %bb380
  %i393 = phi i8 [ %i383, %bb380 ], [ 0, %bb384.bb392_crit_edge ]
  tail call void @BZ2_compressBlock(ptr noundef nonnull %arg, i8 noundef zeroext %i393) #31
  store i32 1, ptr %i2, align 4, !tbaa !123
  br label %bb391

bb394splitsplitsplitsplitsplit:                   ; preds = %bb386
  br label %bb394splitsplitsplitsplit

bb394splitsplitsplitsplit:                        ; preds = %bb394splitsplitsplitsplitsplit, %bb111.bb394splitsplitsplitsplit_crit_edge
  %i395.ph.ph.ph.ph = phi i8 [ %i86, %bb111.bb394splitsplitsplitsplit_crit_edge ], [ %i119, %bb394splitsplitsplitsplitsplit ]
  %i396.ph.ph.ph.ph = phi i8 [ %i16, %bb111.bb394splitsplitsplitsplit_crit_edge ], [ %i369, %bb394splitsplitsplitsplitsplit ]
  br label %bb394splitsplitsplit

bb394splitsplitsplit:                             ; preds = %bb394splitsplitsplitsplit, %bb108.bb394splitsplitsplit_crit_edge
  %i395.ph.ph.ph = phi i8 [ %i86, %bb108.bb394splitsplitsplit_crit_edge ], [ %i395.ph.ph.ph.ph, %bb394splitsplitsplitsplit ]
  %i396.ph.ph.ph = phi i8 [ %i16, %bb108.bb394splitsplitsplit_crit_edge ], [ %i396.ph.ph.ph.ph, %bb394splitsplitsplitsplit ]
  br label %bb394splitsplit

bb394splitsplit:                                  ; preds = %bb394splitsplitsplit, %bb98.bb394splitsplit_crit_edge
  %i395.ph.ph = phi i8 [ %i86, %bb98.bb394splitsplit_crit_edge ], [ %i395.ph.ph.ph, %bb394splitsplitsplit ]
  %i396.ph.ph = phi i8 [ %i16, %bb98.bb394splitsplit_crit_edge ], [ %i396.ph.ph.ph, %bb394splitsplitsplit ]
  br label %bb394split

bb394split:                                       ; preds = %bb394splitsplit, %bb95.bb394split_crit_edge
  %i395.ph = phi i8 [ %i86, %bb95.bb394split_crit_edge ], [ %i395.ph.ph, %bb394splitsplit ]
  %i396.ph = phi i8 [ %i16, %bb95.bb394split_crit_edge ], [ %i396.ph.ph, %bb394splitsplit ]
  br label %bb394

bb394:                                            ; preds = %bb394split, %bb83.bb394_crit_edge
  %i395 = phi i8 [ %i86, %bb83.bb394_crit_edge ], [ %i395.ph, %bb394split ]
  %i396 = phi i8 [ %i16, %bb83.bb394_crit_edge ], [ %i396.ph, %bb394split ]
  %i397 = icmp ne i8 %i396, 0
  %i398 = icmp ne i8 %i395, 0
  %i399 = select i1 %i397, i1 true, i1 %i398
  %i400 = zext i1 %i399 to i8
  ret i8 %i400
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @add_pair_to_block(ptr nocapture noundef %arg) unnamed_addr #25 {
bb:
  %i = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 13
  %i1 = load i32, ptr %i, align 4, !tbaa !135
  %i2 = trunc i32 %i1 to i8
  %i3 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 14
  %i4 = load i32, ptr %i3, align 8, !tbaa !136
  %i5 = icmp sgt i32 %i4, 0
  br i1 %i5, label %bb6, label %bb.bb44_crit_edge

bb.bb44_crit_edge:                                ; preds = %bb
  br label %bb44

bb6:                                              ; preds = %bb
  %i7 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 26
  %i8 = and i32 %i1, 255
  %i9 = load i32, ptr %i7, align 8, !tbaa !139
  %i10 = and i32 %i4, 1
  %i11 = icmp eq i32 %i4, 1
  br i1 %i11, label %bb6.bb33_crit_edge, label %bb12

bb6.bb33_crit_edge:                               ; preds = %bb6
  br label %bb33

bb12:                                             ; preds = %bb6
  %i13 = and i32 %i4, 2147483646
  br label %bb14

bb14:                                             ; preds = %bb14.bb14_crit_edge, %bb12
  %i15 = phi i32 [ %i9, %bb12 ], [ %i30, %bb14.bb14_crit_edge ]
  %i16 = phi i32 [ 0, %bb12 ], [ %i31, %bb14.bb14_crit_edge ]
  %i17 = shl i32 %i15, 8
  %i18 = lshr i32 %i15, 24
  %i19 = xor i32 %i18, %i8
  %i20 = zext nneg i32 %i19 to i64
  %i21 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %i20
  %i22 = load i32, ptr %i21, align 4, !tbaa !19
  %i23 = xor i32 %i17, %i22
  store i32 %i23, ptr %i7, align 8, !tbaa !139
  %i24 = shl i32 %i23, 8
  %i25 = lshr i32 %i23, 24
  %i26 = xor i32 %i25, %i8
  %i27 = zext nneg i32 %i26 to i64
  %i28 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %i27
  %i29 = load i32, ptr %i28, align 4, !tbaa !19
  %i30 = xor i32 %i24, %i29
  store i32 %i30, ptr %i7, align 8, !tbaa !139
  %i31 = add i32 %i16, 2
  %i32 = icmp eq i32 %i31, %i13
  br i1 %i32, label %bb33.loopexit, label %bb14.bb14_crit_edge, !llvm.loop !150

bb14.bb14_crit_edge:                              ; preds = %bb14
  br label %bb14

bb33.loopexit:                                    ; preds = %bb14
  br label %bb33

bb33:                                             ; preds = %bb6.bb33_crit_edge, %bb33.loopexit
  %i34 = phi i32 [ %i9, %bb6.bb33_crit_edge ], [ %i30, %bb33.loopexit ]
  %i35 = icmp eq i32 %i10, 0
  br i1 %i35, label %bb33.bb44_crit_edge, label %bb36

bb33.bb44_crit_edge:                              ; preds = %bb33
  br label %bb44

bb36:                                             ; preds = %bb33
  %i37 = shl i32 %i34, 8
  %i38 = lshr i32 %i34, 24
  %i39 = xor i32 %i38, %i8
  %i40 = zext nneg i32 %i39 to i64
  %i41 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %i40
  %i42 = load i32, ptr %i41, align 4, !tbaa !19
  %i43 = xor i32 %i37, %i42
  store i32 %i43, ptr %i7, align 8, !tbaa !139
  br label %bb44

bb44:                                             ; preds = %bb33.bb44_crit_edge, %bb.bb44_crit_edge, %bb36
  %i45 = zext i32 %i1 to i64
  %i46 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i45
  store i8 1, ptr %i46, align 1, !tbaa !21
  switch i32 %i4, label %bb74 [
    i32 1, label %bb47
    i32 2, label %bb51
    i32 3, label %bb60
  ]

bb47:                                             ; preds = %bb44
  %i48 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 9
  %i49 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 17
  %i50 = load i32, ptr %i49, align 4, !tbaa !16
  br label %bb104

bb51:                                             ; preds = %bb44
  %i52 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 9
  %i53 = load ptr, ptr %i52, align 8, !tbaa !14
  %i54 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 17
  %i55 = load i32, ptr %i54, align 4, !tbaa !16
  %i56 = sext i32 %i55 to i64
  %i57 = getelementptr inbounds i8, ptr %i53, i64 %i56
  store i8 %i2, ptr %i57, align 1, !tbaa !21
  %i58 = load i32, ptr %i54, align 4, !tbaa !16
  %i59 = add nsw i32 %i58, 1
  store i32 %i59, ptr %i54, align 4, !tbaa !16
  br label %bb104

bb60:                                             ; preds = %bb44
  %i61 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 9
  %i62 = load ptr, ptr %i61, align 8, !tbaa !14
  %i63 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 17
  %i64 = load i32, ptr %i63, align 4, !tbaa !16
  %i65 = sext i32 %i64 to i64
  %i66 = getelementptr inbounds i8, ptr %i62, i64 %i65
  store i8 %i2, ptr %i66, align 1, !tbaa !21
  %i67 = load i32, ptr %i63, align 4, !tbaa !16
  %i68 = add nsw i32 %i67, 1
  store i32 %i68, ptr %i63, align 4, !tbaa !16
  %i69 = load ptr, ptr %i61, align 8, !tbaa !14
  %i70 = sext i32 %i68 to i64
  %i71 = getelementptr inbounds i8, ptr %i69, i64 %i70
  store i8 %i2, ptr %i71, align 1, !tbaa !21
  %i72 = load i32, ptr %i63, align 4, !tbaa !16
  %i73 = add nsw i32 %i72, 1
  store i32 %i73, ptr %i63, align 4, !tbaa !16
  br label %bb104

bb74:                                             ; preds = %bb44
  %i75 = add nsw i32 %i4, -4
  %i76 = sext i32 %i75 to i64
  %i77 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i76
  store i8 1, ptr %i77, align 1, !tbaa !21
  %i78 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 9
  %i79 = load ptr, ptr %i78, align 8, !tbaa !14
  %i80 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 17
  %i81 = load i32, ptr %i80, align 4, !tbaa !16
  %i82 = sext i32 %i81 to i64
  %i83 = getelementptr inbounds i8, ptr %i79, i64 %i82
  store i8 %i2, ptr %i83, align 1, !tbaa !21
  %i84 = load i32, ptr %i80, align 4, !tbaa !16
  %i85 = add nsw i32 %i84, 1
  store i32 %i85, ptr %i80, align 4, !tbaa !16
  %i86 = load ptr, ptr %i78, align 8, !tbaa !14
  %i87 = sext i32 %i85 to i64
  %i88 = getelementptr inbounds i8, ptr %i86, i64 %i87
  store i8 %i2, ptr %i88, align 1, !tbaa !21
  %i89 = load i32, ptr %i80, align 4, !tbaa !16
  %i90 = add nsw i32 %i89, 1
  store i32 %i90, ptr %i80, align 4, !tbaa !16
  %i91 = load ptr, ptr %i78, align 8, !tbaa !14
  %i92 = sext i32 %i90 to i64
  %i93 = getelementptr inbounds i8, ptr %i91, i64 %i92
  store i8 %i2, ptr %i93, align 1, !tbaa !21
  %i94 = load i32, ptr %i80, align 4, !tbaa !16
  %i95 = add nsw i32 %i94, 1
  store i32 %i95, ptr %i80, align 4, !tbaa !16
  %i96 = load ptr, ptr %i78, align 8, !tbaa !14
  %i97 = sext i32 %i95 to i64
  %i98 = getelementptr inbounds i8, ptr %i96, i64 %i97
  store i8 %i2, ptr %i98, align 1, !tbaa !21
  %i99 = load i32, ptr %i80, align 4, !tbaa !16
  %i100 = add nsw i32 %i99, 1
  store i32 %i100, ptr %i80, align 4, !tbaa !16
  %i101 = load i32, ptr %i3, align 8, !tbaa !136
  %i102 = trunc i32 %i101 to i8
  %i103 = add i8 %i102, -4
  br label %bb104

bb104:                                            ; preds = %bb74, %bb60, %bb51, %bb47
  %i105 = phi i32 [ %i100, %bb74 ], [ %i73, %bb60 ], [ %i59, %bb51 ], [ %i50, %bb47 ]
  %i106 = phi ptr [ %i78, %bb74 ], [ %i61, %bb60 ], [ %i52, %bb51 ], [ %i48, %bb47 ]
  %i107 = phi i8 [ %i103, %bb74 ], [ %i2, %bb60 ], [ %i2, %bb51 ], [ %i2, %bb47 ]
  %i108 = phi ptr [ %i80, %bb74 ], [ %i63, %bb60 ], [ %i54, %bb51 ], [ %i49, %bb47 ]
  %i109 = load ptr, ptr %i106, align 8, !tbaa !14
  %i110 = sext i32 %i105 to i64
  %i111 = getelementptr inbounds i8, ptr %i109, i64 %i110
  store i8 %i107, ptr %i111, align 1, !tbaa !21
  %i112 = load i32, ptr %i108, align 4, !tbaa !16
  %i113 = add nsw i32 %i112, 1
  store i32 %i113, ptr %i108, align 4, !tbaa !16
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @BZ2_bzCompressEnd(ptr noundef %arg) local_unnamed_addr #0 {
bb:
  %i = icmp eq ptr %arg, null
  br i1 %i, label %bb.bb41_crit_edge, label %bb1

bb.bb41_crit_edge:                                ; preds = %bb
  br label %bb41

bb1:                                              ; preds = %bb
  %i2 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 8
  %i3 = load ptr, ptr %i2, align 8, !tbaa !130
  %i4 = icmp eq ptr %i3, null
  br i1 %i4, label %bb1.bb41_crit_edge, label %bb5

bb1.bb41_crit_edge:                               ; preds = %bb1
  br label %bb41

bb5:                                              ; preds = %bb1
  %i6 = load ptr, ptr %i3, align 8, !tbaa !122
  %i7 = icmp eq ptr %i6, %arg
  br i1 %i7, label %bb8, label %bb5.bb41_crit_edge

bb5.bb41_crit_edge:                               ; preds = %bb5
  br label %bb41

bb8:                                              ; preds = %bb5
  %i9 = getelementptr inbounds %struct.EState, ptr %i3, i64 0, i32 4
  %i10 = load ptr, ptr %i9, align 8, !tbaa !49
  %i11 = icmp eq ptr %i10, null
  br i1 %i11, label %bb8.bb17_crit_edge, label %bb12

bb8.bb17_crit_edge:                               ; preds = %bb8
  br label %bb17

bb12:                                             ; preds = %bb8
  %i13 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 10
  %i14 = load ptr, ptr %i13, align 8, !tbaa !120
  %i15 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 11
  %i16 = load ptr, ptr %i15, align 8, !tbaa !121
  tail call void %i14(ptr noundef %i16, ptr noundef nonnull %i10) #31
  br label %bb17

bb17:                                             ; preds = %bb8.bb17_crit_edge, %bb12
  %i18 = getelementptr inbounds %struct.EState, ptr %i3, i64 0, i32 5
  %i19 = load ptr, ptr %i18, align 8, !tbaa !50
  %i20 = icmp eq ptr %i19, null
  br i1 %i20, label %bb17.bb26_crit_edge, label %bb21

bb17.bb26_crit_edge:                              ; preds = %bb17
  br label %bb26

bb21:                                             ; preds = %bb17
  %i22 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 10
  %i23 = load ptr, ptr %i22, align 8, !tbaa !120
  %i24 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 11
  %i25 = load ptr, ptr %i24, align 8, !tbaa !121
  tail call void %i23(ptr noundef %i25, ptr noundef nonnull %i19) #31
  br label %bb26

bb26:                                             ; preds = %bb17.bb26_crit_edge, %bb21
  %i27 = getelementptr inbounds %struct.EState, ptr %i3, i64 0, i32 6
  %i28 = load ptr, ptr %i27, align 8, !tbaa !15
  %i29 = icmp eq ptr %i28, null
  br i1 %i29, label %bb26.bb35_crit_edge, label %bb30

bb26.bb35_crit_edge:                              ; preds = %bb26
  br label %bb35

bb30:                                             ; preds = %bb26
  %i31 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 10
  %i32 = load ptr, ptr %i31, align 8, !tbaa !120
  %i33 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 11
  %i34 = load ptr, ptr %i33, align 8, !tbaa !121
  tail call void %i32(ptr noundef %i34, ptr noundef nonnull %i28) #31
  br label %bb35

bb35:                                             ; preds = %bb26.bb35_crit_edge, %bb30
  %i36 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 10
  %i37 = load ptr, ptr %i36, align 8, !tbaa !120
  %i38 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 11
  %i39 = load ptr, ptr %i38, align 8, !tbaa !121
  %i40 = load ptr, ptr %i2, align 8, !tbaa !130
  tail call void %i37(ptr noundef %i39, ptr noundef %i40) #31
  store ptr null, ptr %i2, align 8, !tbaa !130
  br label %bb41

bb41:                                             ; preds = %bb5.bb41_crit_edge, %bb1.bb41_crit_edge, %bb.bb41_crit_edge, %bb35
  %i42 = phi i32 [ 0, %bb35 ], [ -2, %bb.bb41_crit_edge ], [ -2, %bb1.bb41_crit_edge ], [ -2, %bb5.bb41_crit_edge ]
  ret i32 %i42
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @BZ2_bzDecompressInit(ptr noundef %arg, i32 noundef %arg1, i32 noundef %arg2) local_unnamed_addr #0 {
bb:
  %i = icmp eq ptr %arg, null
  %i3 = icmp ugt i32 %arg2, 1
  %i4 = or i1 %i, %i3
  %i5 = icmp ugt i32 %arg1, 4
  %i6 = or i1 %i5, %i4
  br i1 %i6, label %bb.bb38_crit_edge, label %bb7

bb.bb38_crit_edge:                                ; preds = %bb
  br label %bb38

bb7:                                              ; preds = %bb
  %i8 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 9
  %i9 = load ptr, ptr %i8, align 8, !tbaa !118
  %i10 = icmp eq ptr %i9, null
  br i1 %i10, label %bb11, label %bb7.bb12_crit_edge

bb7.bb12_crit_edge:                               ; preds = %bb7
  br label %bb12

bb11:                                             ; preds = %bb7
  store ptr @default_bzalloc, ptr %i8, align 8, !tbaa !118
  br label %bb12

bb12:                                             ; preds = %bb7.bb12_crit_edge, %bb11
  %i13 = phi ptr [ @default_bzalloc, %bb11 ], [ %i9, %bb7.bb12_crit_edge ]
  %i14 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 10
  %i15 = load ptr, ptr %i14, align 8, !tbaa !120
  %i16 = icmp eq ptr %i15, null
  br i1 %i16, label %bb17, label %bb12.bb18_crit_edge

bb12.bb18_crit_edge:                              ; preds = %bb12
  br label %bb18

bb17:                                             ; preds = %bb12
  store ptr @default_bzfree, ptr %i14, align 8, !tbaa !120
  br label %bb18

bb18:                                             ; preds = %bb12.bb18_crit_edge, %bb17
  %i19 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 11
  %i20 = load ptr, ptr %i19, align 8, !tbaa !121
  %i21 = tail call ptr %i13(ptr noundef %i20, i32 noundef 64144, i32 noundef 1) #31
  %i22 = icmp eq ptr %i21, null
  br i1 %i22, label %bb18.bb38_crit_edge, label %bb23

bb18.bb38_crit_edge:                              ; preds = %bb18
  br label %bb38

bb23:                                             ; preds = %bb18
  store ptr %arg, ptr %i21, align 8, !tbaa !151
  %i24 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 8
  store ptr %i21, ptr %i24, align 8, !tbaa !130
  %i25 = getelementptr inbounds %struct.DState, ptr %i21, i64 0, i32 1
  store i32 10, ptr %i25, align 8, !tbaa !153
  %i26 = getelementptr inbounds %struct.DState, ptr %i21, i64 0, i32 8
  store i32 0, ptr %i26, align 4, !tbaa !154
  %i27 = getelementptr inbounds %struct.DState, ptr %i21, i64 0, i32 7
  store i32 0, ptr %i27, align 8, !tbaa !155
  %i28 = getelementptr inbounds %struct.DState, ptr %i21, i64 0, i32 26
  store i32 0, ptr %i28, align 4, !tbaa !156
  %i29 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 2
  store i32 0, ptr %i29, align 4, !tbaa !131
  %i30 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 3
  store i32 0, ptr %i30, align 8, !tbaa !132
  %i31 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 6
  store i32 0, ptr %i31, align 4, !tbaa !133
  %i32 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 7
  store i32 0, ptr %i32, align 8, !tbaa !134
  %i33 = trunc i32 %arg2 to i8
  %i34 = getelementptr inbounds %struct.DState, ptr %i21, i64 0, i32 10
  store i8 %i33, ptr %i34, align 4, !tbaa !157
  %i35 = getelementptr inbounds %struct.DState, ptr %i21, i64 0, i32 20
  %i36 = getelementptr inbounds %struct.DState, ptr %i21, i64 0, i32 11
  store i32 0, ptr %i36, align 8, !tbaa !158
  %i37 = getelementptr inbounds %struct.DState, ptr %i21, i64 0, i32 12
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %i35, i8 0, i64 24, i1 false)
  store i32 %arg1, ptr %i37, align 4, !tbaa !159
  br label %bb38

bb38:                                             ; preds = %bb18.bb38_crit_edge, %bb.bb38_crit_edge, %bb23
  %i39 = phi i32 [ 0, %bb23 ], [ -2, %bb.bb38_crit_edge ], [ -3, %bb18.bb38_crit_edge ]
  ret i32 %i39
}

; Function Attrs: inlinehint nofree norecurse nosync nounwind memory(argmem: read) uwtable
define dso_local i32 @BZ2_indexIntoF(i32 noundef %arg, ptr nocapture noundef readonly %arg1) local_unnamed_addr #26 {
bb:
  br label %bb2

bb2:                                              ; preds = %bb2.bb2_crit_edge, %bb
  %i = phi i32 [ 256, %bb ], [ %i10, %bb2.bb2_crit_edge ]
  %i3 = phi i32 [ 0, %bb ], [ %i11, %bb2.bb2_crit_edge ]
  %i4 = add nsw i32 %i3, %i
  %i5 = ashr i32 %i4, 1
  %i6 = sext i32 %i5 to i64
  %i7 = getelementptr inbounds i32, ptr %arg1, i64 %i6
  %i8 = load i32, ptr %i7, align 4, !tbaa !19
  %i9 = icmp sgt i32 %i8, %arg
  %i10 = select i1 %i9, i32 %i5, i32 %i
  %i11 = select i1 %i9, i32 %i3, i32 %i5
  %i12 = sub nsw i32 %i10, %i11
  %i13 = icmp eq i32 %i12, 1
  br i1 %i13, label %bb14, label %bb2.bb2_crit_edge, !llvm.loop !160

bb2.bb2_crit_edge:                                ; preds = %bb2
  br label %bb2

bb14:                                             ; preds = %bb2
  ret i32 %i11
}

; Function Attrs: nounwind uwtable
define dso_local i32 @BZ2_bzDecompress(ptr noundef readonly %arg) local_unnamed_addr #0 {
bb:
  %i = icmp eq ptr %arg, null
  br i1 %i, label %bb.bb958_crit_edge, label %bb1

bb.bb958_crit_edge:                               ; preds = %bb
  br label %bb958

bb1:                                              ; preds = %bb
  %i2 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 8
  %i3 = load ptr, ptr %i2, align 8, !tbaa !130
  %i4 = icmp eq ptr %i3, null
  br i1 %i4, label %bb1.bb958_crit_edge, label %bb5

bb1.bb958_crit_edge:                              ; preds = %bb1
  br label %bb958

bb5:                                              ; preds = %bb1
  %i6 = load ptr, ptr %i3, align 8, !tbaa !151
  %i7 = icmp eq ptr %i6, %arg
  br i1 %i7, label %bb8, label %bb5.bb958_crit_edge

bb5.bb958_crit_edge:                              ; preds = %bb5
  br label %bb958

bb8:                                              ; preds = %bb5
  %i9 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 1
  %i10 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 10
  %i11 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 4
  %i12 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 3
  %i13 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 2
  %i14 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 25
  %i15 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 17
  %i16 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 51
  %i17 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 15
  %i18 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 14
  %i19 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 18
  %i20 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 21
  %i21 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 22
  %i22 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 5
  %i23 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 6
  %i24 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 20
  %i25 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 12
  %i26 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 23
  %i27 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 26
  %i28 = load i32, ptr %i9, align 8, !tbaa !153
  br label %bb29

bb29:                                             ; preds = %bb955.bb29_crit_edge, %bb8
  %i30 = phi i32 [ 2, %bb955.bb29_crit_edge ], [ %i28, %bb8 ]
  %i31 = icmp sgt i32 %i30, 9
  br label %bb32

bb32:                                             ; preds = %bb936.bb32_crit_edge, %bb29
  switch i32 %i30, label %bb936 [
    i32 1, label %bb958.loopexit9
    i32 2, label %bb33
  ]

bb33:                                             ; preds = %bb32
  %i34 = load i8, ptr %i10, align 4, !tbaa !157
  %i35 = icmp eq i8 %i34, 0
  %i36 = load i8, ptr %i11, align 4, !tbaa !161
  %i37 = icmp eq i8 %i36, 0
  br i1 %i35, label %bb573, label %bb38

bb38:                                             ; preds = %bb33
  %i39 = load ptr, ptr %i3, align 8, !tbaa !151
  %i40 = getelementptr inbounds %struct.bz_stream, ptr %i39, i64 0, i32 5
  %i41 = load i32, ptr %i40, align 8, !tbaa !143
  %i42 = icmp eq i32 %i41, 0
  br i1 %i37, label %bb46, label %bb43

bb43:                                             ; preds = %bb38
  br i1 %i42, label %bb43.bb904_crit_edge, label %bb44

bb43.bb904_crit_edge:                             ; preds = %bb43
  br label %bb904

bb44:                                             ; preds = %bb43
  %i45 = load i32, ptr %i12, align 8, !tbaa !162
  br label %bb84

bb46:                                             ; preds = %bb38
  br i1 %i42, label %bb46.bb904_crit_edge, label %bb47

bb46.bb904_crit_edge:                             ; preds = %bb46
  br label %bb904

bb47:                                             ; preds = %bb46
  %i48 = load i32, ptr %i12, align 8, !tbaa !162
  br label %bb384

bb49:                                             ; preds = %bb152.bb49_crit_edge, %bb84
  %i50 = phi i32 [ 1, %bb152.bb49_crit_edge ], [ %i86, %bb84 ]
  %i51 = icmp eq i32 %i50, 0
  br i1 %i51, label %bb88, label %bb52

bb52:                                             ; preds = %bb49
  %i53 = load i8, ptr %i13, align 4, !tbaa !163
  %i54 = getelementptr inbounds %struct.bz_stream, ptr %i85, i64 0, i32 4
  %i55 = load ptr, ptr %i54, align 8, !tbaa !144
  store i8 %i53, ptr %i55, align 1, !tbaa !21
  %i56 = load i32, ptr %i14, align 8, !tbaa !164
  %i57 = shl i32 %i56, 8
  %i58 = lshr i32 %i56, 24
  %i59 = zext i8 %i53 to i32
  %i60 = xor i32 %i58, %i59
  %i61 = zext nneg i32 %i60 to i64
  %i62 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %i61
  %i63 = load i32, ptr %i62, align 4, !tbaa !19
  %i64 = xor i32 %i63, %i57
  store i32 %i64, ptr %i14, align 8, !tbaa !164
  %i65 = load i32, ptr %i12, align 8, !tbaa !162
  %i66 = add nsw i32 %i65, -1
  store i32 %i66, ptr %i12, align 8, !tbaa !162
  %i67 = load ptr, ptr %i3, align 8, !tbaa !151
  %i68 = getelementptr inbounds %struct.bz_stream, ptr %i67, i64 0, i32 4
  %i69 = load ptr, ptr %i68, align 8, !tbaa !144
  %i70 = getelementptr inbounds i8, ptr %i69, i64 1
  store ptr %i70, ptr %i68, align 8, !tbaa !144
  %i71 = getelementptr inbounds %struct.bz_stream, ptr %i67, i64 0, i32 5
  %i72 = load i32, ptr %i71, align 8, !tbaa !143
  %i73 = add i32 %i72, -1
  store i32 %i73, ptr %i71, align 8, !tbaa !143
  %i74 = getelementptr inbounds %struct.bz_stream, ptr %i67, i64 0, i32 6
  %i75 = load i32, ptr %i74, align 4, !tbaa !133
  %i76 = add i32 %i75, 1
  store i32 %i76, ptr %i74, align 4, !tbaa !133
  %i77 = icmp eq i32 %i76, 0
  br i1 %i77, label %bb78, label %bb52.bb82_crit_edge

bb52.bb82_crit_edge:                              ; preds = %bb52
  br label %bb82

bb78:                                             ; preds = %bb52
  %i79 = getelementptr inbounds %struct.bz_stream, ptr %i67, i64 0, i32 7
  %i80 = load i32, ptr %i79, align 8, !tbaa !134
  %i81 = add i32 %i80, 1
  store i32 %i81, ptr %i79, align 8, !tbaa !134
  br label %bb82

bb82:                                             ; preds = %bb52.bb82_crit_edge, %bb78
  %i83 = icmp eq i32 %i73, 0
  br i1 %i83, label %bb904.loopexit8, label %bb82.bb84_crit_edge

bb82.bb84_crit_edge:                              ; preds = %bb82
  br label %bb84

bb84:                                             ; preds = %bb82.bb84_crit_edge, %bb44
  %i85 = phi ptr [ %i39, %bb44 ], [ %i67, %bb82.bb84_crit_edge ]
  %i86 = phi i32 [ %i45, %bb44 ], [ %i66, %bb82.bb84_crit_edge ]
  %i87 = getelementptr inbounds %struct.bz_stream, ptr %i85, i64 0, i32 5
  br label %bb49

bb88:                                             ; preds = %bb49
  %i89 = load i32, ptr %i15, align 4, !tbaa !165
  %i90 = load i32, ptr %i16, align 8, !tbaa !166
  %i91 = add nsw i32 %i90, 1
  %i92 = icmp eq i32 %i89, %i91
  br i1 %i92, label %bb88.bb904.loopexit1_crit_edge, label %bb93

bb88.bb904.loopexit1_crit_edge:                   ; preds = %bb88
  br label %bb904.loopexit1

bb93:                                             ; preds = %bb88
  %i94 = icmp sgt i32 %i89, %i91
  br i1 %i94, label %bb958.loopexit2, label %bb95

bb95:                                             ; preds = %bb93
  store i32 1, ptr %i12, align 8, !tbaa !162
  %i96 = load i32, ptr %i17, align 8, !tbaa !167
  %i97 = trunc i32 %i96 to i8
  store i8 %i97, ptr %i13, align 4, !tbaa !163
  %i98 = load i32, ptr %i18, align 4, !tbaa !168
  br label %bb99

bb99:                                             ; preds = %bb99.bb99_crit_edge, %bb95
  %i100 = phi i32 [ 256, %bb95 ], [ %i108, %bb99.bb99_crit_edge ]
  %i101 = phi i32 [ 0, %bb95 ], [ %i109, %bb99.bb99_crit_edge ]
  %i102 = add nsw i32 %i101, %i100
  %i103 = ashr i32 %i102, 1
  %i104 = sext i32 %i103 to i64
  %i105 = getelementptr inbounds i32, ptr %i19, i64 %i104
  %i106 = load i32, ptr %i105, align 4, !tbaa !19
  %i107 = icmp sgt i32 %i106, %i98
  %i108 = select i1 %i107, i32 %i103, i32 %i100
  %i109 = select i1 %i107, i32 %i101, i32 %i103
  %i110 = sub nsw i32 %i108, %i109
  %i111 = icmp eq i32 %i110, 1
  br i1 %i111, label %bb112, label %bb99.bb99_crit_edge, !llvm.loop !160

bb99.bb99_crit_edge:                              ; preds = %bb99
  br label %bb99

bb112:                                            ; preds = %bb99
  %i113 = load ptr, ptr %i20, align 8, !tbaa !169
  %i114 = zext i32 %i98 to i64
  %i115 = getelementptr inbounds i16, ptr %i113, i64 %i114
  %i116 = load i16, ptr %i115, align 2, !tbaa !22
  %i117 = zext i16 %i116 to i32
  %i118 = load ptr, ptr %i21, align 8, !tbaa !170
  %i119 = lshr i32 %i98, 1
  %i120 = zext nneg i32 %i119 to i64
  %i121 = getelementptr inbounds i8, ptr %i118, i64 %i120
  %i122 = load i8, ptr %i121, align 1, !tbaa !21
  %i123 = zext i8 %i122 to i32
  %i124 = shl i32 %i98, 2
  %i125 = and i32 %i124, 4
  %i126 = lshr i32 %i123, %i125
  %i127 = shl nuw nsw i32 %i126, 16
  %i128 = and i32 %i127, 983040
  %i129 = or disjoint i32 %i128, %i117
  store i32 %i129, ptr %i18, align 4, !tbaa !168
  %i130 = load i32, ptr %i22, align 8, !tbaa !171
  %i131 = icmp eq i32 %i130, 0
  br i1 %i131, label %bb132, label %bb112.bb140_crit_edge

bb112.bb140_crit_edge:                            ; preds = %bb112
  br label %bb140

bb132:                                            ; preds = %bb112
  %i133 = load i32, ptr %i23, align 4, !tbaa !172
  %i134 = sext i32 %i133 to i64
  %i135 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %i134
  %i136 = load i32, ptr %i135, align 4, !tbaa !19
  %i137 = add nsw i32 %i133, 1
  %i138 = icmp eq i32 %i137, 512
  %i139 = select i1 %i138, i32 0, i32 %i137
  store i32 %i139, ptr %i23, align 4
  br label %bb140

bb140:                                            ; preds = %bb112.bb140_crit_edge, %bb132
  %i141 = phi i32 [ %i136, %bb132 ], [ %i130, %bb112.bb140_crit_edge ]
  %i142 = add nsw i32 %i141, -1
  store i32 %i142, ptr %i22, align 8, !tbaa !171
  %i143 = add nsw i32 %i89, 1
  store i32 %i143, ptr %i15, align 4, !tbaa !165
  %i144 = icmp eq i32 %i89, %i90
  br i1 %i144, label %bb140.bb152_crit_edge, label %bb145

bb140.bb152_crit_edge:                            ; preds = %bb140
  br label %bb152

bb145:                                            ; preds = %bb140
  %i146 = icmp eq i32 %i142, 1
  %i147 = zext i1 %i146 to i32
  %i148 = and i32 %i109, 255
  %i149 = xor i32 %i148, %i147
  %i150 = icmp eq i32 %i149, %i96
  br i1 %i150, label %bb155, label %bb151

bb151:                                            ; preds = %bb145
  store i32 %i149, ptr %i17, align 8, !tbaa !167
  br label %bb152

bb152:                                            ; preds = %bb245.bb152_crit_edge, %bb194.bb152_crit_edge, %bb140.bb152_crit_edge, %bb342, %bb256, %bb205, %bb151
  %i153 = load i32, ptr %i87, align 8, !tbaa !143
  %i154 = icmp eq i32 %i153, 0
  br i1 %i154, label %bb904.loopexit1split, label %bb152.bb49_crit_edge

bb152.bb49_crit_edge:                             ; preds = %bb152
  br label %bb49

bb155:                                            ; preds = %bb145
  store i32 2, ptr %i12, align 8, !tbaa !162
  br label %bb156

bb156:                                            ; preds = %bb156.bb156_crit_edge, %bb155
  %i157 = phi i32 [ 256, %bb155 ], [ %i165, %bb156.bb156_crit_edge ]
  %i158 = phi i32 [ 0, %bb155 ], [ %i166, %bb156.bb156_crit_edge ]
  %i159 = add nsw i32 %i158, %i157
  %i160 = ashr i32 %i159, 1
  %i161 = sext i32 %i160 to i64
  %i162 = getelementptr inbounds i32, ptr %i19, i64 %i161
  %i163 = load i32, ptr %i162, align 4, !tbaa !19
  %i164 = icmp sgt i32 %i163, %i129
  %i165 = select i1 %i164, i32 %i160, i32 %i157
  %i166 = select i1 %i164, i32 %i158, i32 %i160
  %i167 = sub nsw i32 %i165, %i166
  %i168 = icmp eq i32 %i167, 1
  br i1 %i168, label %bb169, label %bb156.bb156_crit_edge, !llvm.loop !160

bb156.bb156_crit_edge:                            ; preds = %bb156
  br label %bb156

bb169:                                            ; preds = %bb156
  %i170 = zext nneg i32 %i129 to i64
  %i171 = getelementptr inbounds i16, ptr %i113, i64 %i170
  %i172 = load i16, ptr %i171, align 2, !tbaa !22
  %i173 = zext i16 %i172 to i32
  %i174 = lshr i32 %i129, 1
  %i175 = zext nneg i32 %i174 to i64
  %i176 = getelementptr inbounds i8, ptr %i118, i64 %i175
  %i177 = load i8, ptr %i176, align 1, !tbaa !21
  %i178 = zext i8 %i177 to i32
  %i179 = shl nuw nsw i32 %i117, 2
  %i180 = and i32 %i179, 4
  %i181 = lshr i32 %i178, %i180
  %i182 = shl nuw nsw i32 %i181, 16
  %i183 = and i32 %i182, 983040
  %i184 = or disjoint i32 %i183, %i173
  store i32 %i184, ptr %i18, align 4, !tbaa !168
  %i185 = icmp eq i32 %i142, 0
  br i1 %i185, label %bb186, label %bb169.bb194_crit_edge

bb169.bb194_crit_edge:                            ; preds = %bb169
  br label %bb194

bb186:                                            ; preds = %bb169
  %i187 = load i32, ptr %i23, align 4, !tbaa !172
  %i188 = sext i32 %i187 to i64
  %i189 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %i188
  %i190 = load i32, ptr %i189, align 4, !tbaa !19
  %i191 = add nsw i32 %i187, 1
  %i192 = icmp eq i32 %i191, 512
  %i193 = select i1 %i192, i32 0, i32 %i191
  store i32 %i193, ptr %i23, align 4
  br label %bb194

bb194:                                            ; preds = %bb169.bb194_crit_edge, %bb186
  %i195 = phi i32 [ %i190, %bb186 ], [ %i142, %bb169.bb194_crit_edge ]
  %i196 = add nsw i32 %i195, -1
  store i32 %i196, ptr %i22, align 8, !tbaa !171
  %i197 = add nsw i32 %i89, 2
  store i32 %i197, ptr %i15, align 4, !tbaa !165
  %i198 = icmp eq i32 %i143, %i90
  br i1 %i198, label %bb194.bb152_crit_edge, label %bb199

bb194.bb152_crit_edge:                            ; preds = %bb194
  br label %bb152

bb199:                                            ; preds = %bb194
  %i200 = icmp eq i32 %i196, 1
  %i201 = zext i1 %i200 to i32
  %i202 = and i32 %i166, 255
  %i203 = xor i32 %i202, %i201
  %i204 = icmp eq i32 %i203, %i96
  br i1 %i204, label %bb206, label %bb205

bb205:                                            ; preds = %bb199
  store i32 %i203, ptr %i17, align 8, !tbaa !167
  br label %bb152

bb206:                                            ; preds = %bb199
  store i32 3, ptr %i12, align 8, !tbaa !162
  br label %bb207

bb207:                                            ; preds = %bb207.bb207_crit_edge, %bb206
  %i208 = phi i32 [ 256, %bb206 ], [ %i216, %bb207.bb207_crit_edge ]
  %i209 = phi i32 [ 0, %bb206 ], [ %i217, %bb207.bb207_crit_edge ]
  %i210 = add nsw i32 %i209, %i208
  %i211 = ashr i32 %i210, 1
  %i212 = sext i32 %i211 to i64
  %i213 = getelementptr inbounds i32, ptr %i19, i64 %i212
  %i214 = load i32, ptr %i213, align 4, !tbaa !19
  %i215 = icmp sgt i32 %i214, %i184
  %i216 = select i1 %i215, i32 %i211, i32 %i208
  %i217 = select i1 %i215, i32 %i209, i32 %i211
  %i218 = sub nsw i32 %i216, %i217
  %i219 = icmp eq i32 %i218, 1
  br i1 %i219, label %bb220, label %bb207.bb207_crit_edge, !llvm.loop !160

bb207.bb207_crit_edge:                            ; preds = %bb207
  br label %bb207

bb220:                                            ; preds = %bb207
  %i221 = zext nneg i32 %i184 to i64
  %i222 = getelementptr inbounds i16, ptr %i113, i64 %i221
  %i223 = load i16, ptr %i222, align 2, !tbaa !22
  %i224 = zext i16 %i223 to i32
  %i225 = lshr i32 %i184, 1
  %i226 = zext nneg i32 %i225 to i64
  %i227 = getelementptr inbounds i8, ptr %i118, i64 %i226
  %i228 = load i8, ptr %i227, align 1, !tbaa !21
  %i229 = zext i8 %i228 to i32
  %i230 = shl nuw nsw i32 %i173, 2
  %i231 = and i32 %i230, 4
  %i232 = lshr i32 %i229, %i231
  %i233 = shl nuw nsw i32 %i232, 16
  %i234 = and i32 %i233, 983040
  %i235 = or disjoint i32 %i234, %i224
  store i32 %i235, ptr %i18, align 4, !tbaa !168
  %i236 = icmp eq i32 %i196, 0
  br i1 %i236, label %bb237, label %bb220.bb245_crit_edge

bb220.bb245_crit_edge:                            ; preds = %bb220
  br label %bb245

bb237:                                            ; preds = %bb220
  %i238 = load i32, ptr %i23, align 4, !tbaa !172
  %i239 = sext i32 %i238 to i64
  %i240 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %i239
  %i241 = load i32, ptr %i240, align 4, !tbaa !19
  %i242 = add nsw i32 %i238, 1
  %i243 = icmp eq i32 %i242, 512
  %i244 = select i1 %i243, i32 0, i32 %i242
  store i32 %i244, ptr %i23, align 4
  br label %bb245

bb245:                                            ; preds = %bb220.bb245_crit_edge, %bb237
  %i246 = phi i32 [ %i241, %bb237 ], [ %i196, %bb220.bb245_crit_edge ]
  %i247 = add nsw i32 %i246, -1
  store i32 %i247, ptr %i22, align 8, !tbaa !171
  %i248 = add nsw i32 %i89, 3
  store i32 %i248, ptr %i15, align 4, !tbaa !165
  %i249 = icmp eq i32 %i197, %i90
  br i1 %i249, label %bb245.bb152_crit_edge, label %bb250

bb245.bb152_crit_edge:                            ; preds = %bb245
  br label %bb152

bb250:                                            ; preds = %bb245
  %i251 = icmp eq i32 %i247, 1
  %i252 = zext i1 %i251 to i32
  %i253 = and i32 %i217, 255
  %i254 = xor i32 %i253, %i252
  %i255 = icmp eq i32 %i254, %i96
  br i1 %i255, label %bb257.preheader, label %bb256

bb257.preheader:                                  ; preds = %bb250
  br label %bb257

bb256:                                            ; preds = %bb250
  store i32 %i254, ptr %i17, align 8, !tbaa !167
  br label %bb152

bb257:                                            ; preds = %bb257.bb257_crit_edge, %bb257.preheader
  %i258 = phi i32 [ %i266, %bb257.bb257_crit_edge ], [ 256, %bb257.preheader ]
  %i259 = phi i32 [ %i267, %bb257.bb257_crit_edge ], [ 0, %bb257.preheader ]
  %i260 = add nsw i32 %i259, %i258
  %i261 = ashr i32 %i260, 1
  %i262 = sext i32 %i261 to i64
  %i263 = getelementptr inbounds i32, ptr %i19, i64 %i262
  %i264 = load i32, ptr %i263, align 4, !tbaa !19
  %i265 = icmp sgt i32 %i264, %i235
  %i266 = select i1 %i265, i32 %i261, i32 %i258
  %i267 = select i1 %i265, i32 %i259, i32 %i261
  %i268 = sub nsw i32 %i266, %i267
  %i269 = icmp eq i32 %i268, 1
  br i1 %i269, label %bb270, label %bb257.bb257_crit_edge, !llvm.loop !160

bb257.bb257_crit_edge:                            ; preds = %bb257
  br label %bb257

bb270:                                            ; preds = %bb257
  %i271 = zext nneg i32 %i235 to i64
  %i272 = getelementptr inbounds i16, ptr %i113, i64 %i271
  %i273 = load i16, ptr %i272, align 2, !tbaa !22
  %i274 = zext i16 %i273 to i32
  %i275 = lshr i32 %i235, 1
  %i276 = zext nneg i32 %i275 to i64
  %i277 = getelementptr inbounds i8, ptr %i118, i64 %i276
  %i278 = load i8, ptr %i277, align 1, !tbaa !21
  %i279 = zext i8 %i278 to i32
  %i280 = shl nuw nsw i32 %i224, 2
  %i281 = and i32 %i280, 4
  %i282 = lshr i32 %i279, %i281
  %i283 = shl nuw nsw i32 %i282, 16
  %i284 = and i32 %i283, 983040
  %i285 = or disjoint i32 %i284, %i274
  store i32 %i285, ptr %i18, align 4, !tbaa !168
  %i286 = icmp eq i32 %i247, 0
  br i1 %i286, label %bb287, label %bb270.bb295_crit_edge

bb270.bb295_crit_edge:                            ; preds = %bb270
  br label %bb295

bb287:                                            ; preds = %bb270
  %i288 = load i32, ptr %i23, align 4, !tbaa !172
  %i289 = sext i32 %i288 to i64
  %i290 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %i289
  %i291 = load i32, ptr %i290, align 4, !tbaa !19
  %i292 = add nsw i32 %i288, 1
  %i293 = icmp eq i32 %i292, 512
  %i294 = select i1 %i293, i32 0, i32 %i292
  store i32 %i294, ptr %i23, align 4
  br label %bb295

bb295:                                            ; preds = %bb270.bb295_crit_edge, %bb287
  %i296 = phi i32 [ %i291, %bb287 ], [ %i247, %bb270.bb295_crit_edge ]
  %i297 = add nsw i32 %i296, -1
  store i32 %i297, ptr %i22, align 8, !tbaa !171
  %i298 = icmp eq i32 %i297, 1
  %i299 = zext i1 %i298 to i32
  %i300 = add nsw i32 %i89, 4
  store i32 %i300, ptr %i15, align 4, !tbaa !165
  %i301 = and i32 %i267, 255
  %i302 = xor i32 %i301, %i299
  %i303 = add nuw nsw i32 %i302, 4
  store i32 %i303, ptr %i12, align 8, !tbaa !162
  br label %bb304

bb304:                                            ; preds = %bb304.bb304_crit_edge, %bb295
  %i305 = phi i32 [ 256, %bb295 ], [ %i313, %bb304.bb304_crit_edge ]
  %i306 = phi i32 [ 0, %bb295 ], [ %i314, %bb304.bb304_crit_edge ]
  %i307 = add nsw i32 %i306, %i305
  %i308 = ashr i32 %i307, 1
  %i309 = sext i32 %i308 to i64
  %i310 = getelementptr inbounds i32, ptr %i19, i64 %i309
  %i311 = load i32, ptr %i310, align 4, !tbaa !19
  %i312 = icmp sgt i32 %i311, %i285
  %i313 = select i1 %i312, i32 %i308, i32 %i305
  %i314 = select i1 %i312, i32 %i306, i32 %i308
  %i315 = sub nsw i32 %i313, %i314
  %i316 = icmp eq i32 %i315, 1
  br i1 %i316, label %bb317, label %bb304.bb304_crit_edge, !llvm.loop !160

bb304.bb304_crit_edge:                            ; preds = %bb304
  br label %bb304

bb317:                                            ; preds = %bb304
  store i32 %i314, ptr %i17, align 8, !tbaa !167
  %i318 = zext nneg i32 %i285 to i64
  %i319 = getelementptr inbounds i16, ptr %i113, i64 %i318
  %i320 = load i16, ptr %i319, align 2, !tbaa !22
  %i321 = zext i16 %i320 to i32
  %i322 = lshr i32 %i285, 1
  %i323 = zext nneg i32 %i322 to i64
  %i324 = getelementptr inbounds i8, ptr %i118, i64 %i323
  %i325 = load i8, ptr %i324, align 1, !tbaa !21
  %i326 = zext i8 %i325 to i32
  %i327 = shl nuw nsw i32 %i274, 2
  %i328 = and i32 %i327, 4
  %i329 = lshr i32 %i326, %i328
  %i330 = shl nuw nsw i32 %i329, 16
  %i331 = and i32 %i330, 983040
  %i332 = or disjoint i32 %i331, %i321
  store i32 %i332, ptr %i18, align 4, !tbaa !168
  %i333 = icmp eq i32 %i297, 0
  br i1 %i333, label %bb334, label %bb317.bb342_crit_edge

bb317.bb342_crit_edge:                            ; preds = %bb317
  br label %bb342

bb334:                                            ; preds = %bb317
  %i335 = load i32, ptr %i23, align 4, !tbaa !172
  %i336 = sext i32 %i335 to i64
  %i337 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %i336
  %i338 = load i32, ptr %i337, align 4, !tbaa !19
  %i339 = add nsw i32 %i335, 1
  %i340 = icmp eq i32 %i339, 512
  %i341 = select i1 %i340, i32 0, i32 %i339
  store i32 %i341, ptr %i23, align 4
  br label %bb342

bb342:                                            ; preds = %bb317.bb342_crit_edge, %bb334
  %i343 = phi i32 [ %i338, %bb334 ], [ %i297, %bb317.bb342_crit_edge ]
  %i344 = add nsw i32 %i343, -1
  store i32 %i344, ptr %i22, align 8, !tbaa !171
  %i345 = icmp eq i32 %i344, 1
  %i346 = zext i1 %i345 to i32
  %i347 = xor i32 %i314, %i346
  store i32 %i347, ptr %i17, align 8, !tbaa !167
  %i348 = add nsw i32 %i89, 5
  store i32 %i348, ptr %i15, align 4, !tbaa !165
  br label %bb152

bb349:                                            ; preds = %bb436.bb349_crit_edge, %bb384
  %i350 = phi i32 [ 1, %bb436.bb349_crit_edge ], [ %i386, %bb384 ]
  %i351 = icmp eq i32 %i350, 0
  br i1 %i351, label %bb388, label %bb352

bb352:                                            ; preds = %bb349
  %i353 = load i8, ptr %i13, align 4, !tbaa !163
  %i354 = getelementptr inbounds %struct.bz_stream, ptr %i385, i64 0, i32 4
  %i355 = load ptr, ptr %i354, align 8, !tbaa !144
  store i8 %i353, ptr %i355, align 1, !tbaa !21
  %i356 = load i32, ptr %i14, align 8, !tbaa !164
  %i357 = shl i32 %i356, 8
  %i358 = lshr i32 %i356, 24
  %i359 = zext i8 %i353 to i32
  %i360 = xor i32 %i358, %i359
  %i361 = zext nneg i32 %i360 to i64
  %i362 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %i361
  %i363 = load i32, ptr %i362, align 4, !tbaa !19
  %i364 = xor i32 %i363, %i357
  store i32 %i364, ptr %i14, align 8, !tbaa !164
  %i365 = load i32, ptr %i12, align 8, !tbaa !162
  %i366 = add nsw i32 %i365, -1
  store i32 %i366, ptr %i12, align 8, !tbaa !162
  %i367 = load ptr, ptr %i3, align 8, !tbaa !151
  %i368 = getelementptr inbounds %struct.bz_stream, ptr %i367, i64 0, i32 4
  %i369 = load ptr, ptr %i368, align 8, !tbaa !144
  %i370 = getelementptr inbounds i8, ptr %i369, i64 1
  store ptr %i370, ptr %i368, align 8, !tbaa !144
  %i371 = getelementptr inbounds %struct.bz_stream, ptr %i367, i64 0, i32 5
  %i372 = load i32, ptr %i371, align 8, !tbaa !143
  %i373 = add i32 %i372, -1
  store i32 %i373, ptr %i371, align 8, !tbaa !143
  %i374 = getelementptr inbounds %struct.bz_stream, ptr %i367, i64 0, i32 6
  %i375 = load i32, ptr %i374, align 4, !tbaa !133
  %i376 = add i32 %i375, 1
  store i32 %i376, ptr %i374, align 4, !tbaa !133
  %i377 = icmp eq i32 %i376, 0
  br i1 %i377, label %bb378, label %bb352.bb382_crit_edge

bb352.bb382_crit_edge:                            ; preds = %bb352
  br label %bb382

bb378:                                            ; preds = %bb352
  %i379 = getelementptr inbounds %struct.bz_stream, ptr %i367, i64 0, i32 7
  %i380 = load i32, ptr %i379, align 8, !tbaa !134
  %i381 = add i32 %i380, 1
  store i32 %i381, ptr %i379, align 8, !tbaa !134
  br label %bb382

bb382:                                            ; preds = %bb352.bb382_crit_edge, %bb378
  %i383 = icmp eq i32 %i373, 0
  br i1 %i383, label %bb904.loopexit7, label %bb382.bb384_crit_edge

bb382.bb384_crit_edge:                            ; preds = %bb382
  br label %bb384

bb384:                                            ; preds = %bb382.bb384_crit_edge, %bb47
  %i385 = phi ptr [ %i39, %bb47 ], [ %i367, %bb382.bb384_crit_edge ]
  %i386 = phi i32 [ %i48, %bb47 ], [ %i366, %bb382.bb384_crit_edge ]
  %i387 = getelementptr inbounds %struct.bz_stream, ptr %i385, i64 0, i32 5
  br label %bb349

bb388:                                            ; preds = %bb349
  %i389 = load i32, ptr %i15, align 4, !tbaa !165
  %i390 = load i32, ptr %i16, align 8, !tbaa !166
  %i391 = add nsw i32 %i390, 1
  %i392 = icmp eq i32 %i389, %i391
  br i1 %i392, label %bb388.bb904.loopexit_crit_edge, label %bb393

bb388.bb904.loopexit_crit_edge:                   ; preds = %bb388
  br label %bb904.loopexit

bb393:                                            ; preds = %bb388
  %i394 = icmp sgt i32 %i389, %i391
  br i1 %i394, label %bb958.loopexit, label %bb395

bb395:                                            ; preds = %bb393
  store i32 1, ptr %i12, align 8, !tbaa !162
  %i396 = load i32, ptr %i17, align 8, !tbaa !167
  %i397 = trunc i32 %i396 to i8
  store i8 %i397, ptr %i13, align 4, !tbaa !163
  %i398 = load i32, ptr %i18, align 4, !tbaa !168
  br label %bb399

bb399:                                            ; preds = %bb399.bb399_crit_edge, %bb395
  %i400 = phi i32 [ 256, %bb395 ], [ %i408, %bb399.bb399_crit_edge ]
  %i401 = phi i32 [ 0, %bb395 ], [ %i409, %bb399.bb399_crit_edge ]
  %i402 = add nsw i32 %i401, %i400
  %i403 = ashr i32 %i402, 1
  %i404 = sext i32 %i403 to i64
  %i405 = getelementptr inbounds i32, ptr %i19, i64 %i404
  %i406 = load i32, ptr %i405, align 4, !tbaa !19
  %i407 = icmp sgt i32 %i406, %i398
  %i408 = select i1 %i407, i32 %i403, i32 %i400
  %i409 = select i1 %i407, i32 %i401, i32 %i403
  %i410 = sub nsw i32 %i408, %i409
  %i411 = icmp eq i32 %i410, 1
  br i1 %i411, label %bb412, label %bb399.bb399_crit_edge, !llvm.loop !160

bb399.bb399_crit_edge:                            ; preds = %bb399
  br label %bb399

bb412:                                            ; preds = %bb399
  %i413 = load ptr, ptr %i20, align 8, !tbaa !169
  %i414 = zext i32 %i398 to i64
  %i415 = getelementptr inbounds i16, ptr %i413, i64 %i414
  %i416 = load i16, ptr %i415, align 2, !tbaa !22
  %i417 = zext i16 %i416 to i32
  %i418 = load ptr, ptr %i21, align 8, !tbaa !170
  %i419 = lshr i32 %i398, 1
  %i420 = zext nneg i32 %i419 to i64
  %i421 = getelementptr inbounds i8, ptr %i418, i64 %i420
  %i422 = load i8, ptr %i421, align 1, !tbaa !21
  %i423 = zext i8 %i422 to i32
  %i424 = shl i32 %i398, 2
  %i425 = and i32 %i424, 4
  %i426 = lshr i32 %i423, %i425
  %i427 = shl nuw nsw i32 %i426, 16
  %i428 = and i32 %i427, 983040
  %i429 = or disjoint i32 %i428, %i417
  store i32 %i429, ptr %i18, align 4, !tbaa !168
  %i430 = add nsw i32 %i389, 1
  store i32 %i430, ptr %i15, align 4, !tbaa !165
  %i431 = icmp eq i32 %i389, %i390
  br i1 %i431, label %bb412.bb436_crit_edge, label %bb432

bb412.bb436_crit_edge:                            ; preds = %bb412
  br label %bb436

bb432:                                            ; preds = %bb412
  %i433 = and i32 %i409, 255
  %i434 = icmp eq i32 %i433, %i396
  br i1 %i434, label %bb439, label %bb435

bb435:                                            ; preds = %bb432
  store i32 %i433, ptr %i17, align 8, !tbaa !167
  br label %bb436

bb436:                                            ; preds = %bb489.bb436_crit_edge, %bb453.bb436_crit_edge, %bb412.bb436_crit_edge, %bb556, %bb510, %bb474, %bb435
  %i437 = load i32, ptr %i387, align 8, !tbaa !143
  %i438 = icmp eq i32 %i437, 0
  br i1 %i438, label %bb904.loopexitsplit, label %bb436.bb349_crit_edge

bb436.bb349_crit_edge:                            ; preds = %bb436
  br label %bb349

bb439:                                            ; preds = %bb432
  store i32 2, ptr %i12, align 8, !tbaa !162
  br label %bb440

bb440:                                            ; preds = %bb440.bb440_crit_edge, %bb439
  %i441 = phi i32 [ 256, %bb439 ], [ %i449, %bb440.bb440_crit_edge ]
  %i442 = phi i32 [ 0, %bb439 ], [ %i450, %bb440.bb440_crit_edge ]
  %i443 = add nsw i32 %i442, %i441
  %i444 = ashr i32 %i443, 1
  %i445 = sext i32 %i444 to i64
  %i446 = getelementptr inbounds i32, ptr %i19, i64 %i445
  %i447 = load i32, ptr %i446, align 4, !tbaa !19
  %i448 = icmp sgt i32 %i447, %i429
  %i449 = select i1 %i448, i32 %i444, i32 %i441
  %i450 = select i1 %i448, i32 %i442, i32 %i444
  %i451 = sub nsw i32 %i449, %i450
  %i452 = icmp eq i32 %i451, 1
  br i1 %i452, label %bb453, label %bb440.bb440_crit_edge, !llvm.loop !160

bb440.bb440_crit_edge:                            ; preds = %bb440
  br label %bb440

bb453:                                            ; preds = %bb440
  %i454 = zext nneg i32 %i429 to i64
  %i455 = getelementptr inbounds i16, ptr %i413, i64 %i454
  %i456 = load i16, ptr %i455, align 2, !tbaa !22
  %i457 = zext i16 %i456 to i32
  %i458 = lshr i32 %i429, 1
  %i459 = zext nneg i32 %i458 to i64
  %i460 = getelementptr inbounds i8, ptr %i418, i64 %i459
  %i461 = load i8, ptr %i460, align 1, !tbaa !21
  %i462 = zext i8 %i461 to i32
  %i463 = shl nuw nsw i32 %i417, 2
  %i464 = and i32 %i463, 4
  %i465 = lshr i32 %i462, %i464
  %i466 = shl nuw nsw i32 %i465, 16
  %i467 = and i32 %i466, 983040
  %i468 = or disjoint i32 %i467, %i457
  store i32 %i468, ptr %i18, align 4, !tbaa !168
  %i469 = add nsw i32 %i389, 2
  store i32 %i469, ptr %i15, align 4, !tbaa !165
  %i470 = icmp eq i32 %i430, %i390
  br i1 %i470, label %bb453.bb436_crit_edge, label %bb471

bb453.bb436_crit_edge:                            ; preds = %bb453
  br label %bb436

bb471:                                            ; preds = %bb453
  %i472 = and i32 %i450, 255
  %i473 = icmp eq i32 %i472, %i396
  br i1 %i473, label %bb475, label %bb474

bb474:                                            ; preds = %bb471
  store i32 %i472, ptr %i17, align 8, !tbaa !167
  br label %bb436

bb475:                                            ; preds = %bb471
  store i32 3, ptr %i12, align 8, !tbaa !162
  br label %bb476

bb476:                                            ; preds = %bb476.bb476_crit_edge, %bb475
  %i477 = phi i32 [ 256, %bb475 ], [ %i485, %bb476.bb476_crit_edge ]
  %i478 = phi i32 [ 0, %bb475 ], [ %i486, %bb476.bb476_crit_edge ]
  %i479 = add nsw i32 %i478, %i477
  %i480 = ashr i32 %i479, 1
  %i481 = sext i32 %i480 to i64
  %i482 = getelementptr inbounds i32, ptr %i19, i64 %i481
  %i483 = load i32, ptr %i482, align 4, !tbaa !19
  %i484 = icmp sgt i32 %i483, %i468
  %i485 = select i1 %i484, i32 %i480, i32 %i477
  %i486 = select i1 %i484, i32 %i478, i32 %i480
  %i487 = sub nsw i32 %i485, %i486
  %i488 = icmp eq i32 %i487, 1
  br i1 %i488, label %bb489, label %bb476.bb476_crit_edge, !llvm.loop !160

bb476.bb476_crit_edge:                            ; preds = %bb476
  br label %bb476

bb489:                                            ; preds = %bb476
  %i490 = zext nneg i32 %i468 to i64
  %i491 = getelementptr inbounds i16, ptr %i413, i64 %i490
  %i492 = load i16, ptr %i491, align 2, !tbaa !22
  %i493 = zext i16 %i492 to i32
  %i494 = lshr i32 %i468, 1
  %i495 = zext nneg i32 %i494 to i64
  %i496 = getelementptr inbounds i8, ptr %i418, i64 %i495
  %i497 = load i8, ptr %i496, align 1, !tbaa !21
  %i498 = zext i8 %i497 to i32
  %i499 = shl nuw nsw i32 %i457, 2
  %i500 = and i32 %i499, 4
  %i501 = lshr i32 %i498, %i500
  %i502 = shl nuw nsw i32 %i501, 16
  %i503 = and i32 %i502, 983040
  %i504 = or disjoint i32 %i503, %i493
  store i32 %i504, ptr %i18, align 4, !tbaa !168
  %i505 = add nsw i32 %i389, 3
  store i32 %i505, ptr %i15, align 4, !tbaa !165
  %i506 = icmp eq i32 %i469, %i390
  br i1 %i506, label %bb489.bb436_crit_edge, label %bb507

bb489.bb436_crit_edge:                            ; preds = %bb489
  br label %bb436

bb507:                                            ; preds = %bb489
  %i508 = and i32 %i486, 255
  %i509 = icmp eq i32 %i508, %i396
  br i1 %i509, label %bb511.preheader, label %bb510

bb511.preheader:                                  ; preds = %bb507
  br label %bb511

bb510:                                            ; preds = %bb507
  store i32 %i508, ptr %i17, align 8, !tbaa !167
  br label %bb436

bb511:                                            ; preds = %bb511.bb511_crit_edge, %bb511.preheader
  %i512 = phi i32 [ %i520, %bb511.bb511_crit_edge ], [ 256, %bb511.preheader ]
  %i513 = phi i32 [ %i521, %bb511.bb511_crit_edge ], [ 0, %bb511.preheader ]
  %i514 = add nsw i32 %i513, %i512
  %i515 = ashr i32 %i514, 1
  %i516 = sext i32 %i515 to i64
  %i517 = getelementptr inbounds i32, ptr %i19, i64 %i516
  %i518 = load i32, ptr %i517, align 4, !tbaa !19
  %i519 = icmp sgt i32 %i518, %i504
  %i520 = select i1 %i519, i32 %i515, i32 %i512
  %i521 = select i1 %i519, i32 %i513, i32 %i515
  %i522 = sub nsw i32 %i520, %i521
  %i523 = icmp eq i32 %i522, 1
  br i1 %i523, label %bb524, label %bb511.bb511_crit_edge, !llvm.loop !160

bb511.bb511_crit_edge:                            ; preds = %bb511
  br label %bb511

bb524:                                            ; preds = %bb511
  %i525 = zext nneg i32 %i504 to i64
  %i526 = getelementptr inbounds i16, ptr %i413, i64 %i525
  %i527 = load i16, ptr %i526, align 2, !tbaa !22
  %i528 = zext i16 %i527 to i32
  %i529 = lshr i32 %i504, 1
  %i530 = zext nneg i32 %i529 to i64
  %i531 = getelementptr inbounds i8, ptr %i418, i64 %i530
  %i532 = load i8, ptr %i531, align 1, !tbaa !21
  %i533 = zext i8 %i532 to i32
  %i534 = shl nuw nsw i32 %i493, 2
  %i535 = and i32 %i534, 4
  %i536 = lshr i32 %i533, %i535
  %i537 = shl nuw nsw i32 %i536, 16
  %i538 = and i32 %i537, 983040
  %i539 = or disjoint i32 %i538, %i528
  store i32 %i539, ptr %i18, align 4, !tbaa !168
  %i540 = add nsw i32 %i389, 4
  store i32 %i540, ptr %i15, align 4, !tbaa !165
  %i541 = and i32 %i521, 255
  %i542 = add nuw nsw i32 %i541, 4
  store i32 %i542, ptr %i12, align 8, !tbaa !162
  br label %bb543

bb543:                                            ; preds = %bb543.bb543_crit_edge, %bb524
  %i544 = phi i32 [ 256, %bb524 ], [ %i552, %bb543.bb543_crit_edge ]
  %i545 = phi i32 [ 0, %bb524 ], [ %i553, %bb543.bb543_crit_edge ]
  %i546 = add nsw i32 %i545, %i544
  %i547 = ashr i32 %i546, 1
  %i548 = sext i32 %i547 to i64
  %i549 = getelementptr inbounds i32, ptr %i19, i64 %i548
  %i550 = load i32, ptr %i549, align 4, !tbaa !19
  %i551 = icmp sgt i32 %i550, %i539
  %i552 = select i1 %i551, i32 %i547, i32 %i544
  %i553 = select i1 %i551, i32 %i545, i32 %i547
  %i554 = sub nsw i32 %i552, %i553
  %i555 = icmp eq i32 %i554, 1
  br i1 %i555, label %bb556, label %bb543.bb543_crit_edge, !llvm.loop !160

bb543.bb543_crit_edge:                            ; preds = %bb543
  br label %bb543

bb556:                                            ; preds = %bb543
  store i32 %i553, ptr %i17, align 8, !tbaa !167
  %i557 = zext nneg i32 %i539 to i64
  %i558 = getelementptr inbounds i16, ptr %i413, i64 %i557
  %i559 = load i16, ptr %i558, align 2, !tbaa !22
  %i560 = zext i16 %i559 to i32
  %i561 = lshr i32 %i539, 1
  %i562 = zext nneg i32 %i561 to i64
  %i563 = getelementptr inbounds i8, ptr %i418, i64 %i562
  %i564 = load i8, ptr %i563, align 1, !tbaa !21
  %i565 = zext i8 %i564 to i32
  %i566 = shl nuw nsw i32 %i528, 2
  %i567 = and i32 %i566, 4
  %i568 = lshr i32 %i565, %i567
  %i569 = shl nuw nsw i32 %i568, 16
  %i570 = and i32 %i569, 983040
  %i571 = or disjoint i32 %i570, %i560
  store i32 %i571, ptr %i18, align 4, !tbaa !168
  %i572 = add nsw i32 %i389, 5
  store i32 %i572, ptr %i15, align 4, !tbaa !165
  br label %bb436

bb573:                                            ; preds = %bb33
  br i1 %i37, label %bb755, label %bb574

bb574:                                            ; preds = %bb573
  %i575 = load ptr, ptr %i3, align 8, !tbaa !151
  %i576 = getelementptr inbounds %struct.bz_stream, ptr %i575, i64 0, i32 5
  %i577 = load i32, ptr %i576, align 8, !tbaa !143
  %i578 = icmp eq i32 %i577, 0
  br i1 %i578, label %bb574.bb904_crit_edge, label %bb579

bb574.bb904_crit_edge:                            ; preds = %bb574
  br label %bb904

bb579:                                            ; preds = %bb574
  %i580 = load i32, ptr %i12, align 8, !tbaa !162
  br label %bb581

bb581:                                            ; preds = %bb753.bb581_crit_edge, %bb579
  %i582 = phi ptr [ %i575, %bb579 ], [ %i738, %bb753.bb581_crit_edge ]
  %i583 = phi i32 [ %i580, %bb579 ], [ %i737, %bb753.bb581_crit_edge ]
  %i584 = icmp eq i32 %i583, 0
  br i1 %i584, label %bb585, label %bb581.bb723_crit_edge

bb581.bb723_crit_edge:                            ; preds = %bb581
  br label %bb723

bb585:                                            ; preds = %bb581
  %i586 = load i32, ptr %i15, align 4, !tbaa !165
  %i587 = load i32, ptr %i16, align 8, !tbaa !166
  %i588 = add nsw i32 %i587, 1
  %i589 = icmp eq i32 %i586, %i588
  br i1 %i589, label %bb585.bb904.loopexit5_crit_edge, label %bb590

bb585.bb904.loopexit5_crit_edge:                  ; preds = %bb585
  br label %bb904.loopexit5

bb590:                                            ; preds = %bb585
  %i591 = icmp sgt i32 %i586, %i588
  br i1 %i591, label %bb958.loopexit6, label %bb592

bb592:                                            ; preds = %bb590
  store i32 1, ptr %i12, align 8, !tbaa !162
  %i593 = load i32, ptr %i17, align 8, !tbaa !167
  %i594 = trunc i32 %i593 to i8
  store i8 %i594, ptr %i13, align 4, !tbaa !163
  %i595 = load ptr, ptr %i24, align 8, !tbaa !173
  %i596 = load i32, ptr %i18, align 4, !tbaa !168
  %i597 = zext i32 %i596 to i64
  %i598 = getelementptr inbounds i32, ptr %i595, i64 %i597
  %i599 = load i32, ptr %i598, align 4, !tbaa !19
  %i600 = lshr i32 %i599, 8
  store i32 %i600, ptr %i18, align 4, !tbaa !168
  %i601 = load i32, ptr %i22, align 8, !tbaa !171
  %i602 = icmp eq i32 %i601, 0
  br i1 %i602, label %bb603, label %bb592.bb611_crit_edge

bb592.bb611_crit_edge:                            ; preds = %bb592
  br label %bb611

bb603:                                            ; preds = %bb592
  %i604 = load i32, ptr %i23, align 4, !tbaa !172
  %i605 = sext i32 %i604 to i64
  %i606 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %i605
  %i607 = load i32, ptr %i606, align 4, !tbaa !19
  %i608 = add nsw i32 %i604, 1
  %i609 = icmp eq i32 %i608, 512
  %i610 = select i1 %i609, i32 0, i32 %i608
  store i32 %i610, ptr %i23, align 4
  br label %bb611

bb611:                                            ; preds = %bb592.bb611_crit_edge, %bb603
  %i612 = phi i32 [ %i607, %bb603 ], [ %i601, %bb592.bb611_crit_edge ]
  %i613 = add nsw i32 %i612, -1
  store i32 %i613, ptr %i22, align 8, !tbaa !171
  %i614 = add nsw i32 %i586, 1
  store i32 %i614, ptr %i15, align 4, !tbaa !165
  %i615 = icmp eq i32 %i586, %i587
  br i1 %i615, label %bb611.bb719_crit_edge, label %bb616

bb611.bb719_crit_edge:                            ; preds = %bb611
  br label %bb719

bb616:                                            ; preds = %bb611
  %i617 = icmp eq i32 %i613, 1
  %i618 = zext i1 %i617 to i32
  %i619 = and i32 %i599, 255
  %i620 = xor i32 %i619, %i618
  %i621 = icmp eq i32 %i620, %i593
  br i1 %i621, label %bb623, label %bb622

bb622:                                            ; preds = %bb616
  store i32 %i620, ptr %i17, align 8, !tbaa !167
  br label %bb719

bb623:                                            ; preds = %bb616
  store i32 2, ptr %i12, align 8, !tbaa !162
  %i624 = zext nneg i32 %i600 to i64
  %i625 = getelementptr inbounds i32, ptr %i595, i64 %i624
  %i626 = load i32, ptr %i625, align 4, !tbaa !19
  %i627 = lshr i32 %i626, 8
  store i32 %i627, ptr %i18, align 4, !tbaa !168
  %i628 = icmp eq i32 %i613, 0
  br i1 %i628, label %bb629, label %bb623.bb637_crit_edge

bb623.bb637_crit_edge:                            ; preds = %bb623
  br label %bb637

bb629:                                            ; preds = %bb623
  %i630 = load i32, ptr %i23, align 4, !tbaa !172
  %i631 = sext i32 %i630 to i64
  %i632 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %i631
  %i633 = load i32, ptr %i632, align 4, !tbaa !19
  %i634 = add nsw i32 %i630, 1
  %i635 = icmp eq i32 %i634, 512
  %i636 = select i1 %i635, i32 0, i32 %i634
  store i32 %i636, ptr %i23, align 4
  br label %bb637

bb637:                                            ; preds = %bb623.bb637_crit_edge, %bb629
  %i638 = phi i32 [ %i633, %bb629 ], [ %i613, %bb623.bb637_crit_edge ]
  %i639 = add nsw i32 %i638, -1
  store i32 %i639, ptr %i22, align 8, !tbaa !171
  %i640 = add nsw i32 %i586, 2
  store i32 %i640, ptr %i15, align 4, !tbaa !165
  %i641 = icmp eq i32 %i614, %i587
  br i1 %i641, label %bb637.bb719_crit_edge, label %bb642

bb637.bb719_crit_edge:                            ; preds = %bb637
  br label %bb719

bb642:                                            ; preds = %bb637
  %i643 = icmp eq i32 %i639, 1
  %i644 = zext i1 %i643 to i32
  %i645 = and i32 %i626, 255
  %i646 = xor i32 %i645, %i644
  %i647 = icmp eq i32 %i646, %i593
  br i1 %i647, label %bb649, label %bb648

bb648:                                            ; preds = %bb642
  store i32 %i646, ptr %i17, align 8, !tbaa !167
  br label %bb719

bb649:                                            ; preds = %bb642
  store i32 3, ptr %i12, align 8, !tbaa !162
  %i650 = zext nneg i32 %i627 to i64
  %i651 = getelementptr inbounds i32, ptr %i595, i64 %i650
  %i652 = load i32, ptr %i651, align 4, !tbaa !19
  %i653 = lshr i32 %i652, 8
  store i32 %i653, ptr %i18, align 4, !tbaa !168
  %i654 = icmp eq i32 %i639, 0
  br i1 %i654, label %bb655, label %bb649.bb663_crit_edge

bb649.bb663_crit_edge:                            ; preds = %bb649
  br label %bb663

bb655:                                            ; preds = %bb649
  %i656 = load i32, ptr %i23, align 4, !tbaa !172
  %i657 = sext i32 %i656 to i64
  %i658 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %i657
  %i659 = load i32, ptr %i658, align 4, !tbaa !19
  %i660 = add nsw i32 %i656, 1
  %i661 = icmp eq i32 %i660, 512
  %i662 = select i1 %i661, i32 0, i32 %i660
  store i32 %i662, ptr %i23, align 4
  br label %bb663

bb663:                                            ; preds = %bb649.bb663_crit_edge, %bb655
  %i664 = phi i32 [ %i659, %bb655 ], [ %i639, %bb649.bb663_crit_edge ]
  %i665 = add nsw i32 %i664, -1
  store i32 %i665, ptr %i22, align 8, !tbaa !171
  %i666 = add nsw i32 %i586, 3
  store i32 %i666, ptr %i15, align 4, !tbaa !165
  %i667 = icmp eq i32 %i640, %i587
  br i1 %i667, label %bb663.bb719_crit_edge, label %bb668

bb663.bb719_crit_edge:                            ; preds = %bb663
  br label %bb719

bb668:                                            ; preds = %bb663
  %i669 = icmp eq i32 %i665, 1
  %i670 = zext i1 %i669 to i32
  %i671 = and i32 %i652, 255
  %i672 = xor i32 %i671, %i670
  %i673 = icmp eq i32 %i672, %i593
  br i1 %i673, label %bb675, label %bb674

bb674:                                            ; preds = %bb668
  store i32 %i672, ptr %i17, align 8, !tbaa !167
  br label %bb719

bb675:                                            ; preds = %bb668
  %i676 = zext nneg i32 %i653 to i64
  %i677 = getelementptr inbounds i32, ptr %i595, i64 %i676
  %i678 = load i32, ptr %i677, align 4, !tbaa !19
  %i679 = lshr i32 %i678, 8
  store i32 %i679, ptr %i18, align 4, !tbaa !168
  %i680 = icmp eq i32 %i665, 0
  br i1 %i680, label %bb681, label %bb675.bb689_crit_edge

bb675.bb689_crit_edge:                            ; preds = %bb675
  br label %bb689

bb681:                                            ; preds = %bb675
  %i682 = load i32, ptr %i23, align 4, !tbaa !172
  %i683 = sext i32 %i682 to i64
  %i684 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %i683
  %i685 = load i32, ptr %i684, align 4, !tbaa !19
  %i686 = add nsw i32 %i682, 1
  %i687 = icmp eq i32 %i686, 512
  %i688 = select i1 %i687, i32 0, i32 %i686
  store i32 %i688, ptr %i23, align 4
  br label %bb689

bb689:                                            ; preds = %bb675.bb689_crit_edge, %bb681
  %i690 = phi i32 [ %i685, %bb681 ], [ %i665, %bb675.bb689_crit_edge ]
  %i691 = add nsw i32 %i690, -1
  store i32 %i691, ptr %i22, align 8, !tbaa !171
  %i692 = icmp eq i32 %i691, 1
  %i693 = zext i1 %i692 to i32
  %i694 = add nsw i32 %i586, 4
  store i32 %i694, ptr %i15, align 4, !tbaa !165
  %i695 = and i32 %i678, 255
  %i696 = xor i32 %i695, %i693
  %i697 = add nuw nsw i32 %i696, 4
  store i32 %i697, ptr %i12, align 8, !tbaa !162
  %i698 = zext nneg i32 %i679 to i64
  %i699 = getelementptr inbounds i32, ptr %i595, i64 %i698
  %i700 = load i32, ptr %i699, align 4, !tbaa !19
  %i701 = and i32 %i700, 255
  store i32 %i701, ptr %i17, align 8, !tbaa !167
  %i702 = lshr i32 %i700, 8
  store i32 %i702, ptr %i18, align 4, !tbaa !168
  %i703 = icmp eq i32 %i691, 0
  br i1 %i703, label %bb704, label %bb689.bb712_crit_edge

bb689.bb712_crit_edge:                            ; preds = %bb689
  br label %bb712

bb704:                                            ; preds = %bb689
  %i705 = load i32, ptr %i23, align 4, !tbaa !172
  %i706 = sext i32 %i705 to i64
  %i707 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %i706
  %i708 = load i32, ptr %i707, align 4, !tbaa !19
  %i709 = add nsw i32 %i705, 1
  %i710 = icmp eq i32 %i709, 512
  %i711 = select i1 %i710, i32 0, i32 %i709
  store i32 %i711, ptr %i23, align 4
  br label %bb712

bb712:                                            ; preds = %bb689.bb712_crit_edge, %bb704
  %i713 = phi i32 [ %i708, %bb704 ], [ %i691, %bb689.bb712_crit_edge ]
  %i714 = add nsw i32 %i713, -1
  store i32 %i714, ptr %i22, align 8, !tbaa !171
  %i715 = icmp eq i32 %i714, 1
  %i716 = zext i1 %i715 to i32
  %i717 = xor i32 %i701, %i716
  store i32 %i717, ptr %i17, align 8, !tbaa !167
  %i718 = add nsw i32 %i586, 5
  store i32 %i718, ptr %i15, align 4, !tbaa !165
  br label %bb719

bb719:                                            ; preds = %bb663.bb719_crit_edge, %bb637.bb719_crit_edge, %bb611.bb719_crit_edge, %bb712, %bb674, %bb648, %bb622
  %i720 = getelementptr inbounds %struct.bz_stream, ptr %i582, i64 0, i32 5
  %i721 = load i32, ptr %i720, align 8, !tbaa !143
  %i722 = icmp eq i32 %i721, 0
  br i1 %i722, label %bb719.bb904.loopexit5split_crit_edge, label %bb719.bb723_crit_edge

bb719.bb723_crit_edge:                            ; preds = %bb719
  br label %bb723

bb719.bb904.loopexit5split_crit_edge:             ; preds = %bb719
  br label %bb904.loopexit5split

bb723:                                            ; preds = %bb719.bb723_crit_edge, %bb581.bb723_crit_edge
  %i724 = load i8, ptr %i13, align 4, !tbaa !163
  %i725 = getelementptr inbounds %struct.bz_stream, ptr %i582, i64 0, i32 4
  %i726 = load ptr, ptr %i725, align 8, !tbaa !144
  store i8 %i724, ptr %i726, align 1, !tbaa !21
  %i727 = load i32, ptr %i14, align 8, !tbaa !164
  %i728 = shl i32 %i727, 8
  %i729 = lshr i32 %i727, 24
  %i730 = zext i8 %i724 to i32
  %i731 = xor i32 %i729, %i730
  %i732 = zext nneg i32 %i731 to i64
  %i733 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %i732
  %i734 = load i32, ptr %i733, align 4, !tbaa !19
  %i735 = xor i32 %i734, %i728
  store i32 %i735, ptr %i14, align 8, !tbaa !164
  %i736 = load i32, ptr %i12, align 8, !tbaa !162
  %i737 = add nsw i32 %i736, -1
  store i32 %i737, ptr %i12, align 8, !tbaa !162
  %i738 = load ptr, ptr %i3, align 8, !tbaa !151
  %i739 = getelementptr inbounds %struct.bz_stream, ptr %i738, i64 0, i32 4
  %i740 = load ptr, ptr %i739, align 8, !tbaa !144
  %i741 = getelementptr inbounds i8, ptr %i740, i64 1
  store ptr %i741, ptr %i739, align 8, !tbaa !144
  %i742 = getelementptr inbounds %struct.bz_stream, ptr %i738, i64 0, i32 5
  %i743 = load i32, ptr %i742, align 8, !tbaa !143
  %i744 = add i32 %i743, -1
  store i32 %i744, ptr %i742, align 8, !tbaa !143
  %i745 = getelementptr inbounds %struct.bz_stream, ptr %i738, i64 0, i32 6
  %i746 = load i32, ptr %i745, align 4, !tbaa !133
  %i747 = add i32 %i746, 1
  store i32 %i747, ptr %i745, align 4, !tbaa !133
  %i748 = icmp eq i32 %i747, 0
  br i1 %i748, label %bb749, label %bb723.bb753_crit_edge

bb723.bb753_crit_edge:                            ; preds = %bb723
  br label %bb753

bb749:                                            ; preds = %bb723
  %i750 = getelementptr inbounds %struct.bz_stream, ptr %i738, i64 0, i32 7
  %i751 = load i32, ptr %i750, align 8, !tbaa !134
  %i752 = add i32 %i751, 1
  store i32 %i752, ptr %i750, align 8, !tbaa !134
  br label %bb753

bb753:                                            ; preds = %bb723.bb753_crit_edge, %bb749
  %i754 = icmp eq i32 %i744, 0
  br i1 %i754, label %bb904.loopexit5splitsplit, label %bb753.bb581_crit_edge

bb753.bb581_crit_edge:                            ; preds = %bb753
  br label %bb581

bb755:                                            ; preds = %bb573
  %i756 = load i32, ptr %i14, align 8, !tbaa !164
  %i757 = load i8, ptr %i13, align 4, !tbaa !163
  %i758 = load i32, ptr %i12, align 8, !tbaa !162
  %i759 = load i32, ptr %i15, align 4, !tbaa !165
  %i760 = load i32, ptr %i17, align 8, !tbaa !167
  %i761 = load ptr, ptr %i24, align 8, !tbaa !173
  %i762 = load i32, ptr %i18, align 4, !tbaa !168
  %i763 = load ptr, ptr %i3, align 8, !tbaa !151
  %i764 = getelementptr inbounds %struct.bz_stream, ptr %i763, i64 0, i32 4
  %i765 = load ptr, ptr %i764, align 8, !tbaa !144
  %i766 = getelementptr inbounds %struct.bz_stream, ptr %i763, i64 0, i32 5
  %i767 = load i32, ptr %i766, align 8, !tbaa !143
  %i768 = load i32, ptr %i16, align 8, !tbaa !166
  %i769 = add nsw i32 %i768, 1
  br label %bb770

bb770:                                            ; preds = %bb877, %bb755
  %i771 = phi i8 [ %i757, %bb755 ], [ %i834, %bb877 ]
  %i772 = phi i32 [ %i758, %bb755 ], [ %i878, %bb877 ]
  %i773 = phi i32 [ %i759, %bb755 ], [ %i879, %bb877 ]
  %i774 = phi i32 [ %i760, %bb755 ], [ %i880, %bb877 ]
  %i775 = phi i32 [ %i756, %bb755 ], [ %i826, %bb877 ]
  %i776 = phi i32 [ %i762, %bb755 ], [ %i881, %bb877 ]
  %i777 = phi ptr [ %i765, %bb755 ], [ %i828, %bb877 ]
  %i778 = phi i32 [ %i767, %bb755 ], [ %i829, %bb877 ]
  %i779 = icmp sgt i32 %i772, 0
  br i1 %i779, label %bb780, label %bb770.bb822_crit_edge

bb770.bb822_crit_edge:                            ; preds = %bb770
  br label %bb822

bb780:                                            ; preds = %bb770
  %i781 = icmp eq i32 %i778, 0
  br i1 %i781, label %bb780.bb882.loopexit3_crit_edge, label %bb782

bb780.bb882.loopexit3_crit_edge:                  ; preds = %bb780
  br label %bb882.loopexit3

bb782:                                            ; preds = %bb780
  %i783 = zext i8 %i771 to i32
  br label %bb784

bb784:                                            ; preds = %bb790.bb784_crit_edge, %bb782
  %i785 = phi i32 [ %i778, %bb782 ], [ %i800, %bb790.bb784_crit_edge ]
  %i786 = phi ptr [ %i777, %bb782 ], [ %i799, %bb790.bb784_crit_edge ]
  %i787 = phi i32 [ %i775, %bb782 ], [ %i797, %bb790.bb784_crit_edge ]
  %i788 = phi i32 [ %i772, %bb782 ], [ %i798, %bb790.bb784_crit_edge ]
  %i789 = icmp eq i32 %i788, 1
  br i1 %i789, label %bb802.loopexit, label %bb790

bb790:                                            ; preds = %bb784
  store i8 %i771, ptr %i786, align 1, !tbaa !21
  %i791 = shl i32 %i787, 8
  %i792 = lshr i32 %i787, 24
  %i793 = xor i32 %i792, %i783
  %i794 = zext nneg i32 %i793 to i64
  %i795 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %i794
  %i796 = load i32, ptr %i795, align 4, !tbaa !19
  %i797 = xor i32 %i796, %i791
  %i798 = add nsw i32 %i788, -1
  %i799 = getelementptr inbounds i8, ptr %i786, i64 1
  %i800 = add i32 %i785, -1
  %i801 = icmp eq i32 %i800, 0
  br i1 %i801, label %bb882.loopexit, label %bb790.bb784_crit_edge

bb790.bb784_crit_edge:                            ; preds = %bb790
  br label %bb784

bb802.loopexit:                                   ; preds = %bb784
  br label %bb802

bb802:                                            ; preds = %bb842.bb802_crit_edge, %bb833.bb802_crit_edge, %bb802.loopexit
  %i803 = phi i8 [ %i834, %bb842.bb802_crit_edge ], [ %i834, %bb833.bb802_crit_edge ], [ %i771, %bb802.loopexit ]
  %i804 = phi i32 [ %i839, %bb842.bb802_crit_edge ], [ %i839, %bb833.bb802_crit_edge ], [ %i773, %bb802.loopexit ]
  %i805 = phi i32 [ %i825, %bb842.bb802_crit_edge ], [ %i840, %bb833.bb802_crit_edge ], [ %i774, %bb802.loopexit ]
  %i806 = phi i32 [ %i826, %bb842.bb802_crit_edge ], [ %i826, %bb833.bb802_crit_edge ], [ %i787, %bb802.loopexit ]
  %i807 = phi i32 [ %i838, %bb842.bb802_crit_edge ], [ %i838, %bb833.bb802_crit_edge ], [ %i776, %bb802.loopexit ]
  %i808 = phi ptr [ %i828, %bb842.bb802_crit_edge ], [ %i828, %bb833.bb802_crit_edge ], [ %i786, %bb802.loopexit ]
  %i809 = phi i32 [ %i829, %bb842.bb802_crit_edge ], [ %i829, %bb833.bb802_crit_edge ], [ %i785, %bb802.loopexit ]
  %i810 = icmp eq i32 %i809, 0
  br i1 %i810, label %bb802.bb882.loopexit3split_crit_edge, label %bb811

bb802.bb882.loopexit3split_crit_edge:             ; preds = %bb802
  br label %bb882.loopexit3split

bb811:                                            ; preds = %bb802
  store i8 %i803, ptr %i808, align 1, !tbaa !21
  %i812 = shl i32 %i806, 8
  %i813 = lshr i32 %i806, 24
  %i814 = zext i8 %i803 to i32
  %i815 = xor i32 %i813, %i814
  %i816 = zext nneg i32 %i815 to i64
  %i817 = getelementptr inbounds [256 x i32], ptr @BZ2_crc32Table, i64 0, i64 %i816
  %i818 = load i32, ptr %i817, align 4, !tbaa !19
  %i819 = xor i32 %i818, %i812
  %i820 = getelementptr inbounds i8, ptr %i808, i64 1
  %i821 = add i32 %i809, -1
  br label %bb822

bb822:                                            ; preds = %bb770.bb822_crit_edge, %bb811
  %i823 = phi i8 [ %i803, %bb811 ], [ %i771, %bb770.bb822_crit_edge ]
  %i824 = phi i32 [ %i804, %bb811 ], [ %i773, %bb770.bb822_crit_edge ]
  %i825 = phi i32 [ %i805, %bb811 ], [ %i774, %bb770.bb822_crit_edge ]
  %i826 = phi i32 [ %i819, %bb811 ], [ %i775, %bb770.bb822_crit_edge ]
  %i827 = phi i32 [ %i807, %bb811 ], [ %i776, %bb770.bb822_crit_edge ]
  %i828 = phi ptr [ %i820, %bb811 ], [ %i777, %bb770.bb822_crit_edge ]
  %i829 = phi i32 [ %i821, %bb811 ], [ %i778, %bb770.bb822_crit_edge ]
  %i830 = icmp sgt i32 %i824, %i769
  br i1 %i830, label %bb958.loopexit4, label %bb831

bb831:                                            ; preds = %bb822
  %i832 = icmp eq i32 %i824, %i769
  br i1 %i832, label %bb882.loopexit3splitsplit, label %bb833

bb833:                                            ; preds = %bb831
  %i834 = trunc i32 %i825 to i8
  %i835 = zext i32 %i827 to i64
  %i836 = getelementptr inbounds i32, ptr %i761, i64 %i835
  %i837 = load i32, ptr %i836, align 4, !tbaa !19
  %i838 = lshr i32 %i837, 8
  %i839 = add nsw i32 %i824, 1
  %i840 = and i32 %i837, 255
  %i841 = icmp eq i32 %i840, %i825
  br i1 %i841, label %bb842, label %bb833.bb802_crit_edge

bb833.bb802_crit_edge:                            ; preds = %bb833
  br label %bb802

bb842:                                            ; preds = %bb833
  %i843 = icmp eq i32 %i824, %i768
  br i1 %i843, label %bb842.bb802_crit_edge, label %bb844

bb842.bb802_crit_edge:                            ; preds = %bb842
  br label %bb802

bb844:                                            ; preds = %bb842
  %i845 = zext nneg i32 %i838 to i64
  %i846 = getelementptr inbounds i32, ptr %i761, i64 %i845
  %i847 = load i32, ptr %i846, align 4, !tbaa !19
  %i848 = lshr i32 %i847, 8
  %i849 = add nsw i32 %i824, 2
  %i850 = icmp eq i32 %i849, %i769
  br i1 %i850, label %bb844.bb877_crit_edge, label %bb851

bb844.bb877_crit_edge:                            ; preds = %bb844
  br label %bb877

bb851:                                            ; preds = %bb844
  %i852 = and i32 %i847, 255
  %i853 = icmp eq i32 %i852, %i825
  br i1 %i853, label %bb854, label %bb851.bb877_crit_edge

bb851.bb877_crit_edge:                            ; preds = %bb851
  br label %bb877

bb854:                                            ; preds = %bb851
  %i855 = zext nneg i32 %i848 to i64
  %i856 = getelementptr inbounds i32, ptr %i761, i64 %i855
  %i857 = load i32, ptr %i856, align 4, !tbaa !19
  %i858 = lshr i32 %i857, 8
  %i859 = add nsw i32 %i824, 3
  %i860 = icmp eq i32 %i859, %i769
  br i1 %i860, label %bb854.bb877_crit_edge, label %bb861

bb854.bb877_crit_edge:                            ; preds = %bb854
  br label %bb877

bb861:                                            ; preds = %bb854
  %i862 = and i32 %i857, 255
  %i863 = icmp eq i32 %i862, %i825
  br i1 %i863, label %bb864, label %bb861.bb877_crit_edge

bb861.bb877_crit_edge:                            ; preds = %bb861
  br label %bb877

bb864:                                            ; preds = %bb861
  %i865 = zext nneg i32 %i858 to i64
  %i866 = getelementptr inbounds i32, ptr %i761, i64 %i865
  %i867 = load i32, ptr %i866, align 4, !tbaa !19
  %i868 = lshr i32 %i867, 8
  %i869 = and i32 %i867, 255
  %i870 = add nuw nsw i32 %i869, 4
  %i871 = zext nneg i32 %i868 to i64
  %i872 = getelementptr inbounds i32, ptr %i761, i64 %i871
  %i873 = load i32, ptr %i872, align 4, !tbaa !19
  %i874 = and i32 %i873, 255
  %i875 = lshr i32 %i873, 8
  %i876 = add nsw i32 %i824, 5
  br label %bb877

bb877:                                            ; preds = %bb861.bb877_crit_edge, %bb854.bb877_crit_edge, %bb851.bb877_crit_edge, %bb844.bb877_crit_edge, %bb864
  %i878 = phi i32 [ %i870, %bb864 ], [ 3, %bb861.bb877_crit_edge ], [ 3, %bb854.bb877_crit_edge ], [ 2, %bb851.bb877_crit_edge ], [ 2, %bb844.bb877_crit_edge ]
  %i879 = phi i32 [ %i876, %bb864 ], [ %i859, %bb861.bb877_crit_edge ], [ %i769, %bb854.bb877_crit_edge ], [ %i849, %bb851.bb877_crit_edge ], [ %i769, %bb844.bb877_crit_edge ]
  %i880 = phi i32 [ %i874, %bb864 ], [ %i862, %bb861.bb877_crit_edge ], [ %i825, %bb854.bb877_crit_edge ], [ %i852, %bb851.bb877_crit_edge ], [ %i825, %bb844.bb877_crit_edge ]
  %i881 = phi i32 [ %i875, %bb864 ], [ %i858, %bb861.bb877_crit_edge ], [ %i858, %bb854.bb877_crit_edge ], [ %i848, %bb851.bb877_crit_edge ], [ %i848, %bb844.bb877_crit_edge ]
  br label %bb770

bb882.loopexit:                                   ; preds = %bb790
  br label %bb882

bb882.loopexit3splitsplit:                        ; preds = %bb831
  br label %bb882.loopexit3split

bb882.loopexit3split:                             ; preds = %bb882.loopexit3splitsplit, %bb802.bb882.loopexit3split_crit_edge
  %i883.ph.ph = phi i8 [ %i803, %bb802.bb882.loopexit3split_crit_edge ], [ %i823, %bb882.loopexit3splitsplit ]
  %i884.ph.ph = phi i32 [ 1, %bb802.bb882.loopexit3split_crit_edge ], [ 0, %bb882.loopexit3splitsplit ]
  %i885.ph.ph = phi i32 [ %i804, %bb802.bb882.loopexit3split_crit_edge ], [ %i769, %bb882.loopexit3splitsplit ]
  %i886.ph.ph = phi i32 [ %i805, %bb802.bb882.loopexit3split_crit_edge ], [ %i825, %bb882.loopexit3splitsplit ]
  %i887.ph.ph = phi i32 [ %i806, %bb802.bb882.loopexit3split_crit_edge ], [ %i826, %bb882.loopexit3splitsplit ]
  %i888.ph.ph = phi i32 [ %i807, %bb802.bb882.loopexit3split_crit_edge ], [ %i827, %bb882.loopexit3splitsplit ]
  %i889.ph.ph = phi ptr [ %i808, %bb802.bb882.loopexit3split_crit_edge ], [ %i828, %bb882.loopexit3splitsplit ]
  %i890.ph.ph = phi i32 [ 0, %bb802.bb882.loopexit3split_crit_edge ], [ %i829, %bb882.loopexit3splitsplit ]
  br label %bb882.loopexit3

bb882.loopexit3:                                  ; preds = %bb882.loopexit3split, %bb780.bb882.loopexit3_crit_edge
  %i883.ph = phi i8 [ %i771, %bb780.bb882.loopexit3_crit_edge ], [ %i883.ph.ph, %bb882.loopexit3split ]
  %i884.ph = phi i32 [ %i772, %bb780.bb882.loopexit3_crit_edge ], [ %i884.ph.ph, %bb882.loopexit3split ]
  %i885.ph = phi i32 [ %i773, %bb780.bb882.loopexit3_crit_edge ], [ %i885.ph.ph, %bb882.loopexit3split ]
  %i886.ph = phi i32 [ %i774, %bb780.bb882.loopexit3_crit_edge ], [ %i886.ph.ph, %bb882.loopexit3split ]
  %i887.ph = phi i32 [ %i775, %bb780.bb882.loopexit3_crit_edge ], [ %i887.ph.ph, %bb882.loopexit3split ]
  %i888.ph = phi i32 [ %i776, %bb780.bb882.loopexit3_crit_edge ], [ %i888.ph.ph, %bb882.loopexit3split ]
  %i889.ph = phi ptr [ %i777, %bb780.bb882.loopexit3_crit_edge ], [ %i889.ph.ph, %bb882.loopexit3split ]
  %i890.ph = phi i32 [ 0, %bb780.bb882.loopexit3_crit_edge ], [ %i890.ph.ph, %bb882.loopexit3split ]
  br label %bb882

bb882:                                            ; preds = %bb882.loopexit3, %bb882.loopexit
  %i883 = phi i8 [ %i771, %bb882.loopexit ], [ %i883.ph, %bb882.loopexit3 ]
  %i884 = phi i32 [ %i798, %bb882.loopexit ], [ %i884.ph, %bb882.loopexit3 ]
  %i885 = phi i32 [ %i773, %bb882.loopexit ], [ %i885.ph, %bb882.loopexit3 ]
  %i886 = phi i32 [ %i774, %bb882.loopexit ], [ %i886.ph, %bb882.loopexit3 ]
  %i887 = phi i32 [ %i797, %bb882.loopexit ], [ %i887.ph, %bb882.loopexit3 ]
  %i888 = phi i32 [ %i776, %bb882.loopexit ], [ %i888.ph, %bb882.loopexit3 ]
  %i889 = phi ptr [ %i799, %bb882.loopexit ], [ %i889.ph, %bb882.loopexit3 ]
  %i890 = phi i32 [ 0, %bb882.loopexit ], [ %i890.ph, %bb882.loopexit3 ]
  %i891 = load ptr, ptr %i3, align 8, !tbaa !151
  %i892 = getelementptr inbounds %struct.bz_stream, ptr %i891, i64 0, i32 6
  %i893 = load i32, ptr %i892, align 4, !tbaa !133
  %i894 = sub i32 %i767, %i890
  %i895 = add i32 %i893, %i894
  store i32 %i895, ptr %i892, align 4, !tbaa !133
  %i896 = icmp ult i32 %i895, %i893
  br i1 %i896, label %bb897, label %bb882.bb901_crit_edge

bb882.bb901_crit_edge:                            ; preds = %bb882
  br label %bb901

bb897:                                            ; preds = %bb882
  %i898 = getelementptr inbounds %struct.bz_stream, ptr %i891, i64 0, i32 7
  %i899 = load i32, ptr %i898, align 8, !tbaa !134
  %i900 = add i32 %i899, 1
  store i32 %i900, ptr %i898, align 8, !tbaa !134
  br label %bb901

bb901:                                            ; preds = %bb882.bb901_crit_edge, %bb897
  store i32 %i887, ptr %i14, align 8, !tbaa !164
  store i8 %i883, ptr %i13, align 4, !tbaa !163
  store i32 %i884, ptr %i12, align 8, !tbaa !162
  store i32 %i885, ptr %i15, align 4, !tbaa !165
  store i32 %i886, ptr %i17, align 8, !tbaa !167
  store ptr %i761, ptr %i24, align 8, !tbaa !173
  store i32 %i888, ptr %i18, align 4, !tbaa !168
  %i902 = getelementptr inbounds %struct.bz_stream, ptr %i891, i64 0, i32 4
  store ptr %i889, ptr %i902, align 8, !tbaa !144
  %i903 = getelementptr inbounds %struct.bz_stream, ptr %i891, i64 0, i32 5
  store i32 %i890, ptr %i903, align 8, !tbaa !143
  br label %bb904

bb904.loopexitsplit:                              ; preds = %bb436
  br label %bb904.loopexit

bb904.loopexit:                                   ; preds = %bb904.loopexitsplit, %bb388.bb904.loopexit_crit_edge
  br label %bb904

bb904.loopexit1split:                             ; preds = %bb152
  br label %bb904.loopexit1

bb904.loopexit1:                                  ; preds = %bb904.loopexit1split, %bb88.bb904.loopexit1_crit_edge
  br label %bb904

bb904.loopexit5splitsplit:                        ; preds = %bb753
  br label %bb904.loopexit5split

bb904.loopexit5split:                             ; preds = %bb904.loopexit5splitsplit, %bb719.bb904.loopexit5split_crit_edge
  br label %bb904.loopexit5

bb904.loopexit5:                                  ; preds = %bb904.loopexit5split, %bb585.bb904.loopexit5_crit_edge
  br label %bb904

bb904.loopexit7:                                  ; preds = %bb382
  br label %bb904

bb904.loopexit8:                                  ; preds = %bb82
  br label %bb904

bb904:                                            ; preds = %bb574.bb904_crit_edge, %bb46.bb904_crit_edge, %bb43.bb904_crit_edge, %bb904.loopexit8, %bb904.loopexit7, %bb904.loopexit5, %bb904.loopexit1, %bb904.loopexit, %bb901
  %i905 = load i32, ptr %i15, align 4, !tbaa !165
  %i906 = load i32, ptr %i16, align 8, !tbaa !166
  %i907 = add nsw i32 %i906, 1
  %i908 = icmp eq i32 %i905, %i907
  br i1 %i908, label %bb909, label %bb904.bb958.loopexit10_crit_edge

bb904.bb958.loopexit10_crit_edge:                 ; preds = %bb904
  br label %bb958.loopexit10

bb909:                                            ; preds = %bb904
  %i910 = load i32, ptr %i12, align 8, !tbaa !162
  %i911 = icmp eq i32 %i910, 0
  br i1 %i911, label %bb912, label %bb909.bb958.loopexit10split_crit_edge

bb909.bb958.loopexit10split_crit_edge:            ; preds = %bb909
  br label %bb958.loopexit10split

bb912:                                            ; preds = %bb909
  %i913 = load i32, ptr %i14, align 8, !tbaa !164
  %i914 = xor i32 %i913, -1
  store i32 %i914, ptr %i14, align 8, !tbaa !164
  %i915 = load i32, ptr %i25, align 4, !tbaa !159
  %i916 = icmp sgt i32 %i915, 2
  br i1 %i916, label %bb917, label %bb912.bb922_crit_edge

bb912.bb922_crit_edge:                            ; preds = %bb912
  br label %bb922

bb917:                                            ; preds = %bb912
  %i918 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i919 = load i32, ptr %i26, align 8, !tbaa !174
  %i920 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i918, ptr noundef nonnull @.str.2.61, i32 noundef %i919, i32 noundef %i914) #32
  %i921 = load i32, ptr %i25, align 4, !tbaa !159
  br label %bb922

bb922:                                            ; preds = %bb912.bb922_crit_edge, %bb917
  %i923 = phi i32 [ %i921, %bb917 ], [ %i915, %bb912.bb922_crit_edge ]
  %i924 = icmp sgt i32 %i923, 1
  br i1 %i924, label %bb925, label %bb922.bb928_crit_edge

bb922.bb928_crit_edge:                            ; preds = %bb922
  br label %bb928

bb925:                                            ; preds = %bb922
  %i926 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i927 = tail call i32 @fputc(i32 93, ptr %i926)
  br label %bb928

bb928:                                            ; preds = %bb922.bb928_crit_edge, %bb925
  %i929 = load i32, ptr %i14, align 8, !tbaa !164
  %i930 = load i32, ptr %i26, align 8, !tbaa !174
  %i931 = icmp eq i32 %i929, %i930
  br i1 %i931, label %bb932, label %bb928.bb958.loopexit10splitsplit_crit_edge

bb928.bb958.loopexit10splitsplit_crit_edge:       ; preds = %bb928
  br label %bb958.loopexit10splitsplit

bb932:                                            ; preds = %bb928
  %i933 = load i32, ptr %i27, align 4, !tbaa !156
  %i934 = tail call i32 @llvm.fshl.i32(i32 %i933, i32 %i933, i32 1)
  %i935 = xor i32 %i934, %i929
  store i32 %i935, ptr %i27, align 4, !tbaa !156
  store i32 14, ptr %i9, align 8, !tbaa !153
  br label %bb937

bb936:                                            ; preds = %bb32
  br i1 %i31, label %bb937.loopexit, label %bb936.bb32_crit_edge

bb936.bb32_crit_edge:                             ; preds = %bb936
  br label %bb32

bb937.loopexit:                                   ; preds = %bb936
  br label %bb937

bb937:                                            ; preds = %bb937.loopexit, %bb932
  %i938 = tail call i32 @BZ2_decompress(ptr noundef nonnull %i3) #31
  %i939 = icmp eq i32 %i938, 4
  br i1 %i939, label %bb940, label %bb955

bb940:                                            ; preds = %bb937
  %i941 = load i32, ptr %i25, align 4, !tbaa !159
  %i942 = icmp sgt i32 %i941, 2
  br i1 %i942, label %bb943, label %bb940.bb949_crit_edge

bb940.bb949_crit_edge:                            ; preds = %bb940
  br label %bb949

bb943:                                            ; preds = %bb940
  %i944 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i945 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 24
  %i946 = load i32, ptr %i945, align 4, !tbaa !175
  %i947 = load i32, ptr %i27, align 4, !tbaa !156
  %i948 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i944, ptr noundef nonnull @.str.4.62, i32 noundef %i946, i32 noundef %i947) #32
  br label %bb949

bb949:                                            ; preds = %bb940.bb949_crit_edge, %bb943
  %i950 = load i32, ptr %i27, align 4, !tbaa !156
  %i951 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 24
  %i952 = load i32, ptr %i951, align 4, !tbaa !175
  %i953 = icmp eq i32 %i950, %i952
  %i954 = select i1 %i953, i32 4, i32 -4
  br label %bb958

bb955:                                            ; preds = %bb937
  %i956 = load i32, ptr %i9, align 8, !tbaa !153
  %i957 = icmp eq i32 %i956, 2
  br i1 %i957, label %bb955.bb29_crit_edge, label %bb958.loopexit10splitsplitsplit

bb955.bb29_crit_edge:                             ; preds = %bb955
  br label %bb29

bb958.loopexit:                                   ; preds = %bb393
  br label %bb958

bb958.loopexit2:                                  ; preds = %bb93
  br label %bb958

bb958.loopexit4:                                  ; preds = %bb822
  br label %bb958

bb958.loopexit6:                                  ; preds = %bb590
  br label %bb958

bb958.loopexit9:                                  ; preds = %bb32
  br label %bb958

bb958.loopexit10splitsplitsplit:                  ; preds = %bb955
  br label %bb958.loopexit10splitsplit

bb958.loopexit10splitsplit:                       ; preds = %bb958.loopexit10splitsplitsplit, %bb928.bb958.loopexit10splitsplit_crit_edge
  %i959.ph.ph.ph = phi i32 [ -4, %bb928.bb958.loopexit10splitsplit_crit_edge ], [ %i938, %bb958.loopexit10splitsplitsplit ]
  br label %bb958.loopexit10split

bb958.loopexit10split:                            ; preds = %bb958.loopexit10splitsplit, %bb909.bb958.loopexit10split_crit_edge
  %i959.ph.ph = phi i32 [ 0, %bb909.bb958.loopexit10split_crit_edge ], [ %i959.ph.ph.ph, %bb958.loopexit10splitsplit ]
  br label %bb958.loopexit10

bb958.loopexit10:                                 ; preds = %bb958.loopexit10split, %bb904.bb958.loopexit10_crit_edge
  %i959.ph = phi i32 [ 0, %bb904.bb958.loopexit10_crit_edge ], [ %i959.ph.ph, %bb958.loopexit10split ]
  br label %bb958

bb958:                                            ; preds = %bb5.bb958_crit_edge, %bb1.bb958_crit_edge, %bb.bb958_crit_edge, %bb958.loopexit10, %bb958.loopexit9, %bb958.loopexit6, %bb958.loopexit4, %bb958.loopexit2, %bb958.loopexit, %bb949
  %i959 = phi i32 [ -2, %bb.bb958_crit_edge ], [ -2, %bb1.bb958_crit_edge ], [ -2, %bb5.bb958_crit_edge ], [ %i954, %bb949 ], [ -4, %bb958.loopexit ], [ -4, %bb958.loopexit2 ], [ -4, %bb958.loopexit4 ], [ -4, %bb958.loopexit6 ], [ -1, %bb958.loopexit9 ], [ %i959.ph, %bb958.loopexit10 ]
  ret i32 %i959
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @BZ2_bzDecompressEnd(ptr noundef %arg) local_unnamed_addr #0 {
bb:
  %i = icmp eq ptr %arg, null
  br i1 %i, label %bb.bb41_crit_edge, label %bb1

bb.bb41_crit_edge:                                ; preds = %bb
  br label %bb41

bb1:                                              ; preds = %bb
  %i2 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 8
  %i3 = load ptr, ptr %i2, align 8, !tbaa !130
  %i4 = icmp eq ptr %i3, null
  br i1 %i4, label %bb1.bb41_crit_edge, label %bb5

bb1.bb41_crit_edge:                               ; preds = %bb1
  br label %bb41

bb5:                                              ; preds = %bb1
  %i6 = load ptr, ptr %i3, align 8, !tbaa !151
  %i7 = icmp eq ptr %i6, %arg
  br i1 %i7, label %bb8, label %bb5.bb41_crit_edge

bb5.bb41_crit_edge:                               ; preds = %bb5
  br label %bb41

bb8:                                              ; preds = %bb5
  %i9 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 20
  %i10 = load ptr, ptr %i9, align 8, !tbaa !173
  %i11 = icmp eq ptr %i10, null
  br i1 %i11, label %bb8.bb17_crit_edge, label %bb12

bb8.bb17_crit_edge:                               ; preds = %bb8
  br label %bb17

bb12:                                             ; preds = %bb8
  %i13 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 10
  %i14 = load ptr, ptr %i13, align 8, !tbaa !120
  %i15 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 11
  %i16 = load ptr, ptr %i15, align 8, !tbaa !121
  tail call void %i14(ptr noundef %i16, ptr noundef nonnull %i10) #31
  br label %bb17

bb17:                                             ; preds = %bb8.bb17_crit_edge, %bb12
  %i18 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 21
  %i19 = load ptr, ptr %i18, align 8, !tbaa !169
  %i20 = icmp eq ptr %i19, null
  br i1 %i20, label %bb17.bb26_crit_edge, label %bb21

bb17.bb26_crit_edge:                              ; preds = %bb17
  br label %bb26

bb21:                                             ; preds = %bb17
  %i22 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 10
  %i23 = load ptr, ptr %i22, align 8, !tbaa !120
  %i24 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 11
  %i25 = load ptr, ptr %i24, align 8, !tbaa !121
  tail call void %i23(ptr noundef %i25, ptr noundef nonnull %i19) #31
  br label %bb26

bb26:                                             ; preds = %bb17.bb26_crit_edge, %bb21
  %i27 = getelementptr inbounds %struct.DState, ptr %i3, i64 0, i32 22
  %i28 = load ptr, ptr %i27, align 8, !tbaa !170
  %i29 = icmp eq ptr %i28, null
  br i1 %i29, label %bb26.bb35_crit_edge, label %bb30

bb26.bb35_crit_edge:                              ; preds = %bb26
  br label %bb35

bb30:                                             ; preds = %bb26
  %i31 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 10
  %i32 = load ptr, ptr %i31, align 8, !tbaa !120
  %i33 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 11
  %i34 = load ptr, ptr %i33, align 8, !tbaa !121
  tail call void %i32(ptr noundef %i34, ptr noundef nonnull %i28) #31
  br label %bb35

bb35:                                             ; preds = %bb26.bb35_crit_edge, %bb30
  %i36 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 10
  %i37 = load ptr, ptr %i36, align 8, !tbaa !120
  %i38 = getelementptr inbounds %struct.bz_stream, ptr %arg, i64 0, i32 11
  %i39 = load ptr, ptr %i38, align 8, !tbaa !121
  %i40 = load ptr, ptr %i2, align 8, !tbaa !130
  tail call void %i37(ptr noundef %i39, ptr noundef %i40) #31
  store ptr null, ptr %i2, align 8, !tbaa !130
  br label %bb41

bb41:                                             ; preds = %bb5.bb41_crit_edge, %bb1.bb41_crit_edge, %bb.bb41_crit_edge, %bb35
  %i42 = phi i32 [ 0, %bb35 ], [ -2, %bb.bb41_crit_edge ], [ -2, %bb1.bb41_crit_edge ], [ -2, %bb5.bb41_crit_edge ]
  ret i32 %i42
}

; Function Attrs: nounwind uwtable
define dso_local noundef ptr @BZ2_bzWriteOpen(ptr noundef writeonly %arg, ptr noundef %arg1, i32 noundef %arg2, i32 noundef %arg3, i32 noundef %arg4) local_unnamed_addr #0 {
bb:
  %i = icmp eq ptr %arg, null
  br i1 %i, label %bb.bb6_crit_edge, label %bb5

bb.bb6_crit_edge:                                 ; preds = %bb
  br label %bb6

bb5:                                              ; preds = %bb
  store i32 0, ptr %arg, align 4, !tbaa !19
  br label %bb6

bb6:                                              ; preds = %bb.bb6_crit_edge, %bb5
  %i7 = icmp eq ptr %arg1, null
  %i8 = add i32 %arg2, -10
  %i9 = icmp ult i32 %i8, -9
  %i10 = or i1 %i7, %i9
  %i11 = icmp ugt i32 %arg4, 250
  %i12 = or i1 %i10, %i11
  %i13 = icmp ugt i32 %arg3, 4
  %i14 = or i1 %i13, %i12
  br i1 %i14, label %bb15, label %bb17

bb15:                                             ; preds = %bb6
  br i1 %i, label %bb15.bb45_crit_edge, label %bb16

bb15.bb45_crit_edge:                              ; preds = %bb15
  br label %bb45

bb16:                                             ; preds = %bb15
  store i32 -2, ptr %arg, align 4, !tbaa !19
  br label %bb45

bb17:                                             ; preds = %bb6
  %i18 = tail call i32 @ferror(ptr noundef nonnull %arg1) #31
  %i19 = icmp eq i32 %i18, 0
  br i1 %i19, label %bb22, label %bb20

bb20:                                             ; preds = %bb17
  br i1 %i, label %bb20.bb45_crit_edge, label %bb21

bb20.bb45_crit_edge:                              ; preds = %bb20
  br label %bb45

bb21:                                             ; preds = %bb20
  store i32 -6, ptr %arg, align 4, !tbaa !19
  br label %bb45

bb22:                                             ; preds = %bb17
  %i23 = tail call noalias dereferenceable_or_null(5104) ptr @malloc(i64 noundef 5104) #37
  %i24 = icmp eq ptr %i23, null
  br i1 %i24, label %bb25, label %bb27

bb25:                                             ; preds = %bb22
  br i1 %i, label %bb25.bb45_crit_edge, label %bb26

bb25.bb45_crit_edge:                              ; preds = %bb25
  br label %bb45

bb26:                                             ; preds = %bb25
  store i32 -3, ptr %arg, align 4, !tbaa !19
  br label %bb45

bb27:                                             ; preds = %bb22
  br i1 %i, label %bb27.bb29_crit_edge, label %bb28

bb27.bb29_crit_edge:                              ; preds = %bb27
  br label %bb29

bb28:                                             ; preds = %bb27
  store i32 0, ptr %arg, align 4, !tbaa !19
  br label %bb29

bb29:                                             ; preds = %bb27.bb29_crit_edge, %bb28
  %i30 = getelementptr inbounds %struct.bzFile, ptr %i23, i64 0, i32 5
  store i32 0, ptr %i30, align 8, !tbaa !176
  %i31 = getelementptr inbounds %struct.bzFile, ptr %i23, i64 0, i32 6
  store i8 0, ptr %i31, align 4, !tbaa !178
  %i32 = getelementptr inbounds %struct.bzFile, ptr %i23, i64 0, i32 2
  store i32 0, ptr %i32, align 8, !tbaa !179
  store ptr %arg1, ptr %i23, align 8, !tbaa !180
  %i33 = getelementptr inbounds %struct.bzFile, ptr %i23, i64 0, i32 3
  store i8 1, ptr %i33, align 4, !tbaa !181
  %i34 = getelementptr inbounds %struct.bzFile, ptr %i23, i64 0, i32 4
  %i35 = getelementptr inbounds %struct.bzFile, ptr %i23, i64 0, i32 4, i32 9
  %i36 = icmp eq i32 %arg4, 0
  %i37 = select i1 %i36, i32 30, i32 %arg4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %i35, i8 0, i64 24, i1 false)
  %i38 = tail call i32 @BZ2_bzCompressInit(ptr noundef nonnull %i34, i32 noundef %arg2, i32 noundef %arg3, i32 noundef %i37), !range !182
  %i39 = icmp eq i32 %i38, 0
  br i1 %i39, label %bb43, label %bb40

bb40:                                             ; preds = %bb29
  br i1 %i, label %bb40.bb42_crit_edge, label %bb41

bb40.bb42_crit_edge:                              ; preds = %bb40
  br label %bb42

bb41:                                             ; preds = %bb40
  store i32 %i38, ptr %arg, align 4, !tbaa !19
  br label %bb42

bb42:                                             ; preds = %bb40.bb42_crit_edge, %bb41
  tail call void @free(ptr noundef nonnull %i23) #31
  br label %bb45

bb43:                                             ; preds = %bb29
  %i44 = getelementptr inbounds %struct.bzFile, ptr %i23, i64 0, i32 4, i32 1
  store i32 0, ptr %i44, align 8, !tbaa !183
  store i8 1, ptr %i31, align 4, !tbaa !178
  br label %bb45

bb45:                                             ; preds = %bb25.bb45_crit_edge, %bb20.bb45_crit_edge, %bb15.bb45_crit_edge, %bb43, %bb42, %bb26, %bb21, %bb16
  %i46 = phi ptr [ null, %bb42 ], [ %i23, %bb43 ], [ null, %bb15.bb45_crit_edge ], [ null, %bb16 ], [ null, %bb20.bb45_crit_edge ], [ null, %bb21 ], [ null, %bb25.bb45_crit_edge ], [ null, %bb26 ]
  ret ptr %i46
}

; Function Attrs: nounwind uwtable
define dso_local void @BZ2_bzWrite(ptr noundef writeonly %arg, ptr noundef %arg1, ptr noundef %arg2, i32 noundef %arg3) local_unnamed_addr #0 {
bb:
  %i = icmp eq ptr %arg, null
  br i1 %i, label %bb.bb5_crit_edge, label %bb4

bb.bb5_crit_edge:                                 ; preds = %bb
  br label %bb5

bb4:                                              ; preds = %bb
  store i32 0, ptr %arg, align 4, !tbaa !19
  br label %bb5

bb5:                                              ; preds = %bb.bb5_crit_edge, %bb4
  %i6 = icmp eq ptr %arg1, null
  br i1 %i6, label %bb5.bb12_crit_edge, label %bb7

bb5.bb12_crit_edge:                               ; preds = %bb5
  br label %bb12

bb7:                                              ; preds = %bb5
  %i8 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 5
  store i32 0, ptr %i8, align 8, !tbaa !176
  %i9 = icmp eq ptr %arg2, null
  %i10 = icmp slt i32 %arg3, 0
  %i11 = or i1 %i9, %i10
  br i1 %i11, label %bb7.bb12_crit_edge, label %bb17

bb7.bb12_crit_edge:                               ; preds = %bb7
  br label %bb12

bb12:                                             ; preds = %bb7.bb12_crit_edge, %bb5.bb12_crit_edge
  br i1 %i, label %bb12.bb14_crit_edge, label %bb13

bb12.bb14_crit_edge:                              ; preds = %bb12
  br label %bb14

bb13:                                             ; preds = %bb12
  store i32 -2, ptr %arg, align 4, !tbaa !19
  br label %bb14

bb14:                                             ; preds = %bb12.bb14_crit_edge, %bb13
  br i1 %i6, label %bb14.bb83_crit_edge, label %bb15

bb14.bb83_crit_edge:                              ; preds = %bb14
  br label %bb83

bb15:                                             ; preds = %bb14
  %i16 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 5
  store i32 -2, ptr %i16, align 8, !tbaa !176
  br label %bb83

bb17:                                             ; preds = %bb7
  %i18 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 3
  %i19 = load i8, ptr %i18, align 4, !tbaa !181
  %i20 = icmp eq i8 %i19, 0
  br i1 %i20, label %bb21, label %bb24

bb21:                                             ; preds = %bb17
  br i1 %i, label %bb21.bb23_crit_edge, label %bb22

bb21.bb23_crit_edge:                              ; preds = %bb21
  br label %bb23

bb22:                                             ; preds = %bb21
  store i32 -1, ptr %arg, align 4, !tbaa !19
  br label %bb23

bb23:                                             ; preds = %bb21.bb23_crit_edge, %bb22
  store i32 -1, ptr %i8, align 8, !tbaa !176
  br label %bb83

bb24:                                             ; preds = %bb17
  %i25 = load ptr, ptr %arg1, align 8, !tbaa !180
  %i26 = tail call i32 @ferror(ptr noundef %i25) #31
  %i27 = icmp eq i32 %i26, 0
  br i1 %i27, label %bb31, label %bb28

bb28:                                             ; preds = %bb24
  br i1 %i, label %bb28.bb30_crit_edge, label %bb29

bb28.bb30_crit_edge:                              ; preds = %bb28
  br label %bb30

bb29:                                             ; preds = %bb28
  store i32 -6, ptr %arg, align 4, !tbaa !19
  br label %bb30

bb30:                                             ; preds = %bb28.bb30_crit_edge, %bb29
  store i32 -6, ptr %i8, align 8, !tbaa !176
  br label %bb83

bb31:                                             ; preds = %bb24
  %i32 = icmp eq i32 %arg3, 0
  br i1 %i32, label %bb33, label %bb36

bb33:                                             ; preds = %bb31
  br i1 %i, label %bb33.bb35_crit_edge, label %bb34

bb33.bb35_crit_edge:                              ; preds = %bb33
  br label %bb35

bb34:                                             ; preds = %bb33
  store i32 0, ptr %arg, align 4, !tbaa !19
  br label %bb35

bb35:                                             ; preds = %bb33.bb35_crit_edge, %bb34
  store i32 0, ptr %i8, align 8, !tbaa !176
  br label %bb83

bb36:                                             ; preds = %bb31
  %i37 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4
  %i38 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 1
  store i32 %arg3, ptr %i38, align 8, !tbaa !183
  store ptr %arg2, ptr %i37, align 8, !tbaa !184
  %i39 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 5
  %i40 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 1
  %i41 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 4
  %i42 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 8
  br label %bb43

bb43:                                             ; preds = %bb77.bb43_crit_edge, %bb36
  store i32 5000, ptr %i39, align 8, !tbaa !185
  store ptr %i40, ptr %i41, align 8, !tbaa !186
  %i44 = load ptr, ptr %i42, align 8, !tbaa !130
  %i45 = icmp eq ptr %i44, null
  br i1 %i45, label %bb43.bb56.loopexit_crit_edge, label %bb46

bb43.bb56.loopexit_crit_edge:                     ; preds = %bb43
  br label %bb56.loopexit

bb46:                                             ; preds = %bb43
  %i47 = load ptr, ptr %i44, align 8, !tbaa !122
  %i48 = icmp eq ptr %i47, %i37
  br i1 %i48, label %bb49, label %bb46.bb56.loopexitsplit_crit_edge

bb46.bb56.loopexitsplit_crit_edge:                ; preds = %bb46
  br label %bb56.loopexitsplit

bb49:                                             ; preds = %bb46
  %i50 = getelementptr inbounds %struct.EState, ptr %i44, i64 0, i32 1
  %i51 = load i32, ptr %i50, align 8, !tbaa !124
  switch i32 %i51, label %bb55 [
    i32 1, label %bb49.bb56.loopexitsplitsplit_crit_edge
    i32 2, label %bb52
    i32 3, label %bb49.bb56.loopexitsplitsplit_crit_edge1
    i32 4, label %bb49.bb56.loopexitsplitsplit_crit_edge2
  ]

bb49.bb56.loopexitsplitsplit_crit_edge2:          ; preds = %bb49
  br label %bb56.loopexitsplitsplit

bb49.bb56.loopexitsplitsplit_crit_edge1:          ; preds = %bb49
  br label %bb56.loopexitsplitsplit

bb49.bb56.loopexitsplitsplit_crit_edge:           ; preds = %bb49
  br label %bb56.loopexitsplitsplit

bb52:                                             ; preds = %bb49
  %i53 = tail call fastcc zeroext i8 @handle_compress(ptr nonnull %i44)
  %i54 = icmp eq i8 %i53, 0
  br i1 %i54, label %bb56.loopexitsplitsplitsplit, label %bb60

bb55:                                             ; preds = %bb49
  br label %bb56

bb56.loopexitsplitsplitsplit:                     ; preds = %bb52
  br label %bb56.loopexitsplitsplit

bb56.loopexitsplitsplit:                          ; preds = %bb49.bb56.loopexitsplitsplit_crit_edge2, %bb49.bb56.loopexitsplitsplit_crit_edge1, %bb56.loopexitsplitsplitsplit, %bb49.bb56.loopexitsplitsplit_crit_edge
  %i57.ph.ph.ph = phi i32 [ -1, %bb49.bb56.loopexitsplitsplit_crit_edge ], [ -1, %bb49.bb56.loopexitsplitsplit_crit_edge1 ], [ -1, %bb49.bb56.loopexitsplitsplit_crit_edge2 ], [ -2, %bb56.loopexitsplitsplitsplit ]
  br label %bb56.loopexitsplit

bb56.loopexitsplit:                               ; preds = %bb56.loopexitsplitsplit, %bb46.bb56.loopexitsplit_crit_edge
  %i57.ph.ph = phi i32 [ -2, %bb46.bb56.loopexitsplit_crit_edge ], [ %i57.ph.ph.ph, %bb56.loopexitsplitsplit ]
  br label %bb56.loopexit

bb56.loopexit:                                    ; preds = %bb56.loopexitsplit, %bb43.bb56.loopexit_crit_edge
  %i57.ph = phi i32 [ -2, %bb43.bb56.loopexit_crit_edge ], [ %i57.ph.ph, %bb56.loopexitsplit ]
  br label %bb56

bb56:                                             ; preds = %bb56.loopexit, %bb55
  %i57 = phi i32 [ 0, %bb55 ], [ %i57.ph, %bb56.loopexit ]
  br i1 %i, label %bb56.bb59_crit_edge, label %bb58

bb56.bb59_crit_edge:                              ; preds = %bb56
  br label %bb59

bb58:                                             ; preds = %bb56
  store i32 %i57, ptr %arg, align 4, !tbaa !19
  br label %bb59

bb59:                                             ; preds = %bb56.bb59_crit_edge, %bb58
  store i32 %i57, ptr %i8, align 8, !tbaa !176
  br label %bb83

bb60:                                             ; preds = %bb52
  %i61 = load i32, ptr %i39, align 8, !tbaa !185
  %i62 = icmp ult i32 %i61, 5000
  br i1 %i62, label %bb63, label %bb60.bb77_crit_edge

bb60.bb77_crit_edge:                              ; preds = %bb60
  br label %bb77

bb63:                                             ; preds = %bb60
  %i64 = sub nuw nsw i32 5000, %i61
  %i65 = zext nneg i32 %i64 to i64
  %i66 = load ptr, ptr %arg1, align 8, !tbaa !180
  %i67 = tail call i64 @fwrite(ptr noundef nonnull %i40, i64 noundef 1, i64 noundef %i65, ptr noundef %i66)
  %i68 = trunc i64 %i67 to i32
  %i69 = icmp eq i32 %i64, %i68
  br i1 %i69, label %bb70, label %bb63.bb74_crit_edge

bb63.bb74_crit_edge:                              ; preds = %bb63
  br label %bb74

bb70:                                             ; preds = %bb63
  %i71 = load ptr, ptr %arg1, align 8, !tbaa !180
  %i72 = tail call i32 @ferror(ptr noundef %i71) #31
  %i73 = icmp eq i32 %i72, 0
  br i1 %i73, label %bb70.bb77_crit_edge, label %bb74split

bb70.bb77_crit_edge:                              ; preds = %bb70
  br label %bb77

bb74split:                                        ; preds = %bb70
  br label %bb74

bb74:                                             ; preds = %bb74split, %bb63.bb74_crit_edge
  br i1 %i, label %bb74.bb76_crit_edge, label %bb75

bb74.bb76_crit_edge:                              ; preds = %bb74
  br label %bb76

bb75:                                             ; preds = %bb74
  store i32 -6, ptr %arg, align 4, !tbaa !19
  br label %bb76

bb76:                                             ; preds = %bb74.bb76_crit_edge, %bb75
  store i32 -6, ptr %i8, align 8, !tbaa !176
  br label %bb83

bb77:                                             ; preds = %bb70.bb77_crit_edge, %bb60.bb77_crit_edge
  %i78 = load i32, ptr %i38, align 8, !tbaa !183
  %i79 = icmp eq i32 %i78, 0
  br i1 %i79, label %bb80, label %bb77.bb43_crit_edge

bb77.bb43_crit_edge:                              ; preds = %bb77
  br label %bb43

bb80:                                             ; preds = %bb77
  br i1 %i, label %bb80.bb82_crit_edge, label %bb81

bb80.bb82_crit_edge:                              ; preds = %bb80
  br label %bb82

bb81:                                             ; preds = %bb80
  store i32 0, ptr %arg, align 4, !tbaa !19
  br label %bb82

bb82:                                             ; preds = %bb80.bb82_crit_edge, %bb81
  store i32 0, ptr %i8, align 8, !tbaa !176
  br label %bb83

bb83:                                             ; preds = %bb14.bb83_crit_edge, %bb82, %bb76, %bb59, %bb35, %bb30, %bb23, %bb15
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @BZ2_bzWriteClose(ptr noundef %arg, ptr noundef %arg1, i32 noundef %arg2, ptr noundef %arg3, ptr noundef %arg4) local_unnamed_addr #0 {
bb:
  tail call void @BZ2_bzWriteClose64(ptr noundef %arg, ptr noundef %arg1, i32 noundef %arg2, ptr noundef %arg3, ptr noundef null, ptr noundef %arg4, ptr noundef null)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @BZ2_bzWriteClose64(ptr noundef writeonly %arg, ptr noundef %arg1, i32 noundef %arg2, ptr noundef writeonly %arg3, ptr noundef writeonly %arg4, ptr noundef writeonly %arg5, ptr noundef writeonly %arg6) local_unnamed_addr #0 {
bb:
  %i = icmp eq ptr %arg1, null
  br i1 %i, label %bb7, label %bb10

bb7:                                              ; preds = %bb
  %i8 = icmp eq ptr %arg, null
  br i1 %i8, label %bb7.bb193_crit_edge, label %bb9

bb7.bb193_crit_edge:                              ; preds = %bb7
  br label %bb193

bb9:                                              ; preds = %bb7
  store i32 0, ptr %arg, align 4, !tbaa !19
  br label %bb193

bb10:                                             ; preds = %bb
  %i11 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 3
  %i12 = load i8, ptr %i11, align 4, !tbaa !181
  %i13 = icmp eq i8 %i12, 0
  br i1 %i13, label %bb14, label %bb19

bb14:                                             ; preds = %bb10
  %i15 = icmp eq ptr %arg, null
  br i1 %i15, label %bb14.bb17_crit_edge, label %bb16

bb14.bb17_crit_edge:                              ; preds = %bb14
  br label %bb17

bb16:                                             ; preds = %bb14
  store i32 -1, ptr %arg, align 4, !tbaa !19
  br label %bb17

bb17:                                             ; preds = %bb14.bb17_crit_edge, %bb16
  %i18 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 5
  store i32 -1, ptr %i18, align 8, !tbaa !176
  br label %bb193

bb19:                                             ; preds = %bb10
  %i20 = load ptr, ptr %arg1, align 8, !tbaa !180
  %i21 = tail call i32 @ferror(ptr noundef %i20) #31
  %i22 = icmp eq i32 %i21, 0
  br i1 %i22, label %bb28, label %bb23

bb23:                                             ; preds = %bb19
  %i24 = icmp eq ptr %arg, null
  br i1 %i24, label %bb23.bb26_crit_edge, label %bb25

bb23.bb26_crit_edge:                              ; preds = %bb23
  br label %bb26

bb25:                                             ; preds = %bb23
  store i32 -6, ptr %arg, align 4, !tbaa !19
  br label %bb26

bb26:                                             ; preds = %bb23.bb26_crit_edge, %bb25
  %i27 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 5
  store i32 -6, ptr %i27, align 8, !tbaa !176
  br label %bb193

bb28:                                             ; preds = %bb19
  %i29 = icmp eq ptr %arg3, null
  br i1 %i29, label %bb28.bb31_crit_edge, label %bb30

bb28.bb31_crit_edge:                              ; preds = %bb28
  br label %bb31

bb30:                                             ; preds = %bb28
  store i32 0, ptr %arg3, align 4, !tbaa !19
  br label %bb31

bb31:                                             ; preds = %bb28.bb31_crit_edge, %bb30
  %i32 = icmp eq ptr %arg4, null
  br i1 %i32, label %bb31.bb34_crit_edge, label %bb33

bb31.bb34_crit_edge:                              ; preds = %bb31
  br label %bb34

bb33:                                             ; preds = %bb31
  store i32 0, ptr %arg4, align 4, !tbaa !19
  br label %bb34

bb34:                                             ; preds = %bb31.bb34_crit_edge, %bb33
  %i35 = icmp eq ptr %arg5, null
  br i1 %i35, label %bb34.bb37_crit_edge, label %bb36

bb34.bb37_crit_edge:                              ; preds = %bb34
  br label %bb37

bb36:                                             ; preds = %bb34
  store i32 0, ptr %arg5, align 4, !tbaa !19
  br label %bb37

bb37:                                             ; preds = %bb34.bb37_crit_edge, %bb36
  %i38 = icmp eq ptr %arg6, null
  br i1 %i38, label %bb37.bb40_crit_edge, label %bb39

bb37.bb40_crit_edge:                              ; preds = %bb37
  br label %bb40

bb39:                                             ; preds = %bb37
  store i32 0, ptr %arg6, align 4, !tbaa !19
  br label %bb40

bb40:                                             ; preds = %bb37.bb40_crit_edge, %bb39
  %i41 = icmp eq i32 %arg2, 0
  br i1 %i41, label %bb42, label %bb40.bb131_crit_edge

bb40.bb131_crit_edge:                             ; preds = %bb40
  br label %bb131

bb42:                                             ; preds = %bb40
  %i43 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 5
  %i44 = load i32, ptr %i43, align 8, !tbaa !176
  %i45 = icmp eq i32 %i44, 0
  br i1 %i45, label %bb46, label %bb42.bb118_crit_edge

bb42.bb118_crit_edge:                             ; preds = %bb42
  br label %bb118

bb46:                                             ; preds = %bb42
  %i47 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 5
  %i48 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 1
  %i49 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 4
  %i50 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 8
  %i51 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4
  %i52 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 1
  br label %bb53

bb53:                                             ; preds = %bb115.bb53_crit_edge, %bb46
  store i32 5000, ptr %i47, align 8, !tbaa !185
  store ptr %i48, ptr %i49, align 8, !tbaa !186
  %i54 = load ptr, ptr %i50, align 8, !tbaa !130
  %i55 = icmp eq ptr %i54, null
  br i1 %i55, label %bb53.bb91.loopexit_crit_edge, label %bb56

bb53.bb91.loopexit_crit_edge:                     ; preds = %bb53
  br label %bb91.loopexit

bb56:                                             ; preds = %bb53
  %i57 = load ptr, ptr %i54, align 8, !tbaa !122
  %i58 = icmp eq ptr %i57, %i51
  br i1 %i58, label %bb59, label %bb56.bb91.loopexitsplit_crit_edge

bb56.bb91.loopexitsplit_crit_edge:                ; preds = %bb56
  br label %bb91.loopexitsplit

bb59:                                             ; preds = %bb56
  %i60 = getelementptr inbounds %struct.EState, ptr %i54, i64 0, i32 1
  %i61 = load i32, ptr %i60, align 8, !tbaa !124
  %i62 = getelementptr inbounds %struct.EState, ptr %i54, i64 0, i32 3
  switch i32 %i61, label %bb90 [
    i32 1, label %bb59.bb91.loopexitsplitsplit_crit_edge
    i32 2, label %bb63
    i32 3, label %bb59.bb91.loopexitsplitsplit_crit_edge1
    i32 4, label %bb65
  ]

bb59.bb91.loopexitsplitsplit_crit_edge1:          ; preds = %bb59
  br label %bb91.loopexitsplitsplit

bb59.bb91.loopexitsplitsplit_crit_edge:           ; preds = %bb59
  br label %bb91.loopexitsplitsplit

bb63:                                             ; preds = %bb59
  %i64 = load i32, ptr %i52, align 8, !tbaa !141
  store i32 %i64, ptr %i62, align 8, !tbaa !142
  store i32 4, ptr %i60, align 8, !tbaa !124
  br label %bb69

bb65:                                             ; preds = %bb59
  %i66 = load i32, ptr %i62, align 8, !tbaa !142
  %i67 = load i32, ptr %i52, align 8, !tbaa !141
  %i68 = icmp eq i32 %i66, %i67
  br i1 %i68, label %bb65.bb69_crit_edge, label %bb65.bb91.loopexitsplitsplitsplit_crit_edge

bb65.bb91.loopexitsplitsplitsplit_crit_edge:      ; preds = %bb65
  br label %bb91.loopexitsplitsplitsplit

bb65.bb69_crit_edge:                              ; preds = %bb65
  br label %bb69

bb69:                                             ; preds = %bb65.bb69_crit_edge, %bb63
  %i70 = tail call fastcc zeroext i8 @handle_compress(ptr nonnull %i54)
  %i71 = icmp eq i8 %i70, 0
  br i1 %i71, label %bb91.loopexitsplitsplitsplitsplit, label %bb72

bb72:                                             ; preds = %bb69
  %i73 = load i32, ptr %i62, align 8, !tbaa !142
  %i74 = icmp eq i32 %i73, 0
  br i1 %i74, label %bb75, label %bb72.bb96_crit_edge

bb72.bb96_crit_edge:                              ; preds = %bb72
  br label %bb96

bb75:                                             ; preds = %bb72
  %i76 = getelementptr inbounds %struct.EState, ptr %i54, i64 0, i32 13
  %i77 = load i32, ptr %i76, align 4, !tbaa !135
  %i78 = icmp ult i32 %i77, 256
  br i1 %i78, label %bb79, label %bb75.bb83_crit_edge

bb75.bb83_crit_edge:                              ; preds = %bb75
  br label %bb83

bb79:                                             ; preds = %bb75
  %i80 = getelementptr inbounds %struct.EState, ptr %i54, i64 0, i32 14
  %i81 = load i32, ptr %i80, align 8, !tbaa !136
  %i82 = icmp sgt i32 %i81, 0
  br i1 %i82, label %bb79.bb96_crit_edge, label %bb79.bb83_crit_edge

bb79.bb83_crit_edge:                              ; preds = %bb79
  br label %bb83

bb79.bb96_crit_edge:                              ; preds = %bb79
  br label %bb96

bb83:                                             ; preds = %bb79.bb83_crit_edge, %bb75.bb83_crit_edge
  %i84 = getelementptr inbounds %struct.EState, ptr %i54, i64 0, i32 20
  %i85 = load i32, ptr %i84, align 8, !tbaa !138
  %i86 = getelementptr inbounds %struct.EState, ptr %i54, i64 0, i32 19
  %i87 = load i32, ptr %i86, align 4, !tbaa !137
  %i88 = icmp slt i32 %i85, %i87
  br i1 %i88, label %bb83.bb96_crit_edge, label %bb89

bb83.bb96_crit_edge:                              ; preds = %bb83
  br label %bb96

bb89:                                             ; preds = %bb83
  store i32 1, ptr %i60, align 8, !tbaa !124
  br label %bb96

bb90:                                             ; preds = %bb59
  br label %bb91

bb91.loopexitsplitsplitsplitsplit:                ; preds = %bb69
  br label %bb91.loopexitsplitsplitsplit

bb91.loopexitsplitsplitsplit:                     ; preds = %bb91.loopexitsplitsplitsplitsplit, %bb65.bb91.loopexitsplitsplitsplit_crit_edge
  br label %bb91.loopexitsplitsplit

bb91.loopexitsplitsplit:                          ; preds = %bb59.bb91.loopexitsplitsplit_crit_edge1, %bb91.loopexitsplitsplitsplit, %bb59.bb91.loopexitsplitsplit_crit_edge
  br label %bb91.loopexitsplit

bb91.loopexitsplit:                               ; preds = %bb91.loopexitsplitsplit, %bb56.bb91.loopexitsplit_crit_edge
  %i92.ph.ph = phi i32 [ -2, %bb56.bb91.loopexitsplit_crit_edge ], [ -1, %bb91.loopexitsplitsplit ]
  br label %bb91.loopexit

bb91.loopexit:                                    ; preds = %bb91.loopexitsplit, %bb53.bb91.loopexit_crit_edge
  %i92.ph = phi i32 [ -2, %bb53.bb91.loopexit_crit_edge ], [ %i92.ph.ph, %bb91.loopexitsplit ]
  br label %bb91

bb91:                                             ; preds = %bb91.loopexit, %bb90
  %i92 = phi i32 [ 0, %bb90 ], [ %i92.ph, %bb91.loopexit ]
  %i93 = icmp eq ptr %arg, null
  br i1 %i93, label %bb91.bb95_crit_edge, label %bb94

bb91.bb95_crit_edge:                              ; preds = %bb91
  br label %bb95

bb94:                                             ; preds = %bb91
  store i32 %i92, ptr %arg, align 4, !tbaa !19
  br label %bb95

bb95:                                             ; preds = %bb91.bb95_crit_edge, %bb94
  store i32 %i92, ptr %i43, align 8, !tbaa !176
  br label %bb193

bb96:                                             ; preds = %bb83.bb96_crit_edge, %bb79.bb96_crit_edge, %bb72.bb96_crit_edge, %bb89
  %i97 = phi i1 [ true, %bb89 ], [ false, %bb83.bb96_crit_edge ], [ false, %bb72.bb96_crit_edge ], [ false, %bb79.bb96_crit_edge ]
  %i98 = load i32, ptr %i47, align 8, !tbaa !185
  %i99 = icmp ult i32 %i98, 5000
  br i1 %i99, label %bb100, label %bb96.bb115_crit_edge

bb96.bb115_crit_edge:                             ; preds = %bb96
  br label %bb115

bb100:                                            ; preds = %bb96
  %i101 = sub nuw nsw i32 5000, %i98
  %i102 = zext nneg i32 %i101 to i64
  %i103 = load ptr, ptr %arg1, align 8, !tbaa !180
  %i104 = tail call i64 @fwrite(ptr noundef nonnull %i48, i64 noundef 1, i64 noundef %i102, ptr noundef %i103)
  %i105 = trunc i64 %i104 to i32
  %i106 = icmp eq i32 %i101, %i105
  br i1 %i106, label %bb107, label %bb100.bb111_crit_edge

bb100.bb111_crit_edge:                            ; preds = %bb100
  br label %bb111

bb107:                                            ; preds = %bb100
  %i108 = load ptr, ptr %arg1, align 8, !tbaa !180
  %i109 = tail call i32 @ferror(ptr noundef %i108) #31
  %i110 = icmp eq i32 %i109, 0
  br i1 %i110, label %bb107.bb115_crit_edge, label %bb111split

bb107.bb115_crit_edge:                            ; preds = %bb107
  br label %bb115

bb111split:                                       ; preds = %bb107
  br label %bb111

bb111:                                            ; preds = %bb111split, %bb100.bb111_crit_edge
  %i112 = icmp eq ptr %arg, null
  br i1 %i112, label %bb111.bb114_crit_edge, label %bb113

bb111.bb114_crit_edge:                            ; preds = %bb111
  br label %bb114

bb113:                                            ; preds = %bb111
  store i32 -6, ptr %arg, align 4, !tbaa !19
  br label %bb114

bb114:                                            ; preds = %bb111.bb114_crit_edge, %bb113
  store i32 -6, ptr %i43, align 8, !tbaa !176
  br label %bb193

bb115:                                            ; preds = %bb107.bb115_crit_edge, %bb96.bb115_crit_edge
  br i1 %i97, label %bb116, label %bb115.bb53_crit_edge

bb115.bb53_crit_edge:                             ; preds = %bb115
  br label %bb53

bb116:                                            ; preds = %bb115
  %i117 = load ptr, ptr %arg1, align 8, !tbaa !180
  br label %bb118

bb118:                                            ; preds = %bb42.bb118_crit_edge, %bb116
  %i119 = phi ptr [ %i117, %bb116 ], [ %i20, %bb42.bb118_crit_edge ]
  %i120 = tail call i32 @ferror(ptr noundef %i119) #31
  %i121 = icmp eq i32 %i120, 0
  br i1 %i121, label %bb122, label %bb118.bb131_crit_edge

bb118.bb131_crit_edge:                            ; preds = %bb118
  br label %bb131

bb122:                                            ; preds = %bb118
  %i123 = tail call i32 @fflush(ptr noundef %i119)
  %i124 = load ptr, ptr %arg1, align 8, !tbaa !180
  %i125 = tail call i32 @ferror(ptr noundef %i124) #31
  %i126 = icmp eq i32 %i125, 0
  br i1 %i126, label %bb122.bb131_crit_edge, label %bb127

bb122.bb131_crit_edge:                            ; preds = %bb122
  br label %bb131

bb127:                                            ; preds = %bb122
  %i128 = icmp eq ptr %arg, null
  br i1 %i128, label %bb127.bb130_crit_edge, label %bb129

bb127.bb130_crit_edge:                            ; preds = %bb127
  br label %bb130

bb129:                                            ; preds = %bb127
  store i32 -6, ptr %arg, align 4, !tbaa !19
  br label %bb130

bb130:                                            ; preds = %bb127.bb130_crit_edge, %bb129
  store i32 -6, ptr %i43, align 8, !tbaa !176
  br label %bb193

bb131:                                            ; preds = %bb122.bb131_crit_edge, %bb118.bb131_crit_edge, %bb40.bb131_crit_edge
  br i1 %i29, label %bb131.bb135_crit_edge, label %bb132

bb131.bb135_crit_edge:                            ; preds = %bb131
  br label %bb135

bb132:                                            ; preds = %bb131
  %i133 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 2
  %i134 = load i32, ptr %i133, align 4, !tbaa !187
  store i32 %i134, ptr %arg3, align 4, !tbaa !19
  br label %bb135

bb135:                                            ; preds = %bb131.bb135_crit_edge, %bb132
  br i1 %i32, label %bb135.bb139_crit_edge, label %bb136

bb135.bb139_crit_edge:                            ; preds = %bb135
  br label %bb139

bb136:                                            ; preds = %bb135
  %i137 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 3
  %i138 = load i32, ptr %i137, align 8, !tbaa !188
  store i32 %i138, ptr %arg4, align 4, !tbaa !19
  br label %bb139

bb139:                                            ; preds = %bb135.bb139_crit_edge, %bb136
  br i1 %i35, label %bb139.bb143_crit_edge, label %bb140

bb139.bb143_crit_edge:                            ; preds = %bb139
  br label %bb143

bb140:                                            ; preds = %bb139
  %i141 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 6
  %i142 = load i32, ptr %i141, align 4, !tbaa !189
  store i32 %i142, ptr %arg5, align 4, !tbaa !19
  br label %bb143

bb143:                                            ; preds = %bb139.bb143_crit_edge, %bb140
  br i1 %i38, label %bb143.bb147_crit_edge, label %bb144

bb143.bb147_crit_edge:                            ; preds = %bb143
  br label %bb147

bb144:                                            ; preds = %bb143
  %i145 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 7
  %i146 = load i32, ptr %i145, align 8, !tbaa !190
  store i32 %i146, ptr %arg6, align 4, !tbaa !19
  br label %bb147

bb147:                                            ; preds = %bb143.bb147_crit_edge, %bb144
  %i148 = icmp eq ptr %arg, null
  br i1 %i148, label %bb147.bb150_crit_edge, label %bb149

bb147.bb150_crit_edge:                            ; preds = %bb147
  br label %bb150

bb149:                                            ; preds = %bb147
  store i32 0, ptr %arg, align 4, !tbaa !19
  br label %bb150

bb150:                                            ; preds = %bb147.bb150_crit_edge, %bb149
  %i151 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 5
  store i32 0, ptr %i151, align 8, !tbaa !176
  %i152 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 8
  %i153 = load ptr, ptr %i152, align 8, !tbaa !130
  %i154 = icmp eq ptr %i153, null
  br i1 %i154, label %bb150.bb192_crit_edge, label %bb155

bb150.bb192_crit_edge:                            ; preds = %bb150
  br label %bb192

bb155:                                            ; preds = %bb150
  %i156 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4
  %i157 = load ptr, ptr %i153, align 8, !tbaa !122
  %i158 = icmp eq ptr %i157, %i156
  br i1 %i158, label %bb159, label %bb155.bb192_crit_edge

bb155.bb192_crit_edge:                            ; preds = %bb155
  br label %bb192

bb159:                                            ; preds = %bb155
  %i160 = getelementptr inbounds %struct.EState, ptr %i153, i64 0, i32 4
  %i161 = load ptr, ptr %i160, align 8, !tbaa !49
  %i162 = icmp eq ptr %i161, null
  br i1 %i162, label %bb159.bb168_crit_edge, label %bb163

bb159.bb168_crit_edge:                            ; preds = %bb159
  br label %bb168

bb163:                                            ; preds = %bb159
  %i164 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 10
  %i165 = load ptr, ptr %i164, align 8, !tbaa !120
  %i166 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 11
  %i167 = load ptr, ptr %i166, align 8, !tbaa !121
  tail call void %i165(ptr noundef %i167, ptr noundef nonnull %i161) #31
  br label %bb168

bb168:                                            ; preds = %bb159.bb168_crit_edge, %bb163
  %i169 = getelementptr inbounds %struct.EState, ptr %i153, i64 0, i32 5
  %i170 = load ptr, ptr %i169, align 8, !tbaa !50
  %i171 = icmp eq ptr %i170, null
  br i1 %i171, label %bb168.bb177_crit_edge, label %bb172

bb168.bb177_crit_edge:                            ; preds = %bb168
  br label %bb177

bb172:                                            ; preds = %bb168
  %i173 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 10
  %i174 = load ptr, ptr %i173, align 8, !tbaa !120
  %i175 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 11
  %i176 = load ptr, ptr %i175, align 8, !tbaa !121
  tail call void %i174(ptr noundef %i176, ptr noundef nonnull %i170) #31
  br label %bb177

bb177:                                            ; preds = %bb168.bb177_crit_edge, %bb172
  %i178 = getelementptr inbounds %struct.EState, ptr %i153, i64 0, i32 6
  %i179 = load ptr, ptr %i178, align 8, !tbaa !15
  %i180 = icmp eq ptr %i179, null
  br i1 %i180, label %bb177.bb186_crit_edge, label %bb181

bb177.bb186_crit_edge:                            ; preds = %bb177
  br label %bb186

bb181:                                            ; preds = %bb177
  %i182 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 10
  %i183 = load ptr, ptr %i182, align 8, !tbaa !120
  %i184 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 11
  %i185 = load ptr, ptr %i184, align 8, !tbaa !121
  tail call void %i183(ptr noundef %i185, ptr noundef nonnull %i179) #31
  br label %bb186

bb186:                                            ; preds = %bb177.bb186_crit_edge, %bb181
  %i187 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 10
  %i188 = load ptr, ptr %i187, align 8, !tbaa !120
  %i189 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 11
  %i190 = load ptr, ptr %i189, align 8, !tbaa !121
  %i191 = load ptr, ptr %i152, align 8, !tbaa !130
  tail call void %i188(ptr noundef %i190, ptr noundef %i191) #31
  br label %bb192

bb192:                                            ; preds = %bb155.bb192_crit_edge, %bb150.bb192_crit_edge, %bb186
  tail call void @free(ptr noundef nonnull %arg1) #31
  br label %bb193

bb193:                                            ; preds = %bb7.bb193_crit_edge, %bb192, %bb130, %bb114, %bb95, %bb26, %bb17, %bb9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local noundef ptr @BZ2_bzReadOpen(ptr noundef writeonly %arg, ptr noundef %arg1, i32 noundef %arg2, i32 noundef %arg3, ptr noundef readonly %arg4, i32 noundef %arg5) local_unnamed_addr #0 {
bb:
  %i = icmp eq ptr %arg, null
  br i1 %i, label %bb.bb7_crit_edge, label %bb6

bb.bb7_crit_edge:                                 ; preds = %bb
  br label %bb7

bb6:                                              ; preds = %bb
  store i32 0, ptr %arg, align 4, !tbaa !19
  br label %bb7

bb7:                                              ; preds = %bb.bb7_crit_edge, %bb6
  %i8 = icmp eq ptr %arg1, null
  br i1 %i8, label %bb7.bb21_crit_edge, label %bb9

bb7.bb21_crit_edge:                               ; preds = %bb7
  br label %bb21

bb9:                                              ; preds = %bb7
  %i10 = icmp ugt i32 %arg3, 1
  %i11 = icmp ugt i32 %arg2, 4
  %i12 = or i1 %i11, %i10
  br i1 %i12, label %bb9.bb21_crit_edge, label %bb13

bb9.bb21_crit_edge:                               ; preds = %bb9
  br label %bb21

bb13:                                             ; preds = %bb9
  %i14 = icmp eq ptr %arg4, null
  %i15 = icmp ne i32 %arg5, 0
  %i16 = and i1 %i14, %i15
  br i1 %i16, label %bb13.bb21_crit_edge, label %bb17

bb13.bb21_crit_edge:                              ; preds = %bb13
  br label %bb21

bb17:                                             ; preds = %bb13
  %i18 = icmp ne ptr %arg4, null
  %i19 = icmp ugt i32 %arg5, 5000
  %i20 = and i1 %i18, %i19
  br i1 %i20, label %bb17.bb21_crit_edge, label %bb23

bb17.bb21_crit_edge:                              ; preds = %bb17
  br label %bb21

bb21:                                             ; preds = %bb17.bb21_crit_edge, %bb13.bb21_crit_edge, %bb9.bb21_crit_edge, %bb7.bb21_crit_edge
  br i1 %i, label %bb21.bb87_crit_edge, label %bb22

bb21.bb87_crit_edge:                              ; preds = %bb21
  br label %bb87

bb22:                                             ; preds = %bb21
  store i32 -2, ptr %arg, align 4, !tbaa !19
  br label %bb87

bb23:                                             ; preds = %bb17
  %i24 = tail call i32 @ferror(ptr noundef nonnull %arg1) #31
  %i25 = icmp eq i32 %i24, 0
  br i1 %i25, label %bb28, label %bb26

bb26:                                             ; preds = %bb23
  br i1 %i, label %bb26.bb87_crit_edge, label %bb27

bb26.bb87_crit_edge:                              ; preds = %bb26
  br label %bb87

bb27:                                             ; preds = %bb26
  store i32 -6, ptr %arg, align 4, !tbaa !19
  br label %bb87

bb28:                                             ; preds = %bb23
  %i29 = tail call noalias dereferenceable_or_null(5104) ptr @malloc(i64 noundef 5104) #37
  %i30 = icmp eq ptr %i29, null
  br i1 %i30, label %bb31, label %bb33

bb31:                                             ; preds = %bb28
  br i1 %i, label %bb31.bb87_crit_edge, label %bb32

bb31.bb87_crit_edge:                              ; preds = %bb31
  br label %bb87

bb32:                                             ; preds = %bb31
  store i32 -3, ptr %arg, align 4, !tbaa !19
  br label %bb87

bb33:                                             ; preds = %bb28
  br i1 %i, label %bb33.bb35_crit_edge, label %bb34

bb33.bb35_crit_edge:                              ; preds = %bb33
  br label %bb35

bb34:                                             ; preds = %bb33
  store i32 0, ptr %arg, align 4, !tbaa !19
  br label %bb35

bb35:                                             ; preds = %bb33.bb35_crit_edge, %bb34
  %i36 = getelementptr inbounds %struct.bzFile, ptr %i29, i64 0, i32 5
  store i32 0, ptr %i36, align 8, !tbaa !176
  %i37 = getelementptr inbounds %struct.bzFile, ptr %i29, i64 0, i32 6
  store i8 0, ptr %i37, align 4, !tbaa !178
  store ptr %arg1, ptr %i29, align 8, !tbaa !180
  %i38 = getelementptr inbounds %struct.bzFile, ptr %i29, i64 0, i32 2
  store i32 0, ptr %i38, align 8, !tbaa !179
  %i39 = getelementptr inbounds %struct.bzFile, ptr %i29, i64 0, i32 3
  store i8 0, ptr %i39, align 4, !tbaa !181
  %i40 = getelementptr inbounds %struct.bzFile, ptr %i29, i64 0, i32 4
  %i41 = getelementptr inbounds %struct.bzFile, ptr %i29, i64 0, i32 4, i32 9
  %i42 = icmp sgt i32 %arg5, 0
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %i41, i8 0, i64 24, i1 false)
  br i1 %i42, label %bb43, label %bb35.bb77_crit_edge

bb35.bb77_crit_edge:                              ; preds = %bb35
  br label %bb77

bb43:                                             ; preds = %bb35
  %i44 = and i32 %arg5, 1
  %i45 = icmp eq i32 %arg5, 1
  br i1 %i45, label %bb43.bb68_crit_edge, label %bb46

bb43.bb68_crit_edge:                              ; preds = %bb43
  br label %bb68

bb46:                                             ; preds = %bb43
  %i47 = and i32 %arg5, 2147483646
  br label %bb48

bb48:                                             ; preds = %bb48.bb48_crit_edge, %bb46
  %i49 = phi i32 [ 0, %bb46 ], [ %i62, %bb48.bb48_crit_edge ]
  %i50 = phi ptr [ %arg4, %bb46 ], [ %i63, %bb48.bb48_crit_edge ]
  %i51 = phi i32 [ 0, %bb46 ], [ %i64, %bb48.bb48_crit_edge ]
  %i52 = load i8, ptr %i50, align 1, !tbaa !21
  %i53 = sext i32 %i49 to i64
  %i54 = getelementptr inbounds %struct.bzFile, ptr %i29, i64 0, i32 1, i64 %i53
  store i8 %i52, ptr %i54, align 1, !tbaa !21
  %i55 = load i32, ptr %i38, align 8, !tbaa !179
  %i56 = add nsw i32 %i55, 1
  store i32 %i56, ptr %i38, align 8, !tbaa !179
  %i57 = getelementptr inbounds i8, ptr %i50, i64 1
  %i58 = load i8, ptr %i57, align 1, !tbaa !21
  %i59 = sext i32 %i56 to i64
  %i60 = getelementptr inbounds %struct.bzFile, ptr %i29, i64 0, i32 1, i64 %i59
  store i8 %i58, ptr %i60, align 1, !tbaa !21
  %i61 = load i32, ptr %i38, align 8, !tbaa !179
  %i62 = add nsw i32 %i61, 1
  store i32 %i62, ptr %i38, align 8, !tbaa !179
  %i63 = getelementptr inbounds i8, ptr %i50, i64 2
  %i64 = add i32 %i51, 2
  %i65 = icmp eq i32 %i64, %i47
  br i1 %i65, label %bb66, label %bb48.bb48_crit_edge, !llvm.loop !191

bb48.bb48_crit_edge:                              ; preds = %bb48
  br label %bb48

bb66:                                             ; preds = %bb48
  %i67 = sext i32 %i62 to i64
  br label %bb68

bb68:                                             ; preds = %bb43.bb68_crit_edge, %bb66
  %i69 = phi i64 [ 0, %bb43.bb68_crit_edge ], [ %i67, %bb66 ]
  %i70 = phi ptr [ %arg4, %bb43.bb68_crit_edge ], [ %i63, %bb66 ]
  %i71 = icmp eq i32 %i44, 0
  br i1 %i71, label %bb68.bb77_crit_edge, label %bb72

bb68.bb77_crit_edge:                              ; preds = %bb68
  br label %bb77

bb72:                                             ; preds = %bb68
  %i73 = load i8, ptr %i70, align 1, !tbaa !21
  %i74 = getelementptr inbounds %struct.bzFile, ptr %i29, i64 0, i32 1, i64 %i69
  store i8 %i73, ptr %i74, align 1, !tbaa !21
  %i75 = load i32, ptr %i38, align 8, !tbaa !179
  %i76 = add nsw i32 %i75, 1
  store i32 %i76, ptr %i38, align 8, !tbaa !179
  br label %bb77

bb77:                                             ; preds = %bb68.bb77_crit_edge, %bb35.bb77_crit_edge, %bb72
  %i78 = tail call i32 @BZ2_bzDecompressInit(ptr noundef nonnull %i40, i32 noundef %arg2, i32 noundef %arg3), !range !182
  %i79 = icmp eq i32 %i78, 0
  br i1 %i79, label %bb83, label %bb80

bb80:                                             ; preds = %bb77
  br i1 %i, label %bb80.bb82_crit_edge, label %bb81

bb80.bb82_crit_edge:                              ; preds = %bb80
  br label %bb82

bb81:                                             ; preds = %bb80
  store i32 %i78, ptr %arg, align 4, !tbaa !19
  br label %bb82

bb82:                                             ; preds = %bb80.bb82_crit_edge, %bb81
  tail call void @free(ptr noundef nonnull %i29) #31
  br label %bb87

bb83:                                             ; preds = %bb77
  %i84 = load i32, ptr %i38, align 8, !tbaa !179
  %i85 = getelementptr inbounds %struct.bzFile, ptr %i29, i64 0, i32 4, i32 1
  store i32 %i84, ptr %i85, align 8, !tbaa !183
  %i86 = getelementptr inbounds %struct.bzFile, ptr %i29, i64 0, i32 1
  store ptr %i86, ptr %i40, align 8, !tbaa !184
  store i8 1, ptr %i37, align 4, !tbaa !178
  br label %bb87

bb87:                                             ; preds = %bb31.bb87_crit_edge, %bb26.bb87_crit_edge, %bb21.bb87_crit_edge, %bb83, %bb82, %bb32, %bb27, %bb22
  %i88 = phi ptr [ null, %bb82 ], [ %i29, %bb83 ], [ null, %bb21.bb87_crit_edge ], [ null, %bb22 ], [ null, %bb26.bb87_crit_edge ], [ null, %bb27 ], [ null, %bb31.bb87_crit_edge ], [ null, %bb32 ]
  ret ptr %i88
}

; Function Attrs: nounwind uwtable
define dso_local void @BZ2_bzReadClose(ptr noundef writeonly %arg, ptr noundef %arg1) local_unnamed_addr #0 {
bb:
  %i = icmp eq ptr %arg, null
  br i1 %i, label %bb2, label %bb4

bb2:                                              ; preds = %bb
  %i3 = icmp eq ptr %arg1, null
  br i1 %i3, label %bb2.bb65_crit_edge, label %bb6

bb2.bb65_crit_edge:                               ; preds = %bb2
  br label %bb65

bb4:                                              ; preds = %bb
  store i32 0, ptr %arg, align 4, !tbaa !19
  %i5 = icmp eq ptr %arg1, null
  br i1 %i5, label %bb4.bb65_crit_edge, label %bb11

bb4.bb65_crit_edge:                               ; preds = %bb4
  br label %bb65

bb6:                                              ; preds = %bb2
  %i7 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 5
  store i32 0, ptr %i7, align 8, !tbaa !176
  %i8 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 3
  %i9 = load i8, ptr %i8, align 4, !tbaa !181
  %i10 = icmp eq i8 %i9, 0
  br i1 %i10, label %bb6.bb19_crit_edge, label %bb6.bb17_crit_edge

bb6.bb17_crit_edge:                               ; preds = %bb6
  br label %bb17

bb6.bb19_crit_edge:                               ; preds = %bb6
  br label %bb19

bb11:                                             ; preds = %bb4
  %i12 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 5
  store i32 0, ptr %i12, align 8, !tbaa !176
  %i13 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 3
  %i14 = load i8, ptr %i13, align 4, !tbaa !181
  %i15 = icmp eq i8 %i14, 0
  br i1 %i15, label %bb11.bb19_crit_edge, label %bb16

bb11.bb19_crit_edge:                              ; preds = %bb11
  br label %bb19

bb16:                                             ; preds = %bb11
  store i32 -1, ptr %arg, align 4, !tbaa !19
  br label %bb17

bb17:                                             ; preds = %bb6.bb17_crit_edge, %bb16
  %i18 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 5
  store i32 -1, ptr %i18, align 8, !tbaa !176
  br label %bb65

bb19:                                             ; preds = %bb11.bb19_crit_edge, %bb6.bb19_crit_edge
  %i20 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 6
  %i21 = load i8, ptr %i20, align 4, !tbaa !178
  %i22 = icmp eq i8 %i21, 0
  br i1 %i22, label %bb19.bb64_crit_edge, label %bb23

bb19.bb64_crit_edge:                              ; preds = %bb19
  br label %bb64

bb23:                                             ; preds = %bb19
  %i24 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 8
  %i25 = load ptr, ptr %i24, align 8, !tbaa !130
  %i26 = icmp eq ptr %i25, null
  br i1 %i26, label %bb23.bb64_crit_edge, label %bb27

bb23.bb64_crit_edge:                              ; preds = %bb23
  br label %bb64

bb27:                                             ; preds = %bb23
  %i28 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4
  %i29 = load ptr, ptr %i25, align 8, !tbaa !151
  %i30 = icmp eq ptr %i29, %i28
  br i1 %i30, label %bb31, label %bb27.bb64_crit_edge

bb27.bb64_crit_edge:                              ; preds = %bb27
  br label %bb64

bb31:                                             ; preds = %bb27
  %i32 = getelementptr inbounds %struct.DState, ptr %i25, i64 0, i32 20
  %i33 = load ptr, ptr %i32, align 8, !tbaa !173
  %i34 = icmp eq ptr %i33, null
  br i1 %i34, label %bb31.bb40_crit_edge, label %bb35

bb31.bb40_crit_edge:                              ; preds = %bb31
  br label %bb40

bb35:                                             ; preds = %bb31
  %i36 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 10
  %i37 = load ptr, ptr %i36, align 8, !tbaa !120
  %i38 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 11
  %i39 = load ptr, ptr %i38, align 8, !tbaa !121
  tail call void %i37(ptr noundef %i39, ptr noundef nonnull %i33) #31
  br label %bb40

bb40:                                             ; preds = %bb31.bb40_crit_edge, %bb35
  %i41 = getelementptr inbounds %struct.DState, ptr %i25, i64 0, i32 21
  %i42 = load ptr, ptr %i41, align 8, !tbaa !169
  %i43 = icmp eq ptr %i42, null
  br i1 %i43, label %bb40.bb49_crit_edge, label %bb44

bb40.bb49_crit_edge:                              ; preds = %bb40
  br label %bb49

bb44:                                             ; preds = %bb40
  %i45 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 10
  %i46 = load ptr, ptr %i45, align 8, !tbaa !120
  %i47 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 11
  %i48 = load ptr, ptr %i47, align 8, !tbaa !121
  tail call void %i46(ptr noundef %i48, ptr noundef nonnull %i42) #31
  br label %bb49

bb49:                                             ; preds = %bb40.bb49_crit_edge, %bb44
  %i50 = getelementptr inbounds %struct.DState, ptr %i25, i64 0, i32 22
  %i51 = load ptr, ptr %i50, align 8, !tbaa !170
  %i52 = icmp eq ptr %i51, null
  br i1 %i52, label %bb49.bb58_crit_edge, label %bb53

bb49.bb58_crit_edge:                              ; preds = %bb49
  br label %bb58

bb53:                                             ; preds = %bb49
  %i54 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 10
  %i55 = load ptr, ptr %i54, align 8, !tbaa !120
  %i56 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 11
  %i57 = load ptr, ptr %i56, align 8, !tbaa !121
  tail call void %i55(ptr noundef %i57, ptr noundef nonnull %i51) #31
  br label %bb58

bb58:                                             ; preds = %bb49.bb58_crit_edge, %bb53
  %i59 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 10
  %i60 = load ptr, ptr %i59, align 8, !tbaa !120
  %i61 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 11
  %i62 = load ptr, ptr %i61, align 8, !tbaa !121
  %i63 = load ptr, ptr %i24, align 8, !tbaa !130
  tail call void %i60(ptr noundef %i62, ptr noundef %i63) #31
  br label %bb64

bb64:                                             ; preds = %bb27.bb64_crit_edge, %bb23.bb64_crit_edge, %bb19.bb64_crit_edge, %bb58
  tail call void @free(ptr noundef nonnull %arg1) #31
  br label %bb65

bb65:                                             ; preds = %bb4.bb65_crit_edge, %bb2.bb65_crit_edge, %bb64, %bb17
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @BZ2_bzRead(ptr noundef writeonly %arg, ptr noundef %arg1, ptr noundef %arg2, i32 noundef %arg3) local_unnamed_addr #0 {
bb:
  %i = icmp eq ptr %arg, null
  br i1 %i, label %bb.bb5_crit_edge, label %bb4

bb.bb5_crit_edge:                                 ; preds = %bb
  br label %bb5

bb4:                                              ; preds = %bb
  store i32 0, ptr %arg, align 4, !tbaa !19
  br label %bb5

bb5:                                              ; preds = %bb.bb5_crit_edge, %bb4
  %i6 = icmp eq ptr %arg1, null
  br i1 %i6, label %bb5.bb12_crit_edge, label %bb7

bb5.bb12_crit_edge:                               ; preds = %bb5
  br label %bb12

bb7:                                              ; preds = %bb5
  %i8 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 5
  store i32 0, ptr %i8, align 8, !tbaa !176
  %i9 = icmp eq ptr %arg2, null
  %i10 = icmp slt i32 %arg3, 0
  %i11 = or i1 %i9, %i10
  br i1 %i11, label %bb7.bb12_crit_edge, label %bb17

bb7.bb12_crit_edge:                               ; preds = %bb7
  br label %bb12

bb12:                                             ; preds = %bb7.bb12_crit_edge, %bb5.bb12_crit_edge
  br i1 %i, label %bb12.bb14_crit_edge, label %bb13

bb12.bb14_crit_edge:                              ; preds = %bb12
  br label %bb14

bb13:                                             ; preds = %bb12
  store i32 -2, ptr %arg, align 4, !tbaa !19
  br label %bb14

bb14:                                             ; preds = %bb12.bb14_crit_edge, %bb13
  br i1 %i6, label %bb14.bb95_crit_edge, label %bb15

bb14.bb95_crit_edge:                              ; preds = %bb14
  br label %bb95

bb15:                                             ; preds = %bb14
  %i16 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 5
  store i32 -2, ptr %i16, align 8, !tbaa !176
  br label %bb95

bb17:                                             ; preds = %bb7
  %i18 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 3
  %i19 = load i8, ptr %i18, align 4, !tbaa !181
  %i20 = icmp eq i8 %i19, 0
  br i1 %i20, label %bb24, label %bb21

bb21:                                             ; preds = %bb17
  br i1 %i, label %bb21.bb23_crit_edge, label %bb22

bb21.bb23_crit_edge:                              ; preds = %bb21
  br label %bb23

bb22:                                             ; preds = %bb21
  store i32 -1, ptr %arg, align 4, !tbaa !19
  br label %bb23

bb23:                                             ; preds = %bb21.bb23_crit_edge, %bb22
  store i32 -1, ptr %i8, align 8, !tbaa !176
  br label %bb95

bb24:                                             ; preds = %bb17
  %i25 = icmp eq i32 %arg3, 0
  br i1 %i25, label %bb26, label %bb29

bb26:                                             ; preds = %bb24
  br i1 %i, label %bb26.bb28_crit_edge, label %bb27

bb26.bb28_crit_edge:                              ; preds = %bb26
  br label %bb28

bb27:                                             ; preds = %bb26
  store i32 0, ptr %arg, align 4, !tbaa !19
  br label %bb28

bb28:                                             ; preds = %bb26.bb28_crit_edge, %bb27
  store i32 0, ptr %i8, align 8, !tbaa !176
  br label %bb95

bb29:                                             ; preds = %bb24
  %i30 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4
  %i31 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 5
  store i32 %arg3, ptr %i31, align 8, !tbaa !185
  %i32 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 4
  store ptr %arg2, ptr %i32, align 8, !tbaa !186
  %i33 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 1
  %i34 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 1
  %i35 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 2
  br label %bb36

bb36:                                             ; preds = %bb89.bb36_crit_edge, %bb29
  %i37 = load ptr, ptr %arg1, align 8, !tbaa !180
  %i38 = tail call i32 @ferror(ptr noundef %i37) #31
  %i39 = icmp eq i32 %i38, 0
  br i1 %i39, label %bb43, label %bb40

bb40:                                             ; preds = %bb36
  br i1 %i, label %bb40.bb42_crit_edge, label %bb41

bb40.bb42_crit_edge:                              ; preds = %bb40
  br label %bb42

bb41:                                             ; preds = %bb40
  store i32 -6, ptr %arg, align 4, !tbaa !19
  br label %bb42

bb42:                                             ; preds = %bb40.bb42_crit_edge, %bb41
  store i32 -6, ptr %i8, align 8, !tbaa !176
  br label %bb95

bb43:                                             ; preds = %bb36
  %i44 = load i32, ptr %i33, align 8, !tbaa !183
  %i45 = icmp eq i32 %i44, 0
  br i1 %i45, label %bb46, label %bb43.bb61_crit_edge

bb43.bb61_crit_edge:                              ; preds = %bb43
  br label %bb61

bb46:                                             ; preds = %bb43
  %i47 = tail call i32 @fgetc(ptr noundef %i37)
  %i48 = icmp eq i32 %i47, -1
  br i1 %i48, label %bb46.bb61_crit_edge, label %bb49

bb46.bb61_crit_edge:                              ; preds = %bb46
  br label %bb61

bb49:                                             ; preds = %bb46
  %i50 = tail call i32 @ungetc(i32 noundef %i47, ptr noundef %i37)
  %i51 = load ptr, ptr %arg1, align 8, !tbaa !180
  %i52 = tail call i64 @fread(ptr noundef nonnull %i34, i64 noundef 1, i64 noundef 5000, ptr noundef %i51)
  %i53 = load ptr, ptr %arg1, align 8, !tbaa !180
  %i54 = tail call i32 @ferror(ptr noundef %i53) #31
  %i55 = icmp eq i32 %i54, 0
  br i1 %i55, label %bb59, label %bb56

bb56:                                             ; preds = %bb49
  br i1 %i, label %bb56.bb58_crit_edge, label %bb57

bb56.bb58_crit_edge:                              ; preds = %bb56
  br label %bb58

bb57:                                             ; preds = %bb56
  store i32 -6, ptr %arg, align 4, !tbaa !19
  br label %bb58

bb58:                                             ; preds = %bb56.bb58_crit_edge, %bb57
  store i32 -6, ptr %i8, align 8, !tbaa !176
  br label %bb95

bb59:                                             ; preds = %bb49
  %i60 = trunc i64 %i52 to i32
  store i32 %i60, ptr %i35, align 8, !tbaa !179
  store i32 %i60, ptr %i33, align 8, !tbaa !183
  store ptr %i34, ptr %i30, align 8, !tbaa !184
  br label %bb61

bb61:                                             ; preds = %bb46.bb61_crit_edge, %bb43.bb61_crit_edge, %bb59
  %i62 = tail call i32 @BZ2_bzDecompress(ptr noundef nonnull %i30)
  %i63 = and i32 %i62, -5
  %i64 = icmp eq i32 %i63, 0
  br i1 %i64, label %bb68, label %bb65

bb65:                                             ; preds = %bb61
  br i1 %i, label %bb65.bb67_crit_edge, label %bb66

bb65.bb67_crit_edge:                              ; preds = %bb65
  br label %bb67

bb66:                                             ; preds = %bb65
  store i32 %i62, ptr %arg, align 4, !tbaa !19
  br label %bb67

bb67:                                             ; preds = %bb65.bb67_crit_edge, %bb66
  store i32 %i62, ptr %i8, align 8, !tbaa !176
  br label %bb95

bb68:                                             ; preds = %bb61
  switch i32 %i62, label %bb68.bb89_crit_edge [
    i32 0, label %bb69
    i32 4, label %bb84
  ]

bb68.bb89_crit_edge:                              ; preds = %bb68
  br label %bb89

bb69:                                             ; preds = %bb68
  %i70 = load ptr, ptr %arg1, align 8, !tbaa !180
  %i71 = tail call i32 @fgetc(ptr noundef %i70)
  %i72 = icmp eq i32 %i71, -1
  br i1 %i72, label %bb75, label %bb73

bb73:                                             ; preds = %bb69
  %i74 = tail call i32 @ungetc(i32 noundef %i71, ptr noundef %i70)
  br label %bb89

bb75:                                             ; preds = %bb69
  %i76 = load i32, ptr %i33, align 8, !tbaa !183
  %i77 = icmp eq i32 %i76, 0
  br i1 %i77, label %bb78, label %bb75.bb89_crit_edge

bb75.bb89_crit_edge:                              ; preds = %bb75
  br label %bb89

bb78:                                             ; preds = %bb75
  %i79 = load i32, ptr %i31, align 8, !tbaa !185
  %i80 = icmp eq i32 %i79, 0
  br i1 %i80, label %bb78.bb92_crit_edge, label %bb81

bb78.bb92_crit_edge:                              ; preds = %bb78
  br label %bb92

bb81:                                             ; preds = %bb78
  br i1 %i, label %bb81.bb83_crit_edge, label %bb82

bb81.bb83_crit_edge:                              ; preds = %bb81
  br label %bb83

bb82:                                             ; preds = %bb81
  store i32 -7, ptr %arg, align 4, !tbaa !19
  br label %bb83

bb83:                                             ; preds = %bb81.bb83_crit_edge, %bb82
  store i32 -7, ptr %i8, align 8, !tbaa !176
  br label %bb95

bb84:                                             ; preds = %bb68
  br i1 %i, label %bb84.bb86_crit_edge, label %bb85

bb84.bb86_crit_edge:                              ; preds = %bb84
  br label %bb86

bb85:                                             ; preds = %bb84
  store i32 4, ptr %arg, align 4, !tbaa !19
  br label %bb86

bb86:                                             ; preds = %bb84.bb86_crit_edge, %bb85
  store i32 4, ptr %i8, align 8, !tbaa !176
  %i87 = load i32, ptr %i31, align 8, !tbaa !185
  %i88 = sub i32 %arg3, %i87
  br label %bb95

bb89:                                             ; preds = %bb75.bb89_crit_edge, %bb68.bb89_crit_edge, %bb73
  %i90 = load i32, ptr %i31, align 8, !tbaa !185
  %i91 = icmp eq i32 %i90, 0
  br i1 %i91, label %bb92.loopexit, label %bb89.bb36_crit_edge

bb89.bb36_crit_edge:                              ; preds = %bb89
  br label %bb36

bb92.loopexit:                                    ; preds = %bb89
  br label %bb92

bb92:                                             ; preds = %bb78.bb92_crit_edge, %bb92.loopexit
  br i1 %i, label %bb92.bb94_crit_edge, label %bb93

bb92.bb94_crit_edge:                              ; preds = %bb92
  br label %bb94

bb93:                                             ; preds = %bb92
  store i32 0, ptr %arg, align 4, !tbaa !19
  br label %bb94

bb94:                                             ; preds = %bb92.bb94_crit_edge, %bb93
  store i32 0, ptr %i8, align 8, !tbaa !176
  br label %bb95

bb95:                                             ; preds = %bb14.bb95_crit_edge, %bb94, %bb86, %bb83, %bb67, %bb58, %bb42, %bb28, %bb23, %bb15
  %i96 = phi i32 [ 0, %bb42 ], [ 0, %bb67 ], [ 0, %bb83 ], [ %i88, %bb86 ], [ %arg3, %bb94 ], [ 0, %bb58 ], [ 0, %bb15 ], [ 0, %bb14.bb95_crit_edge ], [ 0, %bb23 ], [ 0, %bb28 ]
  ret i32 %i96
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @BZ2_bzReadGetUnused(ptr noundef writeonly %arg, ptr noundef %arg1, ptr noundef writeonly %arg2, ptr noundef writeonly %arg3) local_unnamed_addr #27 {
bb:
  %i = icmp eq ptr %arg1, null
  br i1 %i, label %bb4, label %bb7

bb4:                                              ; preds = %bb
  %i5 = icmp eq ptr %arg, null
  br i1 %i5, label %bb4.bb30_crit_edge, label %bb6

bb4.bb30_crit_edge:                               ; preds = %bb4
  br label %bb30

bb6:                                              ; preds = %bb4
  store i32 -2, ptr %arg, align 4, !tbaa !19
  br label %bb30

bb7:                                              ; preds = %bb
  %i8 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 5
  %i9 = load i32, ptr %i8, align 8, !tbaa !176
  %i10 = icmp eq i32 %i9, 4
  br i1 %i10, label %bb15, label %bb11

bb11:                                             ; preds = %bb7
  %i12 = icmp eq ptr %arg, null
  br i1 %i12, label %bb11.bb14_crit_edge, label %bb13

bb11.bb14_crit_edge:                              ; preds = %bb11
  br label %bb14

bb13:                                             ; preds = %bb11
  store i32 -1, ptr %arg, align 4, !tbaa !19
  br label %bb14

bb14:                                             ; preds = %bb11.bb14_crit_edge, %bb13
  store i32 -1, ptr %i8, align 8, !tbaa !176
  br label %bb30

bb15:                                             ; preds = %bb7
  %i16 = icmp eq ptr %arg2, null
  %i17 = icmp eq ptr %arg3, null
  %i18 = or i1 %i16, %i17
  %i19 = icmp eq ptr %arg, null
  br i1 %i18, label %bb20, label %bb23

bb20:                                             ; preds = %bb15
  br i1 %i19, label %bb20.bb22_crit_edge, label %bb21

bb20.bb22_crit_edge:                              ; preds = %bb20
  br label %bb22

bb21:                                             ; preds = %bb20
  store i32 -2, ptr %arg, align 4, !tbaa !19
  br label %bb22

bb22:                                             ; preds = %bb20.bb22_crit_edge, %bb21
  store i32 -2, ptr %i8, align 8, !tbaa !176
  br label %bb30

bb23:                                             ; preds = %bb15
  br i1 %i19, label %bb23.bb25_crit_edge, label %bb24

bb23.bb25_crit_edge:                              ; preds = %bb23
  br label %bb25

bb24:                                             ; preds = %bb23
  store i32 0, ptr %arg, align 4, !tbaa !19
  br label %bb25

bb25:                                             ; preds = %bb23.bb25_crit_edge, %bb24
  store i32 0, ptr %i8, align 8, !tbaa !176
  %i26 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4
  %i27 = getelementptr inbounds %struct.bzFile, ptr %arg1, i64 0, i32 4, i32 1
  %i28 = load i32, ptr %i27, align 8, !tbaa !183
  store i32 %i28, ptr %arg3, align 4, !tbaa !19
  %i29 = load ptr, ptr %i26, align 8, !tbaa !184
  store ptr %i29, ptr %arg2, align 8, !tbaa !20
  br label %bb30

bb30:                                             ; preds = %bb4.bb30_crit_edge, %bb25, %bb22, %bb14, %bb6
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @BZ2_bzBuffToBuffCompress(ptr noundef %arg, ptr noundef %arg1, ptr noundef %arg2, i32 noundef %arg3, i32 noundef %arg4, i32 noundef %arg5, i32 noundef %arg6) local_unnamed_addr #0 {
bb:
  %i = alloca %struct.bz_stream, align 8
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %i) #31
  %i7 = icmp eq ptr %arg, null
  %i8 = icmp eq ptr %arg1, null
  %i9 = or i1 %i7, %i8
  %i10 = icmp eq ptr %arg2, null
  %i11 = or i1 %i9, %i10
  %i12 = add i32 %arg4, -10
  %i13 = icmp ult i32 %i12, -9
  %i14 = or i1 %i11, %i13
  %i15 = icmp ugt i32 %arg5, 4
  %i16 = or i1 %i15, %i14
  %i17 = icmp ugt i32 %arg6, 250
  %i18 = or i1 %i17, %i16
  br i1 %i18, label %bb.bb159_crit_edge, label %bb19

bb.bb159_crit_edge:                               ; preds = %bb
  br label %bb159

bb19:                                             ; preds = %bb
  %i20 = icmp eq i32 %arg6, 0
  %i21 = select i1 %i20, i32 30, i32 %arg6
  %i22 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 9
  %i23 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 10
  %i24 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 11
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %i22, i8 0, i64 24, i1 false)
  %i25 = call i32 @BZ2_bzCompressInit(ptr noundef nonnull %i, i32 noundef %arg4, i32 noundef %arg5, i32 noundef %i21), !range !182
  %i26 = icmp eq i32 %i25, 0
  br i1 %i26, label %bb27, label %bb19.bb159_crit_edge

bb19.bb159_crit_edge:                             ; preds = %bb19
  br label %bb159

bb27:                                             ; preds = %bb19
  store ptr %arg2, ptr %i, align 8, !tbaa !147
  %i28 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 4
  store ptr %arg, ptr %i28, align 8, !tbaa !144
  %i29 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 1
  store i32 %arg3, ptr %i29, align 8, !tbaa !141
  %i30 = load i32, ptr %arg1, align 4, !tbaa !19
  %i31 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 5
  store i32 %i30, ptr %i31, align 8, !tbaa !143
  %i32 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 8
  %i33 = load ptr, ptr %i32, align 8, !tbaa !130
  %i34 = icmp eq ptr %i33, null
  br i1 %i34, label %bb27.bb159_crit_edge, label %bb35

bb27.bb159_crit_edge:                             ; preds = %bb27
  br label %bb159

bb35:                                             ; preds = %bb27
  %i36 = load ptr, ptr %i33, align 8, !tbaa !122
  %i37 = icmp eq ptr %i36, %i
  br i1 %i37, label %bb38, label %bb35.bb126_crit_edge

bb35.bb126_crit_edge:                             ; preds = %bb35
  br label %bb126

bb38:                                             ; preds = %bb35
  %i39 = getelementptr inbounds %struct.EState, ptr %i33, i64 0, i32 1
  %i40 = load i32, ptr %i39, align 8, !tbaa !124
  %i41 = getelementptr inbounds %struct.EState, ptr %i33, i64 0, i32 3
  switch i32 %i40, label %bb38.bb122_crit_edge [
    i32 1, label %bb67
    i32 2, label %bb43
    i32 3, label %bb42
    i32 4, label %bb44
  ]

bb38.bb122_crit_edge:                             ; preds = %bb38
  br label %bb122

bb42:                                             ; preds = %bb38
  br label %bb122

bb43:                                             ; preds = %bb38
  store i32 %arg3, ptr %i41, align 8, !tbaa !142
  store i32 4, ptr %i39, align 8, !tbaa !124
  br label %bb47

bb44:                                             ; preds = %bb38
  %i45 = load i32, ptr %i41, align 8, !tbaa !142
  %i46 = icmp eq i32 %i45, %arg3
  br i1 %i46, label %bb44.bb47_crit_edge, label %bb44.bb122_crit_edge

bb44.bb122_crit_edge:                             ; preds = %bb44
  br label %bb122

bb44.bb47_crit_edge:                              ; preds = %bb44
  br label %bb47

bb47:                                             ; preds = %bb44.bb47_crit_edge, %bb43
  %i48 = call fastcc zeroext i8 @handle_compress(ptr nonnull %i33)
  %i49 = icmp eq i8 %i48, 0
  br i1 %i49, label %bb119, label %bb50

bb50:                                             ; preds = %bb47
  %i51 = load i32, ptr %i41, align 8, !tbaa !142
  %i52 = icmp eq i32 %i51, 0
  br i1 %i52, label %bb53, label %bb50.bb95_crit_edge

bb50.bb95_crit_edge:                              ; preds = %bb50
  br label %bb95

bb53:                                             ; preds = %bb50
  %i54 = getelementptr inbounds %struct.EState, ptr %i33, i64 0, i32 13
  %i55 = load i32, ptr %i54, align 4, !tbaa !135
  %i56 = icmp ult i32 %i55, 256
  br i1 %i56, label %bb57, label %bb53.bb61_crit_edge

bb53.bb61_crit_edge:                              ; preds = %bb53
  br label %bb61

bb57:                                             ; preds = %bb53
  %i58 = getelementptr inbounds %struct.EState, ptr %i33, i64 0, i32 14
  %i59 = load i32, ptr %i58, align 8, !tbaa !136
  %i60 = icmp sgt i32 %i59, 0
  br i1 %i60, label %bb57.bb95_crit_edge, label %bb57.bb61_crit_edge

bb57.bb61_crit_edge:                              ; preds = %bb57
  br label %bb61

bb57.bb95_crit_edge:                              ; preds = %bb57
  br label %bb95

bb61:                                             ; preds = %bb57.bb61_crit_edge, %bb53.bb61_crit_edge
  %i62 = getelementptr inbounds %struct.EState, ptr %i33, i64 0, i32 20
  %i63 = load i32, ptr %i62, align 8, !tbaa !138
  %i64 = getelementptr inbounds %struct.EState, ptr %i33, i64 0, i32 19
  %i65 = load i32, ptr %i64, align 4, !tbaa !137
  %i66 = icmp slt i32 %i63, %i65
  br i1 %i66, label %bb61.bb95_crit_edge, label %bb68

bb61.bb95_crit_edge:                              ; preds = %bb61
  br label %bb95

bb67:                                             ; preds = %bb38
  br label %bb122

bb68:                                             ; preds = %bb61
  store i32 1, ptr %i39, align 8, !tbaa !124
  %i69 = load i32, ptr %i31, align 8, !tbaa !143
  %i70 = load i32, ptr %arg1, align 4, !tbaa !19
  %i71 = sub i32 %i70, %i69
  store i32 %i71, ptr %arg1, align 4, !tbaa !19
  %i72 = load ptr, ptr %i32, align 8, !tbaa !130
  %i73 = icmp eq ptr %i72, null
  br i1 %i73, label %bb68.bb159_crit_edge, label %bb74

bb68.bb159_crit_edge:                             ; preds = %bb68
  br label %bb159

bb74:                                             ; preds = %bb68
  %i75 = load ptr, ptr %i72, align 8, !tbaa !122
  %i76 = icmp eq ptr %i75, %i
  br i1 %i76, label %bb77, label %bb74.bb159_crit_edge

bb74.bb159_crit_edge:                             ; preds = %bb74
  br label %bb159

bb77:                                             ; preds = %bb74
  %i78 = getelementptr inbounds %struct.EState, ptr %i72, i64 0, i32 4
  %i79 = load ptr, ptr %i78, align 8, !tbaa !49
  %i80 = icmp eq ptr %i79, null
  br i1 %i80, label %bb77.bb84_crit_edge, label %bb81

bb77.bb84_crit_edge:                              ; preds = %bb77
  br label %bb84

bb81:                                             ; preds = %bb77
  %i82 = load ptr, ptr %i23, align 8, !tbaa !120
  %i83 = load ptr, ptr %i24, align 8, !tbaa !121
  call void %i82(ptr noundef %i83, ptr noundef nonnull %i79) #31
  br label %bb84

bb84:                                             ; preds = %bb77.bb84_crit_edge, %bb81
  %i85 = getelementptr inbounds %struct.EState, ptr %i72, i64 0, i32 5
  %i86 = load ptr, ptr %i85, align 8, !tbaa !50
  %i87 = icmp eq ptr %i86, null
  br i1 %i87, label %bb84.bb91_crit_edge, label %bb88

bb84.bb91_crit_edge:                              ; preds = %bb84
  br label %bb91

bb88:                                             ; preds = %bb84
  %i89 = load ptr, ptr %i23, align 8, !tbaa !120
  %i90 = load ptr, ptr %i24, align 8, !tbaa !121
  call void %i89(ptr noundef %i90, ptr noundef nonnull %i86) #31
  br label %bb91

bb91:                                             ; preds = %bb84.bb91_crit_edge, %bb88
  %i92 = getelementptr inbounds %struct.EState, ptr %i72, i64 0, i32 6
  %i93 = load ptr, ptr %i92, align 8, !tbaa !15
  %i94 = icmp eq ptr %i93, null
  br i1 %i94, label %bb91.bb154_crit_edge, label %bb91.bb149_crit_edge

bb91.bb149_crit_edge:                             ; preds = %bb91
  br label %bb149

bb91.bb154_crit_edge:                             ; preds = %bb91
  br label %bb154

bb95:                                             ; preds = %bb61.bb95_crit_edge, %bb57.bb95_crit_edge, %bb50.bb95_crit_edge
  %i96 = load ptr, ptr %i32, align 8, !tbaa !130
  %i97 = icmp eq ptr %i96, null
  br i1 %i97, label %bb95.bb159_crit_edge, label %bb98

bb95.bb159_crit_edge:                             ; preds = %bb95
  br label %bb159

bb98:                                             ; preds = %bb95
  %i99 = load ptr, ptr %i96, align 8, !tbaa !122
  %i100 = icmp eq ptr %i99, %i
  br i1 %i100, label %bb101, label %bb98.bb159_crit_edge

bb98.bb159_crit_edge:                             ; preds = %bb98
  br label %bb159

bb101:                                            ; preds = %bb98
  %i102 = getelementptr inbounds %struct.EState, ptr %i96, i64 0, i32 4
  %i103 = load ptr, ptr %i102, align 8, !tbaa !49
  %i104 = icmp eq ptr %i103, null
  br i1 %i104, label %bb101.bb108_crit_edge, label %bb105

bb101.bb108_crit_edge:                            ; preds = %bb101
  br label %bb108

bb105:                                            ; preds = %bb101
  %i106 = load ptr, ptr %i23, align 8, !tbaa !120
  %i107 = load ptr, ptr %i24, align 8, !tbaa !121
  call void %i106(ptr noundef %i107, ptr noundef nonnull %i103) #31
  br label %bb108

bb108:                                            ; preds = %bb101.bb108_crit_edge, %bb105
  %i109 = getelementptr inbounds %struct.EState, ptr %i96, i64 0, i32 5
  %i110 = load ptr, ptr %i109, align 8, !tbaa !50
  %i111 = icmp eq ptr %i110, null
  br i1 %i111, label %bb108.bb115_crit_edge, label %bb112

bb108.bb115_crit_edge:                            ; preds = %bb108
  br label %bb115

bb112:                                            ; preds = %bb108
  %i113 = load ptr, ptr %i23, align 8, !tbaa !120
  %i114 = load ptr, ptr %i24, align 8, !tbaa !121
  call void %i113(ptr noundef %i114, ptr noundef nonnull %i110) #31
  br label %bb115

bb115:                                            ; preds = %bb108.bb115_crit_edge, %bb112
  %i116 = getelementptr inbounds %struct.EState, ptr %i96, i64 0, i32 6
  %i117 = load ptr, ptr %i116, align 8, !tbaa !15
  %i118 = icmp eq ptr %i117, null
  br i1 %i118, label %bb115.bb154_crit_edge, label %bb115.bb149_crit_edge

bb115.bb149_crit_edge:                            ; preds = %bb115
  br label %bb149

bb115.bb154_crit_edge:                            ; preds = %bb115
  br label %bb154

bb119:                                            ; preds = %bb47
  %i120 = load ptr, ptr %i32, align 8, !tbaa !130
  %i121 = icmp eq ptr %i120, null
  br i1 %i121, label %bb119.bb159_crit_edge, label %bb119.bb122_crit_edge

bb119.bb122_crit_edge:                            ; preds = %bb119
  br label %bb122

bb119.bb159_crit_edge:                            ; preds = %bb119
  br label %bb159

bb122:                                            ; preds = %bb119.bb122_crit_edge, %bb44.bb122_crit_edge, %bb38.bb122_crit_edge, %bb67, %bb42
  %i123 = phi i32 [ -1, %bb119.bb122_crit_edge ], [ 0, %bb38.bb122_crit_edge ], [ -1, %bb42 ], [ -1, %bb67 ], [ -1, %bb44.bb122_crit_edge ]
  %i124 = phi ptr [ %i120, %bb119.bb122_crit_edge ], [ %i33, %bb38.bb122_crit_edge ], [ %i33, %bb42 ], [ %i33, %bb67 ], [ %i33, %bb44.bb122_crit_edge ]
  %i125 = load ptr, ptr %i124, align 8, !tbaa !122
  br label %bb126

bb126:                                            ; preds = %bb35.bb126_crit_edge, %bb122
  %i127 = phi ptr [ %i125, %bb122 ], [ %i36, %bb35.bb126_crit_edge ]
  %i128 = phi i32 [ %i123, %bb122 ], [ -2, %bb35.bb126_crit_edge ]
  %i129 = phi ptr [ %i124, %bb122 ], [ %i33, %bb35.bb126_crit_edge ]
  %i130 = icmp eq ptr %i127, %i
  br i1 %i130, label %bb131, label %bb126.bb159_crit_edge

bb126.bb159_crit_edge:                            ; preds = %bb126
  br label %bb159

bb131:                                            ; preds = %bb126
  %i132 = getelementptr inbounds %struct.EState, ptr %i129, i64 0, i32 4
  %i133 = load ptr, ptr %i132, align 8, !tbaa !49
  %i134 = icmp eq ptr %i133, null
  br i1 %i134, label %bb131.bb138_crit_edge, label %bb135

bb131.bb138_crit_edge:                            ; preds = %bb131
  br label %bb138

bb135:                                            ; preds = %bb131
  %i136 = load ptr, ptr %i23, align 8, !tbaa !120
  %i137 = load ptr, ptr %i24, align 8, !tbaa !121
  call void %i136(ptr noundef %i137, ptr noundef nonnull %i133) #31
  br label %bb138

bb138:                                            ; preds = %bb131.bb138_crit_edge, %bb135
  %i139 = getelementptr inbounds %struct.EState, ptr %i129, i64 0, i32 5
  %i140 = load ptr, ptr %i139, align 8, !tbaa !50
  %i141 = icmp eq ptr %i140, null
  br i1 %i141, label %bb138.bb145_crit_edge, label %bb142

bb138.bb145_crit_edge:                            ; preds = %bb138
  br label %bb145

bb142:                                            ; preds = %bb138
  %i143 = load ptr, ptr %i23, align 8, !tbaa !120
  %i144 = load ptr, ptr %i24, align 8, !tbaa !121
  call void %i143(ptr noundef %i144, ptr noundef nonnull %i140) #31
  br label %bb145

bb145:                                            ; preds = %bb138.bb145_crit_edge, %bb142
  %i146 = getelementptr inbounds %struct.EState, ptr %i129, i64 0, i32 6
  %i147 = load ptr, ptr %i146, align 8, !tbaa !15
  %i148 = icmp eq ptr %i147, null
  br i1 %i148, label %bb145.bb154_crit_edge, label %bb145.bb149_crit_edge

bb145.bb149_crit_edge:                            ; preds = %bb145
  br label %bb149

bb145.bb154_crit_edge:                            ; preds = %bb145
  br label %bb154

bb149:                                            ; preds = %bb145.bb149_crit_edge, %bb115.bb149_crit_edge, %bb91.bb149_crit_edge
  %i150 = phi ptr [ %i93, %bb91.bb149_crit_edge ], [ %i117, %bb115.bb149_crit_edge ], [ %i147, %bb145.bb149_crit_edge ]
  %i151 = phi i32 [ 0, %bb91.bb149_crit_edge ], [ -8, %bb115.bb149_crit_edge ], [ %i128, %bb145.bb149_crit_edge ]
  %i152 = load ptr, ptr %i23, align 8, !tbaa !120
  %i153 = load ptr, ptr %i24, align 8, !tbaa !121
  call void %i152(ptr noundef %i153, ptr noundef nonnull %i150) #31
  br label %bb154

bb154:                                            ; preds = %bb145.bb154_crit_edge, %bb115.bb154_crit_edge, %bb91.bb154_crit_edge, %bb149
  %i155 = phi i32 [ 0, %bb91.bb154_crit_edge ], [ -8, %bb115.bb154_crit_edge ], [ %i128, %bb145.bb154_crit_edge ], [ %i151, %bb149 ]
  %i156 = load ptr, ptr %i23, align 8, !tbaa !120
  %i157 = load ptr, ptr %i24, align 8, !tbaa !121
  %i158 = load ptr, ptr %i32, align 8, !tbaa !130
  call void %i156(ptr noundef %i157, ptr noundef %i158) #31
  br label %bb159

bb159:                                            ; preds = %bb126.bb159_crit_edge, %bb119.bb159_crit_edge, %bb98.bb159_crit_edge, %bb95.bb159_crit_edge, %bb74.bb159_crit_edge, %bb68.bb159_crit_edge, %bb27.bb159_crit_edge, %bb19.bb159_crit_edge, %bb.bb159_crit_edge, %bb154
  %i160 = phi i32 [ -2, %bb.bb159_crit_edge ], [ %i25, %bb19.bb159_crit_edge ], [ 0, %bb68.bb159_crit_edge ], [ 0, %bb74.bb159_crit_edge ], [ -8, %bb95.bb159_crit_edge ], [ -8, %bb98.bb159_crit_edge ], [ -1, %bb119.bb159_crit_edge ], [ %i128, %bb126.bb159_crit_edge ], [ -2, %bb27.bb159_crit_edge ], [ %i155, %bb154 ]
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %i) #31
  ret i32 %i160
}

; Function Attrs: nounwind uwtable
define dso_local i32 @BZ2_bzBuffToBuffDecompress(ptr noundef %arg, ptr noundef %arg1, ptr noundef %arg2, i32 noundef %arg3, i32 noundef %arg4, i32 noundef %arg5) local_unnamed_addr #0 {
bb:
  %i = alloca %struct.bz_stream, align 8
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %i) #31
  %i6 = icmp eq ptr %arg, null
  %i7 = icmp eq ptr %arg1, null
  %i8 = or i1 %i6, %i7
  %i9 = icmp eq ptr %arg2, null
  %i10 = or i1 %i8, %i9
  br i1 %i10, label %bb.bb141_crit_edge, label %bb11

bb.bb141_crit_edge:                               ; preds = %bb
  br label %bb141

bb11:                                             ; preds = %bb
  %i12 = icmp ugt i32 %arg4, 1
  %i13 = icmp ugt i32 %arg5, 4
  %i14 = or i1 %i12, %i13
  br i1 %i14, label %bb11.bb141_crit_edge, label %bb15

bb11.bb141_crit_edge:                             ; preds = %bb11
  br label %bb141

bb15:                                             ; preds = %bb11
  %i16 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 9
  %i17 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 10
  %i18 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 11
  store i64 0, ptr %i18, align 8
  store ptr @default_bzalloc, ptr %i16, align 8, !tbaa !118
  store ptr @default_bzfree, ptr %i17, align 8, !tbaa !120
  %i19 = tail call noalias noundef dereferenceable_or_null(64144) ptr @malloc(i64 noundef 64144) #37
  %i20 = icmp eq ptr %i19, null
  br i1 %i20, label %bb15.bb141_crit_edge, label %bb21

bb15.bb141_crit_edge:                             ; preds = %bb15
  br label %bb141

bb21:                                             ; preds = %bb15
  store ptr %i, ptr %i19, align 8, !tbaa !151
  %i22 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 8
  store ptr %i19, ptr %i22, align 8, !tbaa !130
  %i23 = getelementptr inbounds %struct.DState, ptr %i19, i64 0, i32 1
  store i32 10, ptr %i23, align 8, !tbaa !153
  %i24 = getelementptr inbounds %struct.DState, ptr %i19, i64 0, i32 8
  store i32 0, ptr %i24, align 4, !tbaa !154
  %i25 = getelementptr inbounds %struct.DState, ptr %i19, i64 0, i32 7
  store i32 0, ptr %i25, align 8, !tbaa !155
  %i26 = getelementptr inbounds %struct.DState, ptr %i19, i64 0, i32 26
  store i32 0, ptr %i26, align 4, !tbaa !156
  %i27 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 2
  store i32 0, ptr %i27, align 4, !tbaa !131
  %i28 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 3
  store i32 0, ptr %i28, align 8, !tbaa !132
  %i29 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 6
  store i32 0, ptr %i29, align 4, !tbaa !133
  %i30 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 7
  store i32 0, ptr %i30, align 8, !tbaa !134
  %i31 = trunc i32 %arg4 to i8
  %i32 = getelementptr inbounds %struct.DState, ptr %i19, i64 0, i32 10
  store i8 %i31, ptr %i32, align 4, !tbaa !157
  %i33 = getelementptr inbounds %struct.DState, ptr %i19, i64 0, i32 20
  %i34 = getelementptr inbounds %struct.DState, ptr %i19, i64 0, i32 11
  store i32 0, ptr %i34, align 8, !tbaa !158
  %i35 = getelementptr inbounds %struct.DState, ptr %i19, i64 0, i32 12
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %i33, i8 0, i64 24, i1 false)
  store i32 %arg5, ptr %i35, align 4, !tbaa !159
  store ptr %arg2, ptr %i, align 8, !tbaa !147
  %i36 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 4
  store ptr %arg, ptr %i36, align 8, !tbaa !144
  %i37 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 1
  store i32 %arg3, ptr %i37, align 8, !tbaa !141
  %i38 = load i32, ptr %arg1, align 4, !tbaa !19
  %i39 = getelementptr inbounds %struct.bz_stream, ptr %i, i64 0, i32 5
  store i32 %i38, ptr %i39, align 8, !tbaa !143
  %i40 = call i32 @BZ2_bzDecompress(ptr noundef nonnull %i)
  switch i32 %i40, label %bb110 [
    i32 0, label %bb75
    i32 4, label %bb41
  ]

bb41:                                             ; preds = %bb21
  %i42 = load i32, ptr %i39, align 8, !tbaa !143
  %i43 = load i32, ptr %arg1, align 4, !tbaa !19
  %i44 = sub i32 %i43, %i42
  store i32 %i44, ptr %arg1, align 4, !tbaa !19
  %i45 = load ptr, ptr %i22, align 8, !tbaa !130
  %i46 = icmp eq ptr %i45, null
  br i1 %i46, label %bb41.bb141_crit_edge, label %bb47

bb41.bb141_crit_edge:                             ; preds = %bb41
  br label %bb141

bb47:                                             ; preds = %bb41
  %i48 = load ptr, ptr %i45, align 8, !tbaa !151
  %i49 = icmp eq ptr %i48, %i
  br i1 %i49, label %bb50, label %bb47.bb141_crit_edge

bb47.bb141_crit_edge:                             ; preds = %bb47
  br label %bb141

bb50:                                             ; preds = %bb47
  %i51 = getelementptr inbounds %struct.DState, ptr %i45, i64 0, i32 20
  %i52 = load ptr, ptr %i51, align 8, !tbaa !173
  %i53 = icmp eq ptr %i52, null
  br i1 %i53, label %bb50.bb57_crit_edge, label %bb54

bb50.bb57_crit_edge:                              ; preds = %bb50
  br label %bb57

bb54:                                             ; preds = %bb50
  %i55 = load ptr, ptr %i17, align 8, !tbaa !120
  %i56 = load ptr, ptr %i18, align 8, !tbaa !121
  call void %i55(ptr noundef %i56, ptr noundef nonnull %i52) #31
  br label %bb57

bb57:                                             ; preds = %bb50.bb57_crit_edge, %bb54
  %i58 = getelementptr inbounds %struct.DState, ptr %i45, i64 0, i32 21
  %i59 = load ptr, ptr %i58, align 8, !tbaa !169
  %i60 = icmp eq ptr %i59, null
  br i1 %i60, label %bb57.bb64_crit_edge, label %bb61

bb57.bb64_crit_edge:                              ; preds = %bb57
  br label %bb64

bb61:                                             ; preds = %bb57
  %i62 = load ptr, ptr %i17, align 8, !tbaa !120
  %i63 = load ptr, ptr %i18, align 8, !tbaa !121
  call void %i62(ptr noundef %i63, ptr noundef nonnull %i59) #31
  br label %bb64

bb64:                                             ; preds = %bb57.bb64_crit_edge, %bb61
  %i65 = getelementptr inbounds %struct.DState, ptr %i45, i64 0, i32 22
  %i66 = load ptr, ptr %i65, align 8, !tbaa !170
  %i67 = icmp eq ptr %i66, null
  br i1 %i67, label %bb64.bb71_crit_edge, label %bb68

bb64.bb71_crit_edge:                              ; preds = %bb64
  br label %bb71

bb68:                                             ; preds = %bb64
  %i69 = load ptr, ptr %i17, align 8, !tbaa !120
  %i70 = load ptr, ptr %i18, align 8, !tbaa !121
  call void %i69(ptr noundef %i70, ptr noundef nonnull %i66) #31
  br label %bb71

bb71:                                             ; preds = %bb64.bb71_crit_edge, %bb68
  %i72 = load ptr, ptr %i17, align 8, !tbaa !120
  %i73 = load ptr, ptr %i18, align 8, !tbaa !121
  %i74 = load ptr, ptr %i22, align 8, !tbaa !130
  call void %i72(ptr noundef %i73, ptr noundef %i74) #31
  br label %bb141

bb75:                                             ; preds = %bb21
  %i76 = load i32, ptr %i39, align 8, !tbaa !143
  %i77 = icmp eq i32 %i76, 0
  %i78 = load ptr, ptr %i22, align 8, !tbaa !130
  %i79 = icmp eq ptr %i78, null
  br i1 %i79, label %bb75.bb108_crit_edge, label %bb80

bb75.bb108_crit_edge:                             ; preds = %bb75
  br label %bb108

bb80:                                             ; preds = %bb75
  %i81 = load ptr, ptr %i78, align 8, !tbaa !151
  %i82 = icmp eq ptr %i81, %i
  br i1 %i82, label %bb83, label %bb80.bb108_crit_edge

bb80.bb108_crit_edge:                             ; preds = %bb80
  br label %bb108

bb83:                                             ; preds = %bb80
  %i84 = getelementptr inbounds %struct.DState, ptr %i78, i64 0, i32 20
  %i85 = load ptr, ptr %i84, align 8, !tbaa !173
  %i86 = icmp eq ptr %i85, null
  br i1 %i86, label %bb83.bb90_crit_edge, label %bb87

bb83.bb90_crit_edge:                              ; preds = %bb83
  br label %bb90

bb87:                                             ; preds = %bb83
  %i88 = load ptr, ptr %i17, align 8, !tbaa !120
  %i89 = load ptr, ptr %i18, align 8, !tbaa !121
  call void %i88(ptr noundef %i89, ptr noundef nonnull %i85) #31
  br label %bb90

bb90:                                             ; preds = %bb83.bb90_crit_edge, %bb87
  %i91 = getelementptr inbounds %struct.DState, ptr %i78, i64 0, i32 21
  %i92 = load ptr, ptr %i91, align 8, !tbaa !169
  %i93 = icmp eq ptr %i92, null
  br i1 %i93, label %bb90.bb97_crit_edge, label %bb94

bb90.bb97_crit_edge:                              ; preds = %bb90
  br label %bb97

bb94:                                             ; preds = %bb90
  %i95 = load ptr, ptr %i17, align 8, !tbaa !120
  %i96 = load ptr, ptr %i18, align 8, !tbaa !121
  call void %i95(ptr noundef %i96, ptr noundef nonnull %i92) #31
  br label %bb97

bb97:                                             ; preds = %bb90.bb97_crit_edge, %bb94
  %i98 = getelementptr inbounds %struct.DState, ptr %i78, i64 0, i32 22
  %i99 = load ptr, ptr %i98, align 8, !tbaa !170
  %i100 = icmp eq ptr %i99, null
  br i1 %i100, label %bb97.bb104_crit_edge, label %bb101

bb97.bb104_crit_edge:                             ; preds = %bb97
  br label %bb104

bb101:                                            ; preds = %bb97
  %i102 = load ptr, ptr %i17, align 8, !tbaa !120
  %i103 = load ptr, ptr %i18, align 8, !tbaa !121
  call void %i102(ptr noundef %i103, ptr noundef nonnull %i99) #31
  br label %bb104

bb104:                                            ; preds = %bb97.bb104_crit_edge, %bb101
  %i105 = load ptr, ptr %i17, align 8, !tbaa !120
  %i106 = load ptr, ptr %i18, align 8, !tbaa !121
  %i107 = load ptr, ptr %i22, align 8, !tbaa !130
  call void %i105(ptr noundef %i106, ptr noundef %i107) #31
  br label %bb108

bb108:                                            ; preds = %bb80.bb108_crit_edge, %bb75.bb108_crit_edge, %bb104
  %i109 = select i1 %i77, i32 -8, i32 -7
  br label %bb141

bb110:                                            ; preds = %bb21
  %i111 = load ptr, ptr %i22, align 8, !tbaa !130
  %i112 = icmp eq ptr %i111, null
  br i1 %i112, label %bb110.bb141_crit_edge, label %bb113

bb110.bb141_crit_edge:                            ; preds = %bb110
  br label %bb141

bb113:                                            ; preds = %bb110
  %i114 = load ptr, ptr %i111, align 8, !tbaa !151
  %i115 = icmp eq ptr %i114, %i
  br i1 %i115, label %bb116, label %bb113.bb141_crit_edge

bb113.bb141_crit_edge:                            ; preds = %bb113
  br label %bb141

bb116:                                            ; preds = %bb113
  %i117 = getelementptr inbounds %struct.DState, ptr %i111, i64 0, i32 20
  %i118 = load ptr, ptr %i117, align 8, !tbaa !173
  %i119 = icmp eq ptr %i118, null
  br i1 %i119, label %bb116.bb123_crit_edge, label %bb120

bb116.bb123_crit_edge:                            ; preds = %bb116
  br label %bb123

bb120:                                            ; preds = %bb116
  %i121 = load ptr, ptr %i17, align 8, !tbaa !120
  %i122 = load ptr, ptr %i18, align 8, !tbaa !121
  call void %i121(ptr noundef %i122, ptr noundef nonnull %i118) #31
  br label %bb123

bb123:                                            ; preds = %bb116.bb123_crit_edge, %bb120
  %i124 = getelementptr inbounds %struct.DState, ptr %i111, i64 0, i32 21
  %i125 = load ptr, ptr %i124, align 8, !tbaa !169
  %i126 = icmp eq ptr %i125, null
  br i1 %i126, label %bb123.bb130_crit_edge, label %bb127

bb123.bb130_crit_edge:                            ; preds = %bb123
  br label %bb130

bb127:                                            ; preds = %bb123
  %i128 = load ptr, ptr %i17, align 8, !tbaa !120
  %i129 = load ptr, ptr %i18, align 8, !tbaa !121
  call void %i128(ptr noundef %i129, ptr noundef nonnull %i125) #31
  br label %bb130

bb130:                                            ; preds = %bb123.bb130_crit_edge, %bb127
  %i131 = getelementptr inbounds %struct.DState, ptr %i111, i64 0, i32 22
  %i132 = load ptr, ptr %i131, align 8, !tbaa !170
  %i133 = icmp eq ptr %i132, null
  br i1 %i133, label %bb130.bb137_crit_edge, label %bb134

bb130.bb137_crit_edge:                            ; preds = %bb130
  br label %bb137

bb134:                                            ; preds = %bb130
  %i135 = load ptr, ptr %i17, align 8, !tbaa !120
  %i136 = load ptr, ptr %i18, align 8, !tbaa !121
  call void %i135(ptr noundef %i136, ptr noundef nonnull %i132) #31
  br label %bb137

bb137:                                            ; preds = %bb130.bb137_crit_edge, %bb134
  %i138 = load ptr, ptr %i17, align 8, !tbaa !120
  %i139 = load ptr, ptr %i18, align 8, !tbaa !121
  %i140 = load ptr, ptr %i22, align 8, !tbaa !130
  call void %i138(ptr noundef %i139, ptr noundef %i140) #31
  br label %bb141

bb141:                                            ; preds = %bb113.bb141_crit_edge, %bb110.bb141_crit_edge, %bb47.bb141_crit_edge, %bb41.bb141_crit_edge, %bb15.bb141_crit_edge, %bb11.bb141_crit_edge, %bb.bb141_crit_edge, %bb137, %bb108, %bb71
  %i142 = phi i32 [ -2, %bb11.bb141_crit_edge ], [ -2, %bb.bb141_crit_edge ], [ -3, %bb15.bb141_crit_edge ], [ 0, %bb41.bb141_crit_edge ], [ 0, %bb47.bb141_crit_edge ], [ 0, %bb71 ], [ %i40, %bb110.bb141_crit_edge ], [ %i40, %bb113.bb141_crit_edge ], [ %i40, %bb137 ], [ %i109, %bb108 ]
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %i) #31
  ret i32 %i142
}

; Function Attrs: nounwind uwtable
define dso_local noundef ptr @BZ2_bzopen(ptr noundef %arg, ptr noundef %arg1) local_unnamed_addr #0 {
bb:
  %i = tail call fastcc ptr @bzopen_or_bzdopen(ptr noundef %arg, i32 noundef -1, ptr noundef %arg1, i32 noundef 0)
  ret ptr %i
}

; Function Attrs: nounwind uwtable
define internal fastcc noundef ptr @bzopen_or_bzdopen(ptr noundef readonly %arg, i32 noundef %arg1, ptr noundef readonly %arg2, i32 noundef %arg3) unnamed_addr #0 {
bb:
  %i = alloca [10 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 10, ptr nonnull %i) #31
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(10) %i, i8 0, i64 10, i1 false)
  %i4 = icmp eq ptr %arg2, null
  br i1 %i4, label %bb.bb102_crit_edge, label %bb5.preheader

bb.bb102_crit_edge:                               ; preds = %bb
  br label %bb102

bb5.preheader:                                    ; preds = %bb
  br label %bb5

bb5:                                              ; preds = %bb5.preheader, %bb24
  %i6 = phi i32 [ %i25, %bb24 ], [ 0, %bb5.preheader ]
  %i7 = phi i32 [ %i26, %bb24 ], [ 9, %bb5.preheader ]
  %i8 = phi ptr [ %i28, %bb24 ], [ %arg2, %bb5.preheader ]
  %i9 = phi i32 [ %i27, %bb24 ], [ 0, %bb5.preheader ]
  %i10 = load i8, ptr %i8, align 1, !tbaa !21
  switch i8 %i10, label %bb13 [
    i8 0, label %bb29
    i8 114, label %bb5.bb24_crit_edge
    i8 119, label %bb11
    i8 115, label %bb12
  ]

bb5.bb24_crit_edge:                               ; preds = %bb5
  br label %bb24

bb11:                                             ; preds = %bb5
  br label %bb24

bb12:                                             ; preds = %bb5
  br label %bb24

bb13:                                             ; preds = %bb5
  %i14 = sext i8 %i10 to i32
  %i15 = tail call ptr @__ctype_b_loc() #35
  %i16 = load ptr, ptr %i15, align 8, !tbaa !20
  %i17 = sext i8 %i10 to i64
  %i18 = getelementptr inbounds i16, ptr %i16, i64 %i17
  %i19 = load i16, ptr %i18, align 2, !tbaa !22
  %i20 = and i16 %i19, 2048
  %i21 = icmp eq i16 %i20, 0
  %i22 = add nsw i32 %i14, -48
  %i23 = select i1 %i21, i32 %i7, i32 %i22
  br label %bb24

bb24:                                             ; preds = %bb5.bb24_crit_edge, %bb13, %bb12, %bb11
  %i25 = phi i32 [ %i6, %bb12 ], [ 1, %bb11 ], [ %i6, %bb13 ], [ 0, %bb5.bb24_crit_edge ]
  %i26 = phi i32 [ %i7, %bb12 ], [ %i7, %bb11 ], [ %i23, %bb13 ], [ %i7, %bb5.bb24_crit_edge ]
  %i27 = phi i32 [ 1, %bb12 ], [ %i9, %bb11 ], [ %i9, %bb13 ], [ %i9, %bb5.bb24_crit_edge ]
  %i28 = getelementptr inbounds i8, ptr %i8, i64 1
  br label %bb5, !llvm.loop !192

bb29:                                             ; preds = %bb5
  %i30 = icmp eq i32 %i6, 0
  %i31 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %i)
  %i32 = getelementptr inbounds i8, ptr %i, i64 %i31
  %i33 = select i1 %i30, i16 114, i16 119
  store i16 %i33, ptr %i32, align 1
  %i34 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %i)
  %i35 = getelementptr inbounds i8, ptr %i, i64 %i34
  store i16 98, ptr %i35, align 1
  %i36 = icmp eq i32 %arg3, 0
  br i1 %i36, label %bb37, label %bb48

bb37:                                             ; preds = %bb29
  %i38 = icmp eq ptr %arg, null
  br i1 %i38, label %bb37.bb42_crit_edge, label %bb39

bb37.bb42_crit_edge:                              ; preds = %bb37
  br label %bb42

bb39:                                             ; preds = %bb37
  %i40 = load i8, ptr %arg, align 1
  %i41 = icmp eq i8 %i40, 0
  br i1 %i41, label %bb39.bb42_crit_edge, label %bb46

bb39.bb42_crit_edge:                              ; preds = %bb39
  br label %bb42

bb42:                                             ; preds = %bb39.bb42_crit_edge, %bb37.bb42_crit_edge
  %i43 = load ptr, ptr @stdout, align 8
  %i44 = load ptr, ptr @stdin, align 8
  %i45 = select i1 %i30, ptr %i44, ptr %i43
  br label %bb50

bb46:                                             ; preds = %bb39
  %i47 = call noalias ptr @fopen(ptr noundef nonnull %arg, ptr noundef nonnull %i)
  br label %bb50

bb48:                                             ; preds = %bb29
  %i49 = call noalias ptr @fdopen(i32 noundef %arg1, ptr noundef nonnull %i) #31
  br label %bb50

bb50:                                             ; preds = %bb48, %bb46, %bb42
  %i51 = phi ptr [ %i45, %bb42 ], [ %i47, %bb46 ], [ %i49, %bb48 ]
  %i52 = icmp eq ptr %i51, null
  br i1 %i52, label %bb50.bb102_crit_edge, label %bb53

bb50.bb102_crit_edge:                             ; preds = %bb50
  br label %bb102

bb53:                                             ; preds = %bb50
  br i1 %i30, label %bb73, label %bb54

bb54:                                             ; preds = %bb53
  %i55 = tail call i32 @llvm.smax.i32(i32 %i7, i32 1)
  %i56 = tail call i32 @llvm.umin.i32(i32 %i55, i32 9)
  %i57 = tail call i32 @ferror(ptr noundef nonnull %i51) #31
  %i58 = icmp eq i32 %i57, 0
  br i1 %i58, label %bb59, label %bb54.bb94_crit_edge

bb54.bb94_crit_edge:                              ; preds = %bb54
  br label %bb94

bb59:                                             ; preds = %bb54
  %i60 = tail call noalias dereferenceable_or_null(5104) ptr @malloc(i64 noundef 5104) #37
  %i61 = icmp eq ptr %i60, null
  br i1 %i61, label %bb59.bb94_crit_edge, label %bb62

bb59.bb94_crit_edge:                              ; preds = %bb59
  br label %bb94

bb62:                                             ; preds = %bb59
  %i63 = getelementptr inbounds %struct.bzFile, ptr %i60, i64 0, i32 5
  store i32 0, ptr %i63, align 8, !tbaa !176
  %i64 = getelementptr inbounds %struct.bzFile, ptr %i60, i64 0, i32 6
  store i8 0, ptr %i64, align 4, !tbaa !178
  %i65 = getelementptr inbounds %struct.bzFile, ptr %i60, i64 0, i32 2
  store i32 0, ptr %i65, align 8, !tbaa !179
  store ptr %i51, ptr %i60, align 8, !tbaa !180
  %i66 = getelementptr inbounds %struct.bzFile, ptr %i60, i64 0, i32 3
  store i8 1, ptr %i66, align 4, !tbaa !181
  %i67 = getelementptr inbounds %struct.bzFile, ptr %i60, i64 0, i32 4
  %i68 = getelementptr inbounds %struct.bzFile, ptr %i60, i64 0, i32 4, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %i68, i8 0, i64 24, i1 false)
  %i69 = tail call i32 @BZ2_bzCompressInit(ptr noundef nonnull %i67, i32 noundef %i56, i32 noundef 0, i32 noundef 30), !range !182
  %i70 = icmp eq i32 %i69, 0
  br i1 %i70, label %bb71, label %bb62.bb92_crit_edge

bb62.bb92_crit_edge:                              ; preds = %bb62
  br label %bb92

bb71:                                             ; preds = %bb62
  %i72 = getelementptr inbounds %struct.bzFile, ptr %i60, i64 0, i32 4, i32 1
  store i32 0, ptr %i72, align 8, !tbaa !183
  store i8 1, ptr %i64, align 4, !tbaa !178
  br label %bb102

bb73:                                             ; preds = %bb53
  %i74 = tail call i32 @ferror(ptr noundef nonnull %i51) #31
  %i75 = icmp eq i32 %i74, 0
  br i1 %i75, label %bb76, label %bb73.bb94_crit_edge

bb73.bb94_crit_edge:                              ; preds = %bb73
  br label %bb94

bb76:                                             ; preds = %bb73
  %i77 = tail call noalias dereferenceable_or_null(5104) ptr @malloc(i64 noundef 5104) #37
  %i78 = icmp eq ptr %i77, null
  br i1 %i78, label %bb76.bb94_crit_edge, label %bb79

bb76.bb94_crit_edge:                              ; preds = %bb76
  br label %bb94

bb79:                                             ; preds = %bb76
  %i80 = getelementptr inbounds %struct.bzFile, ptr %i77, i64 0, i32 5
  store i32 0, ptr %i80, align 8, !tbaa !176
  %i81 = getelementptr inbounds %struct.bzFile, ptr %i77, i64 0, i32 6
  store i8 0, ptr %i81, align 4, !tbaa !178
  store ptr %i51, ptr %i77, align 8, !tbaa !180
  %i82 = getelementptr inbounds %struct.bzFile, ptr %i77, i64 0, i32 2
  store i32 0, ptr %i82, align 8, !tbaa !179
  %i83 = getelementptr inbounds %struct.bzFile, ptr %i77, i64 0, i32 3
  store i8 0, ptr %i83, align 4, !tbaa !181
  %i84 = getelementptr inbounds %struct.bzFile, ptr %i77, i64 0, i32 4
  %i85 = getelementptr inbounds %struct.bzFile, ptr %i77, i64 0, i32 4, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %i85, i8 0, i64 24, i1 false)
  %i86 = tail call i32 @BZ2_bzDecompressInit(ptr noundef nonnull %i84, i32 noundef 0, i32 noundef %i9), !range !182
  %i87 = icmp eq i32 %i86, 0
  br i1 %i87, label %bb88, label %bb79.bb92_crit_edge

bb79.bb92_crit_edge:                              ; preds = %bb79
  br label %bb92

bb88:                                             ; preds = %bb79
  %i89 = load i32, ptr %i82, align 8, !tbaa !179
  %i90 = getelementptr inbounds %struct.bzFile, ptr %i77, i64 0, i32 4, i32 1
  store i32 %i89, ptr %i90, align 8, !tbaa !183
  %i91 = getelementptr inbounds %struct.bzFile, ptr %i77, i64 0, i32 1
  store ptr %i91, ptr %i84, align 8, !tbaa !184
  store i8 1, ptr %i81, align 4, !tbaa !178
  br label %bb102

bb92:                                             ; preds = %bb79.bb92_crit_edge, %bb62.bb92_crit_edge
  %i93 = phi ptr [ %i60, %bb62.bb92_crit_edge ], [ %i77, %bb79.bb92_crit_edge ]
  tail call void @free(ptr noundef nonnull %i93) #31
  br label %bb94

bb94:                                             ; preds = %bb76.bb94_crit_edge, %bb73.bb94_crit_edge, %bb59.bb94_crit_edge, %bb54.bb94_crit_edge, %bb92
  %i95 = load ptr, ptr @stdin, align 8, !tbaa !20
  %i96 = icmp eq ptr %i51, %i95
  %i97 = load ptr, ptr @stdout, align 8
  %i98 = icmp eq ptr %i51, %i97
  %i99 = select i1 %i96, i1 true, i1 %i98
  br i1 %i99, label %bb94.bb102_crit_edge, label %bb100

bb94.bb102_crit_edge:                             ; preds = %bb94
  br label %bb102

bb100:                                            ; preds = %bb94
  %i101 = tail call i32 @fclose(ptr noundef nonnull %i51)
  br label %bb102

bb102:                                            ; preds = %bb94.bb102_crit_edge, %bb50.bb102_crit_edge, %bb.bb102_crit_edge, %bb100, %bb88, %bb71
  %i103 = phi ptr [ null, %bb.bb102_crit_edge ], [ null, %bb50.bb102_crit_edge ], [ null, %bb100 ], [ null, %bb94.bb102_crit_edge ], [ %i60, %bb71 ], [ %i77, %bb88 ]
  call void @llvm.lifetime.end.p0(i64 10, ptr nonnull %i) #31
  ret ptr %i103
}

; Function Attrs: nounwind uwtable
define dso_local noundef ptr @BZ2_bzdopen(i32 noundef %arg, ptr noundef %arg1) local_unnamed_addr #0 {
bb:
  %i = tail call fastcc ptr @bzopen_or_bzdopen(ptr noundef null, i32 noundef %arg, ptr noundef %arg1, i32 noundef 1)
  ret ptr %i
}

; Function Attrs: nounwind uwtable
define dso_local i32 @BZ2_bzread(ptr noundef %arg, ptr noundef %arg1, i32 noundef %arg2) local_unnamed_addr #0 {
bb:
  %i = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i) #31
  %i3 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 5
  %i4 = load i32, ptr %i3, align 8, !tbaa !176
  %i5 = icmp eq i32 %i4, 4
  br i1 %i5, label %bb.bb12_crit_edge, label %bb6

bb.bb12_crit_edge:                                ; preds = %bb
  br label %bb12

bb6:                                              ; preds = %bb
  %i7 = call i32 @BZ2_bzRead(ptr noundef nonnull %i, ptr noundef nonnull %arg, ptr noundef %arg1, i32 noundef %arg2)
  %i8 = load i32, ptr %i, align 4
  %i9 = and i32 %i8, -5
  %i10 = icmp eq i32 %i9, 0
  %i11 = select i1 %i10, i32 %i7, i32 -1
  br label %bb12

bb12:                                             ; preds = %bb.bb12_crit_edge, %bb6
  %i13 = phi i32 [ 0, %bb.bb12_crit_edge ], [ %i11, %bb6 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i) #31
  ret i32 %i13
}

; Function Attrs: nounwind uwtable
define dso_local i32 @BZ2_bzwrite(ptr noundef %arg, ptr noundef %arg1, i32 noundef %arg2) local_unnamed_addr #0 {
bb:
  %i = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i) #31
  call void @BZ2_bzWrite(ptr noundef nonnull %i, ptr noundef %arg, ptr noundef %arg1, i32 noundef %arg2)
  %i3 = load i32, ptr %i, align 4, !tbaa !19
  %i4 = icmp eq i32 %i3, 0
  %i5 = select i1 %i4, i32 %arg2, i32 -1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i) #31
  ret i32 %i5
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @BZ2_bzflush(ptr nocapture noundef readnone %arg) local_unnamed_addr #22 {
bb:
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local void @BZ2_bzclose(ptr noundef %arg) local_unnamed_addr #0 {
bb:
  %i = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i) #31
  %i1 = icmp eq ptr %arg, null
  br i1 %i1, label %bb.bb118_crit_edge, label %bb2

bb.bb118_crit_edge:                               ; preds = %bb
  br label %bb118

bb2:                                              ; preds = %bb
  %i3 = load ptr, ptr %arg, align 8, !tbaa !180
  %i4 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 3
  %i5 = load i8, ptr %i4, align 4, !tbaa !181
  %i6 = icmp eq i8 %i5, 0
  br i1 %i6, label %bb63, label %bb7

bb7:                                              ; preds = %bb2
  call void @BZ2_bzWriteClose64(ptr noundef nonnull %i, ptr noundef nonnull %arg, i32 noundef 0, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef null)
  %i8 = load i32, ptr %i, align 4, !tbaa !19
  %i9 = icmp eq i32 %i8, 0
  br i1 %i9, label %bb7.bb110_crit_edge, label %bb10

bb7.bb110_crit_edge:                              ; preds = %bb7
  br label %bb110

bb10:                                             ; preds = %bb7
  %i11 = load i8, ptr %i4, align 4, !tbaa !181
  %i12 = icmp eq i8 %i11, 0
  br i1 %i12, label %bb13, label %bb15

bb13:                                             ; preds = %bb10
  %i14 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 5
  store i32 -1, ptr %i14, align 8, !tbaa !176
  br label %bb110

bb15:                                             ; preds = %bb10
  %i16 = load ptr, ptr %arg, align 8, !tbaa !180
  %i17 = call i32 @ferror(ptr noundef %i16) #31
  %i18 = icmp eq i32 %i17, 0
  %i19 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 5
  br i1 %i18, label %bb21, label %bb20

bb20:                                             ; preds = %bb15
  store i32 -6, ptr %i19, align 8, !tbaa !176
  br label %bb110

bb21:                                             ; preds = %bb15
  store i32 0, ptr %i19, align 8, !tbaa !176
  %i22 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 8
  %i23 = load ptr, ptr %i22, align 8, !tbaa !130
  %i24 = icmp eq ptr %i23, null
  br i1 %i24, label %bb21.bb62_crit_edge, label %bb25

bb21.bb62_crit_edge:                              ; preds = %bb21
  br label %bb62

bb25:                                             ; preds = %bb21
  %i26 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4
  %i27 = load ptr, ptr %i23, align 8, !tbaa !122
  %i28 = icmp eq ptr %i27, %i26
  br i1 %i28, label %bb29, label %bb25.bb62_crit_edge

bb25.bb62_crit_edge:                              ; preds = %bb25
  br label %bb62

bb29:                                             ; preds = %bb25
  %i30 = getelementptr inbounds %struct.EState, ptr %i23, i64 0, i32 4
  %i31 = load ptr, ptr %i30, align 8, !tbaa !49
  %i32 = icmp eq ptr %i31, null
  br i1 %i32, label %bb29.bb38_crit_edge, label %bb33

bb29.bb38_crit_edge:                              ; preds = %bb29
  br label %bb38

bb33:                                             ; preds = %bb29
  %i34 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 10
  %i35 = load ptr, ptr %i34, align 8, !tbaa !120
  %i36 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 11
  %i37 = load ptr, ptr %i36, align 8, !tbaa !121
  call void %i35(ptr noundef %i37, ptr noundef nonnull %i31) #31
  br label %bb38

bb38:                                             ; preds = %bb29.bb38_crit_edge, %bb33
  %i39 = getelementptr inbounds %struct.EState, ptr %i23, i64 0, i32 5
  %i40 = load ptr, ptr %i39, align 8, !tbaa !50
  %i41 = icmp eq ptr %i40, null
  br i1 %i41, label %bb38.bb47_crit_edge, label %bb42

bb38.bb47_crit_edge:                              ; preds = %bb38
  br label %bb47

bb42:                                             ; preds = %bb38
  %i43 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 10
  %i44 = load ptr, ptr %i43, align 8, !tbaa !120
  %i45 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 11
  %i46 = load ptr, ptr %i45, align 8, !tbaa !121
  call void %i44(ptr noundef %i46, ptr noundef nonnull %i40) #31
  br label %bb47

bb47:                                             ; preds = %bb38.bb47_crit_edge, %bb42
  %i48 = getelementptr inbounds %struct.EState, ptr %i23, i64 0, i32 6
  %i49 = load ptr, ptr %i48, align 8, !tbaa !15
  %i50 = icmp eq ptr %i49, null
  br i1 %i50, label %bb47.bb56_crit_edge, label %bb51

bb47.bb56_crit_edge:                              ; preds = %bb47
  br label %bb56

bb51:                                             ; preds = %bb47
  %i52 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 10
  %i53 = load ptr, ptr %i52, align 8, !tbaa !120
  %i54 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 11
  %i55 = load ptr, ptr %i54, align 8, !tbaa !121
  call void %i53(ptr noundef %i55, ptr noundef nonnull %i49) #31
  br label %bb56

bb56:                                             ; preds = %bb47.bb56_crit_edge, %bb51
  %i57 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 10
  %i58 = load ptr, ptr %i57, align 8, !tbaa !120
  %i59 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 11
  %i60 = load ptr, ptr %i59, align 8, !tbaa !121
  %i61 = load ptr, ptr %i22, align 8, !tbaa !130
  call void %i58(ptr noundef %i60, ptr noundef %i61) #31
  br label %bb62

bb62:                                             ; preds = %bb25.bb62_crit_edge, %bb21.bb62_crit_edge, %bb56
  call void @free(ptr noundef nonnull %arg) #31
  br label %bb110

bb63:                                             ; preds = %bb2
  store i32 0, ptr %i, align 4, !tbaa !19
  %i64 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 5
  store i32 0, ptr %i64, align 8, !tbaa !176
  %i65 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 6
  %i66 = load i8, ptr %i65, align 4, !tbaa !178
  %i67 = icmp eq i8 %i66, 0
  br i1 %i67, label %bb63.bb109_crit_edge, label %bb68

bb63.bb109_crit_edge:                             ; preds = %bb63
  br label %bb109

bb68:                                             ; preds = %bb63
  %i69 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 8
  %i70 = load ptr, ptr %i69, align 8, !tbaa !130
  %i71 = icmp eq ptr %i70, null
  br i1 %i71, label %bb68.bb109_crit_edge, label %bb72

bb68.bb109_crit_edge:                             ; preds = %bb68
  br label %bb109

bb72:                                             ; preds = %bb68
  %i73 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4
  %i74 = load ptr, ptr %i70, align 8, !tbaa !151
  %i75 = icmp eq ptr %i74, %i73
  br i1 %i75, label %bb76, label %bb72.bb109_crit_edge

bb72.bb109_crit_edge:                             ; preds = %bb72
  br label %bb109

bb76:                                             ; preds = %bb72
  %i77 = getelementptr inbounds %struct.DState, ptr %i70, i64 0, i32 20
  %i78 = load ptr, ptr %i77, align 8, !tbaa !173
  %i79 = icmp eq ptr %i78, null
  br i1 %i79, label %bb76.bb85_crit_edge, label %bb80

bb76.bb85_crit_edge:                              ; preds = %bb76
  br label %bb85

bb80:                                             ; preds = %bb76
  %i81 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 10
  %i82 = load ptr, ptr %i81, align 8, !tbaa !120
  %i83 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 11
  %i84 = load ptr, ptr %i83, align 8, !tbaa !121
  tail call void %i82(ptr noundef %i84, ptr noundef nonnull %i78) #31
  br label %bb85

bb85:                                             ; preds = %bb76.bb85_crit_edge, %bb80
  %i86 = getelementptr inbounds %struct.DState, ptr %i70, i64 0, i32 21
  %i87 = load ptr, ptr %i86, align 8, !tbaa !169
  %i88 = icmp eq ptr %i87, null
  br i1 %i88, label %bb85.bb94_crit_edge, label %bb89

bb85.bb94_crit_edge:                              ; preds = %bb85
  br label %bb94

bb89:                                             ; preds = %bb85
  %i90 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 10
  %i91 = load ptr, ptr %i90, align 8, !tbaa !120
  %i92 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 11
  %i93 = load ptr, ptr %i92, align 8, !tbaa !121
  tail call void %i91(ptr noundef %i93, ptr noundef nonnull %i87) #31
  br label %bb94

bb94:                                             ; preds = %bb85.bb94_crit_edge, %bb89
  %i95 = getelementptr inbounds %struct.DState, ptr %i70, i64 0, i32 22
  %i96 = load ptr, ptr %i95, align 8, !tbaa !170
  %i97 = icmp eq ptr %i96, null
  br i1 %i97, label %bb94.bb103_crit_edge, label %bb98

bb94.bb103_crit_edge:                             ; preds = %bb94
  br label %bb103

bb98:                                             ; preds = %bb94
  %i99 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 10
  %i100 = load ptr, ptr %i99, align 8, !tbaa !120
  %i101 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 11
  %i102 = load ptr, ptr %i101, align 8, !tbaa !121
  tail call void %i100(ptr noundef %i102, ptr noundef nonnull %i96) #31
  br label %bb103

bb103:                                            ; preds = %bb94.bb103_crit_edge, %bb98
  %i104 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 10
  %i105 = load ptr, ptr %i104, align 8, !tbaa !120
  %i106 = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 4, i32 11
  %i107 = load ptr, ptr %i106, align 8, !tbaa !121
  %i108 = load ptr, ptr %i69, align 8, !tbaa !130
  tail call void %i105(ptr noundef %i107, ptr noundef %i108) #31
  br label %bb109

bb109:                                            ; preds = %bb72.bb109_crit_edge, %bb68.bb109_crit_edge, %bb63.bb109_crit_edge, %bb103
  tail call void @free(ptr noundef nonnull %arg) #31
  br label %bb110

bb110:                                            ; preds = %bb7.bb110_crit_edge, %bb109, %bb62, %bb20, %bb13
  %i111 = load ptr, ptr @stdin, align 8, !tbaa !20
  %i112 = icmp eq ptr %i3, %i111
  %i113 = load ptr, ptr @stdout, align 8
  %i114 = icmp eq ptr %i3, %i113
  %i115 = select i1 %i112, i1 true, i1 %i114
  br i1 %i115, label %bb110.bb118_crit_edge, label %bb116

bb110.bb118_crit_edge:                            ; preds = %bb110
  br label %bb118

bb116:                                            ; preds = %bb110
  %i117 = call i32 @fclose(ptr noundef %i3)
  br label %bb118

bb118:                                            ; preds = %bb110.bb118_crit_edge, %bb.bb118_crit_edge, %bb116
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i) #31
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local ptr @BZ2_bzerror(ptr nocapture noundef readonly %arg, ptr nocapture noundef writeonly %arg1) local_unnamed_addr #27 {
bb:
  %i = getelementptr inbounds %struct.bzFile, ptr %arg, i64 0, i32 5
  %i2 = load i32, ptr %i, align 8, !tbaa !176
  %i3 = tail call i32 @llvm.smin.i32(i32 %i2, i32 0)
  store i32 %i3, ptr %arg1, align 4, !tbaa !19
  %i4 = sub nsw i32 0, %i3
  %i5 = zext nneg i32 %i4 to i64
  %i6 = getelementptr inbounds [16 x ptr], ptr @bzerrorstrings, i64 0, i64 %i5
  %i7 = load ptr, ptr %i6, align 8, !tbaa !20
  ret ptr %i7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write) uwtable
define dso_local void @BZ2_bsInitWrite(ptr nocapture noundef writeonly %arg) local_unnamed_addr #28 {
bb:
  %i = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 25
  store i32 0, ptr %i, align 4, !tbaa !193
  %i1 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 24
  store i32 0, ptr %i1, align 8, !tbaa !194
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @BZ2_compressBlock(ptr noundef %arg, i8 noundef zeroext %arg1) local_unnamed_addr #0 {
bb:
  %i = alloca [6 x i16], align 2
  %i2 = alloca [6 x i32], align 16
  %i3 = alloca [6 x i8], align 1
  %i4 = alloca [16 x i8], align 16
  %i5 = alloca [256 x i8], align 16
  %i6 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 17
  %i7 = load i32, ptr %i6, align 4, !tbaa !16
  %i8 = icmp sgt i32 %i7, 0
  br i1 %i8, label %bb9, label %bb.bb31_crit_edge

bb.bb31_crit_edge:                                ; preds = %bb
  br label %bb31

bb9:                                              ; preds = %bb
  %i10 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 26
  %i11 = load i32, ptr %i10, align 8, !tbaa !139
  %i12 = xor i32 %i11, -1
  store i32 %i12, ptr %i10, align 8, !tbaa !139
  %i13 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 27
  %i14 = load i32, ptr %i13, align 4, !tbaa !125
  %i15 = tail call i32 @llvm.fshl.i32(i32 %i14, i32 %i14, i32 1)
  %i16 = xor i32 %i15, %i12
  store i32 %i16, ptr %i13, align 4, !tbaa !125
  %i17 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 29
  %i18 = load i32, ptr %i17, align 4, !tbaa !140
  %i19 = icmp sgt i32 %i18, 1
  br i1 %i19, label %bb20, label %bb9.bb22_crit_edge

bb9.bb22_crit_edge:                               ; preds = %bb9
  br label %bb22

bb20:                                             ; preds = %bb9
  %i21 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  store i32 0, ptr %i21, align 4, !tbaa !137
  br label %bb22

bb22:                                             ; preds = %bb9.bb22_crit_edge, %bb20
  %i23 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 28
  %i24 = load i32, ptr %i23, align 8, !tbaa !17
  %i25 = icmp sgt i32 %i24, 1
  br i1 %i25, label %bb26, label %bb22.bb29_crit_edge

bb22.bb29_crit_edge:                              ; preds = %bb22
  br label %bb29

bb26:                                             ; preds = %bb22
  %i27 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i28 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i27, ptr noundef nonnull @.str.105, i32 noundef %i18, i32 noundef %i12, i32 noundef %i16, i32 noundef %i7) #32
  br label %bb29

bb29:                                             ; preds = %bb22.bb29_crit_edge, %bb26
  tail call void @BZ2_blockSort(ptr noundef nonnull %arg) #31
  %i30 = load i32, ptr %i6, align 4, !tbaa !16
  br label %bb31

bb31:                                             ; preds = %bb.bb31_crit_edge, %bb29
  %i32 = phi i32 [ %i30, %bb29 ], [ %i7, %bb.bb31_crit_edge ]
  %i33 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 5
  %i34 = load ptr, ptr %i33, align 8, !tbaa !50
  %i35 = sext i32 %i32 to i64
  %i36 = getelementptr inbounds i8, ptr %i34, i64 %i35
  %i37 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 11
  store ptr %i36, ptr %i37, align 8, !tbaa !129
  %i38 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 29
  %i39 = load i32, ptr %i38, align 4, !tbaa !140
  %i40 = icmp eq i32 %i39, 1
  br i1 %i40, label %bb41, label %bb31.bb119_crit_edge

bb31.bb119_crit_edge:                             ; preds = %bb31
  br label %bb119

bb41:                                             ; preds = %bb31
  %i42 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 25
  %i43 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 24
  store i32 1107296256, ptr %i43, align 8, !tbaa !194
  store i32 8, ptr %i42, align 4, !tbaa !193
  %i44 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i45 = load i32, ptr %i44, align 4, !tbaa !137
  br label %bb46

bb46:                                             ; preds = %bb46.bb46_crit_edge, %bb41
  %i47 = phi i32 [ %i45, %bb41 ], [ %i55, %bb46.bb46_crit_edge ]
  %i48 = phi i32 [ 1107296256, %bb41 ], [ %i57, %bb46.bb46_crit_edge ]
  %i49 = lshr i32 %i48, 24
  %i50 = trunc i32 %i49 to i8
  %i51 = load ptr, ptr %i37, align 8, !tbaa !129
  %i52 = sext i32 %i47 to i64
  %i53 = getelementptr inbounds i8, ptr %i51, i64 %i52
  store i8 %i50, ptr %i53, align 1, !tbaa !21
  %i54 = load i32, ptr %i44, align 4, !tbaa !137
  %i55 = add nsw i32 %i54, 1
  store i32 %i55, ptr %i44, align 4, !tbaa !137
  %i56 = load i32, ptr %i43, align 8, !tbaa !194
  %i57 = shl i32 %i56, 8
  store i32 %i57, ptr %i43, align 8, !tbaa !194
  %i58 = load i32, ptr %i42, align 4, !tbaa !193
  %i59 = add nsw i32 %i58, -8
  store i32 %i59, ptr %i42, align 4, !tbaa !193
  %i60 = icmp sgt i32 %i58, 15
  br i1 %i60, label %bb46.bb46_crit_edge, label %bb61, !llvm.loop !195

bb46.bb46_crit_edge:                              ; preds = %bb46
  br label %bb46

bb61:                                             ; preds = %bb46
  %i62 = sub i32 32, %i58
  %i63 = shl i32 90, %i62
  %i64 = or i32 %i63, %i57
  store i32 %i64, ptr %i43, align 8, !tbaa !194
  store i32 %i58, ptr %i42, align 4, !tbaa !193
  %i65 = icmp sgt i32 %i58, 7
  br i1 %i65, label %bb68.preheader, label %bb66

bb68.preheader:                                   ; preds = %bb61
  br label %bb68

bb66:                                             ; preds = %bb61
  %i67 = add nsw i32 %i58, 8
  br label %bb83

bb68:                                             ; preds = %bb68.bb68_crit_edge, %bb68.preheader
  %i69 = phi i32 [ %i77, %bb68.bb68_crit_edge ], [ %i55, %bb68.preheader ]
  %i70 = phi i32 [ %i79, %bb68.bb68_crit_edge ], [ %i64, %bb68.preheader ]
  %i71 = lshr i32 %i70, 24
  %i72 = trunc i32 %i71 to i8
  %i73 = load ptr, ptr %i37, align 8, !tbaa !129
  %i74 = sext i32 %i69 to i64
  %i75 = getelementptr inbounds i8, ptr %i73, i64 %i74
  store i8 %i72, ptr %i75, align 1, !tbaa !21
  %i76 = load i32, ptr %i44, align 4, !tbaa !137
  %i77 = add nsw i32 %i76, 1
  store i32 %i77, ptr %i44, align 4, !tbaa !137
  %i78 = load i32, ptr %i43, align 8, !tbaa !194
  %i79 = shl i32 %i78, 8
  store i32 %i79, ptr %i43, align 8, !tbaa !194
  %i80 = load i32, ptr %i42, align 4, !tbaa !193
  %i81 = add nsw i32 %i80, -8
  store i32 %i81, ptr %i42, align 4, !tbaa !193
  %i82 = icmp sgt i32 %i80, 15
  br i1 %i82, label %bb68.bb68_crit_edge, label %bb83.loopexit, !llvm.loop !195

bb68.bb68_crit_edge:                              ; preds = %bb68
  br label %bb68

bb83.loopexit:                                    ; preds = %bb68
  br label %bb83

bb83:                                             ; preds = %bb83.loopexit, %bb66
  %i84 = phi i32 [ %i55, %bb66 ], [ %i77, %bb83.loopexit ]
  %i85 = phi i32 [ %i64, %bb66 ], [ %i79, %bb83.loopexit ]
  %i86 = phi i32 [ %i67, %bb66 ], [ %i80, %bb83.loopexit ]
  %i87 = sub i32 32, %i86
  %i88 = shl i32 104, %i87
  %i89 = or i32 %i88, %i85
  store i32 %i89, ptr %i43, align 8, !tbaa !194
  store i32 %i86, ptr %i42, align 4, !tbaa !193
  %i90 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 30
  %i91 = load i32, ptr %i90, align 8, !tbaa !126
  %i92 = add i32 %i91, 48
  %i93 = icmp sgt i32 %i86, 7
  br i1 %i93, label %bb96.preheader, label %bb94

bb96.preheader:                                   ; preds = %bb83
  br label %bb96

bb94:                                             ; preds = %bb83
  %i95 = add nsw i32 %i86, 8
  br label %bb111

bb96:                                             ; preds = %bb96.bb96_crit_edge, %bb96.preheader
  %i97 = phi i32 [ %i105, %bb96.bb96_crit_edge ], [ %i84, %bb96.preheader ]
  %i98 = phi i32 [ %i107, %bb96.bb96_crit_edge ], [ %i89, %bb96.preheader ]
  %i99 = lshr i32 %i98, 24
  %i100 = trunc i32 %i99 to i8
  %i101 = load ptr, ptr %i37, align 8, !tbaa !129
  %i102 = sext i32 %i97 to i64
  %i103 = getelementptr inbounds i8, ptr %i101, i64 %i102
  store i8 %i100, ptr %i103, align 1, !tbaa !21
  %i104 = load i32, ptr %i44, align 4, !tbaa !137
  %i105 = add nsw i32 %i104, 1
  store i32 %i105, ptr %i44, align 4, !tbaa !137
  %i106 = load i32, ptr %i43, align 8, !tbaa !194
  %i107 = shl i32 %i106, 8
  store i32 %i107, ptr %i43, align 8, !tbaa !194
  %i108 = load i32, ptr %i42, align 4, !tbaa !193
  %i109 = add nsw i32 %i108, -8
  store i32 %i109, ptr %i42, align 4, !tbaa !193
  %i110 = icmp sgt i32 %i108, 15
  br i1 %i110, label %bb96.bb96_crit_edge, label %bb111.loopexit, !llvm.loop !195

bb96.bb96_crit_edge:                              ; preds = %bb96
  br label %bb96

bb111.loopexit:                                   ; preds = %bb96
  br label %bb111

bb111:                                            ; preds = %bb111.loopexit, %bb94
  %i112 = phi i32 [ %i89, %bb94 ], [ %i107, %bb111.loopexit ]
  %i113 = phi i32 [ %i95, %bb94 ], [ %i108, %bb111.loopexit ]
  %i114 = and i32 %i92, 255
  %i115 = sub i32 32, %i113
  %i116 = shl i32 %i114, %i115
  %i117 = or i32 %i116, %i112
  store i32 %i117, ptr %i43, align 8, !tbaa !194
  store i32 %i113, ptr %i42, align 4, !tbaa !193
  %i118 = load i32, ptr %i6, align 4, !tbaa !16
  br label %bb119

bb119:                                            ; preds = %bb31.bb119_crit_edge, %bb111
  %i120 = phi i32 [ %i118, %bb111 ], [ %i32, %bb31.bb119_crit_edge ]
  %i121 = icmp sgt i32 %i120, 0
  br i1 %i121, label %bb122, label %bb119.bb4256_crit_edge

bb119.bb4256_crit_edge:                           ; preds = %bb119
  br label %bb4256

bb122:                                            ; preds = %bb119
  %i123 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 25
  %i124 = load i32, ptr %i123, align 4, !tbaa !193
  %i125 = icmp sgt i32 %i124, 7
  %i126 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 24
  br i1 %i125, label %bb130, label %bb127

bb127:                                            ; preds = %bb122
  %i128 = load i32, ptr %i126, align 8, !tbaa !194
  %i129 = add nsw i32 %i124, 8
  br label %bb149

bb130:                                            ; preds = %bb122
  %i131 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i132 = load i32, ptr %i126, align 8, !tbaa !194
  %i133 = load i32, ptr %i131, align 4, !tbaa !137
  br label %bb134

bb134:                                            ; preds = %bb134.bb134_crit_edge, %bb130
  %i135 = phi i32 [ %i133, %bb130 ], [ %i143, %bb134.bb134_crit_edge ]
  %i136 = phi i32 [ %i132, %bb130 ], [ %i145, %bb134.bb134_crit_edge ]
  %i137 = lshr i32 %i136, 24
  %i138 = trunc i32 %i137 to i8
  %i139 = load ptr, ptr %i37, align 8, !tbaa !129
  %i140 = sext i32 %i135 to i64
  %i141 = getelementptr inbounds i8, ptr %i139, i64 %i140
  store i8 %i138, ptr %i141, align 1, !tbaa !21
  %i142 = load i32, ptr %i131, align 4, !tbaa !137
  %i143 = add nsw i32 %i142, 1
  store i32 %i143, ptr %i131, align 4, !tbaa !137
  %i144 = load i32, ptr %i126, align 8, !tbaa !194
  %i145 = shl i32 %i144, 8
  store i32 %i145, ptr %i126, align 8, !tbaa !194
  %i146 = load i32, ptr %i123, align 4, !tbaa !193
  %i147 = add nsw i32 %i146, -8
  store i32 %i147, ptr %i123, align 4, !tbaa !193
  %i148 = icmp sgt i32 %i146, 15
  br i1 %i148, label %bb134.bb134_crit_edge, label %bb149.loopexit, !llvm.loop !195

bb134.bb134_crit_edge:                            ; preds = %bb134
  br label %bb134

bb149.loopexit:                                   ; preds = %bb134
  br label %bb149

bb149:                                            ; preds = %bb149.loopexit, %bb127
  %i150 = phi i32 [ %i128, %bb127 ], [ %i145, %bb149.loopexit ]
  %i151 = phi i32 [ %i129, %bb127 ], [ %i146, %bb149.loopexit ]
  %i152 = sub i32 32, %i151
  %i153 = shl i32 49, %i152
  %i154 = or i32 %i153, %i150
  store i32 %i154, ptr %i126, align 8, !tbaa !194
  store i32 %i151, ptr %i123, align 4, !tbaa !193
  %i155 = icmp sgt i32 %i151, 7
  br i1 %i155, label %bb158, label %bb156

bb156:                                            ; preds = %bb149
  %i157 = add nsw i32 %i151, 8
  br label %bb176

bb158:                                            ; preds = %bb149
  %i159 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i160 = load i32, ptr %i159, align 4, !tbaa !137
  br label %bb161

bb161:                                            ; preds = %bb161.bb161_crit_edge, %bb158
  %i162 = phi i32 [ %i160, %bb158 ], [ %i170, %bb161.bb161_crit_edge ]
  %i163 = phi i32 [ %i154, %bb158 ], [ %i172, %bb161.bb161_crit_edge ]
  %i164 = lshr i32 %i163, 24
  %i165 = trunc i32 %i164 to i8
  %i166 = load ptr, ptr %i37, align 8, !tbaa !129
  %i167 = sext i32 %i162 to i64
  %i168 = getelementptr inbounds i8, ptr %i166, i64 %i167
  store i8 %i165, ptr %i168, align 1, !tbaa !21
  %i169 = load i32, ptr %i159, align 4, !tbaa !137
  %i170 = add nsw i32 %i169, 1
  store i32 %i170, ptr %i159, align 4, !tbaa !137
  %i171 = load i32, ptr %i126, align 8, !tbaa !194
  %i172 = shl i32 %i171, 8
  store i32 %i172, ptr %i126, align 8, !tbaa !194
  %i173 = load i32, ptr %i123, align 4, !tbaa !193
  %i174 = add nsw i32 %i173, -8
  store i32 %i174, ptr %i123, align 4, !tbaa !193
  %i175 = icmp sgt i32 %i173, 15
  br i1 %i175, label %bb161.bb161_crit_edge, label %bb176.loopexit, !llvm.loop !195

bb161.bb161_crit_edge:                            ; preds = %bb161
  br label %bb161

bb176.loopexit:                                   ; preds = %bb161
  br label %bb176

bb176:                                            ; preds = %bb176.loopexit, %bb156
  %i177 = phi i32 [ %i154, %bb156 ], [ %i172, %bb176.loopexit ]
  %i178 = phi i32 [ %i157, %bb156 ], [ %i173, %bb176.loopexit ]
  %i179 = sub i32 32, %i178
  %i180 = shl i32 65, %i179
  %i181 = or i32 %i180, %i177
  store i32 %i181, ptr %i126, align 8, !tbaa !194
  store i32 %i178, ptr %i123, align 4, !tbaa !193
  %i182 = icmp sgt i32 %i178, 7
  br i1 %i182, label %bb185, label %bb183

bb183:                                            ; preds = %bb176
  %i184 = add nsw i32 %i178, 8
  br label %bb203

bb185:                                            ; preds = %bb176
  %i186 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i187 = load i32, ptr %i186, align 4, !tbaa !137
  br label %bb188

bb188:                                            ; preds = %bb188.bb188_crit_edge, %bb185
  %i189 = phi i32 [ %i187, %bb185 ], [ %i197, %bb188.bb188_crit_edge ]
  %i190 = phi i32 [ %i181, %bb185 ], [ %i199, %bb188.bb188_crit_edge ]
  %i191 = lshr i32 %i190, 24
  %i192 = trunc i32 %i191 to i8
  %i193 = load ptr, ptr %i37, align 8, !tbaa !129
  %i194 = sext i32 %i189 to i64
  %i195 = getelementptr inbounds i8, ptr %i193, i64 %i194
  store i8 %i192, ptr %i195, align 1, !tbaa !21
  %i196 = load i32, ptr %i186, align 4, !tbaa !137
  %i197 = add nsw i32 %i196, 1
  store i32 %i197, ptr %i186, align 4, !tbaa !137
  %i198 = load i32, ptr %i126, align 8, !tbaa !194
  %i199 = shl i32 %i198, 8
  store i32 %i199, ptr %i126, align 8, !tbaa !194
  %i200 = load i32, ptr %i123, align 4, !tbaa !193
  %i201 = add nsw i32 %i200, -8
  store i32 %i201, ptr %i123, align 4, !tbaa !193
  %i202 = icmp sgt i32 %i200, 15
  br i1 %i202, label %bb188.bb188_crit_edge, label %bb203.loopexit, !llvm.loop !195

bb188.bb188_crit_edge:                            ; preds = %bb188
  br label %bb188

bb203.loopexit:                                   ; preds = %bb188
  br label %bb203

bb203:                                            ; preds = %bb203.loopexit, %bb183
  %i204 = phi i32 [ %i181, %bb183 ], [ %i199, %bb203.loopexit ]
  %i205 = phi i32 [ %i184, %bb183 ], [ %i200, %bb203.loopexit ]
  %i206 = sub i32 32, %i205
  %i207 = shl i32 89, %i206
  %i208 = or i32 %i207, %i204
  store i32 %i208, ptr %i126, align 8, !tbaa !194
  store i32 %i205, ptr %i123, align 4, !tbaa !193
  %i209 = icmp sgt i32 %i205, 7
  br i1 %i209, label %bb212, label %bb210

bb210:                                            ; preds = %bb203
  %i211 = add nsw i32 %i205, 8
  br label %bb230

bb212:                                            ; preds = %bb203
  %i213 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i214 = load i32, ptr %i213, align 4, !tbaa !137
  br label %bb215

bb215:                                            ; preds = %bb215.bb215_crit_edge, %bb212
  %i216 = phi i32 [ %i214, %bb212 ], [ %i224, %bb215.bb215_crit_edge ]
  %i217 = phi i32 [ %i208, %bb212 ], [ %i226, %bb215.bb215_crit_edge ]
  %i218 = lshr i32 %i217, 24
  %i219 = trunc i32 %i218 to i8
  %i220 = load ptr, ptr %i37, align 8, !tbaa !129
  %i221 = sext i32 %i216 to i64
  %i222 = getelementptr inbounds i8, ptr %i220, i64 %i221
  store i8 %i219, ptr %i222, align 1, !tbaa !21
  %i223 = load i32, ptr %i213, align 4, !tbaa !137
  %i224 = add nsw i32 %i223, 1
  store i32 %i224, ptr %i213, align 4, !tbaa !137
  %i225 = load i32, ptr %i126, align 8, !tbaa !194
  %i226 = shl i32 %i225, 8
  store i32 %i226, ptr %i126, align 8, !tbaa !194
  %i227 = load i32, ptr %i123, align 4, !tbaa !193
  %i228 = add nsw i32 %i227, -8
  store i32 %i228, ptr %i123, align 4, !tbaa !193
  %i229 = icmp sgt i32 %i227, 15
  br i1 %i229, label %bb215.bb215_crit_edge, label %bb230.loopexit, !llvm.loop !195

bb215.bb215_crit_edge:                            ; preds = %bb215
  br label %bb215

bb230.loopexit:                                   ; preds = %bb215
  br label %bb230

bb230:                                            ; preds = %bb230.loopexit, %bb210
  %i231 = phi i32 [ %i208, %bb210 ], [ %i226, %bb230.loopexit ]
  %i232 = phi i32 [ %i211, %bb210 ], [ %i227, %bb230.loopexit ]
  %i233 = sub i32 32, %i232
  %i234 = shl i32 38, %i233
  %i235 = or i32 %i234, %i231
  store i32 %i235, ptr %i126, align 8, !tbaa !194
  store i32 %i232, ptr %i123, align 4, !tbaa !193
  %i236 = icmp sgt i32 %i232, 7
  br i1 %i236, label %bb239, label %bb237

bb237:                                            ; preds = %bb230
  %i238 = add nsw i32 %i232, 8
  br label %bb257

bb239:                                            ; preds = %bb230
  %i240 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i241 = load i32, ptr %i240, align 4, !tbaa !137
  br label %bb242

bb242:                                            ; preds = %bb242.bb242_crit_edge, %bb239
  %i243 = phi i32 [ %i241, %bb239 ], [ %i251, %bb242.bb242_crit_edge ]
  %i244 = phi i32 [ %i235, %bb239 ], [ %i253, %bb242.bb242_crit_edge ]
  %i245 = lshr i32 %i244, 24
  %i246 = trunc i32 %i245 to i8
  %i247 = load ptr, ptr %i37, align 8, !tbaa !129
  %i248 = sext i32 %i243 to i64
  %i249 = getelementptr inbounds i8, ptr %i247, i64 %i248
  store i8 %i246, ptr %i249, align 1, !tbaa !21
  %i250 = load i32, ptr %i240, align 4, !tbaa !137
  %i251 = add nsw i32 %i250, 1
  store i32 %i251, ptr %i240, align 4, !tbaa !137
  %i252 = load i32, ptr %i126, align 8, !tbaa !194
  %i253 = shl i32 %i252, 8
  store i32 %i253, ptr %i126, align 8, !tbaa !194
  %i254 = load i32, ptr %i123, align 4, !tbaa !193
  %i255 = add nsw i32 %i254, -8
  store i32 %i255, ptr %i123, align 4, !tbaa !193
  %i256 = icmp sgt i32 %i254, 15
  br i1 %i256, label %bb242.bb242_crit_edge, label %bb257.loopexit, !llvm.loop !195

bb242.bb242_crit_edge:                            ; preds = %bb242
  br label %bb242

bb257.loopexit:                                   ; preds = %bb242
  br label %bb257

bb257:                                            ; preds = %bb257.loopexit, %bb237
  %i258 = phi i32 [ %i235, %bb237 ], [ %i253, %bb257.loopexit ]
  %i259 = phi i32 [ %i238, %bb237 ], [ %i254, %bb257.loopexit ]
  %i260 = sub i32 32, %i259
  %i261 = shl i32 83, %i260
  %i262 = or i32 %i261, %i258
  store i32 %i262, ptr %i126, align 8, !tbaa !194
  store i32 %i259, ptr %i123, align 4, !tbaa !193
  %i263 = icmp sgt i32 %i259, 7
  br i1 %i263, label %bb266, label %bb264

bb264:                                            ; preds = %bb257
  %i265 = add nsw i32 %i259, 8
  br label %bb284

bb266:                                            ; preds = %bb257
  %i267 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i268 = load i32, ptr %i267, align 4, !tbaa !137
  br label %bb269

bb269:                                            ; preds = %bb269.bb269_crit_edge, %bb266
  %i270 = phi i32 [ %i268, %bb266 ], [ %i278, %bb269.bb269_crit_edge ]
  %i271 = phi i32 [ %i262, %bb266 ], [ %i280, %bb269.bb269_crit_edge ]
  %i272 = lshr i32 %i271, 24
  %i273 = trunc i32 %i272 to i8
  %i274 = load ptr, ptr %i37, align 8, !tbaa !129
  %i275 = sext i32 %i270 to i64
  %i276 = getelementptr inbounds i8, ptr %i274, i64 %i275
  store i8 %i273, ptr %i276, align 1, !tbaa !21
  %i277 = load i32, ptr %i267, align 4, !tbaa !137
  %i278 = add nsw i32 %i277, 1
  store i32 %i278, ptr %i267, align 4, !tbaa !137
  %i279 = load i32, ptr %i126, align 8, !tbaa !194
  %i280 = shl i32 %i279, 8
  store i32 %i280, ptr %i126, align 8, !tbaa !194
  %i281 = load i32, ptr %i123, align 4, !tbaa !193
  %i282 = add nsw i32 %i281, -8
  store i32 %i282, ptr %i123, align 4, !tbaa !193
  %i283 = icmp sgt i32 %i281, 15
  br i1 %i283, label %bb269.bb269_crit_edge, label %bb284.loopexit, !llvm.loop !195

bb269.bb269_crit_edge:                            ; preds = %bb269
  br label %bb269

bb284.loopexit:                                   ; preds = %bb269
  br label %bb284

bb284:                                            ; preds = %bb284.loopexit, %bb264
  %i285 = phi i32 [ %i262, %bb264 ], [ %i280, %bb284.loopexit ]
  %i286 = phi i32 [ %i265, %bb264 ], [ %i281, %bb284.loopexit ]
  %i287 = sub i32 32, %i286
  %i288 = shl i32 89, %i287
  %i289 = or i32 %i288, %i285
  store i32 %i289, ptr %i126, align 8, !tbaa !194
  store i32 %i286, ptr %i123, align 4, !tbaa !193
  %i290 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 26
  %i291 = load i32, ptr %i290, align 8, !tbaa !139
  tail call fastcc void @bsPutUInt32(ptr noundef nonnull %arg, i32 noundef %i291)
  %i292 = load i32, ptr %i123, align 4, !tbaa !193
  %i293 = icmp sgt i32 %i292, 7
  br i1 %i293, label %bb296, label %bb294

bb294:                                            ; preds = %bb284
  %i295 = load i32, ptr %i126, align 8, !tbaa !194
  br label %bb315

bb296:                                            ; preds = %bb284
  %i297 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i298 = load i32, ptr %i126, align 8, !tbaa !194
  %i299 = load i32, ptr %i297, align 4, !tbaa !137
  br label %bb300

bb300:                                            ; preds = %bb300.bb300_crit_edge, %bb296
  %i301 = phi i32 [ %i299, %bb296 ], [ %i309, %bb300.bb300_crit_edge ]
  %i302 = phi i32 [ %i298, %bb296 ], [ %i311, %bb300.bb300_crit_edge ]
  %i303 = lshr i32 %i302, 24
  %i304 = trunc i32 %i303 to i8
  %i305 = load ptr, ptr %i37, align 8, !tbaa !129
  %i306 = sext i32 %i301 to i64
  %i307 = getelementptr inbounds i8, ptr %i305, i64 %i306
  store i8 %i304, ptr %i307, align 1, !tbaa !21
  %i308 = load i32, ptr %i297, align 4, !tbaa !137
  %i309 = add nsw i32 %i308, 1
  store i32 %i309, ptr %i297, align 4, !tbaa !137
  %i310 = load i32, ptr %i126, align 8, !tbaa !194
  %i311 = shl i32 %i310, 8
  store i32 %i311, ptr %i126, align 8, !tbaa !194
  %i312 = load i32, ptr %i123, align 4, !tbaa !193
  %i313 = add nsw i32 %i312, -8
  store i32 %i313, ptr %i123, align 4, !tbaa !193
  %i314 = icmp sgt i32 %i312, 15
  br i1 %i314, label %bb300.bb300_crit_edge, label %bb315.loopexit, !llvm.loop !195

bb300.bb300_crit_edge:                            ; preds = %bb300
  br label %bb300

bb315.loopexit:                                   ; preds = %bb300
  br label %bb315

bb315:                                            ; preds = %bb315.loopexit, %bb294
  %i316 = phi i32 [ %i295, %bb294 ], [ %i311, %bb315.loopexit ]
  %i317 = phi i32 [ %i292, %bb294 ], [ %i313, %bb315.loopexit ]
  %i318 = add nsw i32 %i317, 1
  store i32 %i316, ptr %i126, align 8, !tbaa !194
  store i32 %i318, ptr %i123, align 4, !tbaa !193
  %i319 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 7
  %i320 = load i32, ptr %i319, align 8, !tbaa !51
  %i321 = icmp sgt i32 %i317, 6
  br i1 %i321, label %bb322, label %bb315.bb340_crit_edge

bb315.bb340_crit_edge:                            ; preds = %bb315
  br label %bb340

bb322:                                            ; preds = %bb315
  %i323 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i324 = load i32, ptr %i323, align 4, !tbaa !137
  br label %bb325

bb325:                                            ; preds = %bb325.bb325_crit_edge, %bb322
  %i326 = phi i32 [ %i324, %bb322 ], [ %i334, %bb325.bb325_crit_edge ]
  %i327 = phi i32 [ %i316, %bb322 ], [ %i336, %bb325.bb325_crit_edge ]
  %i328 = lshr i32 %i327, 24
  %i329 = trunc i32 %i328 to i8
  %i330 = load ptr, ptr %i37, align 8, !tbaa !129
  %i331 = sext i32 %i326 to i64
  %i332 = getelementptr inbounds i8, ptr %i330, i64 %i331
  store i8 %i329, ptr %i332, align 1, !tbaa !21
  %i333 = load i32, ptr %i323, align 4, !tbaa !137
  %i334 = add nsw i32 %i333, 1
  store i32 %i334, ptr %i323, align 4, !tbaa !137
  %i335 = load i32, ptr %i126, align 8, !tbaa !194
  %i336 = shl i32 %i335, 8
  store i32 %i336, ptr %i126, align 8, !tbaa !194
  %i337 = load i32, ptr %i123, align 4, !tbaa !193
  %i338 = add nsw i32 %i337, -8
  store i32 %i338, ptr %i123, align 4, !tbaa !193
  %i339 = icmp sgt i32 %i337, 15
  br i1 %i339, label %bb325.bb325_crit_edge, label %bb340.loopexit, !llvm.loop !195

bb325.bb325_crit_edge:                            ; preds = %bb325
  br label %bb325

bb340.loopexit:                                   ; preds = %bb325
  br label %bb340

bb340:                                            ; preds = %bb315.bb340_crit_edge, %bb340.loopexit
  %i341 = phi i32 [ %i316, %bb315.bb340_crit_edge ], [ %i336, %bb340.loopexit ]
  %i342 = phi i32 [ %i318, %bb315.bb340_crit_edge ], [ %i338, %bb340.loopexit ]
  %i343 = add nsw i32 %i342, 24
  %i344 = sub i32 8, %i342
  %i345 = shl i32 %i320, %i344
  %i346 = or i32 %i345, %i341
  store i32 %i346, ptr %i126, align 8, !tbaa !194
  store i32 %i343, ptr %i123, align 4, !tbaa !193
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %i5) #31
  %i347 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 8
  %i348 = load ptr, ptr %i347, align 8, !tbaa !8
  %i349 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 9
  %i350 = load ptr, ptr %i349, align 8, !tbaa !14
  %i351 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 10
  %i352 = load ptr, ptr %i351, align 8, !tbaa !128
  %i353 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 21
  store i32 0, ptr %i353, align 4, !tbaa !196
  br label %bb354

bb354:                                            ; preds = %bb374.bb354_crit_edge, %bb340
  %i355 = phi i32 [ 0, %bb340 ], [ %i375, %bb374.bb354_crit_edge ]
  %i356 = phi i64 [ 0, %bb340 ], [ %i376, %bb374.bb354_crit_edge ]
  %i357 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i356
  %i358 = load i8, ptr %i357, align 1, !tbaa !21
  %i359 = icmp eq i8 %i358, 0
  br i1 %i359, label %bb354.bb364_crit_edge, label %bb360

bb354.bb364_crit_edge:                            ; preds = %bb354
  br label %bb364

bb360:                                            ; preds = %bb354
  %i361 = trunc i32 %i355 to i8
  %i362 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 23, i64 %i356
  store i8 %i361, ptr %i362, align 1, !tbaa !21
  %i363 = add nsw i32 %i355, 1
  store i32 %i363, ptr %i353, align 4, !tbaa !196
  br label %bb364

bb364:                                            ; preds = %bb354.bb364_crit_edge, %bb360
  %i365 = phi i32 [ %i355, %bb354.bb364_crit_edge ], [ %i363, %bb360 ]
  %i366 = or disjoint i64 %i356, 1
  %i367 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i366
  %i368 = load i8, ptr %i367, align 1, !tbaa !21
  %i369 = icmp eq i8 %i368, 0
  br i1 %i369, label %bb364.bb374_crit_edge, label %bb370

bb364.bb374_crit_edge:                            ; preds = %bb364
  br label %bb374

bb370:                                            ; preds = %bb364
  %i371 = trunc i32 %i365 to i8
  %i372 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 23, i64 %i366
  store i8 %i371, ptr %i372, align 1, !tbaa !21
  %i373 = add nsw i32 %i365, 1
  store i32 %i373, ptr %i353, align 4, !tbaa !196
  br label %bb374

bb374:                                            ; preds = %bb364.bb374_crit_edge, %bb370
  %i375 = phi i32 [ %i365, %bb364.bb374_crit_edge ], [ %i373, %bb370 ]
  %i376 = add nuw nsw i64 %i356, 2
  %i377 = icmp eq i64 %i376, 256
  br i1 %i377, label %bb378, label %bb374.bb354_crit_edge, !llvm.loop !197

bb374.bb354_crit_edge:                            ; preds = %bb374
  br label %bb354

bb378:                                            ; preds = %bb374
  %i379 = icmp slt i32 %i375, -1
  br i1 %i379, label %bb378.bb403_crit_edge, label %bb380

bb378.bb403_crit_edge:                            ; preds = %bb378
  br label %bb403

bb380:                                            ; preds = %bb378
  %i381 = getelementptr i8, ptr %arg, i64 672
  %i382 = add i32 %i375, 2
  %i383 = zext i32 %i382 to i64
  %i384 = shl nuw nsw i64 %i383, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %i381, i8 0, i64 %i384, i1 false), !tbaa !19
  %i385 = icmp sgt i32 %i375, 0
  br i1 %i385, label %bb386, label %bb380.bb403_crit_edge

bb380.bb403_crit_edge:                            ; preds = %bb380
  br label %bb403

bb386:                                            ; preds = %bb380
  %i387 = zext nneg i32 %i375 to i64
  %i388 = and i64 %i387, 7
  %i389 = icmp ult i32 %i375, 8
  br i1 %i389, label %bb386.bb392_crit_edge, label %bb390

bb386.bb392_crit_edge:                            ; preds = %bb386
  br label %bb392

bb390:                                            ; preds = %bb386
  %i391 = and i64 %i387, 2147483640
  br label %bb412

bb392.loopexit:                                   ; preds = %bb412
  br label %bb392

bb392:                                            ; preds = %bb386.bb392_crit_edge, %bb392.loopexit
  %i393 = phi i64 [ 0, %bb386.bb392_crit_edge ], [ %i438, %bb392.loopexit ]
  %i394 = icmp eq i64 %i388, 0
  br i1 %i394, label %bb392.bb403_crit_edge, label %bb395.preheader

bb392.bb403_crit_edge:                            ; preds = %bb392
  br label %bb403

bb395.preheader:                                  ; preds = %bb392
  br label %bb395

bb395:                                            ; preds = %bb395.bb395_crit_edge, %bb395.preheader
  %i396 = phi i64 [ %i400, %bb395.bb395_crit_edge ], [ %i393, %bb395.preheader ]
  %i397 = phi i64 [ %i401, %bb395.bb395_crit_edge ], [ 0, %bb395.preheader ]
  %i398 = trunc i64 %i396 to i8
  %i399 = getelementptr inbounds [256 x i8], ptr %i5, i64 0, i64 %i396
  store i8 %i398, ptr %i399, align 1, !tbaa !21
  %i400 = add nuw nsw i64 %i396, 1
  %i401 = add i64 %i397, 1
  %i402 = icmp eq i64 %i401, %i388
  br i1 %i402, label %bb403.loopexit, label %bb395.bb395_crit_edge, !llvm.loop !198

bb395.bb395_crit_edge:                            ; preds = %bb395
  br label %bb395

bb403.loopexit:                                   ; preds = %bb395
  br label %bb403

bb403:                                            ; preds = %bb392.bb403_crit_edge, %bb380.bb403_crit_edge, %bb378.bb403_crit_edge, %bb403.loopexit
  %i404 = load i32, ptr %i6, align 4, !tbaa !16
  %i405 = icmp sgt i32 %i404, 0
  br i1 %i405, label %bb406, label %bb403.bb549_crit_edge

bb403.bb549_crit_edge:                            ; preds = %bb403
  br label %bb549

bb406:                                            ; preds = %bb403
  %i407 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 32, i64 1
  %i408 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 32
  %i409 = getelementptr inbounds [256 x i8], ptr %i5, i64 0, i64 1
  %i410 = ptrtoint ptr %i5 to i64
  %i411 = load i8, ptr %i5, align 16, !tbaa !21
  br label %bb441

bb412:                                            ; preds = %bb412.bb412_crit_edge, %bb390
  %i413 = phi i64 [ 0, %bb390 ], [ %i438, %bb412.bb412_crit_edge ]
  %i414 = phi i64 [ 0, %bb390 ], [ %i439, %bb412.bb412_crit_edge ]
  %i415 = trunc i64 %i413 to i8
  %i416 = getelementptr inbounds [256 x i8], ptr %i5, i64 0, i64 %i413
  store i8 %i415, ptr %i416, align 8, !tbaa !21
  %i417 = or disjoint i64 %i413, 1
  %i418 = trunc i64 %i417 to i8
  %i419 = getelementptr inbounds [256 x i8], ptr %i5, i64 0, i64 %i417
  store i8 %i418, ptr %i419, align 1, !tbaa !21
  %i420 = or disjoint i64 %i413, 2
  %i421 = trunc i64 %i420 to i8
  %i422 = getelementptr inbounds [256 x i8], ptr %i5, i64 0, i64 %i420
  store i8 %i421, ptr %i422, align 2, !tbaa !21
  %i423 = or disjoint i64 %i413, 3
  %i424 = trunc i64 %i423 to i8
  %i425 = getelementptr inbounds [256 x i8], ptr %i5, i64 0, i64 %i423
  store i8 %i424, ptr %i425, align 1, !tbaa !21
  %i426 = or disjoint i64 %i413, 4
  %i427 = trunc i64 %i426 to i8
  %i428 = getelementptr inbounds [256 x i8], ptr %i5, i64 0, i64 %i426
  store i8 %i427, ptr %i428, align 4, !tbaa !21
  %i429 = or disjoint i64 %i413, 5
  %i430 = trunc i64 %i429 to i8
  %i431 = getelementptr inbounds [256 x i8], ptr %i5, i64 0, i64 %i429
  store i8 %i430, ptr %i431, align 1, !tbaa !21
  %i432 = or disjoint i64 %i413, 6
  %i433 = trunc i64 %i432 to i8
  %i434 = getelementptr inbounds [256 x i8], ptr %i5, i64 0, i64 %i432
  store i8 %i433, ptr %i434, align 2, !tbaa !21
  %i435 = or disjoint i64 %i413, 7
  %i436 = trunc i64 %i435 to i8
  %i437 = getelementptr inbounds [256 x i8], ptr %i5, i64 0, i64 %i435
  store i8 %i436, ptr %i437, align 1, !tbaa !21
  %i438 = add nuw nsw i64 %i413, 8
  %i439 = add i64 %i414, 8
  %i440 = icmp eq i64 %i439, %i391
  br i1 %i440, label %bb392.loopexit, label %bb412.bb412_crit_edge, !llvm.loop !199

bb412.bb412_crit_edge:                            ; preds = %bb412
  br label %bb412

bb441:                                            ; preds = %bb515.bb441_crit_edge, %bb406
  %i442 = phi i32 [ %i404, %bb406 ], [ %i516, %bb515.bb441_crit_edge ]
  %i443 = phi i8 [ %i411, %bb406 ], [ %i517, %bb515.bb441_crit_edge ]
  %i444 = phi i8 [ %i411, %bb406 ], [ %i459, %bb515.bb441_crit_edge ]
  %i445 = phi i64 [ 0, %bb406 ], [ %i520, %bb515.bb441_crit_edge ]
  %i446 = phi i32 [ 0, %bb406 ], [ %i519, %bb515.bb441_crit_edge ]
  %i447 = phi i32 [ 0, %bb406 ], [ %i518, %bb515.bb441_crit_edge ]
  %i448 = getelementptr inbounds i32, ptr %i348, i64 %i445
  %i449 = load i32, ptr %i448, align 4, !tbaa !19
  %i450 = add i32 %i449, -1
  %i451 = icmp slt i32 %i450, 0
  %i452 = select i1 %i451, i32 %i442, i32 0
  %i453 = add nsw i32 %i452, %i450
  %i454 = sext i32 %i453 to i64
  %i455 = getelementptr inbounds i8, ptr %i350, i64 %i454
  %i456 = load i8, ptr %i455, align 1, !tbaa !21
  %i457 = zext i8 %i456 to i64
  %i458 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 23, i64 %i457
  %i459 = load i8, ptr %i458, align 1, !tbaa !21
  %i460 = icmp eq i8 %i444, %i459
  br i1 %i460, label %bb461, label %bb463

bb461:                                            ; preds = %bb441
  %i462 = add nsw i32 %i446, 1
  br label %bb515

bb463:                                            ; preds = %bb441
  %i464 = icmp sgt i32 %i446, 0
  br i1 %i464, label %bb465, label %bb463.bb489_crit_edge

bb463.bb489_crit_edge:                            ; preds = %bb463
  br label %bb489

bb465:                                            ; preds = %bb463
  %i466 = add nsw i32 %i446, -1
  %i467 = sext i32 %i447 to i64
  br label %bb468

bb468:                                            ; preds = %bb484, %bb465
  %i469 = phi i64 [ %i482, %bb484 ], [ %i467, %bb465 ]
  %i470 = phi i32 [ %i486, %bb484 ], [ %i466, %bb465 ]
  %i471 = and i32 %i470, 1
  %i472 = icmp eq i32 %i471, 0
  br i1 %i472, label %bb476, label %bb473

bb473:                                            ; preds = %bb468
  %i474 = load i32, ptr %i407, align 4, !tbaa !19
  %i475 = add nsw i32 %i474, 1
  store i32 %i475, ptr %i407, align 4, !tbaa !19
  br label %bb479

bb476:                                            ; preds = %bb468
  %i477 = load i32, ptr %i408, align 8, !tbaa !19
  %i478 = add nsw i32 %i477, 1
  store i32 %i478, ptr %i408, align 8, !tbaa !19
  br label %bb479

bb479:                                            ; preds = %bb476, %bb473
  %i480 = phi i16 [ 0, %bb476 ], [ 1, %bb473 ]
  %i481 = getelementptr inbounds i16, ptr %i352, i64 %i469
  store i16 %i480, ptr %i481, align 2
  %i482 = add i64 %i469, 1
  %i483 = icmp slt i32 %i470, 2
  br i1 %i483, label %bb487, label %bb484

bb484:                                            ; preds = %bb479
  %i485 = add nsw i32 %i470, -2
  %i486 = lshr i32 %i485, 1
  br label %bb468

bb487:                                            ; preds = %bb479
  %i488 = trunc i64 %i482 to i32
  br label %bb489

bb489:                                            ; preds = %bb463.bb489_crit_edge, %bb487
  %i490 = phi i32 [ %i447, %bb463.bb489_crit_edge ], [ %i488, %bb487 ]
  %i491 = phi i32 [ %i446, %bb463.bb489_crit_edge ], [ 0, %bb487 ]
  %i492 = load i8, ptr %i409, align 1, !tbaa !21
  store i8 %i443, ptr %i409, align 1, !tbaa !21
  %i493 = icmp eq i8 %i459, %i492
  br i1 %i493, label %bb489.bb500_crit_edge, label %bb494.preheader

bb489.bb500_crit_edge:                            ; preds = %bb489
  br label %bb500

bb494.preheader:                                  ; preds = %bb489
  br label %bb494

bb494:                                            ; preds = %bb494.bb494_crit_edge, %bb494.preheader
  %i495 = phi ptr [ %i497, %bb494.bb494_crit_edge ], [ %i409, %bb494.preheader ]
  %i496 = phi i8 [ %i498, %bb494.bb494_crit_edge ], [ %i492, %bb494.preheader ]
  %i497 = getelementptr inbounds i8, ptr %i495, i64 1
  %i498 = load i8, ptr %i497, align 1, !tbaa !21
  store i8 %i496, ptr %i497, align 1, !tbaa !21
  %i499 = icmp eq i8 %i459, %i498
  br i1 %i499, label %bb500.loopexit, label %bb494.bb494_crit_edge, !llvm.loop !200

bb494.bb494_crit_edge:                            ; preds = %bb494
  br label %bb494

bb500.loopexit:                                   ; preds = %bb494
  br label %bb500

bb500:                                            ; preds = %bb489.bb500_crit_edge, %bb500.loopexit
  %i501 = phi ptr [ %i409, %bb489.bb500_crit_edge ], [ %i497, %bb500.loopexit ]
  %i502 = ptrtoint ptr %i501 to i64
  %i503 = sub i64 %i502, %i410
  %i504 = trunc i64 %i503 to i32
  %i505 = add nsw i32 %i504, 1
  %i506 = trunc i32 %i505 to i16
  %i507 = sext i32 %i490 to i64
  %i508 = getelementptr inbounds i16, ptr %i352, i64 %i507
  store i16 %i506, ptr %i508, align 2, !tbaa !22
  %i509 = add nsw i32 %i490, 1
  %i510 = sext i32 %i505 to i64
  %i511 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 32, i64 %i510
  %i512 = load i32, ptr %i511, align 4, !tbaa !19
  %i513 = add nsw i32 %i512, 1
  store i32 %i513, ptr %i511, align 4, !tbaa !19
  %i514 = load i32, ptr %i6, align 4, !tbaa !16
  br label %bb515

bb515:                                            ; preds = %bb500, %bb461
  %i516 = phi i32 [ %i442, %bb461 ], [ %i514, %bb500 ]
  %i517 = phi i8 [ %i443, %bb461 ], [ %i459, %bb500 ]
  %i518 = phi i32 [ %i447, %bb461 ], [ %i509, %bb500 ]
  %i519 = phi i32 [ %i462, %bb461 ], [ %i491, %bb500 ]
  %i520 = add nuw nsw i64 %i445, 1
  %i521 = sext i32 %i516 to i64
  %i522 = icmp slt i64 %i520, %i521
  br i1 %i522, label %bb515.bb441_crit_edge, label %bb523, !llvm.loop !201

bb515.bb441_crit_edge:                            ; preds = %bb515
  br label %bb441

bb523:                                            ; preds = %bb515
  %i524 = icmp sgt i32 %i519, 0
  br i1 %i524, label %bb525, label %bb523.bb549_crit_edge

bb523.bb549_crit_edge:                            ; preds = %bb523
  br label %bb549

bb525:                                            ; preds = %bb523
  %i526 = add nsw i32 %i519, -1
  %i527 = sext i32 %i518 to i64
  br label %bb528

bb528:                                            ; preds = %bb544, %bb525
  %i529 = phi i64 [ %i542, %bb544 ], [ %i527, %bb525 ]
  %i530 = phi i32 [ %i546, %bb544 ], [ %i526, %bb525 ]
  %i531 = and i32 %i530, 1
  %i532 = icmp eq i32 %i531, 0
  br i1 %i532, label %bb536, label %bb533

bb533:                                            ; preds = %bb528
  %i534 = load i32, ptr %i407, align 4, !tbaa !19
  %i535 = add nsw i32 %i534, 1
  store i32 %i535, ptr %i407, align 4, !tbaa !19
  br label %bb539

bb536:                                            ; preds = %bb528
  %i537 = load i32, ptr %i408, align 8, !tbaa !19
  %i538 = add nsw i32 %i537, 1
  store i32 %i538, ptr %i408, align 8, !tbaa !19
  br label %bb539

bb539:                                            ; preds = %bb536, %bb533
  %i540 = phi i16 [ 0, %bb536 ], [ 1, %bb533 ]
  %i541 = getelementptr inbounds i16, ptr %i352, i64 %i529
  store i16 %i540, ptr %i541, align 2
  %i542 = add i64 %i529, 1
  %i543 = icmp slt i32 %i530, 2
  br i1 %i543, label %bb547, label %bb544

bb544:                                            ; preds = %bb539
  %i545 = add nsw i32 %i530, -2
  %i546 = lshr i32 %i545, 1
  br label %bb528

bb547:                                            ; preds = %bb539
  %i548 = trunc i64 %i542 to i32
  br label %bb549

bb549:                                            ; preds = %bb523.bb549_crit_edge, %bb403.bb549_crit_edge, %bb547
  %i550 = phi i32 [ %i518, %bb523.bb549_crit_edge ], [ %i548, %bb547 ], [ 0, %bb403.bb549_crit_edge ]
  %i551 = add nsw i32 %i375, 1
  %i552 = trunc i32 %i551 to i16
  %i553 = sext i32 %i550 to i64
  %i554 = getelementptr inbounds i16, ptr %i352, i64 %i553
  store i16 %i552, ptr %i554, align 2, !tbaa !22
  %i555 = add nsw i32 %i550, 1
  %i556 = sext i32 %i551 to i64
  %i557 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 32, i64 %i556
  %i558 = load i32, ptr %i557, align 4, !tbaa !19
  %i559 = add nsw i32 %i558, 1
  store i32 %i559, ptr %i557, align 4, !tbaa !19
  %i560 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 31
  store i32 %i555, ptr %i560, align 4, !tbaa !202
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %i5) #31
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %i)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %i2) #31
  %i561 = load ptr, ptr %i351, align 8, !tbaa !128
  %i562 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 28
  %i563 = load i32, ptr %i562, align 8, !tbaa !17
  %i564 = icmp sgt i32 %i563, 2
  br i1 %i564, label %bb565, label %bb549.bb570_crit_edge

bb549.bb570_crit_edge:                            ; preds = %bb549
  br label %bb570

bb565:                                            ; preds = %bb549
  %i566 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i567 = load i32, ptr %i6, align 4, !tbaa !16
  %i568 = load i32, ptr %i353, align 4, !tbaa !196
  %i569 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i566, ptr noundef nonnull @.str.2.106, i32 noundef %i567, i32 noundef %i555, i32 noundef %i568) #32
  br label %bb570

bb570:                                            ; preds = %bb549.bb570_crit_edge, %bb565
  %i571 = load i32, ptr %i353, align 4, !tbaa !196
  %i572 = add i32 %i571, 2
  %i573 = icmp sgt i32 %i571, -2
  br i1 %i573, label %bb574, label %bb570.bb583_crit_edge

bb570.bb583_crit_edge:                            ; preds = %bb570
  br label %bb583

bb574:                                            ; preds = %bb570
  %i575 = call i32 @llvm.smax.i32(i32 %i572, i32 1)
  %i576 = zext nneg i32 %i575 to i64
  %i577 = getelementptr i8, ptr %arg, i64 37708
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %i577, i8 15, i64 %i576, i1 false), !tbaa !21
  %i578 = getelementptr i8, ptr %arg, i64 37966
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %i578, i8 15, i64 %i576, i1 false), !tbaa !21
  %i579 = getelementptr i8, ptr %arg, i64 38224
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %i579, i8 15, i64 %i576, i1 false), !tbaa !21
  %i580 = getelementptr i8, ptr %arg, i64 38482
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %i580, i8 15, i64 %i576, i1 false), !tbaa !21
  %i581 = getelementptr i8, ptr %arg, i64 38740
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %i581, i8 15, i64 %i576, i1 false), !tbaa !21
  %i582 = getelementptr i8, ptr %arg, i64 38998
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %i582, i8 15, i64 %i576, i1 false), !tbaa !21
  br label %bb583

bb583:                                            ; preds = %bb570.bb583_crit_edge, %bb574
  %i584 = load i32, ptr %i560, align 4, !tbaa !202
  %i585 = icmp sgt i32 %i584, 0
  br i1 %i585, label %bb583.bb588_crit_edge, label %bb586

bb583.bb588_crit_edge:                            ; preds = %bb583
  br label %bb588

bb586:                                            ; preds = %bb583
  call void @BZ2_bz__AssertH__fail(i32 noundef 3001) #31
  %i587 = load i32, ptr %i560, align 4, !tbaa !202
  br label %bb588

bb588:                                            ; preds = %bb583.bb588_crit_edge, %bb586
  %i589 = phi i32 [ %i587, %bb586 ], [ %i584, %bb583.bb588_crit_edge ]
  %i590 = icmp slt i32 %i589, 200
  br i1 %i590, label %bb588.bb598_crit_edge, label %bb591

bb588.bb598_crit_edge:                            ; preds = %bb588
  br label %bb598

bb591:                                            ; preds = %bb588
  %i592 = icmp ult i32 %i589, 600
  br i1 %i592, label %bb591.bb598_crit_edge, label %bb593

bb591.bb598_crit_edge:                            ; preds = %bb591
  br label %bb598

bb593:                                            ; preds = %bb591
  %i594 = icmp ult i32 %i589, 1200
  br i1 %i594, label %bb593.bb598_crit_edge, label %bb595

bb593.bb598_crit_edge:                            ; preds = %bb593
  br label %bb598

bb595:                                            ; preds = %bb593
  %i596 = icmp ugt i32 %i589, 2399
  %i597 = select i1 %i596, i32 6, i32 5
  br label %bb598

bb598:                                            ; preds = %bb593.bb598_crit_edge, %bb591.bb598_crit_edge, %bb588.bb598_crit_edge, %bb595
  %i599 = phi i1 [ false, %bb588.bb598_crit_edge ], [ false, %bb591.bb598_crit_edge ], [ false, %bb593.bb598_crit_edge ], [ %i596, %bb595 ]
  %i600 = phi i32 [ 2, %bb588.bb598_crit_edge ], [ 3, %bb591.bb598_crit_edge ], [ 4, %bb593.bb598_crit_edge ], [ %i597, %bb595 ]
  %i601 = sext i32 %i571 to i64
  %i602 = call i32 @llvm.smax.i32(i32 %i572, i32 1)
  %i603 = zext nneg i32 %i600 to i64
  %i604 = zext nneg i32 %i602 to i64
  %i605 = add nsw i64 %i604, -1
  %i606 = and i64 %i604, 1
  %i607 = icmp eq i64 %i605, 0
  %i608 = and i64 %i604, 2147483646
  %i609 = icmp eq i64 %i606, 0
  br label %bb653

bb610:                                            ; preds = %bb738
  %i611 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35
  %i612 = shl nuw nsw i64 %i603, 2
  %i613 = shl nuw nsw i64 %i604, 2
  %i614 = shl nuw nsw i64 %i603, 1
  %i615 = getelementptr i8, ptr %arg, i64 45448
  %i616 = and i1 %i573, %i599
  %i617 = getelementptr i8, ptr %arg, i64 46480
  %i618 = icmp eq i32 %i600, 2
  %i619 = getelementptr i8, ptr %arg, i64 47512
  %i620 = icmp eq i32 %i600, 3
  %i621 = getelementptr i8, ptr %arg, i64 48544
  %i622 = icmp eq i32 %i600, 4
  %i623 = getelementptr i8, ptr %arg, i64 49576
  %i624 = icmp eq i32 %i600, 5
  %i625 = getelementptr i8, ptr %arg, i64 50608
  %i626 = icmp eq i32 %i600, 6
  %i627 = getelementptr i8, ptr %arg, i64 51640
  %i628 = getelementptr inbounds i8, ptr %i, i64 2
  %i629 = icmp eq i32 %i600, 2
  %i630 = getelementptr inbounds i8, ptr %i, i64 4
  %i631 = icmp eq i32 %i600, 3
  %i632 = getelementptr inbounds i8, ptr %i, i64 6
  %i633 = icmp eq i32 %i600, 4
  %i634 = getelementptr inbounds i8, ptr %i, i64 8
  %i635 = icmp eq i32 %i600, 5
  %i636 = getelementptr inbounds i8, ptr %i, i64 10
  %i637 = getelementptr inbounds i8, ptr %i, i64 2
  %i638 = getelementptr inbounds i8, ptr %i, i64 4
  %i639 = getelementptr inbounds i8, ptr %i, i64 6
  %i640 = getelementptr inbounds i8, ptr %i, i64 8
  %i641 = getelementptr inbounds i8, ptr %i, i64 10
  %i642 = getelementptr inbounds i8, ptr %i, i64 2
  %i643 = icmp eq i32 %i600, 2
  %i644 = getelementptr inbounds i8, ptr %i, i64 4
  %i645 = icmp eq i32 %i600, 3
  %i646 = getelementptr inbounds i8, ptr %i, i64 6
  %i647 = icmp eq i32 %i600, 4
  %i648 = getelementptr inbounds i8, ptr %i, i64 8
  %i649 = icmp eq i32 %i600, 5
  %i650 = getelementptr inbounds i8, ptr %i, i64 10
  %i651 = icmp eq i32 %i600, 6
  %i652 = getelementptr i16, ptr %i561, i64 1
  br label %bb742

bb653:                                            ; preds = %bb738.bb653_crit_edge, %bb598
  %i654 = phi i64 [ %i603, %bb598 ], [ %i709, %bb738.bb653_crit_edge ]
  %i655 = phi i32 [ 0, %bb598 ], [ %i739, %bb738.bb653_crit_edge ]
  %i656 = phi i32 [ %i589, %bb598 ], [ %i740, %bb738.bb653_crit_edge ]
  %i657 = trunc i64 %i654 to i32
  %i658 = sdiv i32 %i656, %i657
  %i659 = add nsw i32 %i655, -1
  %i660 = icmp sgt i32 %i658, 0
  %i661 = icmp sle i32 %i659, %i571
  %i662 = select i1 %i660, i1 %i661, i1 false
  br i1 %i662, label %bb663, label %bb653.bb693_crit_edge

bb653.bb693_crit_edge:                            ; preds = %bb653
  br label %bb693

bb663:                                            ; preds = %bb653
  %i664 = sext i32 %i659 to i64
  br label %bb665

bb665:                                            ; preds = %bb665.bb665_crit_edge, %bb663
  %i666 = phi i64 [ %i664, %bb663 ], [ %i668, %bb665.bb665_crit_edge ]
  %i667 = phi i32 [ 0, %bb663 ], [ %i671, %bb665.bb665_crit_edge ]
  %i668 = add nsw i64 %i666, 1
  %i669 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 32, i64 %i668
  %i670 = load i32, ptr %i669, align 4, !tbaa !19
  %i671 = add nsw i32 %i670, %i667
  %i672 = icmp slt i32 %i671, %i658
  %i673 = icmp slt i64 %i666, %i601
  %i674 = and i1 %i673, %i672
  br i1 %i674, label %bb665.bb665_crit_edge, label %bb675, !llvm.loop !203

bb665.bb665_crit_edge:                            ; preds = %bb665
  br label %bb665

bb675:                                            ; preds = %bb665
  %i676 = trunc i64 %i668 to i32
  %i677 = icmp slt i32 %i655, %i676
  br i1 %i677, label %bb678, label %bb675.bb693_crit_edge

bb675.bb693_crit_edge:                            ; preds = %bb675
  br label %bb693

bb678:                                            ; preds = %bb675
  %i679 = icmp ne i64 %i654, %i603
  %i680 = icmp ne i64 %i654, 1
  %i681 = and i1 %i679, %i680
  br i1 %i681, label %bb682, label %bb678.bb693_crit_edge

bb678.bb693_crit_edge:                            ; preds = %bb678
  br label %bb693

bb682:                                            ; preds = %bb678
  %i683 = sub i32 %i600, %i657
  %i684 = and i32 %i683, -2147483647
  %i685 = icmp eq i32 %i684, 1
  br i1 %i685, label %bb686, label %bb682.bb693_crit_edge

bb682.bb693_crit_edge:                            ; preds = %bb682
  br label %bb693

bb686:                                            ; preds = %bb682
  %i687 = shl i64 %i668, 32
  %i688 = ashr exact i64 %i687, 32
  %i689 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 32, i64 %i688
  %i690 = load i32, ptr %i689, align 4, !tbaa !19
  %i691 = sub nsw i32 %i671, %i690
  %i692 = add nsw i32 %i676, -1
  br label %bb693

bb693:                                            ; preds = %bb682.bb693_crit_edge, %bb678.bb693_crit_edge, %bb675.bb693_crit_edge, %bb653.bb693_crit_edge, %bb686
  %i694 = phi i32 [ %i691, %bb686 ], [ %i671, %bb682.bb693_crit_edge ], [ %i671, %bb678.bb693_crit_edge ], [ %i671, %bb675.bb693_crit_edge ], [ 0, %bb653.bb693_crit_edge ]
  %i695 = phi i32 [ %i692, %bb686 ], [ %i676, %bb682.bb693_crit_edge ], [ %i676, %bb678.bb693_crit_edge ], [ %i676, %bb675.bb693_crit_edge ], [ %i659, %bb653.bb693_crit_edge ]
  %i696 = load i32, ptr %i562, align 8, !tbaa !17
  %i697 = icmp sgt i32 %i696, 2
  br i1 %i697, label %bb698, label %bb693.bb708_crit_edge

bb693.bb708_crit_edge:                            ; preds = %bb693
  br label %bb708

bb698:                                            ; preds = %bb693
  %i699 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i700 = sitofp i32 %i694 to float
  %i701 = fpext float %i700 to double
  %i702 = fmul double %i701, 1.000000e+02
  %i703 = load i32, ptr %i560, align 4, !tbaa !202
  %i704 = sitofp i32 %i703 to float
  %i705 = fpext float %i704 to double
  %i706 = fdiv double %i702, %i705
  %i707 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i699, ptr noundef nonnull @.str.3.107, i32 noundef %i657, i32 noundef %i655, i32 noundef %i695, i32 noundef %i694, double noundef %i706) #32
  br label %bb708

bb708:                                            ; preds = %bb693.bb708_crit_edge, %bb698
  %i709 = add nsw i64 %i654, -1
  br i1 %i573, label %bb710, label %bb708.bb738_crit_edge

bb708.bb738_crit_edge:                            ; preds = %bb708
  br label %bb738

bb710:                                            ; preds = %bb708
  %i711 = sext i32 %i695 to i64
  %i712 = sext i32 %i655 to i64
  br i1 %i607, label %bb710.bb730_crit_edge, label %bb713.preheader

bb710.bb730_crit_edge:                            ; preds = %bb710
  br label %bb730

bb713.preheader:                                  ; preds = %bb710
  br label %bb713

bb713:                                            ; preds = %bb713.bb713_crit_edge, %bb713.preheader
  %i714 = phi i64 [ %i727, %bb713.bb713_crit_edge ], [ 0, %bb713.preheader ]
  %i715 = phi i64 [ %i728, %bb713.bb713_crit_edge ], [ 0, %bb713.preheader ]
  %i716 = icmp slt i64 %i714, %i712
  %i717 = icmp sgt i64 %i714, %i711
  %i718 = select i1 %i716, i1 true, i1 %i717
  %i719 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 %i709, i64 %i714
  %i720 = select i1 %i718, i8 15, i8 0
  store i8 %i720, ptr %i719, align 1, !tbaa !21
  %i721 = or disjoint i64 %i714, 1
  %i722 = icmp slt i64 %i721, %i712
  %i723 = icmp sge i64 %i714, %i711
  %i724 = select i1 %i722, i1 true, i1 %i723
  %i725 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 %i709, i64 %i721
  %i726 = select i1 %i724, i8 15, i8 0
  store i8 %i726, ptr %i725, align 1, !tbaa !21
  %i727 = add nuw nsw i64 %i714, 2
  %i728 = add i64 %i715, 2
  %i729 = icmp eq i64 %i728, %i608
  br i1 %i729, label %bb730.loopexit, label %bb713.bb713_crit_edge, !llvm.loop !204

bb713.bb713_crit_edge:                            ; preds = %bb713
  br label %bb713

bb730.loopexit:                                   ; preds = %bb713
  br label %bb730

bb730:                                            ; preds = %bb710.bb730_crit_edge, %bb730.loopexit
  %i731 = phi i64 [ 0, %bb710.bb730_crit_edge ], [ %i727, %bb730.loopexit ]
  br i1 %i609, label %bb730.bb738_crit_edge, label %bb732

bb730.bb738_crit_edge:                            ; preds = %bb730
  br label %bb738

bb732:                                            ; preds = %bb730
  %i733 = icmp slt i64 %i731, %i712
  %i734 = icmp sgt i64 %i731, %i711
  %i735 = select i1 %i733, i1 true, i1 %i734
  %i736 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 %i709, i64 %i731
  %i737 = select i1 %i735, i8 15, i8 0
  store i8 %i737, ptr %i736, align 1, !tbaa !21
  br label %bb738

bb738:                                            ; preds = %bb730.bb738_crit_edge, %bb708.bb738_crit_edge, %bb732
  %i739 = add nsw i32 %i695, 1
  %i740 = sub nsw i32 %i656, %i694
  %i741 = icmp sgt i64 %i654, 1
  br i1 %i741, label %bb738.bb653_crit_edge, label %bb610, !llvm.loop !205

bb738.bb653_crit_edge:                            ; preds = %bb738
  br label %bb653

bb742:                                            ; preds = %bb1881.bb742_crit_edge, %bb610
  %i743 = phi i32 [ 0, %bb610 ], [ %i1882, %bb1881.bb742_crit_edge ]
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(1) %i2, i8 0, i64 %i612, i1 false), !tbaa !19
  br i1 %i573, label %bb744, label %bb742.bb782_crit_edge

bb742.bb782_crit_edge:                            ; preds = %bb742
  br label %bb782

bb744:                                            ; preds = %bb742
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %i615, i8 0, i64 %i613, i1 false), !tbaa !19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %i617, i8 0, i64 %i613, i1 false), !tbaa !19
  br i1 %i618, label %bb744.bb750_crit_edge, label %bb745, !llvm.loop !206

bb744.bb750_crit_edge:                            ; preds = %bb744
  br label %bb750

bb745:                                            ; preds = %bb744
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %i619, i8 0, i64 %i613, i1 false), !tbaa !19
  br i1 %i620, label %bb745.bb750_crit_edge, label %bb746, !llvm.loop !206

bb745.bb750_crit_edge:                            ; preds = %bb745
  br label %bb750

bb746:                                            ; preds = %bb745
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %i621, i8 0, i64 %i613, i1 false), !tbaa !19
  br i1 %i622, label %bb746.bb750_crit_edge, label %bb747, !llvm.loop !206

bb746.bb750_crit_edge:                            ; preds = %bb746
  br label %bb750

bb747:                                            ; preds = %bb746
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %i623, i8 0, i64 %i613, i1 false), !tbaa !19
  br i1 %i624, label %bb747.bb750_crit_edge, label %bb748, !llvm.loop !206

bb747.bb750_crit_edge:                            ; preds = %bb747
  br label %bb750

bb748:                                            ; preds = %bb747
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %i625, i8 0, i64 %i613, i1 false), !tbaa !19
  br i1 %i626, label %bb748.bb750_crit_edge, label %bb749, !llvm.loop !206

bb748.bb750_crit_edge:                            ; preds = %bb748
  br label %bb750

bb749:                                            ; preds = %bb748
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %i627, i8 0, i64 %i613, i1 false), !tbaa !19
  br label %bb750

bb750:                                            ; preds = %bb748.bb750_crit_edge, %bb747.bb750_crit_edge, %bb746.bb750_crit_edge, %bb745.bb750_crit_edge, %bb744.bb750_crit_edge, %bb749
  br i1 %i616, label %bb751.preheader, label %bb750.bb782_crit_edge

bb750.bb782_crit_edge:                            ; preds = %bb750
  br label %bb782

bb751.preheader:                                  ; preds = %bb750
  br label %bb751

bb751:                                            ; preds = %bb751.bb751_crit_edge, %bb751.preheader
  %i752 = phi i64 [ %i780, %bb751.bb751_crit_edge ], [ 0, %bb751.preheader ]
  %i753 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 1, i64 %i752
  %i754 = load i8, ptr %i753, align 1, !tbaa !21
  %i755 = zext i8 %i754 to i32
  %i756 = shl nuw nsw i32 %i755, 16
  %i757 = getelementptr inbounds [258 x i8], ptr %i611, i64 0, i64 %i752
  %i758 = load i8, ptr %i757, align 1, !tbaa !21
  %i759 = zext i8 %i758 to i32
  %i760 = or disjoint i32 %i756, %i759
  %i761 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i752
  store i32 %i760, ptr %i761, align 8, !tbaa !19
  %i762 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 3, i64 %i752
  %i763 = load i8, ptr %i762, align 1, !tbaa !21
  %i764 = zext i8 %i763 to i32
  %i765 = shl nuw nsw i32 %i764, 16
  %i766 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 2, i64 %i752
  %i767 = load i8, ptr %i766, align 1, !tbaa !21
  %i768 = zext i8 %i767 to i32
  %i769 = or disjoint i32 %i765, %i768
  %i770 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i752, i64 1
  store i32 %i769, ptr %i770, align 4, !tbaa !19
  %i771 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 5, i64 %i752
  %i772 = load i8, ptr %i771, align 1, !tbaa !21
  %i773 = zext i8 %i772 to i32
  %i774 = shl nuw nsw i32 %i773, 16
  %i775 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 4, i64 %i752
  %i776 = load i8, ptr %i775, align 1, !tbaa !21
  %i777 = zext i8 %i776 to i32
  %i778 = or disjoint i32 %i774, %i777
  %i779 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i752, i64 2
  store i32 %i778, ptr %i779, align 8, !tbaa !19
  %i780 = add nuw nsw i64 %i752, 1
  %i781 = icmp eq i64 %i780, %i604
  br i1 %i781, label %bb782.loopexit, label %bb751.bb751_crit_edge, !llvm.loop !207

bb751.bb751_crit_edge:                            ; preds = %bb751
  br label %bb751

bb782.loopexit:                                   ; preds = %bb751
  br label %bb782

bb782:                                            ; preds = %bb750.bb782_crit_edge, %bb742.bb782_crit_edge, %bb782.loopexit
  %i783 = load i32, ptr %i560, align 4, !tbaa !202
  %i784 = icmp sgt i32 %i783, 0
  br i1 %i784, label %bb785.preheader, label %bb782.bb1853_crit_edge

bb782.bb1853_crit_edge:                           ; preds = %bb782
  br label %bb1853

bb785.preheader:                                  ; preds = %bb782
  br label %bb785

bb785:                                            ; preds = %bb1847.bb785_crit_edge, %bb785.preheader
  %i786 = phi i64 [ %i1508, %bb1847.bb785_crit_edge ], [ 0, %bb785.preheader ]
  %i787 = phi i32 [ %i1849, %bb1847.bb785_crit_edge ], [ %i783, %bb785.preheader ]
  %i788 = phi i32 [ %i1848, %bb1847.bb785_crit_edge ], [ 0, %bb785.preheader ]
  %i789 = phi i32 [ %i1501, %bb1847.bb785_crit_edge ], [ 0, %bb785.preheader ]
  %i790 = add nsw i32 %i788, 49
  %i791 = add nsw i32 %i787, -1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(1) %i, i8 0, i64 %i614, i1 false), !tbaa !22
  %i792 = icmp slt i32 %i790, %i787
  %i793 = select i1 %i792, i32 %i790, i32 %i791
  %i794 = sub nsw i32 %i793, %i788
  %i795 = icmp eq i32 %i794, 49
  %i796 = select i1 %i599, i1 %i795, i1 false
  br i1 %i796, label %bb808, label %bb797

bb797:                                            ; preds = %bb785
  %i798 = icmp sgt i32 %i788, %i793
  br i1 %i798, label %bb797.bb1464_crit_edge, label %bb799

bb797.bb1464_crit_edge:                           ; preds = %bb797
  br label %bb1464

bb799:                                            ; preds = %bb797
  %i800 = sext i32 %i788 to i64
  %i801 = add i32 %i793, 1
  %i802 = load i16, ptr %i, align 2, !tbaa !22
  %i803 = load i16, ptr %i628, align 2, !tbaa !22
  %i804 = load i16, ptr %i630, align 2, !tbaa !22
  %i805 = load i16, ptr %i632, align 2, !tbaa !22
  %i806 = load i16, ptr %i634, align 2, !tbaa !22
  %i807 = load i16, ptr %i636, align 2, !tbaa !22
  br label %bb1416

bb808:                                            ; preds = %bb785
  %i809 = sext i32 %i788 to i64
  %i810 = getelementptr inbounds i16, ptr %i561, i64 %i809
  %i811 = load i16, ptr %i810, align 2, !tbaa !22
  %i812 = zext i16 %i811 to i64
  %i813 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i812
  %i814 = load i32, ptr %i813, align 8, !tbaa !19
  %i815 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i812, i64 1
  %i816 = load i32, ptr %i815, align 4, !tbaa !19
  %i817 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i812, i64 2
  %i818 = load i32, ptr %i817, align 8, !tbaa !19
  %i819 = getelementptr i16, ptr %i810, i64 1
  %i820 = load i16, ptr %i819, align 2, !tbaa !22
  %i821 = zext i16 %i820 to i64
  %i822 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i821
  %i823 = load i32, ptr %i822, align 8, !tbaa !19
  %i824 = add i32 %i823, %i814
  %i825 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i821, i64 1
  %i826 = load i32, ptr %i825, align 4, !tbaa !19
  %i827 = add i32 %i826, %i816
  %i828 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i821, i64 2
  %i829 = load i32, ptr %i828, align 8, !tbaa !19
  %i830 = add i32 %i829, %i818
  %i831 = getelementptr i16, ptr %i810, i64 2
  %i832 = load i16, ptr %i831, align 2, !tbaa !22
  %i833 = zext i16 %i832 to i64
  %i834 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i833
  %i835 = load i32, ptr %i834, align 8, !tbaa !19
  %i836 = add i32 %i824, %i835
  %i837 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i833, i64 1
  %i838 = load i32, ptr %i837, align 4, !tbaa !19
  %i839 = add i32 %i827, %i838
  %i840 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i833, i64 2
  %i841 = load i32, ptr %i840, align 8, !tbaa !19
  %i842 = add i32 %i830, %i841
  %i843 = getelementptr i16, ptr %i810, i64 3
  %i844 = load i16, ptr %i843, align 2, !tbaa !22
  %i845 = zext i16 %i844 to i64
  %i846 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i845
  %i847 = load i32, ptr %i846, align 8, !tbaa !19
  %i848 = add i32 %i836, %i847
  %i849 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i845, i64 1
  %i850 = load i32, ptr %i849, align 4, !tbaa !19
  %i851 = add i32 %i839, %i850
  %i852 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i845, i64 2
  %i853 = load i32, ptr %i852, align 8, !tbaa !19
  %i854 = add i32 %i842, %i853
  %i855 = getelementptr i16, ptr %i810, i64 4
  %i856 = load i16, ptr %i855, align 2, !tbaa !22
  %i857 = zext i16 %i856 to i64
  %i858 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i857
  %i859 = load i32, ptr %i858, align 8, !tbaa !19
  %i860 = add i32 %i848, %i859
  %i861 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i857, i64 1
  %i862 = load i32, ptr %i861, align 4, !tbaa !19
  %i863 = add i32 %i851, %i862
  %i864 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i857, i64 2
  %i865 = load i32, ptr %i864, align 8, !tbaa !19
  %i866 = add i32 %i854, %i865
  %i867 = getelementptr i16, ptr %i810, i64 5
  %i868 = load i16, ptr %i867, align 2, !tbaa !22
  %i869 = zext i16 %i868 to i64
  %i870 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i869
  %i871 = load i32, ptr %i870, align 8, !tbaa !19
  %i872 = add i32 %i860, %i871
  %i873 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i869, i64 1
  %i874 = load i32, ptr %i873, align 4, !tbaa !19
  %i875 = add i32 %i863, %i874
  %i876 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i869, i64 2
  %i877 = load i32, ptr %i876, align 8, !tbaa !19
  %i878 = add i32 %i866, %i877
  %i879 = getelementptr i16, ptr %i810, i64 6
  %i880 = load i16, ptr %i879, align 2, !tbaa !22
  %i881 = zext i16 %i880 to i64
  %i882 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i881
  %i883 = load i32, ptr %i882, align 8, !tbaa !19
  %i884 = add i32 %i872, %i883
  %i885 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i881, i64 1
  %i886 = load i32, ptr %i885, align 4, !tbaa !19
  %i887 = add i32 %i875, %i886
  %i888 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i881, i64 2
  %i889 = load i32, ptr %i888, align 8, !tbaa !19
  %i890 = add i32 %i878, %i889
  %i891 = getelementptr i16, ptr %i810, i64 7
  %i892 = load i16, ptr %i891, align 2, !tbaa !22
  %i893 = zext i16 %i892 to i64
  %i894 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i893
  %i895 = load i32, ptr %i894, align 8, !tbaa !19
  %i896 = add i32 %i884, %i895
  %i897 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i893, i64 1
  %i898 = load i32, ptr %i897, align 4, !tbaa !19
  %i899 = add i32 %i887, %i898
  %i900 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i893, i64 2
  %i901 = load i32, ptr %i900, align 8, !tbaa !19
  %i902 = add i32 %i890, %i901
  %i903 = getelementptr i16, ptr %i810, i64 8
  %i904 = load i16, ptr %i903, align 2, !tbaa !22
  %i905 = zext i16 %i904 to i64
  %i906 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i905
  %i907 = load i32, ptr %i906, align 8, !tbaa !19
  %i908 = add i32 %i896, %i907
  %i909 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i905, i64 1
  %i910 = load i32, ptr %i909, align 4, !tbaa !19
  %i911 = add i32 %i899, %i910
  %i912 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i905, i64 2
  %i913 = load i32, ptr %i912, align 8, !tbaa !19
  %i914 = add i32 %i902, %i913
  %i915 = getelementptr i16, ptr %i810, i64 9
  %i916 = load i16, ptr %i915, align 2, !tbaa !22
  %i917 = zext i16 %i916 to i64
  %i918 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i917
  %i919 = load i32, ptr %i918, align 8, !tbaa !19
  %i920 = add i32 %i908, %i919
  %i921 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i917, i64 1
  %i922 = load i32, ptr %i921, align 4, !tbaa !19
  %i923 = add i32 %i911, %i922
  %i924 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i917, i64 2
  %i925 = load i32, ptr %i924, align 8, !tbaa !19
  %i926 = add i32 %i914, %i925
  %i927 = getelementptr i16, ptr %i810, i64 10
  %i928 = load i16, ptr %i927, align 2, !tbaa !22
  %i929 = zext i16 %i928 to i64
  %i930 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i929
  %i931 = load i32, ptr %i930, align 8, !tbaa !19
  %i932 = add i32 %i920, %i931
  %i933 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i929, i64 1
  %i934 = load i32, ptr %i933, align 4, !tbaa !19
  %i935 = add i32 %i923, %i934
  %i936 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i929, i64 2
  %i937 = load i32, ptr %i936, align 8, !tbaa !19
  %i938 = add i32 %i926, %i937
  %i939 = getelementptr i16, ptr %i810, i64 11
  %i940 = load i16, ptr %i939, align 2, !tbaa !22
  %i941 = zext i16 %i940 to i64
  %i942 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i941
  %i943 = load i32, ptr %i942, align 8, !tbaa !19
  %i944 = add i32 %i932, %i943
  %i945 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i941, i64 1
  %i946 = load i32, ptr %i945, align 4, !tbaa !19
  %i947 = add i32 %i935, %i946
  %i948 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i941, i64 2
  %i949 = load i32, ptr %i948, align 8, !tbaa !19
  %i950 = add i32 %i938, %i949
  %i951 = getelementptr i16, ptr %i810, i64 12
  %i952 = load i16, ptr %i951, align 2, !tbaa !22
  %i953 = zext i16 %i952 to i64
  %i954 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i953
  %i955 = load i32, ptr %i954, align 8, !tbaa !19
  %i956 = add i32 %i944, %i955
  %i957 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i953, i64 1
  %i958 = load i32, ptr %i957, align 4, !tbaa !19
  %i959 = add i32 %i947, %i958
  %i960 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i953, i64 2
  %i961 = load i32, ptr %i960, align 8, !tbaa !19
  %i962 = add i32 %i950, %i961
  %i963 = getelementptr i16, ptr %i810, i64 13
  %i964 = load i16, ptr %i963, align 2, !tbaa !22
  %i965 = zext i16 %i964 to i64
  %i966 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i965
  %i967 = load i32, ptr %i966, align 8, !tbaa !19
  %i968 = add i32 %i956, %i967
  %i969 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i965, i64 1
  %i970 = load i32, ptr %i969, align 4, !tbaa !19
  %i971 = add i32 %i959, %i970
  %i972 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i965, i64 2
  %i973 = load i32, ptr %i972, align 8, !tbaa !19
  %i974 = add i32 %i962, %i973
  %i975 = getelementptr i16, ptr %i810, i64 14
  %i976 = load i16, ptr %i975, align 2, !tbaa !22
  %i977 = zext i16 %i976 to i64
  %i978 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i977
  %i979 = load i32, ptr %i978, align 8, !tbaa !19
  %i980 = add i32 %i968, %i979
  %i981 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i977, i64 1
  %i982 = load i32, ptr %i981, align 4, !tbaa !19
  %i983 = add i32 %i971, %i982
  %i984 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i977, i64 2
  %i985 = load i32, ptr %i984, align 8, !tbaa !19
  %i986 = add i32 %i974, %i985
  %i987 = getelementptr i16, ptr %i810, i64 15
  %i988 = load i16, ptr %i987, align 2, !tbaa !22
  %i989 = zext i16 %i988 to i64
  %i990 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i989
  %i991 = load i32, ptr %i990, align 8, !tbaa !19
  %i992 = add i32 %i980, %i991
  %i993 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i989, i64 1
  %i994 = load i32, ptr %i993, align 4, !tbaa !19
  %i995 = add i32 %i983, %i994
  %i996 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i989, i64 2
  %i997 = load i32, ptr %i996, align 8, !tbaa !19
  %i998 = add i32 %i986, %i997
  %i999 = getelementptr i16, ptr %i810, i64 16
  %i1000 = load i16, ptr %i999, align 2, !tbaa !22
  %i1001 = zext i16 %i1000 to i64
  %i1002 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1001
  %i1003 = load i32, ptr %i1002, align 8, !tbaa !19
  %i1004 = add i32 %i992, %i1003
  %i1005 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1001, i64 1
  %i1006 = load i32, ptr %i1005, align 4, !tbaa !19
  %i1007 = add i32 %i995, %i1006
  %i1008 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1001, i64 2
  %i1009 = load i32, ptr %i1008, align 8, !tbaa !19
  %i1010 = add i32 %i998, %i1009
  %i1011 = getelementptr i16, ptr %i810, i64 17
  %i1012 = load i16, ptr %i1011, align 2, !tbaa !22
  %i1013 = zext i16 %i1012 to i64
  %i1014 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1013
  %i1015 = load i32, ptr %i1014, align 8, !tbaa !19
  %i1016 = add i32 %i1004, %i1015
  %i1017 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1013, i64 1
  %i1018 = load i32, ptr %i1017, align 4, !tbaa !19
  %i1019 = add i32 %i1007, %i1018
  %i1020 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1013, i64 2
  %i1021 = load i32, ptr %i1020, align 8, !tbaa !19
  %i1022 = add i32 %i1010, %i1021
  %i1023 = getelementptr i16, ptr %i810, i64 18
  %i1024 = load i16, ptr %i1023, align 2, !tbaa !22
  %i1025 = zext i16 %i1024 to i64
  %i1026 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1025
  %i1027 = load i32, ptr %i1026, align 8, !tbaa !19
  %i1028 = add i32 %i1016, %i1027
  %i1029 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1025, i64 1
  %i1030 = load i32, ptr %i1029, align 4, !tbaa !19
  %i1031 = add i32 %i1019, %i1030
  %i1032 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1025, i64 2
  %i1033 = load i32, ptr %i1032, align 8, !tbaa !19
  %i1034 = add i32 %i1022, %i1033
  %i1035 = getelementptr i16, ptr %i810, i64 19
  %i1036 = load i16, ptr %i1035, align 2, !tbaa !22
  %i1037 = zext i16 %i1036 to i64
  %i1038 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1037
  %i1039 = load i32, ptr %i1038, align 8, !tbaa !19
  %i1040 = add i32 %i1028, %i1039
  %i1041 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1037, i64 1
  %i1042 = load i32, ptr %i1041, align 4, !tbaa !19
  %i1043 = add i32 %i1031, %i1042
  %i1044 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1037, i64 2
  %i1045 = load i32, ptr %i1044, align 8, !tbaa !19
  %i1046 = add i32 %i1034, %i1045
  %i1047 = getelementptr i16, ptr %i810, i64 20
  %i1048 = load i16, ptr %i1047, align 2, !tbaa !22
  %i1049 = zext i16 %i1048 to i64
  %i1050 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1049
  %i1051 = load i32, ptr %i1050, align 8, !tbaa !19
  %i1052 = add i32 %i1040, %i1051
  %i1053 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1049, i64 1
  %i1054 = load i32, ptr %i1053, align 4, !tbaa !19
  %i1055 = add i32 %i1043, %i1054
  %i1056 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1049, i64 2
  %i1057 = load i32, ptr %i1056, align 8, !tbaa !19
  %i1058 = add i32 %i1046, %i1057
  %i1059 = getelementptr i16, ptr %i810, i64 21
  %i1060 = load i16, ptr %i1059, align 2, !tbaa !22
  %i1061 = zext i16 %i1060 to i64
  %i1062 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1061
  %i1063 = load i32, ptr %i1062, align 8, !tbaa !19
  %i1064 = add i32 %i1052, %i1063
  %i1065 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1061, i64 1
  %i1066 = load i32, ptr %i1065, align 4, !tbaa !19
  %i1067 = add i32 %i1055, %i1066
  %i1068 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1061, i64 2
  %i1069 = load i32, ptr %i1068, align 8, !tbaa !19
  %i1070 = add i32 %i1058, %i1069
  %i1071 = getelementptr i16, ptr %i810, i64 22
  %i1072 = load i16, ptr %i1071, align 2, !tbaa !22
  %i1073 = zext i16 %i1072 to i64
  %i1074 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1073
  %i1075 = load i32, ptr %i1074, align 8, !tbaa !19
  %i1076 = add i32 %i1064, %i1075
  %i1077 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1073, i64 1
  %i1078 = load i32, ptr %i1077, align 4, !tbaa !19
  %i1079 = add i32 %i1067, %i1078
  %i1080 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1073, i64 2
  %i1081 = load i32, ptr %i1080, align 8, !tbaa !19
  %i1082 = add i32 %i1070, %i1081
  %i1083 = getelementptr i16, ptr %i810, i64 23
  %i1084 = load i16, ptr %i1083, align 2, !tbaa !22
  %i1085 = zext i16 %i1084 to i64
  %i1086 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1085
  %i1087 = load i32, ptr %i1086, align 8, !tbaa !19
  %i1088 = add i32 %i1076, %i1087
  %i1089 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1085, i64 1
  %i1090 = load i32, ptr %i1089, align 4, !tbaa !19
  %i1091 = add i32 %i1079, %i1090
  %i1092 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1085, i64 2
  %i1093 = load i32, ptr %i1092, align 8, !tbaa !19
  %i1094 = add i32 %i1082, %i1093
  %i1095 = getelementptr i16, ptr %i810, i64 24
  %i1096 = load i16, ptr %i1095, align 2, !tbaa !22
  %i1097 = zext i16 %i1096 to i64
  %i1098 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1097
  %i1099 = load i32, ptr %i1098, align 8, !tbaa !19
  %i1100 = add i32 %i1088, %i1099
  %i1101 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1097, i64 1
  %i1102 = load i32, ptr %i1101, align 4, !tbaa !19
  %i1103 = add i32 %i1091, %i1102
  %i1104 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1097, i64 2
  %i1105 = load i32, ptr %i1104, align 8, !tbaa !19
  %i1106 = add i32 %i1094, %i1105
  %i1107 = getelementptr i16, ptr %i810, i64 25
  %i1108 = load i16, ptr %i1107, align 2, !tbaa !22
  %i1109 = zext i16 %i1108 to i64
  %i1110 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1109
  %i1111 = load i32, ptr %i1110, align 8, !tbaa !19
  %i1112 = add i32 %i1100, %i1111
  %i1113 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1109, i64 1
  %i1114 = load i32, ptr %i1113, align 4, !tbaa !19
  %i1115 = add i32 %i1103, %i1114
  %i1116 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1109, i64 2
  %i1117 = load i32, ptr %i1116, align 8, !tbaa !19
  %i1118 = add i32 %i1106, %i1117
  %i1119 = getelementptr i16, ptr %i810, i64 26
  %i1120 = load i16, ptr %i1119, align 2, !tbaa !22
  %i1121 = zext i16 %i1120 to i64
  %i1122 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1121
  %i1123 = load i32, ptr %i1122, align 8, !tbaa !19
  %i1124 = add i32 %i1112, %i1123
  %i1125 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1121, i64 1
  %i1126 = load i32, ptr %i1125, align 4, !tbaa !19
  %i1127 = add i32 %i1115, %i1126
  %i1128 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1121, i64 2
  %i1129 = load i32, ptr %i1128, align 8, !tbaa !19
  %i1130 = add i32 %i1118, %i1129
  %i1131 = getelementptr i16, ptr %i810, i64 27
  %i1132 = load i16, ptr %i1131, align 2, !tbaa !22
  %i1133 = zext i16 %i1132 to i64
  %i1134 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1133
  %i1135 = load i32, ptr %i1134, align 8, !tbaa !19
  %i1136 = add i32 %i1124, %i1135
  %i1137 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1133, i64 1
  %i1138 = load i32, ptr %i1137, align 4, !tbaa !19
  %i1139 = add i32 %i1127, %i1138
  %i1140 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1133, i64 2
  %i1141 = load i32, ptr %i1140, align 8, !tbaa !19
  %i1142 = add i32 %i1130, %i1141
  %i1143 = getelementptr i16, ptr %i810, i64 28
  %i1144 = load i16, ptr %i1143, align 2, !tbaa !22
  %i1145 = zext i16 %i1144 to i64
  %i1146 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1145
  %i1147 = load i32, ptr %i1146, align 8, !tbaa !19
  %i1148 = add i32 %i1136, %i1147
  %i1149 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1145, i64 1
  %i1150 = load i32, ptr %i1149, align 4, !tbaa !19
  %i1151 = add i32 %i1139, %i1150
  %i1152 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1145, i64 2
  %i1153 = load i32, ptr %i1152, align 8, !tbaa !19
  %i1154 = add i32 %i1142, %i1153
  %i1155 = getelementptr i16, ptr %i810, i64 29
  %i1156 = load i16, ptr %i1155, align 2, !tbaa !22
  %i1157 = zext i16 %i1156 to i64
  %i1158 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1157
  %i1159 = load i32, ptr %i1158, align 8, !tbaa !19
  %i1160 = add i32 %i1148, %i1159
  %i1161 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1157, i64 1
  %i1162 = load i32, ptr %i1161, align 4, !tbaa !19
  %i1163 = add i32 %i1151, %i1162
  %i1164 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1157, i64 2
  %i1165 = load i32, ptr %i1164, align 8, !tbaa !19
  %i1166 = add i32 %i1154, %i1165
  %i1167 = getelementptr i16, ptr %i810, i64 30
  %i1168 = load i16, ptr %i1167, align 2, !tbaa !22
  %i1169 = zext i16 %i1168 to i64
  %i1170 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1169
  %i1171 = load i32, ptr %i1170, align 8, !tbaa !19
  %i1172 = add i32 %i1160, %i1171
  %i1173 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1169, i64 1
  %i1174 = load i32, ptr %i1173, align 4, !tbaa !19
  %i1175 = add i32 %i1163, %i1174
  %i1176 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1169, i64 2
  %i1177 = load i32, ptr %i1176, align 8, !tbaa !19
  %i1178 = add i32 %i1166, %i1177
  %i1179 = getelementptr i16, ptr %i810, i64 31
  %i1180 = load i16, ptr %i1179, align 2, !tbaa !22
  %i1181 = zext i16 %i1180 to i64
  %i1182 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1181
  %i1183 = load i32, ptr %i1182, align 8, !tbaa !19
  %i1184 = add i32 %i1172, %i1183
  %i1185 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1181, i64 1
  %i1186 = load i32, ptr %i1185, align 4, !tbaa !19
  %i1187 = add i32 %i1175, %i1186
  %i1188 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1181, i64 2
  %i1189 = load i32, ptr %i1188, align 8, !tbaa !19
  %i1190 = add i32 %i1178, %i1189
  %i1191 = getelementptr i16, ptr %i810, i64 32
  %i1192 = load i16, ptr %i1191, align 2, !tbaa !22
  %i1193 = zext i16 %i1192 to i64
  %i1194 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1193
  %i1195 = load i32, ptr %i1194, align 8, !tbaa !19
  %i1196 = add i32 %i1184, %i1195
  %i1197 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1193, i64 1
  %i1198 = load i32, ptr %i1197, align 4, !tbaa !19
  %i1199 = add i32 %i1187, %i1198
  %i1200 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1193, i64 2
  %i1201 = load i32, ptr %i1200, align 8, !tbaa !19
  %i1202 = add i32 %i1190, %i1201
  %i1203 = getelementptr i16, ptr %i810, i64 33
  %i1204 = load i16, ptr %i1203, align 2, !tbaa !22
  %i1205 = zext i16 %i1204 to i64
  %i1206 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1205
  %i1207 = load i32, ptr %i1206, align 8, !tbaa !19
  %i1208 = add i32 %i1196, %i1207
  %i1209 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1205, i64 1
  %i1210 = load i32, ptr %i1209, align 4, !tbaa !19
  %i1211 = add i32 %i1199, %i1210
  %i1212 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1205, i64 2
  %i1213 = load i32, ptr %i1212, align 8, !tbaa !19
  %i1214 = add i32 %i1202, %i1213
  %i1215 = getelementptr i16, ptr %i810, i64 34
  %i1216 = load i16, ptr %i1215, align 2, !tbaa !22
  %i1217 = zext i16 %i1216 to i64
  %i1218 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1217
  %i1219 = load i32, ptr %i1218, align 8, !tbaa !19
  %i1220 = add i32 %i1208, %i1219
  %i1221 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1217, i64 1
  %i1222 = load i32, ptr %i1221, align 4, !tbaa !19
  %i1223 = add i32 %i1211, %i1222
  %i1224 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1217, i64 2
  %i1225 = load i32, ptr %i1224, align 8, !tbaa !19
  %i1226 = add i32 %i1214, %i1225
  %i1227 = getelementptr i16, ptr %i810, i64 35
  %i1228 = load i16, ptr %i1227, align 2, !tbaa !22
  %i1229 = zext i16 %i1228 to i64
  %i1230 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1229
  %i1231 = load i32, ptr %i1230, align 8, !tbaa !19
  %i1232 = add i32 %i1220, %i1231
  %i1233 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1229, i64 1
  %i1234 = load i32, ptr %i1233, align 4, !tbaa !19
  %i1235 = add i32 %i1223, %i1234
  %i1236 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1229, i64 2
  %i1237 = load i32, ptr %i1236, align 8, !tbaa !19
  %i1238 = add i32 %i1226, %i1237
  %i1239 = getelementptr i16, ptr %i810, i64 36
  %i1240 = load i16, ptr %i1239, align 2, !tbaa !22
  %i1241 = zext i16 %i1240 to i64
  %i1242 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1241
  %i1243 = load i32, ptr %i1242, align 8, !tbaa !19
  %i1244 = add i32 %i1232, %i1243
  %i1245 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1241, i64 1
  %i1246 = load i32, ptr %i1245, align 4, !tbaa !19
  %i1247 = add i32 %i1235, %i1246
  %i1248 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1241, i64 2
  %i1249 = load i32, ptr %i1248, align 8, !tbaa !19
  %i1250 = add i32 %i1238, %i1249
  %i1251 = getelementptr i16, ptr %i810, i64 37
  %i1252 = load i16, ptr %i1251, align 2, !tbaa !22
  %i1253 = zext i16 %i1252 to i64
  %i1254 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1253
  %i1255 = load i32, ptr %i1254, align 8, !tbaa !19
  %i1256 = add i32 %i1244, %i1255
  %i1257 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1253, i64 1
  %i1258 = load i32, ptr %i1257, align 4, !tbaa !19
  %i1259 = add i32 %i1247, %i1258
  %i1260 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1253, i64 2
  %i1261 = load i32, ptr %i1260, align 8, !tbaa !19
  %i1262 = add i32 %i1250, %i1261
  %i1263 = getelementptr i16, ptr %i810, i64 38
  %i1264 = load i16, ptr %i1263, align 2, !tbaa !22
  %i1265 = zext i16 %i1264 to i64
  %i1266 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1265
  %i1267 = load i32, ptr %i1266, align 8, !tbaa !19
  %i1268 = add i32 %i1256, %i1267
  %i1269 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1265, i64 1
  %i1270 = load i32, ptr %i1269, align 4, !tbaa !19
  %i1271 = add i32 %i1259, %i1270
  %i1272 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1265, i64 2
  %i1273 = load i32, ptr %i1272, align 8, !tbaa !19
  %i1274 = add i32 %i1262, %i1273
  %i1275 = getelementptr i16, ptr %i810, i64 39
  %i1276 = load i16, ptr %i1275, align 2, !tbaa !22
  %i1277 = zext i16 %i1276 to i64
  %i1278 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1277
  %i1279 = load i32, ptr %i1278, align 8, !tbaa !19
  %i1280 = add i32 %i1268, %i1279
  %i1281 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1277, i64 1
  %i1282 = load i32, ptr %i1281, align 4, !tbaa !19
  %i1283 = add i32 %i1271, %i1282
  %i1284 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1277, i64 2
  %i1285 = load i32, ptr %i1284, align 8, !tbaa !19
  %i1286 = add i32 %i1274, %i1285
  %i1287 = getelementptr i16, ptr %i810, i64 40
  %i1288 = load i16, ptr %i1287, align 2, !tbaa !22
  %i1289 = zext i16 %i1288 to i64
  %i1290 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1289
  %i1291 = load i32, ptr %i1290, align 8, !tbaa !19
  %i1292 = add i32 %i1280, %i1291
  %i1293 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1289, i64 1
  %i1294 = load i32, ptr %i1293, align 4, !tbaa !19
  %i1295 = add i32 %i1283, %i1294
  %i1296 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1289, i64 2
  %i1297 = load i32, ptr %i1296, align 8, !tbaa !19
  %i1298 = add i32 %i1286, %i1297
  %i1299 = getelementptr i16, ptr %i810, i64 41
  %i1300 = load i16, ptr %i1299, align 2, !tbaa !22
  %i1301 = zext i16 %i1300 to i64
  %i1302 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1301
  %i1303 = load i32, ptr %i1302, align 8, !tbaa !19
  %i1304 = add i32 %i1292, %i1303
  %i1305 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1301, i64 1
  %i1306 = load i32, ptr %i1305, align 4, !tbaa !19
  %i1307 = add i32 %i1295, %i1306
  %i1308 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1301, i64 2
  %i1309 = load i32, ptr %i1308, align 8, !tbaa !19
  %i1310 = add i32 %i1298, %i1309
  %i1311 = getelementptr i16, ptr %i810, i64 42
  %i1312 = load i16, ptr %i1311, align 2, !tbaa !22
  %i1313 = zext i16 %i1312 to i64
  %i1314 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1313
  %i1315 = load i32, ptr %i1314, align 8, !tbaa !19
  %i1316 = add i32 %i1304, %i1315
  %i1317 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1313, i64 1
  %i1318 = load i32, ptr %i1317, align 4, !tbaa !19
  %i1319 = add i32 %i1307, %i1318
  %i1320 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1313, i64 2
  %i1321 = load i32, ptr %i1320, align 8, !tbaa !19
  %i1322 = add i32 %i1310, %i1321
  %i1323 = getelementptr i16, ptr %i810, i64 43
  %i1324 = load i16, ptr %i1323, align 2, !tbaa !22
  %i1325 = zext i16 %i1324 to i64
  %i1326 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1325
  %i1327 = load i32, ptr %i1326, align 8, !tbaa !19
  %i1328 = add i32 %i1316, %i1327
  %i1329 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1325, i64 1
  %i1330 = load i32, ptr %i1329, align 4, !tbaa !19
  %i1331 = add i32 %i1319, %i1330
  %i1332 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1325, i64 2
  %i1333 = load i32, ptr %i1332, align 8, !tbaa !19
  %i1334 = add i32 %i1322, %i1333
  %i1335 = getelementptr i16, ptr %i810, i64 44
  %i1336 = load i16, ptr %i1335, align 2, !tbaa !22
  %i1337 = zext i16 %i1336 to i64
  %i1338 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1337
  %i1339 = load i32, ptr %i1338, align 8, !tbaa !19
  %i1340 = add i32 %i1328, %i1339
  %i1341 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1337, i64 1
  %i1342 = load i32, ptr %i1341, align 4, !tbaa !19
  %i1343 = add i32 %i1331, %i1342
  %i1344 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1337, i64 2
  %i1345 = load i32, ptr %i1344, align 8, !tbaa !19
  %i1346 = add i32 %i1334, %i1345
  %i1347 = getelementptr i16, ptr %i810, i64 45
  %i1348 = load i16, ptr %i1347, align 2, !tbaa !22
  %i1349 = zext i16 %i1348 to i64
  %i1350 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1349
  %i1351 = load i32, ptr %i1350, align 8, !tbaa !19
  %i1352 = add i32 %i1340, %i1351
  %i1353 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1349, i64 1
  %i1354 = load i32, ptr %i1353, align 4, !tbaa !19
  %i1355 = add i32 %i1343, %i1354
  %i1356 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1349, i64 2
  %i1357 = load i32, ptr %i1356, align 8, !tbaa !19
  %i1358 = add i32 %i1346, %i1357
  %i1359 = getelementptr i16, ptr %i810, i64 46
  %i1360 = load i16, ptr %i1359, align 2, !tbaa !22
  %i1361 = zext i16 %i1360 to i64
  %i1362 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1361
  %i1363 = load i32, ptr %i1362, align 8, !tbaa !19
  %i1364 = add i32 %i1352, %i1363
  %i1365 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1361, i64 1
  %i1366 = load i32, ptr %i1365, align 4, !tbaa !19
  %i1367 = add i32 %i1355, %i1366
  %i1368 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1361, i64 2
  %i1369 = load i32, ptr %i1368, align 8, !tbaa !19
  %i1370 = add i32 %i1358, %i1369
  %i1371 = getelementptr i16, ptr %i810, i64 47
  %i1372 = load i16, ptr %i1371, align 2, !tbaa !22
  %i1373 = zext i16 %i1372 to i64
  %i1374 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1373
  %i1375 = load i32, ptr %i1374, align 8, !tbaa !19
  %i1376 = add i32 %i1364, %i1375
  %i1377 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1373, i64 1
  %i1378 = load i32, ptr %i1377, align 4, !tbaa !19
  %i1379 = add i32 %i1367, %i1378
  %i1380 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1373, i64 2
  %i1381 = load i32, ptr %i1380, align 8, !tbaa !19
  %i1382 = add i32 %i1370, %i1381
  %i1383 = getelementptr i16, ptr %i810, i64 48
  %i1384 = load i16, ptr %i1383, align 2, !tbaa !22
  %i1385 = zext i16 %i1384 to i64
  %i1386 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1385
  %i1387 = load i32, ptr %i1386, align 8, !tbaa !19
  %i1388 = add i32 %i1376, %i1387
  %i1389 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1385, i64 1
  %i1390 = load i32, ptr %i1389, align 4, !tbaa !19
  %i1391 = add i32 %i1379, %i1390
  %i1392 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1385, i64 2
  %i1393 = load i32, ptr %i1392, align 8, !tbaa !19
  %i1394 = add i32 %i1382, %i1393
  %i1395 = getelementptr i16, ptr %i810, i64 49
  %i1396 = load i16, ptr %i1395, align 2, !tbaa !22
  %i1397 = zext i16 %i1396 to i64
  %i1398 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1397
  %i1399 = load i32, ptr %i1398, align 8, !tbaa !19
  %i1400 = add i32 %i1388, %i1399
  %i1401 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1397, i64 1
  %i1402 = load i32, ptr %i1401, align 4, !tbaa !19
  %i1403 = add i32 %i1391, %i1402
  %i1404 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 38, i64 %i1397, i64 2
  %i1405 = load i32, ptr %i1404, align 8, !tbaa !19
  %i1406 = add i32 %i1394, %i1405
  %i1407 = trunc i32 %i1400 to i16
  store i16 %i1407, ptr %i, align 2, !tbaa !22
  %i1408 = lshr i32 %i1400, 16
  %i1409 = trunc i32 %i1408 to i16
  store i16 %i1409, ptr %i637, align 2, !tbaa !22
  %i1410 = trunc i32 %i1403 to i16
  store i16 %i1410, ptr %i638, align 2, !tbaa !22
  %i1411 = lshr i32 %i1403, 16
  %i1412 = trunc i32 %i1411 to i16
  store i16 %i1412, ptr %i639, align 2, !tbaa !22
  %i1413 = trunc i32 %i1406 to i16
  store i16 %i1413, ptr %i640, align 2, !tbaa !22
  %i1414 = lshr i32 %i1406, 16
  %i1415 = trunc i32 %i1414 to i16
  store i16 %i1415, ptr %i641, align 2, !tbaa !22
  br label %bb1464

bb1416:                                           ; preds = %bb1455.bb1416_crit_edge, %bb799
  %i1417 = phi i16 [ %i807, %bb799 ], [ %i1456, %bb1455.bb1416_crit_edge ]
  %i1418 = phi i16 [ %i806, %bb799 ], [ %i1457, %bb1455.bb1416_crit_edge ]
  %i1419 = phi i16 [ %i805, %bb799 ], [ %i1458, %bb1455.bb1416_crit_edge ]
  %i1420 = phi i16 [ %i804, %bb799 ], [ %i1459, %bb1455.bb1416_crit_edge ]
  %i1421 = phi i16 [ %i803, %bb799 ], [ %i1434, %bb1455.bb1416_crit_edge ]
  %i1422 = phi i16 [ %i802, %bb799 ], [ %i1430, %bb1455.bb1416_crit_edge ]
  %i1423 = phi i64 [ %i800, %bb799 ], [ %i1460, %bb1455.bb1416_crit_edge ]
  %i1424 = getelementptr inbounds i16, ptr %i561, i64 %i1423
  %i1425 = load i16, ptr %i1424, align 2, !tbaa !22
  %i1426 = zext i16 %i1425 to i64
  %i1427 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 0, i64 %i1426
  %i1428 = load i8, ptr %i1427, align 1, !tbaa !21
  %i1429 = zext i8 %i1428 to i16
  %i1430 = add i16 %i1422, %i1429
  %i1431 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 1, i64 %i1426
  %i1432 = load i8, ptr %i1431, align 1, !tbaa !21
  %i1433 = zext i8 %i1432 to i16
  %i1434 = add i16 %i1421, %i1433
  br i1 %i629, label %bb1416.bb1455_crit_edge, label %bb1435, !llvm.loop !208

bb1416.bb1455_crit_edge:                          ; preds = %bb1416
  br label %bb1455

bb1435:                                           ; preds = %bb1416
  %i1436 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 2, i64 %i1426
  %i1437 = load i8, ptr %i1436, align 1, !tbaa !21
  %i1438 = zext i8 %i1437 to i16
  %i1439 = add i16 %i1420, %i1438
  br i1 %i631, label %bb1435.bb1455_crit_edge, label %bb1440, !llvm.loop !208

bb1435.bb1455_crit_edge:                          ; preds = %bb1435
  br label %bb1455

bb1440:                                           ; preds = %bb1435
  %i1441 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 3, i64 %i1426
  %i1442 = load i8, ptr %i1441, align 1, !tbaa !21
  %i1443 = zext i8 %i1442 to i16
  %i1444 = add i16 %i1419, %i1443
  br i1 %i633, label %bb1440.bb1455_crit_edge, label %bb1445, !llvm.loop !208

bb1440.bb1455_crit_edge:                          ; preds = %bb1440
  br label %bb1455

bb1445:                                           ; preds = %bb1440
  %i1446 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 4, i64 %i1426
  %i1447 = load i8, ptr %i1446, align 1, !tbaa !21
  %i1448 = zext i8 %i1447 to i16
  %i1449 = add i16 %i1418, %i1448
  br i1 %i635, label %bb1445.bb1455_crit_edge, label %bb1450, !llvm.loop !208

bb1445.bb1455_crit_edge:                          ; preds = %bb1445
  br label %bb1455

bb1450:                                           ; preds = %bb1445
  %i1451 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 5, i64 %i1426
  %i1452 = load i8, ptr %i1451, align 1, !tbaa !21
  %i1453 = zext i8 %i1452 to i16
  %i1454 = add i16 %i1417, %i1453
  br label %bb1455, !llvm.loop !208

bb1455:                                           ; preds = %bb1445.bb1455_crit_edge, %bb1440.bb1455_crit_edge, %bb1435.bb1455_crit_edge, %bb1416.bb1455_crit_edge, %bb1450
  %i1456 = phi i16 [ %i1417, %bb1445.bb1455_crit_edge ], [ %i1417, %bb1440.bb1455_crit_edge ], [ %i1417, %bb1435.bb1455_crit_edge ], [ %i1417, %bb1416.bb1455_crit_edge ], [ %i1454, %bb1450 ]
  %i1457 = phi i16 [ %i1449, %bb1445.bb1455_crit_edge ], [ %i1418, %bb1440.bb1455_crit_edge ], [ %i1418, %bb1435.bb1455_crit_edge ], [ %i1418, %bb1416.bb1455_crit_edge ], [ %i1449, %bb1450 ]
  %i1458 = phi i16 [ %i1444, %bb1445.bb1455_crit_edge ], [ %i1444, %bb1440.bb1455_crit_edge ], [ %i1419, %bb1435.bb1455_crit_edge ], [ %i1419, %bb1416.bb1455_crit_edge ], [ %i1444, %bb1450 ]
  %i1459 = phi i16 [ %i1439, %bb1445.bb1455_crit_edge ], [ %i1439, %bb1440.bb1455_crit_edge ], [ %i1439, %bb1435.bb1455_crit_edge ], [ %i1420, %bb1416.bb1455_crit_edge ], [ %i1439, %bb1450 ]
  %i1460 = add nsw i64 %i1423, 1
  %i1461 = trunc i64 %i1460 to i32
  %i1462 = icmp eq i32 %i801, %i1461
  br i1 %i1462, label %bb1463, label %bb1455.bb1416_crit_edge, !llvm.loop !209

bb1455.bb1416_crit_edge:                          ; preds = %bb1455
  br label %bb1416

bb1463:                                           ; preds = %bb1455
  store i16 %i1430, ptr %i, align 2, !tbaa !22
  store i16 %i1434, ptr %i628, align 2, !tbaa !22
  store i16 %i1459, ptr %i630, align 2, !tbaa !22
  store i16 %i1458, ptr %i632, align 2, !tbaa !22
  store i16 %i1457, ptr %i634, align 2, !tbaa !22
  store i16 %i1456, ptr %i636, align 2, !tbaa !22
  br label %bb1464

bb1464:                                           ; preds = %bb797.bb1464_crit_edge, %bb1463, %bb808
  %i1465 = load i16, ptr %i, align 2, !tbaa !22
  %i1466 = zext i16 %i1465 to i32
  %i1467 = load i16, ptr %i642, align 2, !tbaa !22
  %i1468 = zext i16 %i1467 to i32
  %i1469 = icmp ugt i16 %i1465, %i1467
  %i1470 = call i32 @llvm.smin.i32(i32 %i1466, i32 %i1468)
  %i1471 = zext i1 %i1469 to i32
  br i1 %i643, label %bb1464.bb1498_crit_edge, label %bb1472, !llvm.loop !210

bb1464.bb1498_crit_edge:                          ; preds = %bb1464
  br label %bb1498

bb1472:                                           ; preds = %bb1464
  %i1473 = load i16, ptr %i644, align 2, !tbaa !22
  %i1474 = zext i16 %i1473 to i32
  %i1475 = icmp ugt i32 %i1470, %i1474
  %i1476 = call i32 @llvm.smin.i32(i32 %i1470, i32 %i1474)
  %i1477 = select i1 %i1475, i32 2, i32 %i1471
  br i1 %i645, label %bb1472.bb1498_crit_edge, label %bb1478, !llvm.loop !210

bb1472.bb1498_crit_edge:                          ; preds = %bb1472
  br label %bb1498

bb1478:                                           ; preds = %bb1472
  %i1479 = load i16, ptr %i646, align 2, !tbaa !22
  %i1480 = zext i16 %i1479 to i32
  %i1481 = icmp ugt i32 %i1476, %i1480
  %i1482 = call i32 @llvm.smin.i32(i32 %i1476, i32 %i1480)
  %i1483 = select i1 %i1481, i32 3, i32 %i1477
  br i1 %i647, label %bb1478.bb1498_crit_edge, label %bb1484, !llvm.loop !210

bb1478.bb1498_crit_edge:                          ; preds = %bb1478
  br label %bb1498

bb1484:                                           ; preds = %bb1478
  %i1485 = load i16, ptr %i648, align 2, !tbaa !22
  %i1486 = zext i16 %i1485 to i32
  %i1487 = icmp ugt i32 %i1482, %i1486
  %i1488 = call i32 @llvm.smin.i32(i32 %i1482, i32 %i1486)
  %i1489 = select i1 %i1487, i32 4, i32 %i1483
  br i1 %i649, label %bb1484.bb1498_crit_edge, label %bb1490, !llvm.loop !210

bb1484.bb1498_crit_edge:                          ; preds = %bb1484
  br label %bb1498

bb1490:                                           ; preds = %bb1484
  %i1491 = load i16, ptr %i650, align 2, !tbaa !22
  %i1492 = zext i16 %i1491 to i32
  %i1493 = icmp ugt i32 %i1488, %i1492
  %i1494 = call i32 @llvm.smin.i32(i32 %i1488, i32 %i1492)
  %i1495 = select i1 %i1493, i32 5, i32 %i1489
  %i1496 = select i1 %i651, i32 %i1494, i32 -2147483648
  %i1497 = select i1 %i651, i32 %i1495, i32 poison
  br label %bb1498, !llvm.loop !210

bb1498:                                           ; preds = %bb1484.bb1498_crit_edge, %bb1478.bb1498_crit_edge, %bb1472.bb1498_crit_edge, %bb1464.bb1498_crit_edge, %bb1490
  %i1499 = phi i32 [ %i1470, %bb1464.bb1498_crit_edge ], [ %i1476, %bb1472.bb1498_crit_edge ], [ %i1482, %bb1478.bb1498_crit_edge ], [ %i1488, %bb1484.bb1498_crit_edge ], [ %i1496, %bb1490 ]
  %i1500 = phi i32 [ %i1471, %bb1464.bb1498_crit_edge ], [ %i1477, %bb1472.bb1498_crit_edge ], [ %i1483, %bb1478.bb1498_crit_edge ], [ %i1489, %bb1484.bb1498_crit_edge ], [ %i1497, %bb1490 ]
  %i1501 = add nsw i32 %i1499, %i789
  %i1502 = sext i32 %i1500 to i64
  %i1503 = getelementptr inbounds [6 x i32], ptr %i2, i64 0, i64 %i1502
  %i1504 = load i32, ptr %i1503, align 4, !tbaa !19
  %i1505 = add nsw i32 %i1504, 1
  store i32 %i1505, ptr %i1503, align 4, !tbaa !19
  %i1506 = trunc i32 %i1500 to i8
  %i1507 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 33, i64 %i786
  store i8 %i1506, ptr %i1507, align 1, !tbaa !21
  %i1508 = add nuw i64 %i786, 1
  br i1 %i796, label %bb1528, label %bb1509

bb1509:                                           ; preds = %bb1498
  %i1510 = icmp sgt i32 %i788, %i793
  br i1 %i1510, label %bb1509.bb1847_crit_edge, label %bb1511

bb1509.bb1847_crit_edge:                          ; preds = %bb1509
  br label %bb1847

bb1511:                                           ; preds = %bb1509
  %i1512 = sext i32 %i788 to i64
  %i1513 = add i32 %i793, 1
  %i1514 = sub i32 %i1513, %i788
  %i1515 = and i32 %i1514, 1
  %i1516 = icmp eq i32 %i1515, 0
  br i1 %i1516, label %bb1511.bb1525_crit_edge, label %bb1517

bb1511.bb1525_crit_edge:                          ; preds = %bb1511
  br label %bb1525

bb1517:                                           ; preds = %bb1511
  %i1518 = getelementptr inbounds i16, ptr %i561, i64 %i1512
  %i1519 = load i16, ptr %i1518, align 2, !tbaa !22
  %i1520 = zext i16 %i1519 to i64
  %i1521 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1520
  %i1522 = load i32, ptr %i1521, align 4, !tbaa !19
  %i1523 = add nsw i32 %i1522, 1
  store i32 %i1523, ptr %i1521, align 4, !tbaa !19
  %i1524 = add nsw i64 %i1512, 1
  br label %bb1525

bb1525:                                           ; preds = %bb1511.bb1525_crit_edge, %bb1517
  %i1526 = phi i64 [ %i1512, %bb1511.bb1525_crit_edge ], [ %i1524, %bb1517 ]
  %i1527 = icmp eq i32 %i793, %i788
  br i1 %i1527, label %bb1525.bb1847_crit_edge, label %bb1830.preheader

bb1525.bb1847_crit_edge:                          ; preds = %bb1525
  br label %bb1847

bb1830.preheader:                                 ; preds = %bb1525
  br label %bb1830

bb1528:                                           ; preds = %bb1498
  %i1529 = sext i32 %i788 to i64
  %i1530 = getelementptr inbounds i16, ptr %i561, i64 %i1529
  %i1531 = load i16, ptr %i1530, align 2, !tbaa !22
  %i1532 = zext i16 %i1531 to i64
  %i1533 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1532
  %i1534 = load i32, ptr %i1533, align 4, !tbaa !19
  %i1535 = add nsw i32 %i1534, 1
  store i32 %i1535, ptr %i1533, align 4, !tbaa !19
  %i1536 = getelementptr i16, ptr %i1530, i64 1
  %i1537 = load i16, ptr %i1536, align 2, !tbaa !22
  %i1538 = zext i16 %i1537 to i64
  %i1539 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1538
  %i1540 = load i32, ptr %i1539, align 4, !tbaa !19
  %i1541 = add nsw i32 %i1540, 1
  store i32 %i1541, ptr %i1539, align 4, !tbaa !19
  %i1542 = getelementptr i16, ptr %i1530, i64 2
  %i1543 = load i16, ptr %i1542, align 2, !tbaa !22
  %i1544 = zext i16 %i1543 to i64
  %i1545 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1544
  %i1546 = load i32, ptr %i1545, align 4, !tbaa !19
  %i1547 = add nsw i32 %i1546, 1
  store i32 %i1547, ptr %i1545, align 4, !tbaa !19
  %i1548 = getelementptr i16, ptr %i1530, i64 3
  %i1549 = load i16, ptr %i1548, align 2, !tbaa !22
  %i1550 = zext i16 %i1549 to i64
  %i1551 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1550
  %i1552 = load i32, ptr %i1551, align 4, !tbaa !19
  %i1553 = add nsw i32 %i1552, 1
  store i32 %i1553, ptr %i1551, align 4, !tbaa !19
  %i1554 = getelementptr i16, ptr %i1530, i64 4
  %i1555 = load i16, ptr %i1554, align 2, !tbaa !22
  %i1556 = zext i16 %i1555 to i64
  %i1557 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1556
  %i1558 = load i32, ptr %i1557, align 4, !tbaa !19
  %i1559 = add nsw i32 %i1558, 1
  store i32 %i1559, ptr %i1557, align 4, !tbaa !19
  %i1560 = getelementptr i16, ptr %i1530, i64 5
  %i1561 = load i16, ptr %i1560, align 2, !tbaa !22
  %i1562 = zext i16 %i1561 to i64
  %i1563 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1562
  %i1564 = load i32, ptr %i1563, align 4, !tbaa !19
  %i1565 = add nsw i32 %i1564, 1
  store i32 %i1565, ptr %i1563, align 4, !tbaa !19
  %i1566 = getelementptr i16, ptr %i1530, i64 6
  %i1567 = load i16, ptr %i1566, align 2, !tbaa !22
  %i1568 = zext i16 %i1567 to i64
  %i1569 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1568
  %i1570 = load i32, ptr %i1569, align 4, !tbaa !19
  %i1571 = add nsw i32 %i1570, 1
  store i32 %i1571, ptr %i1569, align 4, !tbaa !19
  %i1572 = getelementptr i16, ptr %i1530, i64 7
  %i1573 = load i16, ptr %i1572, align 2, !tbaa !22
  %i1574 = zext i16 %i1573 to i64
  %i1575 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1574
  %i1576 = load i32, ptr %i1575, align 4, !tbaa !19
  %i1577 = add nsw i32 %i1576, 1
  store i32 %i1577, ptr %i1575, align 4, !tbaa !19
  %i1578 = getelementptr i16, ptr %i1530, i64 8
  %i1579 = load i16, ptr %i1578, align 2, !tbaa !22
  %i1580 = zext i16 %i1579 to i64
  %i1581 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1580
  %i1582 = load i32, ptr %i1581, align 4, !tbaa !19
  %i1583 = add nsw i32 %i1582, 1
  store i32 %i1583, ptr %i1581, align 4, !tbaa !19
  %i1584 = getelementptr i16, ptr %i1530, i64 9
  %i1585 = load i16, ptr %i1584, align 2, !tbaa !22
  %i1586 = zext i16 %i1585 to i64
  %i1587 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1586
  %i1588 = load i32, ptr %i1587, align 4, !tbaa !19
  %i1589 = add nsw i32 %i1588, 1
  store i32 %i1589, ptr %i1587, align 4, !tbaa !19
  %i1590 = getelementptr i16, ptr %i1530, i64 10
  %i1591 = load i16, ptr %i1590, align 2, !tbaa !22
  %i1592 = zext i16 %i1591 to i64
  %i1593 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1592
  %i1594 = load i32, ptr %i1593, align 4, !tbaa !19
  %i1595 = add nsw i32 %i1594, 1
  store i32 %i1595, ptr %i1593, align 4, !tbaa !19
  %i1596 = getelementptr i16, ptr %i1530, i64 11
  %i1597 = load i16, ptr %i1596, align 2, !tbaa !22
  %i1598 = zext i16 %i1597 to i64
  %i1599 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1598
  %i1600 = load i32, ptr %i1599, align 4, !tbaa !19
  %i1601 = add nsw i32 %i1600, 1
  store i32 %i1601, ptr %i1599, align 4, !tbaa !19
  %i1602 = getelementptr i16, ptr %i1530, i64 12
  %i1603 = load i16, ptr %i1602, align 2, !tbaa !22
  %i1604 = zext i16 %i1603 to i64
  %i1605 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1604
  %i1606 = load i32, ptr %i1605, align 4, !tbaa !19
  %i1607 = add nsw i32 %i1606, 1
  store i32 %i1607, ptr %i1605, align 4, !tbaa !19
  %i1608 = getelementptr i16, ptr %i1530, i64 13
  %i1609 = load i16, ptr %i1608, align 2, !tbaa !22
  %i1610 = zext i16 %i1609 to i64
  %i1611 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1610
  %i1612 = load i32, ptr %i1611, align 4, !tbaa !19
  %i1613 = add nsw i32 %i1612, 1
  store i32 %i1613, ptr %i1611, align 4, !tbaa !19
  %i1614 = getelementptr i16, ptr %i1530, i64 14
  %i1615 = load i16, ptr %i1614, align 2, !tbaa !22
  %i1616 = zext i16 %i1615 to i64
  %i1617 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1616
  %i1618 = load i32, ptr %i1617, align 4, !tbaa !19
  %i1619 = add nsw i32 %i1618, 1
  store i32 %i1619, ptr %i1617, align 4, !tbaa !19
  %i1620 = getelementptr i16, ptr %i1530, i64 15
  %i1621 = load i16, ptr %i1620, align 2, !tbaa !22
  %i1622 = zext i16 %i1621 to i64
  %i1623 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1622
  %i1624 = load i32, ptr %i1623, align 4, !tbaa !19
  %i1625 = add nsw i32 %i1624, 1
  store i32 %i1625, ptr %i1623, align 4, !tbaa !19
  %i1626 = getelementptr i16, ptr %i1530, i64 16
  %i1627 = load i16, ptr %i1626, align 2, !tbaa !22
  %i1628 = zext i16 %i1627 to i64
  %i1629 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1628
  %i1630 = load i32, ptr %i1629, align 4, !tbaa !19
  %i1631 = add nsw i32 %i1630, 1
  store i32 %i1631, ptr %i1629, align 4, !tbaa !19
  %i1632 = getelementptr i16, ptr %i1530, i64 17
  %i1633 = load i16, ptr %i1632, align 2, !tbaa !22
  %i1634 = zext i16 %i1633 to i64
  %i1635 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1634
  %i1636 = load i32, ptr %i1635, align 4, !tbaa !19
  %i1637 = add nsw i32 %i1636, 1
  store i32 %i1637, ptr %i1635, align 4, !tbaa !19
  %i1638 = getelementptr i16, ptr %i1530, i64 18
  %i1639 = load i16, ptr %i1638, align 2, !tbaa !22
  %i1640 = zext i16 %i1639 to i64
  %i1641 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1640
  %i1642 = load i32, ptr %i1641, align 4, !tbaa !19
  %i1643 = add nsw i32 %i1642, 1
  store i32 %i1643, ptr %i1641, align 4, !tbaa !19
  %i1644 = getelementptr i16, ptr %i1530, i64 19
  %i1645 = load i16, ptr %i1644, align 2, !tbaa !22
  %i1646 = zext i16 %i1645 to i64
  %i1647 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1646
  %i1648 = load i32, ptr %i1647, align 4, !tbaa !19
  %i1649 = add nsw i32 %i1648, 1
  store i32 %i1649, ptr %i1647, align 4, !tbaa !19
  %i1650 = getelementptr i16, ptr %i1530, i64 20
  %i1651 = load i16, ptr %i1650, align 2, !tbaa !22
  %i1652 = zext i16 %i1651 to i64
  %i1653 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1652
  %i1654 = load i32, ptr %i1653, align 4, !tbaa !19
  %i1655 = add nsw i32 %i1654, 1
  store i32 %i1655, ptr %i1653, align 4, !tbaa !19
  %i1656 = getelementptr i16, ptr %i1530, i64 21
  %i1657 = load i16, ptr %i1656, align 2, !tbaa !22
  %i1658 = zext i16 %i1657 to i64
  %i1659 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1658
  %i1660 = load i32, ptr %i1659, align 4, !tbaa !19
  %i1661 = add nsw i32 %i1660, 1
  store i32 %i1661, ptr %i1659, align 4, !tbaa !19
  %i1662 = getelementptr i16, ptr %i1530, i64 22
  %i1663 = load i16, ptr %i1662, align 2, !tbaa !22
  %i1664 = zext i16 %i1663 to i64
  %i1665 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1664
  %i1666 = load i32, ptr %i1665, align 4, !tbaa !19
  %i1667 = add nsw i32 %i1666, 1
  store i32 %i1667, ptr %i1665, align 4, !tbaa !19
  %i1668 = getelementptr i16, ptr %i1530, i64 23
  %i1669 = load i16, ptr %i1668, align 2, !tbaa !22
  %i1670 = zext i16 %i1669 to i64
  %i1671 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1670
  %i1672 = load i32, ptr %i1671, align 4, !tbaa !19
  %i1673 = add nsw i32 %i1672, 1
  store i32 %i1673, ptr %i1671, align 4, !tbaa !19
  %i1674 = getelementptr i16, ptr %i1530, i64 24
  %i1675 = load i16, ptr %i1674, align 2, !tbaa !22
  %i1676 = zext i16 %i1675 to i64
  %i1677 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1676
  %i1678 = load i32, ptr %i1677, align 4, !tbaa !19
  %i1679 = add nsw i32 %i1678, 1
  store i32 %i1679, ptr %i1677, align 4, !tbaa !19
  %i1680 = getelementptr i16, ptr %i1530, i64 25
  %i1681 = load i16, ptr %i1680, align 2, !tbaa !22
  %i1682 = zext i16 %i1681 to i64
  %i1683 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1682
  %i1684 = load i32, ptr %i1683, align 4, !tbaa !19
  %i1685 = add nsw i32 %i1684, 1
  store i32 %i1685, ptr %i1683, align 4, !tbaa !19
  %i1686 = getelementptr i16, ptr %i1530, i64 26
  %i1687 = load i16, ptr %i1686, align 2, !tbaa !22
  %i1688 = zext i16 %i1687 to i64
  %i1689 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1688
  %i1690 = load i32, ptr %i1689, align 4, !tbaa !19
  %i1691 = add nsw i32 %i1690, 1
  store i32 %i1691, ptr %i1689, align 4, !tbaa !19
  %i1692 = getelementptr i16, ptr %i1530, i64 27
  %i1693 = load i16, ptr %i1692, align 2, !tbaa !22
  %i1694 = zext i16 %i1693 to i64
  %i1695 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1694
  %i1696 = load i32, ptr %i1695, align 4, !tbaa !19
  %i1697 = add nsw i32 %i1696, 1
  store i32 %i1697, ptr %i1695, align 4, !tbaa !19
  %i1698 = getelementptr i16, ptr %i1530, i64 28
  %i1699 = load i16, ptr %i1698, align 2, !tbaa !22
  %i1700 = zext i16 %i1699 to i64
  %i1701 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1700
  %i1702 = load i32, ptr %i1701, align 4, !tbaa !19
  %i1703 = add nsw i32 %i1702, 1
  store i32 %i1703, ptr %i1701, align 4, !tbaa !19
  %i1704 = getelementptr i16, ptr %i1530, i64 29
  %i1705 = load i16, ptr %i1704, align 2, !tbaa !22
  %i1706 = zext i16 %i1705 to i64
  %i1707 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1706
  %i1708 = load i32, ptr %i1707, align 4, !tbaa !19
  %i1709 = add nsw i32 %i1708, 1
  store i32 %i1709, ptr %i1707, align 4, !tbaa !19
  %i1710 = getelementptr i16, ptr %i1530, i64 30
  %i1711 = load i16, ptr %i1710, align 2, !tbaa !22
  %i1712 = zext i16 %i1711 to i64
  %i1713 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1712
  %i1714 = load i32, ptr %i1713, align 4, !tbaa !19
  %i1715 = add nsw i32 %i1714, 1
  store i32 %i1715, ptr %i1713, align 4, !tbaa !19
  %i1716 = getelementptr i16, ptr %i1530, i64 31
  %i1717 = load i16, ptr %i1716, align 2, !tbaa !22
  %i1718 = zext i16 %i1717 to i64
  %i1719 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1718
  %i1720 = load i32, ptr %i1719, align 4, !tbaa !19
  %i1721 = add nsw i32 %i1720, 1
  store i32 %i1721, ptr %i1719, align 4, !tbaa !19
  %i1722 = getelementptr i16, ptr %i1530, i64 32
  %i1723 = load i16, ptr %i1722, align 2, !tbaa !22
  %i1724 = zext i16 %i1723 to i64
  %i1725 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1724
  %i1726 = load i32, ptr %i1725, align 4, !tbaa !19
  %i1727 = add nsw i32 %i1726, 1
  store i32 %i1727, ptr %i1725, align 4, !tbaa !19
  %i1728 = getelementptr i16, ptr %i1530, i64 33
  %i1729 = load i16, ptr %i1728, align 2, !tbaa !22
  %i1730 = zext i16 %i1729 to i64
  %i1731 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1730
  %i1732 = load i32, ptr %i1731, align 4, !tbaa !19
  %i1733 = add nsw i32 %i1732, 1
  store i32 %i1733, ptr %i1731, align 4, !tbaa !19
  %i1734 = getelementptr i16, ptr %i1530, i64 34
  %i1735 = load i16, ptr %i1734, align 2, !tbaa !22
  %i1736 = zext i16 %i1735 to i64
  %i1737 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1736
  %i1738 = load i32, ptr %i1737, align 4, !tbaa !19
  %i1739 = add nsw i32 %i1738, 1
  store i32 %i1739, ptr %i1737, align 4, !tbaa !19
  %i1740 = getelementptr i16, ptr %i1530, i64 35
  %i1741 = load i16, ptr %i1740, align 2, !tbaa !22
  %i1742 = zext i16 %i1741 to i64
  %i1743 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1742
  %i1744 = load i32, ptr %i1743, align 4, !tbaa !19
  %i1745 = add nsw i32 %i1744, 1
  store i32 %i1745, ptr %i1743, align 4, !tbaa !19
  %i1746 = getelementptr i16, ptr %i1530, i64 36
  %i1747 = load i16, ptr %i1746, align 2, !tbaa !22
  %i1748 = zext i16 %i1747 to i64
  %i1749 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1748
  %i1750 = load i32, ptr %i1749, align 4, !tbaa !19
  %i1751 = add nsw i32 %i1750, 1
  store i32 %i1751, ptr %i1749, align 4, !tbaa !19
  %i1752 = getelementptr i16, ptr %i1530, i64 37
  %i1753 = load i16, ptr %i1752, align 2, !tbaa !22
  %i1754 = zext i16 %i1753 to i64
  %i1755 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1754
  %i1756 = load i32, ptr %i1755, align 4, !tbaa !19
  %i1757 = add nsw i32 %i1756, 1
  store i32 %i1757, ptr %i1755, align 4, !tbaa !19
  %i1758 = getelementptr i16, ptr %i1530, i64 38
  %i1759 = load i16, ptr %i1758, align 2, !tbaa !22
  %i1760 = zext i16 %i1759 to i64
  %i1761 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1760
  %i1762 = load i32, ptr %i1761, align 4, !tbaa !19
  %i1763 = add nsw i32 %i1762, 1
  store i32 %i1763, ptr %i1761, align 4, !tbaa !19
  %i1764 = getelementptr i16, ptr %i1530, i64 39
  %i1765 = load i16, ptr %i1764, align 2, !tbaa !22
  %i1766 = zext i16 %i1765 to i64
  %i1767 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1766
  %i1768 = load i32, ptr %i1767, align 4, !tbaa !19
  %i1769 = add nsw i32 %i1768, 1
  store i32 %i1769, ptr %i1767, align 4, !tbaa !19
  %i1770 = getelementptr i16, ptr %i1530, i64 40
  %i1771 = load i16, ptr %i1770, align 2, !tbaa !22
  %i1772 = zext i16 %i1771 to i64
  %i1773 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1772
  %i1774 = load i32, ptr %i1773, align 4, !tbaa !19
  %i1775 = add nsw i32 %i1774, 1
  store i32 %i1775, ptr %i1773, align 4, !tbaa !19
  %i1776 = getelementptr i16, ptr %i1530, i64 41
  %i1777 = load i16, ptr %i1776, align 2, !tbaa !22
  %i1778 = zext i16 %i1777 to i64
  %i1779 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1778
  %i1780 = load i32, ptr %i1779, align 4, !tbaa !19
  %i1781 = add nsw i32 %i1780, 1
  store i32 %i1781, ptr %i1779, align 4, !tbaa !19
  %i1782 = getelementptr i16, ptr %i1530, i64 42
  %i1783 = load i16, ptr %i1782, align 2, !tbaa !22
  %i1784 = zext i16 %i1783 to i64
  %i1785 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1784
  %i1786 = load i32, ptr %i1785, align 4, !tbaa !19
  %i1787 = add nsw i32 %i1786, 1
  store i32 %i1787, ptr %i1785, align 4, !tbaa !19
  %i1788 = getelementptr i16, ptr %i1530, i64 43
  %i1789 = load i16, ptr %i1788, align 2, !tbaa !22
  %i1790 = zext i16 %i1789 to i64
  %i1791 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1790
  %i1792 = load i32, ptr %i1791, align 4, !tbaa !19
  %i1793 = add nsw i32 %i1792, 1
  store i32 %i1793, ptr %i1791, align 4, !tbaa !19
  %i1794 = getelementptr i16, ptr %i1530, i64 44
  %i1795 = load i16, ptr %i1794, align 2, !tbaa !22
  %i1796 = zext i16 %i1795 to i64
  %i1797 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1796
  %i1798 = load i32, ptr %i1797, align 4, !tbaa !19
  %i1799 = add nsw i32 %i1798, 1
  store i32 %i1799, ptr %i1797, align 4, !tbaa !19
  %i1800 = getelementptr i16, ptr %i1530, i64 45
  %i1801 = load i16, ptr %i1800, align 2, !tbaa !22
  %i1802 = zext i16 %i1801 to i64
  %i1803 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1802
  %i1804 = load i32, ptr %i1803, align 4, !tbaa !19
  %i1805 = add nsw i32 %i1804, 1
  store i32 %i1805, ptr %i1803, align 4, !tbaa !19
  %i1806 = getelementptr i16, ptr %i1530, i64 46
  %i1807 = load i16, ptr %i1806, align 2, !tbaa !22
  %i1808 = zext i16 %i1807 to i64
  %i1809 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1808
  %i1810 = load i32, ptr %i1809, align 4, !tbaa !19
  %i1811 = add nsw i32 %i1810, 1
  store i32 %i1811, ptr %i1809, align 4, !tbaa !19
  %i1812 = getelementptr i16, ptr %i1530, i64 47
  %i1813 = load i16, ptr %i1812, align 2, !tbaa !22
  %i1814 = zext i16 %i1813 to i64
  %i1815 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1814
  %i1816 = load i32, ptr %i1815, align 4, !tbaa !19
  %i1817 = add nsw i32 %i1816, 1
  store i32 %i1817, ptr %i1815, align 4, !tbaa !19
  %i1818 = getelementptr i16, ptr %i1530, i64 48
  %i1819 = load i16, ptr %i1818, align 2, !tbaa !22
  %i1820 = zext i16 %i1819 to i64
  %i1821 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1820
  %i1822 = load i32, ptr %i1821, align 4, !tbaa !19
  %i1823 = add nsw i32 %i1822, 1
  store i32 %i1823, ptr %i1821, align 4, !tbaa !19
  %i1824 = getelementptr i16, ptr %i1530, i64 49
  %i1825 = load i16, ptr %i1824, align 2, !tbaa !22
  %i1826 = zext i16 %i1825 to i64
  %i1827 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1826
  %i1828 = load i32, ptr %i1827, align 4, !tbaa !19
  %i1829 = add nsw i32 %i1828, 1
  store i32 %i1829, ptr %i1827, align 4, !tbaa !19
  br label %bb1847

bb1830:                                           ; preds = %bb1830.bb1830_crit_edge, %bb1830.preheader
  %i1831 = phi i64 [ %i1844, %bb1830.bb1830_crit_edge ], [ %i1526, %bb1830.preheader ]
  %i1832 = getelementptr inbounds i16, ptr %i561, i64 %i1831
  %i1833 = load i16, ptr %i1832, align 2, !tbaa !22
  %i1834 = zext i16 %i1833 to i64
  %i1835 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1834
  %i1836 = load i32, ptr %i1835, align 4, !tbaa !19
  %i1837 = add nsw i32 %i1836, 1
  store i32 %i1837, ptr %i1835, align 4, !tbaa !19
  %i1838 = getelementptr i16, ptr %i652, i64 %i1831
  %i1839 = load i16, ptr %i1838, align 2, !tbaa !22
  %i1840 = zext i16 %i1839 to i64
  %i1841 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1502, i64 %i1840
  %i1842 = load i32, ptr %i1841, align 4, !tbaa !19
  %i1843 = add nsw i32 %i1842, 1
  store i32 %i1843, ptr %i1841, align 4, !tbaa !19
  %i1844 = add nsw i64 %i1831, 2
  %i1845 = trunc i64 %i1844 to i32
  %i1846 = icmp eq i32 %i1513, %i1845
  br i1 %i1846, label %bb1847.loopexit, label %bb1830.bb1830_crit_edge, !llvm.loop !211

bb1830.bb1830_crit_edge:                          ; preds = %bb1830
  br label %bb1830

bb1847.loopexit:                                  ; preds = %bb1830
  br label %bb1847

bb1847:                                           ; preds = %bb1525.bb1847_crit_edge, %bb1509.bb1847_crit_edge, %bb1847.loopexit, %bb1528
  %i1848 = add nsw i32 %i793, 1
  %i1849 = load i32, ptr %i560, align 4, !tbaa !202
  %i1850 = icmp slt i32 %i1848, %i1849
  br i1 %i1850, label %bb1847.bb785_crit_edge, label %bb1851

bb1847.bb785_crit_edge:                           ; preds = %bb1847
  br label %bb785

bb1851:                                           ; preds = %bb1847
  %i1852 = trunc i64 %i1508 to i32
  br label %bb1853

bb1853:                                           ; preds = %bb782.bb1853_crit_edge, %bb1851
  %i1854 = phi i32 [ 0, %bb782.bb1853_crit_edge ], [ %i1852, %bb1851 ]
  %i1855 = phi i32 [ 0, %bb782.bb1853_crit_edge ], [ %i1501, %bb1851 ]
  %i1856 = load i32, ptr %i562, align 8, !tbaa !17
  %i1857 = icmp sgt i32 %i1856, 2
  br i1 %i1857, label %bb1858, label %bb1853.bb1874_crit_edge

bb1853.bb1874_crit_edge:                          ; preds = %bb1853
  br label %bb1874

bb1858:                                           ; preds = %bb1853
  %i1859 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i1860 = add nuw nsw i32 %i743, 1
  %i1861 = sdiv i32 %i1855, 8
  %i1862 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i1859, ptr noundef nonnull @.str.4.108, i32 noundef %i1860, i32 noundef %i1861) #32
  br label %bb1863

bb1863:                                           ; preds = %bb1863.bb1863_crit_edge, %bb1858
  %i1864 = phi i64 [ 0, %bb1858 ], [ %i1869, %bb1863.bb1863_crit_edge ]
  %i1865 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i1866 = getelementptr inbounds [6 x i32], ptr %i2, i64 0, i64 %i1864
  %i1867 = load i32, ptr %i1866, align 4, !tbaa !19
  %i1868 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i1865, ptr noundef nonnull @.str.5.109, i32 noundef %i1867) #32
  %i1869 = add nuw nsw i64 %i1864, 1
  %i1870 = icmp eq i64 %i1869, %i603
  br i1 %i1870, label %bb1871, label %bb1863.bb1863_crit_edge, !llvm.loop !212

bb1863.bb1863_crit_edge:                          ; preds = %bb1863
  br label %bb1863

bb1871:                                           ; preds = %bb1863
  %i1872 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i1873 = call i32 @fputc(i32 10, ptr %i1872)
  br label %bb1874

bb1874:                                           ; preds = %bb1853.bb1874_crit_edge, %bb1871
  br label %bb1875

bb1875:                                           ; preds = %bb1875.bb1875_crit_edge, %bb1874
  %i1876 = phi i64 [ %i1879, %bb1875.bb1875_crit_edge ], [ 0, %bb1874 ]
  %i1877 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 %i1876
  %i1878 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 37, i64 %i1876
  call void @BZ2_hbMakeCodeLengths(ptr noundef nonnull %i1877, ptr noundef nonnull %i1878, i32 noundef %i572, i32 noundef 17) #31
  %i1879 = add nuw nsw i64 %i1876, 1
  %i1880 = icmp eq i64 %i1879, %i603
  br i1 %i1880, label %bb1881, label %bb1875.bb1875_crit_edge, !llvm.loop !213

bb1875.bb1875_crit_edge:                          ; preds = %bb1875
  br label %bb1875

bb1881:                                           ; preds = %bb1875
  %i1882 = add nuw nsw i32 %i743, 1
  %i1883 = icmp eq i32 %i1882, 4
  br i1 %i1883, label %bb1884, label %bb1881.bb742_crit_edge, !llvm.loop !214

bb1881.bb742_crit_edge:                           ; preds = %bb1881
  br label %bb742

bb1884:                                           ; preds = %bb1881
  %i1885 = icmp slt i32 %i1854, 18003
  br i1 %i1885, label %bb1884.bb1887_crit_edge, label %bb1886

bb1884.bb1887_crit_edge:                          ; preds = %bb1884
  br label %bb1887

bb1886:                                           ; preds = %bb1884
  call void @BZ2_bz__AssertH__fail(i32 noundef 3003) #31
  br label %bb1887

bb1887:                                           ; preds = %bb1884.bb1887_crit_edge, %bb1886
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %i3) #31
  store i8 0, ptr %i3, align 1, !tbaa !21
  %i1888 = getelementptr inbounds [6 x i8], ptr %i3, i64 0, i64 1
  store i8 1, ptr %i1888, align 1, !tbaa !21
  %i1889 = icmp eq i32 %i600, 2
  br i1 %i1889, label %bb1887.bb1890_crit_edge, label %bb1895, !llvm.loop !215

bb1887.bb1890_crit_edge:                          ; preds = %bb1887
  br label %bb1890

bb1890:                                           ; preds = %bb1904.bb1890_crit_edge, %bb1901.bb1890_crit_edge, %bb1898.bb1890_crit_edge, %bb1895.bb1890_crit_edge, %bb1887.bb1890_crit_edge, %bb1907
  %i1891 = icmp sgt i32 %i1854, 0
  br i1 %i1891, label %bb1892, label %bb1890.bb1930_crit_edge

bb1890.bb1930_crit_edge:                          ; preds = %bb1890
  br label %bb1930

bb1892:                                           ; preds = %bb1890
  %i1893 = load i8, ptr %i3, align 1, !tbaa !21
  %i1894 = zext nneg i32 %i1854 to i64
  br label %bb1909

bb1895:                                           ; preds = %bb1887
  %i1896 = getelementptr inbounds [6 x i8], ptr %i3, i64 0, i64 2
  store i8 2, ptr %i1896, align 1, !tbaa !21
  %i1897 = icmp eq i32 %i600, 3
  br i1 %i1897, label %bb1895.bb1890_crit_edge, label %bb1898, !llvm.loop !215

bb1895.bb1890_crit_edge:                          ; preds = %bb1895
  br label %bb1890

bb1898:                                           ; preds = %bb1895
  %i1899 = getelementptr inbounds [6 x i8], ptr %i3, i64 0, i64 3
  store i8 3, ptr %i1899, align 1, !tbaa !21
  %i1900 = icmp eq i32 %i600, 4
  br i1 %i1900, label %bb1898.bb1890_crit_edge, label %bb1901, !llvm.loop !215

bb1898.bb1890_crit_edge:                          ; preds = %bb1898
  br label %bb1890

bb1901:                                           ; preds = %bb1898
  %i1902 = getelementptr inbounds [6 x i8], ptr %i3, i64 0, i64 4
  store i8 4, ptr %i1902, align 1, !tbaa !21
  %i1903 = icmp eq i32 %i600, 5
  br i1 %i1903, label %bb1901.bb1890_crit_edge, label %bb1904, !llvm.loop !215

bb1901.bb1890_crit_edge:                          ; preds = %bb1901
  br label %bb1890

bb1904:                                           ; preds = %bb1901
  %i1905 = getelementptr inbounds [6 x i8], ptr %i3, i64 0, i64 5
  store i8 5, ptr %i1905, align 1, !tbaa !21
  %i1906 = icmp eq i32 %i600, 6
  br i1 %i1906, label %bb1904.bb1890_crit_edge, label %bb1907, !llvm.loop !215

bb1904.bb1890_crit_edge:                          ; preds = %bb1904
  br label %bb1890

bb1907:                                           ; preds = %bb1904
  %i1908 = getelementptr inbounds [6 x i8], ptr %i3, i64 0, i64 6
  store i8 6, ptr %i1908, align 1, !tbaa !21
  br label %bb1890

bb1909:                                           ; preds = %bb1924.bb1909_crit_edge, %bb1892
  %i1910 = phi i64 [ 0, %bb1892 ], [ %i1928, %bb1924.bb1909_crit_edge ]
  %i1911 = phi i8 [ %i1893, %bb1892 ], [ %i1926, %bb1924.bb1909_crit_edge ]
  %i1912 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 33, i64 %i1910
  %i1913 = load i8, ptr %i1912, align 1, !tbaa !21
  %i1914 = icmp eq i8 %i1913, %i1911
  br i1 %i1914, label %bb1909.bb1924_crit_edge, label %bb1915.preheader

bb1909.bb1924_crit_edge:                          ; preds = %bb1909
  br label %bb1924

bb1915.preheader:                                 ; preds = %bb1909
  br label %bb1915

bb1915:                                           ; preds = %bb1915.bb1915_crit_edge, %bb1915.preheader
  %i1916 = phi i64 [ %i1918, %bb1915.bb1915_crit_edge ], [ 0, %bb1915.preheader ]
  %i1917 = phi i8 [ %i1920, %bb1915.bb1915_crit_edge ], [ %i1911, %bb1915.preheader ]
  %i1918 = add nuw nsw i64 %i1916, 1
  %i1919 = getelementptr inbounds [6 x i8], ptr %i3, i64 0, i64 %i1918
  %i1920 = load i8, ptr %i1919, align 1, !tbaa !21
  store i8 %i1917, ptr %i1919, align 1, !tbaa !21
  %i1921 = icmp eq i8 %i1913, %i1920
  br i1 %i1921, label %bb1922, label %bb1915.bb1915_crit_edge, !llvm.loop !216

bb1915.bb1915_crit_edge:                          ; preds = %bb1915
  br label %bb1915

bb1922:                                           ; preds = %bb1915
  %i1923 = trunc i64 %i1918 to i8
  br label %bb1924

bb1924:                                           ; preds = %bb1909.bb1924_crit_edge, %bb1922
  %i1925 = phi i8 [ 0, %bb1909.bb1924_crit_edge ], [ %i1923, %bb1922 ]
  %i1926 = phi i8 [ %i1911, %bb1909.bb1924_crit_edge ], [ %i1913, %bb1922 ]
  %i1927 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 34, i64 %i1910
  store i8 %i1925, ptr %i1927, align 1, !tbaa !21
  %i1928 = add nuw nsw i64 %i1910, 1
  %i1929 = icmp eq i64 %i1928, %i1894
  br i1 %i1929, label %bb1930.loopexit, label %bb1924.bb1909_crit_edge, !llvm.loop !217

bb1924.bb1909_crit_edge:                          ; preds = %bb1924
  br label %bb1909

bb1930.loopexit:                                  ; preds = %bb1924
  br label %bb1930

bb1930:                                           ; preds = %bb1890.bb1930_crit_edge, %bb1930.loopexit
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %i3) #31
  %i1931 = and i64 %i604, 1
  %i1932 = icmp eq i64 %i605, 0
  %i1933 = and i64 %i604, 2147483646
  %i1934 = icmp eq i64 %i1931, 0
  br label %bb1935

bb1935:                                           ; preds = %bb1977.bb1935_crit_edge, %bb1930
  %i1936 = phi i64 [ 0, %bb1930 ], [ %i1982, %bb1977.bb1935_crit_edge ]
  br i1 %i573, label %bb1937, label %bb1935.bb1977_crit_edge

bb1935.bb1977_crit_edge:                          ; preds = %bb1935
  br label %bb1977

bb1937:                                           ; preds = %bb1935
  br i1 %i1932, label %bb1937.bb1957_crit_edge, label %bb1938.preheader

bb1937.bb1957_crit_edge:                          ; preds = %bb1937
  br label %bb1957

bb1938.preheader:                                 ; preds = %bb1937
  br label %bb1938

bb1938:                                           ; preds = %bb1938.bb1938_crit_edge, %bb1938.preheader
  %i1939 = phi i64 [ %i1954, %bb1938.bb1938_crit_edge ], [ 0, %bb1938.preheader ]
  %i1940 = phi i32 [ %i1953, %bb1938.bb1938_crit_edge ], [ 32, %bb1938.preheader ]
  %i1941 = phi i32 [ %i1952, %bb1938.bb1938_crit_edge ], [ 0, %bb1938.preheader ]
  %i1942 = phi i64 [ %i1955, %bb1938.bb1938_crit_edge ], [ 0, %bb1938.preheader ]
  %i1943 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 %i1936, i64 %i1939
  %i1944 = load i8, ptr %i1943, align 1, !tbaa !21
  %i1945 = zext i8 %i1944 to i32
  %i1946 = call i32 @llvm.smax.i32(i32 %i1941, i32 %i1945)
  %i1947 = call i32 @llvm.smin.i32(i32 %i1940, i32 %i1945)
  %i1948 = or disjoint i64 %i1939, 1
  %i1949 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 %i1936, i64 %i1948
  %i1950 = load i8, ptr %i1949, align 1, !tbaa !21
  %i1951 = zext i8 %i1950 to i32
  %i1952 = call i32 @llvm.smax.i32(i32 %i1946, i32 %i1951)
  %i1953 = call i32 @llvm.smin.i32(i32 %i1947, i32 %i1951)
  %i1954 = add nuw nsw i64 %i1939, 2
  %i1955 = add i64 %i1942, 2
  %i1956 = icmp eq i64 %i1955, %i1933
  br i1 %i1956, label %bb1957.loopexit, label %bb1938.bb1938_crit_edge, !llvm.loop !218

bb1938.bb1938_crit_edge:                          ; preds = %bb1938
  br label %bb1938

bb1957.loopexit:                                  ; preds = %bb1938
  br label %bb1957

bb1957:                                           ; preds = %bb1937.bb1957_crit_edge, %bb1957.loopexit
  %i1958 = phi i32 [ undef, %bb1937.bb1957_crit_edge ], [ %i1952, %bb1957.loopexit ]
  %i1959 = phi i32 [ undef, %bb1937.bb1957_crit_edge ], [ %i1953, %bb1957.loopexit ]
  %i1960 = phi i64 [ 0, %bb1937.bb1957_crit_edge ], [ %i1954, %bb1957.loopexit ]
  %i1961 = phi i32 [ 32, %bb1937.bb1957_crit_edge ], [ %i1953, %bb1957.loopexit ]
  %i1962 = phi i32 [ 0, %bb1937.bb1957_crit_edge ], [ %i1952, %bb1957.loopexit ]
  br i1 %i1934, label %bb1957.bb1969_crit_edge, label %bb1963

bb1957.bb1969_crit_edge:                          ; preds = %bb1957
  br label %bb1969

bb1963:                                           ; preds = %bb1957
  %i1964 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 %i1936, i64 %i1960
  %i1965 = load i8, ptr %i1964, align 1, !tbaa !21
  %i1966 = zext i8 %i1965 to i32
  %i1967 = call i32 @llvm.smax.i32(i32 %i1962, i32 %i1966)
  %i1968 = call i32 @llvm.smin.i32(i32 %i1961, i32 %i1966)
  br label %bb1969

bb1969:                                           ; preds = %bb1957.bb1969_crit_edge, %bb1963
  %i1970 = phi i32 [ %i1958, %bb1957.bb1969_crit_edge ], [ %i1967, %bb1963 ]
  %i1971 = phi i32 [ %i1959, %bb1957.bb1969_crit_edge ], [ %i1968, %bb1963 ]
  %i1972 = icmp ugt i32 %i1970, 17
  br i1 %i1972, label %bb1973, label %bb1969.bb1974_crit_edge

bb1969.bb1974_crit_edge:                          ; preds = %bb1969
  br label %bb1974

bb1973:                                           ; preds = %bb1969
  call void @BZ2_bz__AssertH__fail(i32 noundef 3004) #31
  br label %bb1974

bb1974:                                           ; preds = %bb1969.bb1974_crit_edge, %bb1973
  %i1975 = icmp slt i32 %i1971, 1
  br i1 %i1975, label %bb1976, label %bb1974.bb1977_crit_edge

bb1974.bb1977_crit_edge:                          ; preds = %bb1974
  br label %bb1977

bb1976:                                           ; preds = %bb1974
  call void @BZ2_bz__AssertH__fail(i32 noundef 3005) #31
  br label %bb1977

bb1977:                                           ; preds = %bb1974.bb1977_crit_edge, %bb1935.bb1977_crit_edge, %bb1976
  %i1978 = phi i32 [ %i1970, %bb1976 ], [ %i1970, %bb1974.bb1977_crit_edge ], [ 0, %bb1935.bb1977_crit_edge ]
  %i1979 = phi i32 [ %i1971, %bb1976 ], [ %i1971, %bb1974.bb1977_crit_edge ], [ 32, %bb1935.bb1977_crit_edge ]
  %i1980 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 36, i64 %i1936
  %i1981 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 %i1936
  call void @BZ2_hbAssignCodes(ptr noundef nonnull %i1980, ptr noundef nonnull %i1981, i32 noundef %i1979, i32 noundef %i1978, i32 noundef %i572) #31
  %i1982 = add nuw nsw i64 %i1936, 1
  %i1983 = icmp eq i64 %i1982, %i603
  br i1 %i1983, label %bb1984, label %bb1977.bb1935_crit_edge, !llvm.loop !219

bb1977.bb1935_crit_edge:                          ; preds = %bb1977
  br label %bb1935

bb1984:                                           ; preds = %bb1977
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %i4) #31
  br label %bb1985

bb1985:                                           ; preds = %bb1985.bb1985_crit_edge, %bb1984
  %i1986 = phi i64 [ 0, %bb1984 ], [ %i2068, %bb1985.bb1985_crit_edge ]
  %i1987 = getelementptr inbounds [16 x i8], ptr %i4, i64 0, i64 %i1986
  %i1988 = shl nuw nsw i64 %i1986, 4
  %i1989 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i1988
  %i1990 = load i8, ptr %i1989, align 1, !tbaa !21
  %i1991 = icmp ne i8 %i1990, 0
  %i1992 = or disjoint i64 %i1988, 1
  %i1993 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i1992
  %i1994 = load i8, ptr %i1993, align 1, !tbaa !21
  %i1995 = icmp ne i8 %i1994, 0
  %i1996 = or disjoint i64 %i1988, 2
  %i1997 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i1996
  %i1998 = load i8, ptr %i1997, align 1, !tbaa !21
  %i1999 = icmp ne i8 %i1998, 0
  %i2000 = or disjoint i64 %i1988, 3
  %i2001 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i2000
  %i2002 = load i8, ptr %i2001, align 1, !tbaa !21
  %i2003 = icmp ne i8 %i2002, 0
  %i2004 = or disjoint i64 %i1988, 4
  %i2005 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i2004
  %i2006 = load i8, ptr %i2005, align 1, !tbaa !21
  %i2007 = icmp ne i8 %i2006, 0
  %i2008 = or disjoint i64 %i1988, 5
  %i2009 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i2008
  %i2010 = load i8, ptr %i2009, align 1, !tbaa !21
  %i2011 = icmp ne i8 %i2010, 0
  %i2012 = or disjoint i64 %i1988, 6
  %i2013 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i2012
  %i2014 = load i8, ptr %i2013, align 1, !tbaa !21
  %i2015 = icmp ne i8 %i2014, 0
  %i2016 = or disjoint i64 %i1988, 7
  %i2017 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i2016
  %i2018 = load i8, ptr %i2017, align 1, !tbaa !21
  %i2019 = icmp ne i8 %i2018, 0
  %i2020 = or disjoint i64 %i1988, 8
  %i2021 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i2020
  %i2022 = load i8, ptr %i2021, align 1, !tbaa !21
  %i2023 = icmp ne i8 %i2022, 0
  %i2024 = or disjoint i64 %i1988, 9
  %i2025 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i2024
  %i2026 = load i8, ptr %i2025, align 1, !tbaa !21
  %i2027 = icmp ne i8 %i2026, 0
  %i2028 = or disjoint i64 %i1988, 10
  %i2029 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i2028
  %i2030 = load i8, ptr %i2029, align 1, !tbaa !21
  %i2031 = icmp ne i8 %i2030, 0
  %i2032 = or disjoint i64 %i1988, 11
  %i2033 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i2032
  %i2034 = load i8, ptr %i2033, align 1, !tbaa !21
  %i2035 = icmp ne i8 %i2034, 0
  %i2036 = or disjoint i64 %i1988, 12
  %i2037 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i2036
  %i2038 = load i8, ptr %i2037, align 1, !tbaa !21
  %i2039 = icmp ne i8 %i2038, 0
  %i2040 = or disjoint i64 %i1988, 13
  %i2041 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i2040
  %i2042 = load i8, ptr %i2041, align 1, !tbaa !21
  %i2043 = icmp ne i8 %i2042, 0
  %i2044 = or disjoint i64 %i1988, 14
  %i2045 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i2044
  %i2046 = load i8, ptr %i2045, align 1, !tbaa !21
  %i2047 = icmp ne i8 %i2046, 0
  %i2048 = or disjoint i64 %i1988, 15
  %i2049 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i2048
  %i2050 = load i8, ptr %i2049, align 1, !tbaa !21
  %i2051 = icmp ne i8 %i2050, 0
  %i2052 = select i1 %i2051, i1 true, i1 %i2047
  %i2053 = select i1 %i2052, i1 true, i1 %i2043
  %i2054 = select i1 %i2053, i1 true, i1 %i2039
  %i2055 = select i1 %i2054, i1 true, i1 %i2035
  %i2056 = select i1 %i2055, i1 true, i1 %i2031
  %i2057 = select i1 %i2056, i1 true, i1 %i2027
  %i2058 = select i1 %i2057, i1 true, i1 %i2023
  %i2059 = select i1 %i2058, i1 true, i1 %i2019
  %i2060 = select i1 %i2059, i1 true, i1 %i2015
  %i2061 = select i1 %i2060, i1 true, i1 %i2011
  %i2062 = select i1 %i2061, i1 true, i1 %i2007
  %i2063 = select i1 %i2062, i1 true, i1 %i2003
  %i2064 = select i1 %i2063, i1 true, i1 %i1999
  %i2065 = select i1 %i2064, i1 true, i1 %i1995
  %i2066 = select i1 %i2065, i1 true, i1 %i1991
  %i2067 = zext i1 %i2066 to i8
  store i8 %i2067, ptr %i1987, align 1
  %i2068 = add nuw nsw i64 %i1986, 1
  %i2069 = icmp eq i64 %i2068, 16
  br i1 %i2069, label %bb2070, label %bb1985.bb1985_crit_edge, !llvm.loop !220

bb1985.bb1985_crit_edge:                          ; preds = %bb1985
  br label %bb1985

bb2070:                                           ; preds = %bb1985
  %i2071 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i2072 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2073 = load i32, ptr %i123, align 4, !tbaa !193
  %i2074 = load i32, ptr %i126, align 8, !tbaa !194
  br label %bb2075

bb2075:                                           ; preds = %bb2122.bb2075_crit_edge, %bb2070
  %i2076 = phi i32 [ %i2123, %bb2122.bb2075_crit_edge ], [ %i2074, %bb2070 ]
  %i2077 = phi i32 [ %i2126, %bb2122.bb2075_crit_edge ], [ %i2073, %bb2070 ]
  %i2078 = phi i32 [ %i2125, %bb2122.bb2075_crit_edge ], [ %i2072, %bb2070 ]
  %i2079 = phi i64 [ %i2127, %bb2122.bb2075_crit_edge ], [ 0, %bb2070 ]
  %i2080 = getelementptr inbounds [16 x i8], ptr %i4, i64 0, i64 %i2079
  %i2081 = load i8, ptr %i2080, align 1, !tbaa !21
  %i2082 = icmp eq i8 %i2081, 0
  %i2083 = icmp sgt i32 %i2077, 7
  br i1 %i2082, label %bb2106, label %bb2084

bb2084:                                           ; preds = %bb2075
  br i1 %i2083, label %bb2085.preheader, label %bb2084.bb2100_crit_edge

bb2084.bb2100_crit_edge:                          ; preds = %bb2084
  br label %bb2100

bb2085.preheader:                                 ; preds = %bb2084
  br label %bb2085

bb2085:                                           ; preds = %bb2085.bb2085_crit_edge, %bb2085.preheader
  %i2086 = phi i32 [ %i2094, %bb2085.bb2085_crit_edge ], [ %i2078, %bb2085.preheader ]
  %i2087 = phi i32 [ %i2096, %bb2085.bb2085_crit_edge ], [ %i2076, %bb2085.preheader ]
  %i2088 = lshr i32 %i2087, 24
  %i2089 = trunc i32 %i2088 to i8
  %i2090 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2091 = sext i32 %i2086 to i64
  %i2092 = getelementptr inbounds i8, ptr %i2090, i64 %i2091
  store i8 %i2089, ptr %i2092, align 1, !tbaa !21
  %i2093 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2094 = add nsw i32 %i2093, 1
  store i32 %i2094, ptr %i2071, align 4, !tbaa !137
  %i2095 = load i32, ptr %i126, align 8, !tbaa !194
  %i2096 = shl i32 %i2095, 8
  store i32 %i2096, ptr %i126, align 8, !tbaa !194
  %i2097 = load i32, ptr %i123, align 4, !tbaa !193
  %i2098 = add nsw i32 %i2097, -8
  store i32 %i2098, ptr %i123, align 4, !tbaa !193
  %i2099 = icmp sgt i32 %i2097, 15
  br i1 %i2099, label %bb2085.bb2085_crit_edge, label %bb2100.loopexit, !llvm.loop !195

bb2085.bb2085_crit_edge:                          ; preds = %bb2085
  br label %bb2085

bb2100.loopexit:                                  ; preds = %bb2085
  br label %bb2100

bb2100:                                           ; preds = %bb2084.bb2100_crit_edge, %bb2100.loopexit
  %i2101 = phi i32 [ %i2078, %bb2084.bb2100_crit_edge ], [ %i2094, %bb2100.loopexit ]
  %i2102 = phi i32 [ %i2076, %bb2084.bb2100_crit_edge ], [ %i2096, %bb2100.loopexit ]
  %i2103 = phi i32 [ %i2077, %bb2084.bb2100_crit_edge ], [ %i2098, %bb2100.loopexit ]
  %i2104 = lshr exact i32 -2147483648, %i2103
  %i2105 = or i32 %i2104, %i2102
  br label %bb2122

bb2106:                                           ; preds = %bb2075
  br i1 %i2083, label %bb2107.preheader, label %bb2106.bb2122_crit_edge

bb2106.bb2122_crit_edge:                          ; preds = %bb2106
  br label %bb2122

bb2107.preheader:                                 ; preds = %bb2106
  br label %bb2107

bb2107:                                           ; preds = %bb2107.bb2107_crit_edge, %bb2107.preheader
  %i2108 = phi i32 [ %i2116, %bb2107.bb2107_crit_edge ], [ %i2078, %bb2107.preheader ]
  %i2109 = phi i32 [ %i2118, %bb2107.bb2107_crit_edge ], [ %i2076, %bb2107.preheader ]
  %i2110 = lshr i32 %i2109, 24
  %i2111 = trunc i32 %i2110 to i8
  %i2112 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2113 = sext i32 %i2108 to i64
  %i2114 = getelementptr inbounds i8, ptr %i2112, i64 %i2113
  store i8 %i2111, ptr %i2114, align 1, !tbaa !21
  %i2115 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2116 = add nsw i32 %i2115, 1
  store i32 %i2116, ptr %i2071, align 4, !tbaa !137
  %i2117 = load i32, ptr %i126, align 8, !tbaa !194
  %i2118 = shl i32 %i2117, 8
  store i32 %i2118, ptr %i126, align 8, !tbaa !194
  %i2119 = load i32, ptr %i123, align 4, !tbaa !193
  %i2120 = add nsw i32 %i2119, -8
  store i32 %i2120, ptr %i123, align 4, !tbaa !193
  %i2121 = icmp sgt i32 %i2119, 15
  br i1 %i2121, label %bb2107.bb2107_crit_edge, label %bb2122.loopexit, !llvm.loop !195

bb2107.bb2107_crit_edge:                          ; preds = %bb2107
  br label %bb2107

bb2122.loopexit:                                  ; preds = %bb2107
  br label %bb2122

bb2122:                                           ; preds = %bb2106.bb2122_crit_edge, %bb2122.loopexit, %bb2100
  %i2123 = phi i32 [ %i2105, %bb2100 ], [ %i2076, %bb2106.bb2122_crit_edge ], [ %i2118, %bb2122.loopexit ]
  %i2124 = phi i32 [ %i2103, %bb2100 ], [ %i2077, %bb2106.bb2122_crit_edge ], [ %i2120, %bb2122.loopexit ]
  %i2125 = phi i32 [ %i2101, %bb2100 ], [ %i2078, %bb2106.bb2122_crit_edge ], [ %i2116, %bb2122.loopexit ]
  %i2126 = add nsw i32 %i2124, 1
  store i32 %i2123, ptr %i126, align 8, !tbaa !194
  store i32 %i2126, ptr %i123, align 4, !tbaa !193
  %i2127 = add nuw nsw i64 %i2079, 1
  %i2128 = icmp eq i64 %i2127, 16
  br i1 %i2128, label %bb2129.preheader, label %bb2122.bb2075_crit_edge, !llvm.loop !221

bb2122.bb2075_crit_edge:                          ; preds = %bb2122
  br label %bb2075

bb2129.preheader:                                 ; preds = %bb2122
  br label %bb2129

bb2129:                                           ; preds = %bb2194.bb2129_crit_edge, %bb2129.preheader
  %i2130 = phi i32 [ %i2195, %bb2194.bb2129_crit_edge ], [ %i2125, %bb2129.preheader ]
  %i2131 = phi i32 [ %i2196, %bb2194.bb2129_crit_edge ], [ %i2123, %bb2129.preheader ]
  %i2132 = phi i32 [ %i2197, %bb2194.bb2129_crit_edge ], [ %i2126, %bb2129.preheader ]
  %i2133 = phi i64 [ %i2198, %bb2194.bb2129_crit_edge ], [ 0, %bb2129.preheader ]
  %i2134 = getelementptr inbounds [16 x i8], ptr %i4, i64 0, i64 %i2133
  %i2135 = load i8, ptr %i2134, align 1, !tbaa !21
  %i2136 = icmp eq i8 %i2135, 0
  br i1 %i2136, label %bb2129.bb2194_crit_edge, label %bb2137

bb2129.bb2194_crit_edge:                          ; preds = %bb2129
  br label %bb2194

bb2137:                                           ; preds = %bb2129
  %i2138 = shl nuw nsw i64 %i2133, 4
  br label %bb2139

bb2139:                                           ; preds = %bb2187.bb2139_crit_edge, %bb2137
  %i2140 = phi i32 [ %i2130, %bb2137 ], [ %i2188, %bb2187.bb2139_crit_edge ]
  %i2141 = phi i32 [ %i2131, %bb2137 ], [ %i2189, %bb2187.bb2139_crit_edge ]
  %i2142 = phi i32 [ %i2132, %bb2137 ], [ %i2191, %bb2187.bb2139_crit_edge ]
  %i2143 = phi i64 [ 0, %bb2137 ], [ %i2192, %bb2187.bb2139_crit_edge ]
  %i2144 = add nuw nsw i64 %i2143, %i2138
  %i2145 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 22, i64 %i2144
  %i2146 = load i8, ptr %i2145, align 1, !tbaa !21
  %i2147 = icmp eq i8 %i2146, 0
  %i2148 = icmp sgt i32 %i2142, 7
  br i1 %i2147, label %bb2171, label %bb2149

bb2149:                                           ; preds = %bb2139
  br i1 %i2148, label %bb2150.preheader, label %bb2149.bb2165_crit_edge

bb2149.bb2165_crit_edge:                          ; preds = %bb2149
  br label %bb2165

bb2150.preheader:                                 ; preds = %bb2149
  br label %bb2150

bb2150:                                           ; preds = %bb2150.bb2150_crit_edge, %bb2150.preheader
  %i2151 = phi i32 [ %i2159, %bb2150.bb2150_crit_edge ], [ %i2140, %bb2150.preheader ]
  %i2152 = phi i32 [ %i2161, %bb2150.bb2150_crit_edge ], [ %i2141, %bb2150.preheader ]
  %i2153 = lshr i32 %i2152, 24
  %i2154 = trunc i32 %i2153 to i8
  %i2155 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2156 = sext i32 %i2151 to i64
  %i2157 = getelementptr inbounds i8, ptr %i2155, i64 %i2156
  store i8 %i2154, ptr %i2157, align 1, !tbaa !21
  %i2158 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2159 = add nsw i32 %i2158, 1
  store i32 %i2159, ptr %i2071, align 4, !tbaa !137
  %i2160 = load i32, ptr %i126, align 8, !tbaa !194
  %i2161 = shl i32 %i2160, 8
  store i32 %i2161, ptr %i126, align 8, !tbaa !194
  %i2162 = load i32, ptr %i123, align 4, !tbaa !193
  %i2163 = add nsw i32 %i2162, -8
  store i32 %i2163, ptr %i123, align 4, !tbaa !193
  %i2164 = icmp sgt i32 %i2162, 15
  br i1 %i2164, label %bb2150.bb2150_crit_edge, label %bb2165.loopexit, !llvm.loop !195

bb2150.bb2150_crit_edge:                          ; preds = %bb2150
  br label %bb2150

bb2165.loopexit:                                  ; preds = %bb2150
  br label %bb2165

bb2165:                                           ; preds = %bb2149.bb2165_crit_edge, %bb2165.loopexit
  %i2166 = phi i32 [ %i2140, %bb2149.bb2165_crit_edge ], [ %i2159, %bb2165.loopexit ]
  %i2167 = phi i32 [ %i2141, %bb2149.bb2165_crit_edge ], [ %i2161, %bb2165.loopexit ]
  %i2168 = phi i32 [ %i2142, %bb2149.bb2165_crit_edge ], [ %i2163, %bb2165.loopexit ]
  %i2169 = lshr exact i32 -2147483648, %i2168
  %i2170 = or i32 %i2169, %i2167
  br label %bb2187

bb2171:                                           ; preds = %bb2139
  br i1 %i2148, label %bb2172.preheader, label %bb2171.bb2187_crit_edge

bb2171.bb2187_crit_edge:                          ; preds = %bb2171
  br label %bb2187

bb2172.preheader:                                 ; preds = %bb2171
  br label %bb2172

bb2172:                                           ; preds = %bb2172.bb2172_crit_edge, %bb2172.preheader
  %i2173 = phi i32 [ %i2181, %bb2172.bb2172_crit_edge ], [ %i2140, %bb2172.preheader ]
  %i2174 = phi i32 [ %i2183, %bb2172.bb2172_crit_edge ], [ %i2141, %bb2172.preheader ]
  %i2175 = lshr i32 %i2174, 24
  %i2176 = trunc i32 %i2175 to i8
  %i2177 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2178 = sext i32 %i2173 to i64
  %i2179 = getelementptr inbounds i8, ptr %i2177, i64 %i2178
  store i8 %i2176, ptr %i2179, align 1, !tbaa !21
  %i2180 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2181 = add nsw i32 %i2180, 1
  store i32 %i2181, ptr %i2071, align 4, !tbaa !137
  %i2182 = load i32, ptr %i126, align 8, !tbaa !194
  %i2183 = shl i32 %i2182, 8
  store i32 %i2183, ptr %i126, align 8, !tbaa !194
  %i2184 = load i32, ptr %i123, align 4, !tbaa !193
  %i2185 = add nsw i32 %i2184, -8
  store i32 %i2185, ptr %i123, align 4, !tbaa !193
  %i2186 = icmp sgt i32 %i2184, 15
  br i1 %i2186, label %bb2172.bb2172_crit_edge, label %bb2187.loopexit, !llvm.loop !195

bb2172.bb2172_crit_edge:                          ; preds = %bb2172
  br label %bb2172

bb2187.loopexit:                                  ; preds = %bb2172
  br label %bb2187

bb2187:                                           ; preds = %bb2171.bb2187_crit_edge, %bb2187.loopexit, %bb2165
  %i2188 = phi i32 [ %i2166, %bb2165 ], [ %i2140, %bb2171.bb2187_crit_edge ], [ %i2181, %bb2187.loopexit ]
  %i2189 = phi i32 [ %i2170, %bb2165 ], [ %i2141, %bb2171.bb2187_crit_edge ], [ %i2183, %bb2187.loopexit ]
  %i2190 = phi i32 [ %i2168, %bb2165 ], [ %i2142, %bb2171.bb2187_crit_edge ], [ %i2185, %bb2187.loopexit ]
  %i2191 = add nsw i32 %i2190, 1
  store i32 %i2189, ptr %i126, align 8, !tbaa !194
  store i32 %i2191, ptr %i123, align 4, !tbaa !193
  %i2192 = add nuw nsw i64 %i2143, 1
  %i2193 = icmp eq i64 %i2192, 16
  br i1 %i2193, label %bb2194.loopexit, label %bb2187.bb2139_crit_edge, !llvm.loop !222

bb2187.bb2139_crit_edge:                          ; preds = %bb2187
  br label %bb2139

bb2194.loopexit:                                  ; preds = %bb2187
  br label %bb2194

bb2194:                                           ; preds = %bb2129.bb2194_crit_edge, %bb2194.loopexit
  %i2195 = phi i32 [ %i2130, %bb2129.bb2194_crit_edge ], [ %i2188, %bb2194.loopexit ]
  %i2196 = phi i32 [ %i2131, %bb2129.bb2194_crit_edge ], [ %i2189, %bb2194.loopexit ]
  %i2197 = phi i32 [ %i2132, %bb2129.bb2194_crit_edge ], [ %i2191, %bb2194.loopexit ]
  %i2198 = add nuw nsw i64 %i2133, 1
  %i2199 = icmp eq i64 %i2198, 16
  br i1 %i2199, label %bb2200, label %bb2194.bb2129_crit_edge, !llvm.loop !223

bb2194.bb2129_crit_edge:                          ; preds = %bb2194
  br label %bb2129

bb2200:                                           ; preds = %bb2194
  %i2201 = load i32, ptr %i562, align 8, !tbaa !17
  %i2202 = icmp sgt i32 %i2201, 2
  br i1 %i2202, label %bb2203, label %bb2200.bb2210_crit_edge

bb2200.bb2210_crit_edge:                          ; preds = %bb2200
  br label %bb2210

bb2203:                                           ; preds = %bb2200
  %i2204 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i2205 = sub nsw i32 %i2195, %i2072
  %i2206 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i2204, ptr noundef nonnull @.str.7.110, i32 noundef %i2205) #32
  %i2207 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2208 = load i32, ptr %i123, align 4, !tbaa !193
  %i2209 = load i32, ptr %i126, align 8, !tbaa !194
  br label %bb2210

bb2210:                                           ; preds = %bb2200.bb2210_crit_edge, %bb2203
  %i2211 = phi i32 [ %i2209, %bb2203 ], [ %i2196, %bb2200.bb2210_crit_edge ]
  %i2212 = phi i32 [ %i2208, %bb2203 ], [ %i2197, %bb2200.bb2210_crit_edge ]
  %i2213 = phi i32 [ %i2207, %bb2203 ], [ %i2195, %bb2200.bb2210_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %i4) #31
  %i2214 = icmp sgt i32 %i2212, 7
  br i1 %i2214, label %bb2215.preheader, label %bb2210.bb2230_crit_edge

bb2210.bb2230_crit_edge:                          ; preds = %bb2210
  br label %bb2230

bb2215.preheader:                                 ; preds = %bb2210
  br label %bb2215

bb2215:                                           ; preds = %bb2215.bb2215_crit_edge, %bb2215.preheader
  %i2216 = phi i32 [ %i2224, %bb2215.bb2215_crit_edge ], [ %i2213, %bb2215.preheader ]
  %i2217 = phi i32 [ %i2226, %bb2215.bb2215_crit_edge ], [ %i2211, %bb2215.preheader ]
  %i2218 = lshr i32 %i2217, 24
  %i2219 = trunc i32 %i2218 to i8
  %i2220 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2221 = sext i32 %i2216 to i64
  %i2222 = getelementptr inbounds i8, ptr %i2220, i64 %i2221
  store i8 %i2219, ptr %i2222, align 1, !tbaa !21
  %i2223 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2224 = add nsw i32 %i2223, 1
  store i32 %i2224, ptr %i2071, align 4, !tbaa !137
  %i2225 = load i32, ptr %i126, align 8, !tbaa !194
  %i2226 = shl i32 %i2225, 8
  store i32 %i2226, ptr %i126, align 8, !tbaa !194
  %i2227 = load i32, ptr %i123, align 4, !tbaa !193
  %i2228 = add nsw i32 %i2227, -8
  store i32 %i2228, ptr %i123, align 4, !tbaa !193
  %i2229 = icmp sgt i32 %i2227, 15
  br i1 %i2229, label %bb2215.bb2215_crit_edge, label %bb2230.loopexit, !llvm.loop !195

bb2215.bb2215_crit_edge:                          ; preds = %bb2215
  br label %bb2215

bb2230.loopexit:                                  ; preds = %bb2215
  br label %bb2230

bb2230:                                           ; preds = %bb2210.bb2230_crit_edge, %bb2230.loopexit
  %i2231 = phi i32 [ %i2213, %bb2210.bb2230_crit_edge ], [ %i2224, %bb2230.loopexit ]
  %i2232 = phi i32 [ %i2211, %bb2210.bb2230_crit_edge ], [ %i2226, %bb2230.loopexit ]
  %i2233 = phi i32 [ %i2212, %bb2210.bb2230_crit_edge ], [ %i2228, %bb2230.loopexit ]
  %i2234 = add nsw i32 %i2233, 3
  %i2235 = sub i32 29, %i2233
  %i2236 = shl i32 %i600, %i2235
  %i2237 = or i32 %i2236, %i2232
  store i32 %i2237, ptr %i126, align 8, !tbaa !194
  store i32 %i2234, ptr %i123, align 4, !tbaa !193
  %i2238 = icmp sgt i32 %i2233, 4
  br i1 %i2238, label %bb2239.preheader, label %bb2230.bb2254_crit_edge

bb2230.bb2254_crit_edge:                          ; preds = %bb2230
  br label %bb2254

bb2239.preheader:                                 ; preds = %bb2230
  br label %bb2239

bb2239:                                           ; preds = %bb2239.bb2239_crit_edge, %bb2239.preheader
  %i2240 = phi i32 [ %i2248, %bb2239.bb2239_crit_edge ], [ %i2231, %bb2239.preheader ]
  %i2241 = phi i32 [ %i2250, %bb2239.bb2239_crit_edge ], [ %i2237, %bb2239.preheader ]
  %i2242 = lshr i32 %i2241, 24
  %i2243 = trunc i32 %i2242 to i8
  %i2244 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2245 = sext i32 %i2240 to i64
  %i2246 = getelementptr inbounds i8, ptr %i2244, i64 %i2245
  store i8 %i2243, ptr %i2246, align 1, !tbaa !21
  %i2247 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2248 = add nsw i32 %i2247, 1
  store i32 %i2248, ptr %i2071, align 4, !tbaa !137
  %i2249 = load i32, ptr %i126, align 8, !tbaa !194
  %i2250 = shl i32 %i2249, 8
  store i32 %i2250, ptr %i126, align 8, !tbaa !194
  %i2251 = load i32, ptr %i123, align 4, !tbaa !193
  %i2252 = add nsw i32 %i2251, -8
  store i32 %i2252, ptr %i123, align 4, !tbaa !193
  %i2253 = icmp sgt i32 %i2251, 15
  br i1 %i2253, label %bb2239.bb2239_crit_edge, label %bb2254.loopexit, !llvm.loop !195

bb2239.bb2239_crit_edge:                          ; preds = %bb2239
  br label %bb2239

bb2254.loopexit:                                  ; preds = %bb2239
  br label %bb2254

bb2254:                                           ; preds = %bb2230.bb2254_crit_edge, %bb2254.loopexit
  %i2255 = phi i32 [ %i2231, %bb2230.bb2254_crit_edge ], [ %i2248, %bb2254.loopexit ]
  %i2256 = phi i32 [ %i2237, %bb2230.bb2254_crit_edge ], [ %i2250, %bb2254.loopexit ]
  %i2257 = phi i32 [ %i2234, %bb2230.bb2254_crit_edge ], [ %i2252, %bb2254.loopexit ]
  %i2258 = add nsw i32 %i2257, 15
  %i2259 = sub i32 17, %i2257
  %i2260 = shl i32 %i1854, %i2259
  %i2261 = or i32 %i2260, %i2256
  store i32 %i2261, ptr %i126, align 8, !tbaa !194
  store i32 %i2258, ptr %i123, align 4, !tbaa !193
  br i1 %i1891, label %bb2262, label %bb2254.bb2334_crit_edge

bb2254.bb2334_crit_edge:                          ; preds = %bb2254
  br label %bb2334

bb2262:                                           ; preds = %bb2254
  %i2263 = zext nneg i32 %i1854 to i64
  br label %bb2264

bb2264:                                           ; preds = %bb2327.bb2264_crit_edge, %bb2262
  %i2265 = phi i32 [ %i2255, %bb2262 ], [ %i2328, %bb2327.bb2264_crit_edge ]
  %i2266 = phi i32 [ %i2261, %bb2262 ], [ %i2329, %bb2327.bb2264_crit_edge ]
  %i2267 = phi i32 [ %i2258, %bb2262 ], [ %i2331, %bb2327.bb2264_crit_edge ]
  %i2268 = phi i64 [ 0, %bb2262 ], [ %i2332, %bb2327.bb2264_crit_edge ]
  %i2269 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 34, i64 %i2268
  %i2270 = load i8, ptr %i2269, align 1, !tbaa !21
  %i2271 = icmp eq i8 %i2270, 0
  br i1 %i2271, label %bb2264.bb2307_crit_edge, label %bb2272.preheader

bb2264.bb2307_crit_edge:                          ; preds = %bb2264
  br label %bb2307

bb2272.preheader:                                 ; preds = %bb2264
  br label %bb2272

bb2272:                                           ; preds = %bb2296.bb2272_crit_edge, %bb2272.preheader
  %i2273 = phi i8 [ %i2297, %bb2296.bb2272_crit_edge ], [ %i2270, %bb2272.preheader ]
  %i2274 = phi i32 [ %i2298, %bb2296.bb2272_crit_edge ], [ %i2265, %bb2272.preheader ]
  %i2275 = phi i32 [ %i2303, %bb2296.bb2272_crit_edge ], [ %i2266, %bb2272.preheader ]
  %i2276 = phi i32 [ %i2301, %bb2296.bb2272_crit_edge ], [ %i2267, %bb2272.preheader ]
  %i2277 = phi i32 [ %i2304, %bb2296.bb2272_crit_edge ], [ 0, %bb2272.preheader ]
  %i2278 = icmp sgt i32 %i2276, 7
  br i1 %i2278, label %bb2279.preheader, label %bb2272.bb2296_crit_edge

bb2272.bb2296_crit_edge:                          ; preds = %bb2272
  br label %bb2296

bb2279.preheader:                                 ; preds = %bb2272
  br label %bb2279

bb2279:                                           ; preds = %bb2279.bb2279_crit_edge, %bb2279.preheader
  %i2280 = phi i32 [ %i2288, %bb2279.bb2279_crit_edge ], [ %i2274, %bb2279.preheader ]
  %i2281 = phi i32 [ %i2290, %bb2279.bb2279_crit_edge ], [ %i2275, %bb2279.preheader ]
  %i2282 = lshr i32 %i2281, 24
  %i2283 = trunc i32 %i2282 to i8
  %i2284 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2285 = sext i32 %i2280 to i64
  %i2286 = getelementptr inbounds i8, ptr %i2284, i64 %i2285
  store i8 %i2283, ptr %i2286, align 1, !tbaa !21
  %i2287 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2288 = add nsw i32 %i2287, 1
  store i32 %i2288, ptr %i2071, align 4, !tbaa !137
  %i2289 = load i32, ptr %i126, align 8, !tbaa !194
  %i2290 = shl i32 %i2289, 8
  store i32 %i2290, ptr %i126, align 8, !tbaa !194
  %i2291 = load i32, ptr %i123, align 4, !tbaa !193
  %i2292 = add nsw i32 %i2291, -8
  store i32 %i2292, ptr %i123, align 4, !tbaa !193
  %i2293 = icmp sgt i32 %i2291, 15
  br i1 %i2293, label %bb2279.bb2279_crit_edge, label %bb2294, !llvm.loop !195

bb2279.bb2279_crit_edge:                          ; preds = %bb2279
  br label %bb2279

bb2294:                                           ; preds = %bb2279
  %i2295 = load i8, ptr %i2269, align 1, !tbaa !21
  br label %bb2296

bb2296:                                           ; preds = %bb2272.bb2296_crit_edge, %bb2294
  %i2297 = phi i8 [ %i2295, %bb2294 ], [ %i2273, %bb2272.bb2296_crit_edge ]
  %i2298 = phi i32 [ %i2288, %bb2294 ], [ %i2274, %bb2272.bb2296_crit_edge ]
  %i2299 = phi i32 [ %i2290, %bb2294 ], [ %i2275, %bb2272.bb2296_crit_edge ]
  %i2300 = phi i32 [ %i2292, %bb2294 ], [ %i2276, %bb2272.bb2296_crit_edge ]
  %i2301 = add nsw i32 %i2300, 1
  %i2302 = lshr exact i32 -2147483648, %i2300
  %i2303 = or i32 %i2302, %i2299
  store i32 %i2303, ptr %i126, align 8, !tbaa !194
  store i32 %i2301, ptr %i123, align 4, !tbaa !193
  %i2304 = add nuw nsw i32 %i2277, 1
  %i2305 = zext i8 %i2297 to i32
  %i2306 = icmp ult i32 %i2304, %i2305
  br i1 %i2306, label %bb2296.bb2272_crit_edge, label %bb2307.loopexit, !llvm.loop !224

bb2296.bb2272_crit_edge:                          ; preds = %bb2296
  br label %bb2272

bb2307.loopexit:                                  ; preds = %bb2296
  br label %bb2307

bb2307:                                           ; preds = %bb2264.bb2307_crit_edge, %bb2307.loopexit
  %i2308 = phi i32 [ %i2266, %bb2264.bb2307_crit_edge ], [ %i2303, %bb2307.loopexit ]
  %i2309 = phi i32 [ %i2267, %bb2264.bb2307_crit_edge ], [ %i2301, %bb2307.loopexit ]
  %i2310 = phi i32 [ %i2265, %bb2264.bb2307_crit_edge ], [ %i2298, %bb2307.loopexit ]
  %i2311 = icmp sgt i32 %i2309, 7
  br i1 %i2311, label %bb2312.preheader, label %bb2307.bb2327_crit_edge

bb2307.bb2327_crit_edge:                          ; preds = %bb2307
  br label %bb2327

bb2312.preheader:                                 ; preds = %bb2307
  br label %bb2312

bb2312:                                           ; preds = %bb2312.bb2312_crit_edge, %bb2312.preheader
  %i2313 = phi i32 [ %i2321, %bb2312.bb2312_crit_edge ], [ %i2310, %bb2312.preheader ]
  %i2314 = phi i32 [ %i2323, %bb2312.bb2312_crit_edge ], [ %i2308, %bb2312.preheader ]
  %i2315 = lshr i32 %i2314, 24
  %i2316 = trunc i32 %i2315 to i8
  %i2317 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2318 = sext i32 %i2313 to i64
  %i2319 = getelementptr inbounds i8, ptr %i2317, i64 %i2318
  store i8 %i2316, ptr %i2319, align 1, !tbaa !21
  %i2320 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2321 = add nsw i32 %i2320, 1
  store i32 %i2321, ptr %i2071, align 4, !tbaa !137
  %i2322 = load i32, ptr %i126, align 8, !tbaa !194
  %i2323 = shl i32 %i2322, 8
  store i32 %i2323, ptr %i126, align 8, !tbaa !194
  %i2324 = load i32, ptr %i123, align 4, !tbaa !193
  %i2325 = add nsw i32 %i2324, -8
  store i32 %i2325, ptr %i123, align 4, !tbaa !193
  %i2326 = icmp sgt i32 %i2324, 15
  br i1 %i2326, label %bb2312.bb2312_crit_edge, label %bb2327.loopexit, !llvm.loop !195

bb2312.bb2312_crit_edge:                          ; preds = %bb2312
  br label %bb2312

bb2327.loopexit:                                  ; preds = %bb2312
  br label %bb2327

bb2327:                                           ; preds = %bb2307.bb2327_crit_edge, %bb2327.loopexit
  %i2328 = phi i32 [ %i2310, %bb2307.bb2327_crit_edge ], [ %i2321, %bb2327.loopexit ]
  %i2329 = phi i32 [ %i2308, %bb2307.bb2327_crit_edge ], [ %i2323, %bb2327.loopexit ]
  %i2330 = phi i32 [ %i2309, %bb2307.bb2327_crit_edge ], [ %i2325, %bb2327.loopexit ]
  %i2331 = add nsw i32 %i2330, 1
  store i32 %i2329, ptr %i126, align 8, !tbaa !194
  store i32 %i2331, ptr %i123, align 4, !tbaa !193
  %i2332 = add nuw nsw i64 %i2268, 1
  %i2333 = icmp eq i64 %i2332, %i2263
  br i1 %i2333, label %bb2334.loopexit, label %bb2327.bb2264_crit_edge, !llvm.loop !225

bb2327.bb2264_crit_edge:                          ; preds = %bb2327
  br label %bb2264

bb2334.loopexit:                                  ; preds = %bb2327
  br label %bb2334

bb2334:                                           ; preds = %bb2254.bb2334_crit_edge, %bb2334.loopexit
  %i2335 = phi i32 [ %i2261, %bb2254.bb2334_crit_edge ], [ %i2329, %bb2334.loopexit ]
  %i2336 = phi i32 [ %i2258, %bb2254.bb2334_crit_edge ], [ %i2331, %bb2334.loopexit ]
  %i2337 = phi i32 [ %i2255, %bb2254.bb2334_crit_edge ], [ %i2328, %bb2334.loopexit ]
  %i2338 = load i32, ptr %i562, align 8, !tbaa !17
  %i2339 = icmp sgt i32 %i2338, 2
  br i1 %i2339, label %bb2340, label %bb2334.bb2347_crit_edge

bb2334.bb2347_crit_edge:                          ; preds = %bb2334
  br label %bb2347

bb2340:                                           ; preds = %bb2334
  %i2341 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i2342 = sub nsw i32 %i2337, %i2213
  %i2343 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i2341, ptr noundef nonnull @.str.8.111, i32 noundef %i2342) #32
  %i2344 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2345 = load i32, ptr %i123, align 4, !tbaa !193
  %i2346 = load i32, ptr %i126, align 8, !tbaa !194
  br label %bb2347

bb2347:                                           ; preds = %bb2334.bb2347_crit_edge, %bb2340
  %i2348 = phi i32 [ %i2346, %bb2340 ], [ %i2335, %bb2334.bb2347_crit_edge ]
  %i2349 = phi i32 [ %i2345, %bb2340 ], [ %i2336, %bb2334.bb2347_crit_edge ]
  %i2350 = phi i32 [ %i2344, %bb2340 ], [ %i2337, %bb2334.bb2347_crit_edge ]
  br label %bb2351

bb2351:                                           ; preds = %bb2494.bb2351_crit_edge, %bb2347
  %i2352 = phi i32 [ %i2348, %bb2347 ], [ %i2495, %bb2494.bb2351_crit_edge ]
  %i2353 = phi i32 [ %i2350, %bb2347 ], [ %i2496, %bb2494.bb2351_crit_edge ]
  %i2354 = phi i32 [ %i2349, %bb2347 ], [ %i2497, %bb2494.bb2351_crit_edge ]
  %i2355 = phi i64 [ 0, %bb2347 ], [ %i2498, %bb2494.bb2351_crit_edge ]
  %i2356 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 %i2355
  %i2357 = load i8, ptr %i2356, align 2, !tbaa !21
  %i2358 = zext i8 %i2357 to i32
  %i2359 = icmp sgt i32 %i2354, 7
  br i1 %i2359, label %bb2360.preheader, label %bb2351.bb2375_crit_edge

bb2351.bb2375_crit_edge:                          ; preds = %bb2351
  br label %bb2375

bb2360.preheader:                                 ; preds = %bb2351
  br label %bb2360

bb2360:                                           ; preds = %bb2360.bb2360_crit_edge, %bb2360.preheader
  %i2361 = phi i32 [ %i2369, %bb2360.bb2360_crit_edge ], [ %i2353, %bb2360.preheader ]
  %i2362 = phi i32 [ %i2371, %bb2360.bb2360_crit_edge ], [ %i2352, %bb2360.preheader ]
  %i2363 = lshr i32 %i2362, 24
  %i2364 = trunc i32 %i2363 to i8
  %i2365 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2366 = sext i32 %i2361 to i64
  %i2367 = getelementptr inbounds i8, ptr %i2365, i64 %i2366
  store i8 %i2364, ptr %i2367, align 1, !tbaa !21
  %i2368 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2369 = add nsw i32 %i2368, 1
  store i32 %i2369, ptr %i2071, align 4, !tbaa !137
  %i2370 = load i32, ptr %i126, align 8, !tbaa !194
  %i2371 = shl i32 %i2370, 8
  store i32 %i2371, ptr %i126, align 8, !tbaa !194
  %i2372 = load i32, ptr %i123, align 4, !tbaa !193
  %i2373 = add nsw i32 %i2372, -8
  store i32 %i2373, ptr %i123, align 4, !tbaa !193
  %i2374 = icmp sgt i32 %i2372, 15
  br i1 %i2374, label %bb2360.bb2360_crit_edge, label %bb2375.loopexit, !llvm.loop !195

bb2360.bb2360_crit_edge:                          ; preds = %bb2360
  br label %bb2360

bb2375.loopexit:                                  ; preds = %bb2360
  br label %bb2375

bb2375:                                           ; preds = %bb2351.bb2375_crit_edge, %bb2375.loopexit
  %i2376 = phi i32 [ %i2353, %bb2351.bb2375_crit_edge ], [ %i2369, %bb2375.loopexit ]
  %i2377 = phi i32 [ %i2352, %bb2351.bb2375_crit_edge ], [ %i2371, %bb2375.loopexit ]
  %i2378 = phi i32 [ %i2354, %bb2351.bb2375_crit_edge ], [ %i2373, %bb2375.loopexit ]
  %i2379 = add nsw i32 %i2378, 5
  %i2380 = sub i32 27, %i2378
  %i2381 = shl i32 %i2358, %i2380
  %i2382 = or i32 %i2381, %i2377
  store i32 %i2382, ptr %i126, align 8, !tbaa !194
  store i32 %i2379, ptr %i123, align 4, !tbaa !193
  br i1 %i573, label %bb2383.preheader, label %bb2375.bb2494_crit_edge

bb2375.bb2494_crit_edge:                          ; preds = %bb2375
  br label %bb2494

bb2383.preheader:                                 ; preds = %bb2375
  br label %bb2383

bb2383:                                           ; preds = %bb2487.bb2383_crit_edge, %bb2383.preheader
  %i2384 = phi i32 [ %i2489, %bb2487.bb2383_crit_edge ], [ %i2382, %bb2383.preheader ]
  %i2385 = phi i32 [ %i2491, %bb2487.bb2383_crit_edge ], [ %i2379, %bb2383.preheader ]
  %i2386 = phi i32 [ %i2488, %bb2487.bb2383_crit_edge ], [ %i2376, %bb2383.preheader ]
  %i2387 = phi i64 [ %i2492, %bb2487.bb2383_crit_edge ], [ 0, %bb2383.preheader ]
  %i2388 = phi i32 [ %i2470, %bb2487.bb2383_crit_edge ], [ %i2358, %bb2383.preheader ]
  %i2389 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 %i2355, i64 %i2387
  %i2390 = load i8, ptr %i2389, align 1, !tbaa !21
  %i2391 = zext i8 %i2390 to i32
  %i2392 = icmp slt i32 %i2388, %i2391
  br i1 %i2392, label %bb2400.preheader, label %bb2383.bb2393_crit_edge

bb2383.bb2393_crit_edge:                          ; preds = %bb2383
  br label %bb2393

bb2400.preheader:                                 ; preds = %bb2383
  br label %bb2400

bb2393.loopexit:                                  ; preds = %bb2421
  br label %bb2393

bb2393:                                           ; preds = %bb2383.bb2393_crit_edge, %bb2393.loopexit
  %i2394 = phi i32 [ %i2391, %bb2383.bb2393_crit_edge ], [ %i2431, %bb2393.loopexit ]
  %i2395 = phi i32 [ %i2384, %bb2383.bb2393_crit_edge ], [ %i2428, %bb2393.loopexit ]
  %i2396 = phi i32 [ %i2385, %bb2383.bb2393_crit_edge ], [ %i2425, %bb2393.loopexit ]
  %i2397 = phi i32 [ %i2386, %bb2383.bb2393_crit_edge ], [ %i2422, %bb2393.loopexit ]
  %i2398 = phi i32 [ %i2388, %bb2383.bb2393_crit_edge ], [ %i2429, %bb2393.loopexit ]
  %i2399 = icmp ugt i32 %i2398, %i2394
  br i1 %i2399, label %bb2433.preheader, label %bb2393.bb2466_crit_edge

bb2393.bb2466_crit_edge:                          ; preds = %bb2393
  br label %bb2466

bb2433.preheader:                                 ; preds = %bb2393
  br label %bb2433

bb2400:                                           ; preds = %bb2421.bb2400_crit_edge, %bb2400.preheader
  %i2401 = phi i32 [ %i2428, %bb2421.bb2400_crit_edge ], [ %i2384, %bb2400.preheader ]
  %i2402 = phi i32 [ %i2425, %bb2421.bb2400_crit_edge ], [ %i2385, %bb2400.preheader ]
  %i2403 = phi i32 [ %i2422, %bb2421.bb2400_crit_edge ], [ %i2386, %bb2400.preheader ]
  %i2404 = phi i32 [ %i2429, %bb2421.bb2400_crit_edge ], [ %i2388, %bb2400.preheader ]
  %i2405 = icmp sgt i32 %i2402, 7
  br i1 %i2405, label %bb2406.preheader, label %bb2400.bb2421_crit_edge

bb2400.bb2421_crit_edge:                          ; preds = %bb2400
  br label %bb2421

bb2406.preheader:                                 ; preds = %bb2400
  br label %bb2406

bb2406:                                           ; preds = %bb2406.bb2406_crit_edge, %bb2406.preheader
  %i2407 = phi i32 [ %i2415, %bb2406.bb2406_crit_edge ], [ %i2403, %bb2406.preheader ]
  %i2408 = phi i32 [ %i2417, %bb2406.bb2406_crit_edge ], [ %i2401, %bb2406.preheader ]
  %i2409 = lshr i32 %i2408, 24
  %i2410 = trunc i32 %i2409 to i8
  %i2411 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2412 = sext i32 %i2407 to i64
  %i2413 = getelementptr inbounds i8, ptr %i2411, i64 %i2412
  store i8 %i2410, ptr %i2413, align 1, !tbaa !21
  %i2414 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2415 = add nsw i32 %i2414, 1
  store i32 %i2415, ptr %i2071, align 4, !tbaa !137
  %i2416 = load i32, ptr %i126, align 8, !tbaa !194
  %i2417 = shl i32 %i2416, 8
  store i32 %i2417, ptr %i126, align 8, !tbaa !194
  %i2418 = load i32, ptr %i123, align 4, !tbaa !193
  %i2419 = add nsw i32 %i2418, -8
  store i32 %i2419, ptr %i123, align 4, !tbaa !193
  %i2420 = icmp sgt i32 %i2418, 15
  br i1 %i2420, label %bb2406.bb2406_crit_edge, label %bb2421.loopexit, !llvm.loop !195

bb2406.bb2406_crit_edge:                          ; preds = %bb2406
  br label %bb2406

bb2421.loopexit:                                  ; preds = %bb2406
  br label %bb2421

bb2421:                                           ; preds = %bb2400.bb2421_crit_edge, %bb2421.loopexit
  %i2422 = phi i32 [ %i2403, %bb2400.bb2421_crit_edge ], [ %i2415, %bb2421.loopexit ]
  %i2423 = phi i32 [ %i2401, %bb2400.bb2421_crit_edge ], [ %i2417, %bb2421.loopexit ]
  %i2424 = phi i32 [ %i2402, %bb2400.bb2421_crit_edge ], [ %i2419, %bb2421.loopexit ]
  %i2425 = add nsw i32 %i2424, 2
  %i2426 = sub i32 30, %i2424
  %i2427 = shl i32 2, %i2426
  %i2428 = or i32 %i2427, %i2423
  store i32 %i2428, ptr %i126, align 8, !tbaa !194
  store i32 %i2425, ptr %i123, align 4, !tbaa !193
  %i2429 = add nuw nsw i32 %i2404, 1
  %i2430 = load i8, ptr %i2389, align 1, !tbaa !21
  %i2431 = zext i8 %i2430 to i32
  %i2432 = icmp slt i32 %i2429, %i2431
  br i1 %i2432, label %bb2421.bb2400_crit_edge, label %bb2393.loopexit, !llvm.loop !226

bb2421.bb2400_crit_edge:                          ; preds = %bb2421
  br label %bb2400

bb2433:                                           ; preds = %bb2454.bb2433_crit_edge, %bb2433.preheader
  %i2434 = phi i32 [ %i2461, %bb2454.bb2433_crit_edge ], [ %i2395, %bb2433.preheader ]
  %i2435 = phi i32 [ %i2458, %bb2454.bb2433_crit_edge ], [ %i2396, %bb2433.preheader ]
  %i2436 = phi i32 [ %i2455, %bb2454.bb2433_crit_edge ], [ %i2397, %bb2433.preheader ]
  %i2437 = phi i32 [ %i2462, %bb2454.bb2433_crit_edge ], [ %i2398, %bb2433.preheader ]
  %i2438 = icmp sgt i32 %i2435, 7
  br i1 %i2438, label %bb2439.preheader, label %bb2433.bb2454_crit_edge

bb2433.bb2454_crit_edge:                          ; preds = %bb2433
  br label %bb2454

bb2439.preheader:                                 ; preds = %bb2433
  br label %bb2439

bb2439:                                           ; preds = %bb2439.bb2439_crit_edge, %bb2439.preheader
  %i2440 = phi i32 [ %i2448, %bb2439.bb2439_crit_edge ], [ %i2436, %bb2439.preheader ]
  %i2441 = phi i32 [ %i2450, %bb2439.bb2439_crit_edge ], [ %i2434, %bb2439.preheader ]
  %i2442 = lshr i32 %i2441, 24
  %i2443 = trunc i32 %i2442 to i8
  %i2444 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2445 = sext i32 %i2440 to i64
  %i2446 = getelementptr inbounds i8, ptr %i2444, i64 %i2445
  store i8 %i2443, ptr %i2446, align 1, !tbaa !21
  %i2447 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2448 = add nsw i32 %i2447, 1
  store i32 %i2448, ptr %i2071, align 4, !tbaa !137
  %i2449 = load i32, ptr %i126, align 8, !tbaa !194
  %i2450 = shl i32 %i2449, 8
  store i32 %i2450, ptr %i126, align 8, !tbaa !194
  %i2451 = load i32, ptr %i123, align 4, !tbaa !193
  %i2452 = add nsw i32 %i2451, -8
  store i32 %i2452, ptr %i123, align 4, !tbaa !193
  %i2453 = icmp sgt i32 %i2451, 15
  br i1 %i2453, label %bb2439.bb2439_crit_edge, label %bb2454.loopexit, !llvm.loop !195

bb2439.bb2439_crit_edge:                          ; preds = %bb2439
  br label %bb2439

bb2454.loopexit:                                  ; preds = %bb2439
  br label %bb2454

bb2454:                                           ; preds = %bb2433.bb2454_crit_edge, %bb2454.loopexit
  %i2455 = phi i32 [ %i2436, %bb2433.bb2454_crit_edge ], [ %i2448, %bb2454.loopexit ]
  %i2456 = phi i32 [ %i2434, %bb2433.bb2454_crit_edge ], [ %i2450, %bb2454.loopexit ]
  %i2457 = phi i32 [ %i2435, %bb2433.bb2454_crit_edge ], [ %i2452, %bb2454.loopexit ]
  %i2458 = add nsw i32 %i2457, 2
  %i2459 = sub i32 30, %i2457
  %i2460 = shl i32 3, %i2459
  %i2461 = or i32 %i2460, %i2456
  store i32 %i2461, ptr %i126, align 8, !tbaa !194
  store i32 %i2458, ptr %i123, align 4, !tbaa !193
  %i2462 = add nsw i32 %i2437, -1
  %i2463 = load i8, ptr %i2389, align 1, !tbaa !21
  %i2464 = zext i8 %i2463 to i32
  %i2465 = icmp sgt i32 %i2462, %i2464
  br i1 %i2465, label %bb2454.bb2433_crit_edge, label %bb2466.loopexit, !llvm.loop !227

bb2454.bb2433_crit_edge:                          ; preds = %bb2454
  br label %bb2433

bb2466.loopexit:                                  ; preds = %bb2454
  br label %bb2466

bb2466:                                           ; preds = %bb2393.bb2466_crit_edge, %bb2466.loopexit
  %i2467 = phi i32 [ %i2395, %bb2393.bb2466_crit_edge ], [ %i2461, %bb2466.loopexit ]
  %i2468 = phi i32 [ %i2396, %bb2393.bb2466_crit_edge ], [ %i2458, %bb2466.loopexit ]
  %i2469 = phi i32 [ %i2397, %bb2393.bb2466_crit_edge ], [ %i2455, %bb2466.loopexit ]
  %i2470 = phi i32 [ %i2398, %bb2393.bb2466_crit_edge ], [ %i2462, %bb2466.loopexit ]
  %i2471 = icmp sgt i32 %i2468, 7
  br i1 %i2471, label %bb2472.preheader, label %bb2466.bb2487_crit_edge

bb2466.bb2487_crit_edge:                          ; preds = %bb2466
  br label %bb2487

bb2472.preheader:                                 ; preds = %bb2466
  br label %bb2472

bb2472:                                           ; preds = %bb2472.bb2472_crit_edge, %bb2472.preheader
  %i2473 = phi i32 [ %i2481, %bb2472.bb2472_crit_edge ], [ %i2469, %bb2472.preheader ]
  %i2474 = phi i32 [ %i2483, %bb2472.bb2472_crit_edge ], [ %i2467, %bb2472.preheader ]
  %i2475 = lshr i32 %i2474, 24
  %i2476 = trunc i32 %i2475 to i8
  %i2477 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2478 = sext i32 %i2473 to i64
  %i2479 = getelementptr inbounds i8, ptr %i2477, i64 %i2478
  store i8 %i2476, ptr %i2479, align 1, !tbaa !21
  %i2480 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2481 = add nsw i32 %i2480, 1
  store i32 %i2481, ptr %i2071, align 4, !tbaa !137
  %i2482 = load i32, ptr %i126, align 8, !tbaa !194
  %i2483 = shl i32 %i2482, 8
  store i32 %i2483, ptr %i126, align 8, !tbaa !194
  %i2484 = load i32, ptr %i123, align 4, !tbaa !193
  %i2485 = add nsw i32 %i2484, -8
  store i32 %i2485, ptr %i123, align 4, !tbaa !193
  %i2486 = icmp sgt i32 %i2484, 15
  br i1 %i2486, label %bb2472.bb2472_crit_edge, label %bb2487.loopexit, !llvm.loop !195

bb2472.bb2472_crit_edge:                          ; preds = %bb2472
  br label %bb2472

bb2487.loopexit:                                  ; preds = %bb2472
  br label %bb2487

bb2487:                                           ; preds = %bb2466.bb2487_crit_edge, %bb2487.loopexit
  %i2488 = phi i32 [ %i2469, %bb2466.bb2487_crit_edge ], [ %i2481, %bb2487.loopexit ]
  %i2489 = phi i32 [ %i2467, %bb2466.bb2487_crit_edge ], [ %i2483, %bb2487.loopexit ]
  %i2490 = phi i32 [ %i2468, %bb2466.bb2487_crit_edge ], [ %i2485, %bb2487.loopexit ]
  %i2491 = add nsw i32 %i2490, 1
  store i32 %i2489, ptr %i126, align 8, !tbaa !194
  store i32 %i2491, ptr %i123, align 4, !tbaa !193
  %i2492 = add nuw nsw i64 %i2387, 1
  %i2493 = icmp eq i64 %i2492, %i604
  br i1 %i2493, label %bb2494.loopexit, label %bb2487.bb2383_crit_edge, !llvm.loop !228

bb2487.bb2383_crit_edge:                          ; preds = %bb2487
  br label %bb2383

bb2494.loopexit:                                  ; preds = %bb2487
  br label %bb2494

bb2494:                                           ; preds = %bb2375.bb2494_crit_edge, %bb2494.loopexit
  %i2495 = phi i32 [ %i2382, %bb2375.bb2494_crit_edge ], [ %i2489, %bb2494.loopexit ]
  %i2496 = phi i32 [ %i2376, %bb2375.bb2494_crit_edge ], [ %i2488, %bb2494.loopexit ]
  %i2497 = phi i32 [ %i2379, %bb2375.bb2494_crit_edge ], [ %i2491, %bb2494.loopexit ]
  %i2498 = add nuw nsw i64 %i2355, 1
  %i2499 = icmp eq i64 %i2498, %i603
  br i1 %i2499, label %bb2500, label %bb2494.bb2351_crit_edge, !llvm.loop !229

bb2494.bb2351_crit_edge:                          ; preds = %bb2494
  br label %bb2351

bb2500:                                           ; preds = %bb2494
  %i2501 = load i32, ptr %i562, align 8, !tbaa !17
  %i2502 = icmp sgt i32 %i2501, 2
  br i1 %i2502, label %bb2503, label %bb2500.bb2508_crit_edge

bb2500.bb2508_crit_edge:                          ; preds = %bb2500
  br label %bb2508

bb2503:                                           ; preds = %bb2500
  %i2504 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i2505 = sub nsw i32 %i2496, %i2350
  %i2506 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i2504, ptr noundef nonnull @.str.9.112, i32 noundef %i2505) #32
  %i2507 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb2508

bb2508:                                           ; preds = %bb2500.bb2508_crit_edge, %bb2503
  %i2509 = phi i32 [ %i2507, %bb2503 ], [ %i2496, %bb2500.bb2508_crit_edge ]
  %i2510 = load i32, ptr %i560, align 4, !tbaa !202
  %i2511 = icmp sgt i32 %i2510, 0
  br i1 %i2511, label %bb2512.preheader, label %bb2508.bb4243_crit_edge

bb2508.bb4243_crit_edge:                          ; preds = %bb2508
  br label %bb4243

bb2512.preheader:                                 ; preds = %bb2508
  br label %bb2512

bb2512:                                           ; preds = %bb4236.bb2512_crit_edge, %bb2512.preheader
  %i2513 = phi i64 [ %i4238, %bb4236.bb2512_crit_edge ], [ 0, %bb2512.preheader ]
  %i2514 = phi i32 [ %i4239, %bb4236.bb2512_crit_edge ], [ %i2510, %bb2512.preheader ]
  %i2515 = phi i32 [ %i4237, %bb4236.bb2512_crit_edge ], [ 0, %bb2512.preheader ]
  %i2516 = add nsw i32 %i2515, 49
  %i2517 = icmp slt i32 %i2516, %i2514
  %i2518 = add nsw i32 %i2514, -1
  %i2519 = select i1 %i2517, i32 %i2516, i32 %i2518
  %i2520 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 33, i64 %i2513
  %i2521 = load i8, ptr %i2520, align 1, !tbaa !21
  %i2522 = zext i8 %i2521 to i32
  %i2523 = icmp ugt i32 %i600, %i2522
  br i1 %i2523, label %bb2512.bb2525_crit_edge, label %bb2524

bb2512.bb2525_crit_edge:                          ; preds = %bb2512
  br label %bb2525

bb2524:                                           ; preds = %bb2512
  call void @BZ2_bz__AssertH__fail(i32 noundef 3006) #31
  br label %bb2525

bb2525:                                           ; preds = %bb2512.bb2525_crit_edge, %bb2524
  %i2526 = sub nsw i32 %i2519, %i2515
  %i2527 = icmp eq i32 %i2526, 49
  %i2528 = select i1 %i599, i1 %i2527, i1 false
  br i1 %i2528, label %bb2536, label %bb2529

bb2529:                                           ; preds = %bb2525
  %i2530 = icmp sgt i32 %i2515, %i2519
  br i1 %i2530, label %bb2529.bb4236_crit_edge, label %bb2531

bb2529.bb4236_crit_edge:                          ; preds = %bb2529
  br label %bb4236

bb2531:                                           ; preds = %bb2529
  %i2532 = sext i32 %i2515 to i64
  %i2533 = add i32 %i2519, 1
  %i2534 = load i32, ptr %i123, align 4, !tbaa !193
  %i2535 = load i32, ptr %i126, align 8, !tbaa !194
  br label %bb4194

bb2536:                                           ; preds = %bb2525
  %i2537 = load i8, ptr %i2520, align 1, !tbaa !21
  %i2538 = zext i8 %i2537 to i64
  %i2539 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 %i2538
  %i2540 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 36, i64 %i2538
  %i2541 = sext i32 %i2515 to i64
  %i2542 = getelementptr inbounds i16, ptr %i561, i64 %i2541
  %i2543 = load i16, ptr %i2542, align 2, !tbaa !22
  %i2544 = zext i16 %i2543 to i64
  %i2545 = getelementptr inbounds i8, ptr %i2539, i64 %i2544
  %i2546 = load i8, ptr %i2545, align 1, !tbaa !21
  %i2547 = zext i8 %i2546 to i32
  %i2548 = getelementptr inbounds i32, ptr %i2540, i64 %i2544
  %i2549 = load i32, ptr %i2548, align 4, !tbaa !19
  %i2550 = load i32, ptr %i123, align 4, !tbaa !193
  %i2551 = icmp sgt i32 %i2550, 7
  %i2552 = load i32, ptr %i126, align 8, !tbaa !194
  br i1 %i2551, label %bb2553, label %bb2536.bb2570_crit_edge

bb2536.bb2570_crit_edge:                          ; preds = %bb2536
  br label %bb2570

bb2553:                                           ; preds = %bb2536
  %i2554 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb2555

bb2555:                                           ; preds = %bb2555.bb2555_crit_edge, %bb2553
  %i2556 = phi i32 [ %i2554, %bb2553 ], [ %i2564, %bb2555.bb2555_crit_edge ]
  %i2557 = phi i32 [ %i2552, %bb2553 ], [ %i2566, %bb2555.bb2555_crit_edge ]
  %i2558 = lshr i32 %i2557, 24
  %i2559 = trunc i32 %i2558 to i8
  %i2560 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2561 = sext i32 %i2556 to i64
  %i2562 = getelementptr inbounds i8, ptr %i2560, i64 %i2561
  store i8 %i2559, ptr %i2562, align 1, !tbaa !21
  %i2563 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2564 = add nsw i32 %i2563, 1
  store i32 %i2564, ptr %i2071, align 4, !tbaa !137
  %i2565 = load i32, ptr %i126, align 8, !tbaa !194
  %i2566 = shl i32 %i2565, 8
  store i32 %i2566, ptr %i126, align 8, !tbaa !194
  %i2567 = load i32, ptr %i123, align 4, !tbaa !193
  %i2568 = add nsw i32 %i2567, -8
  store i32 %i2568, ptr %i123, align 4, !tbaa !193
  %i2569 = icmp sgt i32 %i2567, 15
  br i1 %i2569, label %bb2555.bb2555_crit_edge, label %bb2570.loopexit, !llvm.loop !195

bb2555.bb2555_crit_edge:                          ; preds = %bb2555
  br label %bb2555

bb2570.loopexit:                                  ; preds = %bb2555
  br label %bb2570

bb2570:                                           ; preds = %bb2536.bb2570_crit_edge, %bb2570.loopexit
  %i2571 = phi i32 [ %i2552, %bb2536.bb2570_crit_edge ], [ %i2566, %bb2570.loopexit ]
  %i2572 = phi i32 [ %i2550, %bb2536.bb2570_crit_edge ], [ %i2568, %bb2570.loopexit ]
  %i2573 = add i32 %i2572, %i2547
  %i2574 = sub i32 32, %i2573
  %i2575 = shl i32 %i2549, %i2574
  %i2576 = or i32 %i2575, %i2571
  store i32 %i2576, ptr %i126, align 8, !tbaa !194
  store i32 %i2573, ptr %i123, align 4, !tbaa !193
  %i2577 = getelementptr i16, ptr %i2542, i64 1
  %i2578 = load i16, ptr %i2577, align 2, !tbaa !22
  %i2579 = zext i16 %i2578 to i64
  %i2580 = getelementptr inbounds i8, ptr %i2539, i64 %i2579
  %i2581 = load i8, ptr %i2580, align 1, !tbaa !21
  %i2582 = zext i8 %i2581 to i32
  %i2583 = getelementptr inbounds i32, ptr %i2540, i64 %i2579
  %i2584 = load i32, ptr %i2583, align 4, !tbaa !19
  %i2585 = icmp sgt i32 %i2573, 7
  br i1 %i2585, label %bb2586, label %bb2570.bb2603_crit_edge

bb2570.bb2603_crit_edge:                          ; preds = %bb2570
  br label %bb2603

bb2586:                                           ; preds = %bb2570
  %i2587 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb2588

bb2588:                                           ; preds = %bb2588.bb2588_crit_edge, %bb2586
  %i2589 = phi i32 [ %i2587, %bb2586 ], [ %i2597, %bb2588.bb2588_crit_edge ]
  %i2590 = phi i32 [ %i2576, %bb2586 ], [ %i2599, %bb2588.bb2588_crit_edge ]
  %i2591 = lshr i32 %i2590, 24
  %i2592 = trunc i32 %i2591 to i8
  %i2593 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2594 = sext i32 %i2589 to i64
  %i2595 = getelementptr inbounds i8, ptr %i2593, i64 %i2594
  store i8 %i2592, ptr %i2595, align 1, !tbaa !21
  %i2596 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2597 = add nsw i32 %i2596, 1
  store i32 %i2597, ptr %i2071, align 4, !tbaa !137
  %i2598 = load i32, ptr %i126, align 8, !tbaa !194
  %i2599 = shl i32 %i2598, 8
  store i32 %i2599, ptr %i126, align 8, !tbaa !194
  %i2600 = load i32, ptr %i123, align 4, !tbaa !193
  %i2601 = add nsw i32 %i2600, -8
  store i32 %i2601, ptr %i123, align 4, !tbaa !193
  %i2602 = icmp sgt i32 %i2600, 15
  br i1 %i2602, label %bb2588.bb2588_crit_edge, label %bb2603.loopexit, !llvm.loop !195

bb2588.bb2588_crit_edge:                          ; preds = %bb2588
  br label %bb2588

bb2603.loopexit:                                  ; preds = %bb2588
  br label %bb2603

bb2603:                                           ; preds = %bb2570.bb2603_crit_edge, %bb2603.loopexit
  %i2604 = phi i32 [ %i2576, %bb2570.bb2603_crit_edge ], [ %i2599, %bb2603.loopexit ]
  %i2605 = phi i32 [ %i2573, %bb2570.bb2603_crit_edge ], [ %i2601, %bb2603.loopexit ]
  %i2606 = add i32 %i2605, %i2582
  %i2607 = sub i32 32, %i2606
  %i2608 = shl i32 %i2584, %i2607
  %i2609 = or i32 %i2608, %i2604
  store i32 %i2609, ptr %i126, align 8, !tbaa !194
  store i32 %i2606, ptr %i123, align 4, !tbaa !193
  %i2610 = getelementptr i16, ptr %i2542, i64 2
  %i2611 = load i16, ptr %i2610, align 2, !tbaa !22
  %i2612 = zext i16 %i2611 to i64
  %i2613 = getelementptr inbounds i8, ptr %i2539, i64 %i2612
  %i2614 = load i8, ptr %i2613, align 1, !tbaa !21
  %i2615 = zext i8 %i2614 to i32
  %i2616 = getelementptr inbounds i32, ptr %i2540, i64 %i2612
  %i2617 = load i32, ptr %i2616, align 4, !tbaa !19
  %i2618 = icmp sgt i32 %i2606, 7
  br i1 %i2618, label %bb2619, label %bb2603.bb2636_crit_edge

bb2603.bb2636_crit_edge:                          ; preds = %bb2603
  br label %bb2636

bb2619:                                           ; preds = %bb2603
  %i2620 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb2621

bb2621:                                           ; preds = %bb2621.bb2621_crit_edge, %bb2619
  %i2622 = phi i32 [ %i2620, %bb2619 ], [ %i2630, %bb2621.bb2621_crit_edge ]
  %i2623 = phi i32 [ %i2609, %bb2619 ], [ %i2632, %bb2621.bb2621_crit_edge ]
  %i2624 = lshr i32 %i2623, 24
  %i2625 = trunc i32 %i2624 to i8
  %i2626 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2627 = sext i32 %i2622 to i64
  %i2628 = getelementptr inbounds i8, ptr %i2626, i64 %i2627
  store i8 %i2625, ptr %i2628, align 1, !tbaa !21
  %i2629 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2630 = add nsw i32 %i2629, 1
  store i32 %i2630, ptr %i2071, align 4, !tbaa !137
  %i2631 = load i32, ptr %i126, align 8, !tbaa !194
  %i2632 = shl i32 %i2631, 8
  store i32 %i2632, ptr %i126, align 8, !tbaa !194
  %i2633 = load i32, ptr %i123, align 4, !tbaa !193
  %i2634 = add nsw i32 %i2633, -8
  store i32 %i2634, ptr %i123, align 4, !tbaa !193
  %i2635 = icmp sgt i32 %i2633, 15
  br i1 %i2635, label %bb2621.bb2621_crit_edge, label %bb2636.loopexit, !llvm.loop !195

bb2621.bb2621_crit_edge:                          ; preds = %bb2621
  br label %bb2621

bb2636.loopexit:                                  ; preds = %bb2621
  br label %bb2636

bb2636:                                           ; preds = %bb2603.bb2636_crit_edge, %bb2636.loopexit
  %i2637 = phi i32 [ %i2609, %bb2603.bb2636_crit_edge ], [ %i2632, %bb2636.loopexit ]
  %i2638 = phi i32 [ %i2606, %bb2603.bb2636_crit_edge ], [ %i2634, %bb2636.loopexit ]
  %i2639 = add i32 %i2638, %i2615
  %i2640 = sub i32 32, %i2639
  %i2641 = shl i32 %i2617, %i2640
  %i2642 = or i32 %i2641, %i2637
  store i32 %i2642, ptr %i126, align 8, !tbaa !194
  store i32 %i2639, ptr %i123, align 4, !tbaa !193
  %i2643 = getelementptr i16, ptr %i2542, i64 3
  %i2644 = load i16, ptr %i2643, align 2, !tbaa !22
  %i2645 = zext i16 %i2644 to i64
  %i2646 = getelementptr inbounds i8, ptr %i2539, i64 %i2645
  %i2647 = load i8, ptr %i2646, align 1, !tbaa !21
  %i2648 = zext i8 %i2647 to i32
  %i2649 = getelementptr inbounds i32, ptr %i2540, i64 %i2645
  %i2650 = load i32, ptr %i2649, align 4, !tbaa !19
  %i2651 = icmp sgt i32 %i2639, 7
  br i1 %i2651, label %bb2652, label %bb2636.bb2669_crit_edge

bb2636.bb2669_crit_edge:                          ; preds = %bb2636
  br label %bb2669

bb2652:                                           ; preds = %bb2636
  %i2653 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb2654

bb2654:                                           ; preds = %bb2654.bb2654_crit_edge, %bb2652
  %i2655 = phi i32 [ %i2653, %bb2652 ], [ %i2663, %bb2654.bb2654_crit_edge ]
  %i2656 = phi i32 [ %i2642, %bb2652 ], [ %i2665, %bb2654.bb2654_crit_edge ]
  %i2657 = lshr i32 %i2656, 24
  %i2658 = trunc i32 %i2657 to i8
  %i2659 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2660 = sext i32 %i2655 to i64
  %i2661 = getelementptr inbounds i8, ptr %i2659, i64 %i2660
  store i8 %i2658, ptr %i2661, align 1, !tbaa !21
  %i2662 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2663 = add nsw i32 %i2662, 1
  store i32 %i2663, ptr %i2071, align 4, !tbaa !137
  %i2664 = load i32, ptr %i126, align 8, !tbaa !194
  %i2665 = shl i32 %i2664, 8
  store i32 %i2665, ptr %i126, align 8, !tbaa !194
  %i2666 = load i32, ptr %i123, align 4, !tbaa !193
  %i2667 = add nsw i32 %i2666, -8
  store i32 %i2667, ptr %i123, align 4, !tbaa !193
  %i2668 = icmp sgt i32 %i2666, 15
  br i1 %i2668, label %bb2654.bb2654_crit_edge, label %bb2669.loopexit, !llvm.loop !195

bb2654.bb2654_crit_edge:                          ; preds = %bb2654
  br label %bb2654

bb2669.loopexit:                                  ; preds = %bb2654
  br label %bb2669

bb2669:                                           ; preds = %bb2636.bb2669_crit_edge, %bb2669.loopexit
  %i2670 = phi i32 [ %i2642, %bb2636.bb2669_crit_edge ], [ %i2665, %bb2669.loopexit ]
  %i2671 = phi i32 [ %i2639, %bb2636.bb2669_crit_edge ], [ %i2667, %bb2669.loopexit ]
  %i2672 = add i32 %i2671, %i2648
  %i2673 = sub i32 32, %i2672
  %i2674 = shl i32 %i2650, %i2673
  %i2675 = or i32 %i2674, %i2670
  store i32 %i2675, ptr %i126, align 8, !tbaa !194
  store i32 %i2672, ptr %i123, align 4, !tbaa !193
  %i2676 = getelementptr i16, ptr %i2542, i64 4
  %i2677 = load i16, ptr %i2676, align 2, !tbaa !22
  %i2678 = zext i16 %i2677 to i64
  %i2679 = getelementptr inbounds i8, ptr %i2539, i64 %i2678
  %i2680 = load i8, ptr %i2679, align 1, !tbaa !21
  %i2681 = zext i8 %i2680 to i32
  %i2682 = getelementptr inbounds i32, ptr %i2540, i64 %i2678
  %i2683 = load i32, ptr %i2682, align 4, !tbaa !19
  %i2684 = icmp sgt i32 %i2672, 7
  br i1 %i2684, label %bb2685, label %bb2669.bb2702_crit_edge

bb2669.bb2702_crit_edge:                          ; preds = %bb2669
  br label %bb2702

bb2685:                                           ; preds = %bb2669
  %i2686 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb2687

bb2687:                                           ; preds = %bb2687.bb2687_crit_edge, %bb2685
  %i2688 = phi i32 [ %i2686, %bb2685 ], [ %i2696, %bb2687.bb2687_crit_edge ]
  %i2689 = phi i32 [ %i2675, %bb2685 ], [ %i2698, %bb2687.bb2687_crit_edge ]
  %i2690 = lshr i32 %i2689, 24
  %i2691 = trunc i32 %i2690 to i8
  %i2692 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2693 = sext i32 %i2688 to i64
  %i2694 = getelementptr inbounds i8, ptr %i2692, i64 %i2693
  store i8 %i2691, ptr %i2694, align 1, !tbaa !21
  %i2695 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2696 = add nsw i32 %i2695, 1
  store i32 %i2696, ptr %i2071, align 4, !tbaa !137
  %i2697 = load i32, ptr %i126, align 8, !tbaa !194
  %i2698 = shl i32 %i2697, 8
  store i32 %i2698, ptr %i126, align 8, !tbaa !194
  %i2699 = load i32, ptr %i123, align 4, !tbaa !193
  %i2700 = add nsw i32 %i2699, -8
  store i32 %i2700, ptr %i123, align 4, !tbaa !193
  %i2701 = icmp sgt i32 %i2699, 15
  br i1 %i2701, label %bb2687.bb2687_crit_edge, label %bb2702.loopexit, !llvm.loop !195

bb2687.bb2687_crit_edge:                          ; preds = %bb2687
  br label %bb2687

bb2702.loopexit:                                  ; preds = %bb2687
  br label %bb2702

bb2702:                                           ; preds = %bb2669.bb2702_crit_edge, %bb2702.loopexit
  %i2703 = phi i32 [ %i2675, %bb2669.bb2702_crit_edge ], [ %i2698, %bb2702.loopexit ]
  %i2704 = phi i32 [ %i2672, %bb2669.bb2702_crit_edge ], [ %i2700, %bb2702.loopexit ]
  %i2705 = add i32 %i2704, %i2681
  %i2706 = sub i32 32, %i2705
  %i2707 = shl i32 %i2683, %i2706
  %i2708 = or i32 %i2707, %i2703
  store i32 %i2708, ptr %i126, align 8, !tbaa !194
  store i32 %i2705, ptr %i123, align 4, !tbaa !193
  %i2709 = getelementptr i16, ptr %i2542, i64 5
  %i2710 = load i16, ptr %i2709, align 2, !tbaa !22
  %i2711 = zext i16 %i2710 to i64
  %i2712 = getelementptr inbounds i8, ptr %i2539, i64 %i2711
  %i2713 = load i8, ptr %i2712, align 1, !tbaa !21
  %i2714 = zext i8 %i2713 to i32
  %i2715 = getelementptr inbounds i32, ptr %i2540, i64 %i2711
  %i2716 = load i32, ptr %i2715, align 4, !tbaa !19
  %i2717 = icmp sgt i32 %i2705, 7
  br i1 %i2717, label %bb2718, label %bb2702.bb2735_crit_edge

bb2702.bb2735_crit_edge:                          ; preds = %bb2702
  br label %bb2735

bb2718:                                           ; preds = %bb2702
  %i2719 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb2720

bb2720:                                           ; preds = %bb2720.bb2720_crit_edge, %bb2718
  %i2721 = phi i32 [ %i2719, %bb2718 ], [ %i2729, %bb2720.bb2720_crit_edge ]
  %i2722 = phi i32 [ %i2708, %bb2718 ], [ %i2731, %bb2720.bb2720_crit_edge ]
  %i2723 = lshr i32 %i2722, 24
  %i2724 = trunc i32 %i2723 to i8
  %i2725 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2726 = sext i32 %i2721 to i64
  %i2727 = getelementptr inbounds i8, ptr %i2725, i64 %i2726
  store i8 %i2724, ptr %i2727, align 1, !tbaa !21
  %i2728 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2729 = add nsw i32 %i2728, 1
  store i32 %i2729, ptr %i2071, align 4, !tbaa !137
  %i2730 = load i32, ptr %i126, align 8, !tbaa !194
  %i2731 = shl i32 %i2730, 8
  store i32 %i2731, ptr %i126, align 8, !tbaa !194
  %i2732 = load i32, ptr %i123, align 4, !tbaa !193
  %i2733 = add nsw i32 %i2732, -8
  store i32 %i2733, ptr %i123, align 4, !tbaa !193
  %i2734 = icmp sgt i32 %i2732, 15
  br i1 %i2734, label %bb2720.bb2720_crit_edge, label %bb2735.loopexit, !llvm.loop !195

bb2720.bb2720_crit_edge:                          ; preds = %bb2720
  br label %bb2720

bb2735.loopexit:                                  ; preds = %bb2720
  br label %bb2735

bb2735:                                           ; preds = %bb2702.bb2735_crit_edge, %bb2735.loopexit
  %i2736 = phi i32 [ %i2708, %bb2702.bb2735_crit_edge ], [ %i2731, %bb2735.loopexit ]
  %i2737 = phi i32 [ %i2705, %bb2702.bb2735_crit_edge ], [ %i2733, %bb2735.loopexit ]
  %i2738 = add i32 %i2737, %i2714
  %i2739 = sub i32 32, %i2738
  %i2740 = shl i32 %i2716, %i2739
  %i2741 = or i32 %i2740, %i2736
  store i32 %i2741, ptr %i126, align 8, !tbaa !194
  store i32 %i2738, ptr %i123, align 4, !tbaa !193
  %i2742 = getelementptr i16, ptr %i2542, i64 6
  %i2743 = load i16, ptr %i2742, align 2, !tbaa !22
  %i2744 = zext i16 %i2743 to i64
  %i2745 = getelementptr inbounds i8, ptr %i2539, i64 %i2744
  %i2746 = load i8, ptr %i2745, align 1, !tbaa !21
  %i2747 = zext i8 %i2746 to i32
  %i2748 = getelementptr inbounds i32, ptr %i2540, i64 %i2744
  %i2749 = load i32, ptr %i2748, align 4, !tbaa !19
  %i2750 = icmp sgt i32 %i2738, 7
  br i1 %i2750, label %bb2751, label %bb2735.bb2768_crit_edge

bb2735.bb2768_crit_edge:                          ; preds = %bb2735
  br label %bb2768

bb2751:                                           ; preds = %bb2735
  %i2752 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb2753

bb2753:                                           ; preds = %bb2753.bb2753_crit_edge, %bb2751
  %i2754 = phi i32 [ %i2752, %bb2751 ], [ %i2762, %bb2753.bb2753_crit_edge ]
  %i2755 = phi i32 [ %i2741, %bb2751 ], [ %i2764, %bb2753.bb2753_crit_edge ]
  %i2756 = lshr i32 %i2755, 24
  %i2757 = trunc i32 %i2756 to i8
  %i2758 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2759 = sext i32 %i2754 to i64
  %i2760 = getelementptr inbounds i8, ptr %i2758, i64 %i2759
  store i8 %i2757, ptr %i2760, align 1, !tbaa !21
  %i2761 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2762 = add nsw i32 %i2761, 1
  store i32 %i2762, ptr %i2071, align 4, !tbaa !137
  %i2763 = load i32, ptr %i126, align 8, !tbaa !194
  %i2764 = shl i32 %i2763, 8
  store i32 %i2764, ptr %i126, align 8, !tbaa !194
  %i2765 = load i32, ptr %i123, align 4, !tbaa !193
  %i2766 = add nsw i32 %i2765, -8
  store i32 %i2766, ptr %i123, align 4, !tbaa !193
  %i2767 = icmp sgt i32 %i2765, 15
  br i1 %i2767, label %bb2753.bb2753_crit_edge, label %bb2768.loopexit, !llvm.loop !195

bb2753.bb2753_crit_edge:                          ; preds = %bb2753
  br label %bb2753

bb2768.loopexit:                                  ; preds = %bb2753
  br label %bb2768

bb2768:                                           ; preds = %bb2735.bb2768_crit_edge, %bb2768.loopexit
  %i2769 = phi i32 [ %i2741, %bb2735.bb2768_crit_edge ], [ %i2764, %bb2768.loopexit ]
  %i2770 = phi i32 [ %i2738, %bb2735.bb2768_crit_edge ], [ %i2766, %bb2768.loopexit ]
  %i2771 = add i32 %i2770, %i2747
  %i2772 = sub i32 32, %i2771
  %i2773 = shl i32 %i2749, %i2772
  %i2774 = or i32 %i2773, %i2769
  store i32 %i2774, ptr %i126, align 8, !tbaa !194
  store i32 %i2771, ptr %i123, align 4, !tbaa !193
  %i2775 = getelementptr i16, ptr %i2542, i64 7
  %i2776 = load i16, ptr %i2775, align 2, !tbaa !22
  %i2777 = zext i16 %i2776 to i64
  %i2778 = getelementptr inbounds i8, ptr %i2539, i64 %i2777
  %i2779 = load i8, ptr %i2778, align 1, !tbaa !21
  %i2780 = zext i8 %i2779 to i32
  %i2781 = getelementptr inbounds i32, ptr %i2540, i64 %i2777
  %i2782 = load i32, ptr %i2781, align 4, !tbaa !19
  %i2783 = icmp sgt i32 %i2771, 7
  br i1 %i2783, label %bb2784, label %bb2768.bb2801_crit_edge

bb2768.bb2801_crit_edge:                          ; preds = %bb2768
  br label %bb2801

bb2784:                                           ; preds = %bb2768
  %i2785 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb2786

bb2786:                                           ; preds = %bb2786.bb2786_crit_edge, %bb2784
  %i2787 = phi i32 [ %i2785, %bb2784 ], [ %i2795, %bb2786.bb2786_crit_edge ]
  %i2788 = phi i32 [ %i2774, %bb2784 ], [ %i2797, %bb2786.bb2786_crit_edge ]
  %i2789 = lshr i32 %i2788, 24
  %i2790 = trunc i32 %i2789 to i8
  %i2791 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2792 = sext i32 %i2787 to i64
  %i2793 = getelementptr inbounds i8, ptr %i2791, i64 %i2792
  store i8 %i2790, ptr %i2793, align 1, !tbaa !21
  %i2794 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2795 = add nsw i32 %i2794, 1
  store i32 %i2795, ptr %i2071, align 4, !tbaa !137
  %i2796 = load i32, ptr %i126, align 8, !tbaa !194
  %i2797 = shl i32 %i2796, 8
  store i32 %i2797, ptr %i126, align 8, !tbaa !194
  %i2798 = load i32, ptr %i123, align 4, !tbaa !193
  %i2799 = add nsw i32 %i2798, -8
  store i32 %i2799, ptr %i123, align 4, !tbaa !193
  %i2800 = icmp sgt i32 %i2798, 15
  br i1 %i2800, label %bb2786.bb2786_crit_edge, label %bb2801.loopexit, !llvm.loop !195

bb2786.bb2786_crit_edge:                          ; preds = %bb2786
  br label %bb2786

bb2801.loopexit:                                  ; preds = %bb2786
  br label %bb2801

bb2801:                                           ; preds = %bb2768.bb2801_crit_edge, %bb2801.loopexit
  %i2802 = phi i32 [ %i2774, %bb2768.bb2801_crit_edge ], [ %i2797, %bb2801.loopexit ]
  %i2803 = phi i32 [ %i2771, %bb2768.bb2801_crit_edge ], [ %i2799, %bb2801.loopexit ]
  %i2804 = add i32 %i2803, %i2780
  %i2805 = sub i32 32, %i2804
  %i2806 = shl i32 %i2782, %i2805
  %i2807 = or i32 %i2806, %i2802
  store i32 %i2807, ptr %i126, align 8, !tbaa !194
  store i32 %i2804, ptr %i123, align 4, !tbaa !193
  %i2808 = getelementptr i16, ptr %i2542, i64 8
  %i2809 = load i16, ptr %i2808, align 2, !tbaa !22
  %i2810 = zext i16 %i2809 to i64
  %i2811 = getelementptr inbounds i8, ptr %i2539, i64 %i2810
  %i2812 = load i8, ptr %i2811, align 1, !tbaa !21
  %i2813 = zext i8 %i2812 to i32
  %i2814 = getelementptr inbounds i32, ptr %i2540, i64 %i2810
  %i2815 = load i32, ptr %i2814, align 4, !tbaa !19
  %i2816 = icmp sgt i32 %i2804, 7
  br i1 %i2816, label %bb2817, label %bb2801.bb2834_crit_edge

bb2801.bb2834_crit_edge:                          ; preds = %bb2801
  br label %bb2834

bb2817:                                           ; preds = %bb2801
  %i2818 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb2819

bb2819:                                           ; preds = %bb2819.bb2819_crit_edge, %bb2817
  %i2820 = phi i32 [ %i2818, %bb2817 ], [ %i2828, %bb2819.bb2819_crit_edge ]
  %i2821 = phi i32 [ %i2807, %bb2817 ], [ %i2830, %bb2819.bb2819_crit_edge ]
  %i2822 = lshr i32 %i2821, 24
  %i2823 = trunc i32 %i2822 to i8
  %i2824 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2825 = sext i32 %i2820 to i64
  %i2826 = getelementptr inbounds i8, ptr %i2824, i64 %i2825
  store i8 %i2823, ptr %i2826, align 1, !tbaa !21
  %i2827 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2828 = add nsw i32 %i2827, 1
  store i32 %i2828, ptr %i2071, align 4, !tbaa !137
  %i2829 = load i32, ptr %i126, align 8, !tbaa !194
  %i2830 = shl i32 %i2829, 8
  store i32 %i2830, ptr %i126, align 8, !tbaa !194
  %i2831 = load i32, ptr %i123, align 4, !tbaa !193
  %i2832 = add nsw i32 %i2831, -8
  store i32 %i2832, ptr %i123, align 4, !tbaa !193
  %i2833 = icmp sgt i32 %i2831, 15
  br i1 %i2833, label %bb2819.bb2819_crit_edge, label %bb2834.loopexit, !llvm.loop !195

bb2819.bb2819_crit_edge:                          ; preds = %bb2819
  br label %bb2819

bb2834.loopexit:                                  ; preds = %bb2819
  br label %bb2834

bb2834:                                           ; preds = %bb2801.bb2834_crit_edge, %bb2834.loopexit
  %i2835 = phi i32 [ %i2807, %bb2801.bb2834_crit_edge ], [ %i2830, %bb2834.loopexit ]
  %i2836 = phi i32 [ %i2804, %bb2801.bb2834_crit_edge ], [ %i2832, %bb2834.loopexit ]
  %i2837 = add i32 %i2836, %i2813
  %i2838 = sub i32 32, %i2837
  %i2839 = shl i32 %i2815, %i2838
  %i2840 = or i32 %i2839, %i2835
  store i32 %i2840, ptr %i126, align 8, !tbaa !194
  store i32 %i2837, ptr %i123, align 4, !tbaa !193
  %i2841 = getelementptr i16, ptr %i2542, i64 9
  %i2842 = load i16, ptr %i2841, align 2, !tbaa !22
  %i2843 = zext i16 %i2842 to i64
  %i2844 = getelementptr inbounds i8, ptr %i2539, i64 %i2843
  %i2845 = load i8, ptr %i2844, align 1, !tbaa !21
  %i2846 = zext i8 %i2845 to i32
  %i2847 = getelementptr inbounds i32, ptr %i2540, i64 %i2843
  %i2848 = load i32, ptr %i2847, align 4, !tbaa !19
  %i2849 = icmp sgt i32 %i2837, 7
  br i1 %i2849, label %bb2850, label %bb2834.bb2867_crit_edge

bb2834.bb2867_crit_edge:                          ; preds = %bb2834
  br label %bb2867

bb2850:                                           ; preds = %bb2834
  %i2851 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb2852

bb2852:                                           ; preds = %bb2852.bb2852_crit_edge, %bb2850
  %i2853 = phi i32 [ %i2851, %bb2850 ], [ %i2861, %bb2852.bb2852_crit_edge ]
  %i2854 = phi i32 [ %i2840, %bb2850 ], [ %i2863, %bb2852.bb2852_crit_edge ]
  %i2855 = lshr i32 %i2854, 24
  %i2856 = trunc i32 %i2855 to i8
  %i2857 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2858 = sext i32 %i2853 to i64
  %i2859 = getelementptr inbounds i8, ptr %i2857, i64 %i2858
  store i8 %i2856, ptr %i2859, align 1, !tbaa !21
  %i2860 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2861 = add nsw i32 %i2860, 1
  store i32 %i2861, ptr %i2071, align 4, !tbaa !137
  %i2862 = load i32, ptr %i126, align 8, !tbaa !194
  %i2863 = shl i32 %i2862, 8
  store i32 %i2863, ptr %i126, align 8, !tbaa !194
  %i2864 = load i32, ptr %i123, align 4, !tbaa !193
  %i2865 = add nsw i32 %i2864, -8
  store i32 %i2865, ptr %i123, align 4, !tbaa !193
  %i2866 = icmp sgt i32 %i2864, 15
  br i1 %i2866, label %bb2852.bb2852_crit_edge, label %bb2867.loopexit, !llvm.loop !195

bb2852.bb2852_crit_edge:                          ; preds = %bb2852
  br label %bb2852

bb2867.loopexit:                                  ; preds = %bb2852
  br label %bb2867

bb2867:                                           ; preds = %bb2834.bb2867_crit_edge, %bb2867.loopexit
  %i2868 = phi i32 [ %i2840, %bb2834.bb2867_crit_edge ], [ %i2863, %bb2867.loopexit ]
  %i2869 = phi i32 [ %i2837, %bb2834.bb2867_crit_edge ], [ %i2865, %bb2867.loopexit ]
  %i2870 = add i32 %i2869, %i2846
  %i2871 = sub i32 32, %i2870
  %i2872 = shl i32 %i2848, %i2871
  %i2873 = or i32 %i2872, %i2868
  store i32 %i2873, ptr %i126, align 8, !tbaa !194
  store i32 %i2870, ptr %i123, align 4, !tbaa !193
  %i2874 = getelementptr i16, ptr %i2542, i64 10
  %i2875 = load i16, ptr %i2874, align 2, !tbaa !22
  %i2876 = zext i16 %i2875 to i64
  %i2877 = getelementptr inbounds i8, ptr %i2539, i64 %i2876
  %i2878 = load i8, ptr %i2877, align 1, !tbaa !21
  %i2879 = zext i8 %i2878 to i32
  %i2880 = getelementptr inbounds i32, ptr %i2540, i64 %i2876
  %i2881 = load i32, ptr %i2880, align 4, !tbaa !19
  %i2882 = icmp sgt i32 %i2870, 7
  br i1 %i2882, label %bb2883, label %bb2867.bb2900_crit_edge

bb2867.bb2900_crit_edge:                          ; preds = %bb2867
  br label %bb2900

bb2883:                                           ; preds = %bb2867
  %i2884 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb2885

bb2885:                                           ; preds = %bb2885.bb2885_crit_edge, %bb2883
  %i2886 = phi i32 [ %i2884, %bb2883 ], [ %i2894, %bb2885.bb2885_crit_edge ]
  %i2887 = phi i32 [ %i2873, %bb2883 ], [ %i2896, %bb2885.bb2885_crit_edge ]
  %i2888 = lshr i32 %i2887, 24
  %i2889 = trunc i32 %i2888 to i8
  %i2890 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2891 = sext i32 %i2886 to i64
  %i2892 = getelementptr inbounds i8, ptr %i2890, i64 %i2891
  store i8 %i2889, ptr %i2892, align 1, !tbaa !21
  %i2893 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2894 = add nsw i32 %i2893, 1
  store i32 %i2894, ptr %i2071, align 4, !tbaa !137
  %i2895 = load i32, ptr %i126, align 8, !tbaa !194
  %i2896 = shl i32 %i2895, 8
  store i32 %i2896, ptr %i126, align 8, !tbaa !194
  %i2897 = load i32, ptr %i123, align 4, !tbaa !193
  %i2898 = add nsw i32 %i2897, -8
  store i32 %i2898, ptr %i123, align 4, !tbaa !193
  %i2899 = icmp sgt i32 %i2897, 15
  br i1 %i2899, label %bb2885.bb2885_crit_edge, label %bb2900.loopexit, !llvm.loop !195

bb2885.bb2885_crit_edge:                          ; preds = %bb2885
  br label %bb2885

bb2900.loopexit:                                  ; preds = %bb2885
  br label %bb2900

bb2900:                                           ; preds = %bb2867.bb2900_crit_edge, %bb2900.loopexit
  %i2901 = phi i32 [ %i2873, %bb2867.bb2900_crit_edge ], [ %i2896, %bb2900.loopexit ]
  %i2902 = phi i32 [ %i2870, %bb2867.bb2900_crit_edge ], [ %i2898, %bb2900.loopexit ]
  %i2903 = add i32 %i2902, %i2879
  %i2904 = sub i32 32, %i2903
  %i2905 = shl i32 %i2881, %i2904
  %i2906 = or i32 %i2905, %i2901
  store i32 %i2906, ptr %i126, align 8, !tbaa !194
  store i32 %i2903, ptr %i123, align 4, !tbaa !193
  %i2907 = getelementptr i16, ptr %i2542, i64 11
  %i2908 = load i16, ptr %i2907, align 2, !tbaa !22
  %i2909 = zext i16 %i2908 to i64
  %i2910 = getelementptr inbounds i8, ptr %i2539, i64 %i2909
  %i2911 = load i8, ptr %i2910, align 1, !tbaa !21
  %i2912 = zext i8 %i2911 to i32
  %i2913 = getelementptr inbounds i32, ptr %i2540, i64 %i2909
  %i2914 = load i32, ptr %i2913, align 4, !tbaa !19
  %i2915 = icmp sgt i32 %i2903, 7
  br i1 %i2915, label %bb2916, label %bb2900.bb2933_crit_edge

bb2900.bb2933_crit_edge:                          ; preds = %bb2900
  br label %bb2933

bb2916:                                           ; preds = %bb2900
  %i2917 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb2918

bb2918:                                           ; preds = %bb2918.bb2918_crit_edge, %bb2916
  %i2919 = phi i32 [ %i2917, %bb2916 ], [ %i2927, %bb2918.bb2918_crit_edge ]
  %i2920 = phi i32 [ %i2906, %bb2916 ], [ %i2929, %bb2918.bb2918_crit_edge ]
  %i2921 = lshr i32 %i2920, 24
  %i2922 = trunc i32 %i2921 to i8
  %i2923 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2924 = sext i32 %i2919 to i64
  %i2925 = getelementptr inbounds i8, ptr %i2923, i64 %i2924
  store i8 %i2922, ptr %i2925, align 1, !tbaa !21
  %i2926 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2927 = add nsw i32 %i2926, 1
  store i32 %i2927, ptr %i2071, align 4, !tbaa !137
  %i2928 = load i32, ptr %i126, align 8, !tbaa !194
  %i2929 = shl i32 %i2928, 8
  store i32 %i2929, ptr %i126, align 8, !tbaa !194
  %i2930 = load i32, ptr %i123, align 4, !tbaa !193
  %i2931 = add nsw i32 %i2930, -8
  store i32 %i2931, ptr %i123, align 4, !tbaa !193
  %i2932 = icmp sgt i32 %i2930, 15
  br i1 %i2932, label %bb2918.bb2918_crit_edge, label %bb2933.loopexit, !llvm.loop !195

bb2918.bb2918_crit_edge:                          ; preds = %bb2918
  br label %bb2918

bb2933.loopexit:                                  ; preds = %bb2918
  br label %bb2933

bb2933:                                           ; preds = %bb2900.bb2933_crit_edge, %bb2933.loopexit
  %i2934 = phi i32 [ %i2906, %bb2900.bb2933_crit_edge ], [ %i2929, %bb2933.loopexit ]
  %i2935 = phi i32 [ %i2903, %bb2900.bb2933_crit_edge ], [ %i2931, %bb2933.loopexit ]
  %i2936 = add i32 %i2935, %i2912
  %i2937 = sub i32 32, %i2936
  %i2938 = shl i32 %i2914, %i2937
  %i2939 = or i32 %i2938, %i2934
  store i32 %i2939, ptr %i126, align 8, !tbaa !194
  store i32 %i2936, ptr %i123, align 4, !tbaa !193
  %i2940 = getelementptr i16, ptr %i2542, i64 12
  %i2941 = load i16, ptr %i2940, align 2, !tbaa !22
  %i2942 = zext i16 %i2941 to i64
  %i2943 = getelementptr inbounds i8, ptr %i2539, i64 %i2942
  %i2944 = load i8, ptr %i2943, align 1, !tbaa !21
  %i2945 = zext i8 %i2944 to i32
  %i2946 = getelementptr inbounds i32, ptr %i2540, i64 %i2942
  %i2947 = load i32, ptr %i2946, align 4, !tbaa !19
  %i2948 = icmp sgt i32 %i2936, 7
  br i1 %i2948, label %bb2949, label %bb2933.bb2966_crit_edge

bb2933.bb2966_crit_edge:                          ; preds = %bb2933
  br label %bb2966

bb2949:                                           ; preds = %bb2933
  %i2950 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb2951

bb2951:                                           ; preds = %bb2951.bb2951_crit_edge, %bb2949
  %i2952 = phi i32 [ %i2950, %bb2949 ], [ %i2960, %bb2951.bb2951_crit_edge ]
  %i2953 = phi i32 [ %i2939, %bb2949 ], [ %i2962, %bb2951.bb2951_crit_edge ]
  %i2954 = lshr i32 %i2953, 24
  %i2955 = trunc i32 %i2954 to i8
  %i2956 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2957 = sext i32 %i2952 to i64
  %i2958 = getelementptr inbounds i8, ptr %i2956, i64 %i2957
  store i8 %i2955, ptr %i2958, align 1, !tbaa !21
  %i2959 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2960 = add nsw i32 %i2959, 1
  store i32 %i2960, ptr %i2071, align 4, !tbaa !137
  %i2961 = load i32, ptr %i126, align 8, !tbaa !194
  %i2962 = shl i32 %i2961, 8
  store i32 %i2962, ptr %i126, align 8, !tbaa !194
  %i2963 = load i32, ptr %i123, align 4, !tbaa !193
  %i2964 = add nsw i32 %i2963, -8
  store i32 %i2964, ptr %i123, align 4, !tbaa !193
  %i2965 = icmp sgt i32 %i2963, 15
  br i1 %i2965, label %bb2951.bb2951_crit_edge, label %bb2966.loopexit, !llvm.loop !195

bb2951.bb2951_crit_edge:                          ; preds = %bb2951
  br label %bb2951

bb2966.loopexit:                                  ; preds = %bb2951
  br label %bb2966

bb2966:                                           ; preds = %bb2933.bb2966_crit_edge, %bb2966.loopexit
  %i2967 = phi i32 [ %i2939, %bb2933.bb2966_crit_edge ], [ %i2962, %bb2966.loopexit ]
  %i2968 = phi i32 [ %i2936, %bb2933.bb2966_crit_edge ], [ %i2964, %bb2966.loopexit ]
  %i2969 = add i32 %i2968, %i2945
  %i2970 = sub i32 32, %i2969
  %i2971 = shl i32 %i2947, %i2970
  %i2972 = or i32 %i2971, %i2967
  store i32 %i2972, ptr %i126, align 8, !tbaa !194
  store i32 %i2969, ptr %i123, align 4, !tbaa !193
  %i2973 = getelementptr i16, ptr %i2542, i64 13
  %i2974 = load i16, ptr %i2973, align 2, !tbaa !22
  %i2975 = zext i16 %i2974 to i64
  %i2976 = getelementptr inbounds i8, ptr %i2539, i64 %i2975
  %i2977 = load i8, ptr %i2976, align 1, !tbaa !21
  %i2978 = zext i8 %i2977 to i32
  %i2979 = getelementptr inbounds i32, ptr %i2540, i64 %i2975
  %i2980 = load i32, ptr %i2979, align 4, !tbaa !19
  %i2981 = icmp sgt i32 %i2969, 7
  br i1 %i2981, label %bb2982, label %bb2966.bb2999_crit_edge

bb2966.bb2999_crit_edge:                          ; preds = %bb2966
  br label %bb2999

bb2982:                                           ; preds = %bb2966
  %i2983 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb2984

bb2984:                                           ; preds = %bb2984.bb2984_crit_edge, %bb2982
  %i2985 = phi i32 [ %i2983, %bb2982 ], [ %i2993, %bb2984.bb2984_crit_edge ]
  %i2986 = phi i32 [ %i2972, %bb2982 ], [ %i2995, %bb2984.bb2984_crit_edge ]
  %i2987 = lshr i32 %i2986, 24
  %i2988 = trunc i32 %i2987 to i8
  %i2989 = load ptr, ptr %i37, align 8, !tbaa !129
  %i2990 = sext i32 %i2985 to i64
  %i2991 = getelementptr inbounds i8, ptr %i2989, i64 %i2990
  store i8 %i2988, ptr %i2991, align 1, !tbaa !21
  %i2992 = load i32, ptr %i2071, align 4, !tbaa !137
  %i2993 = add nsw i32 %i2992, 1
  store i32 %i2993, ptr %i2071, align 4, !tbaa !137
  %i2994 = load i32, ptr %i126, align 8, !tbaa !194
  %i2995 = shl i32 %i2994, 8
  store i32 %i2995, ptr %i126, align 8, !tbaa !194
  %i2996 = load i32, ptr %i123, align 4, !tbaa !193
  %i2997 = add nsw i32 %i2996, -8
  store i32 %i2997, ptr %i123, align 4, !tbaa !193
  %i2998 = icmp sgt i32 %i2996, 15
  br i1 %i2998, label %bb2984.bb2984_crit_edge, label %bb2999.loopexit, !llvm.loop !195

bb2984.bb2984_crit_edge:                          ; preds = %bb2984
  br label %bb2984

bb2999.loopexit:                                  ; preds = %bb2984
  br label %bb2999

bb2999:                                           ; preds = %bb2966.bb2999_crit_edge, %bb2999.loopexit
  %i3000 = phi i32 [ %i2972, %bb2966.bb2999_crit_edge ], [ %i2995, %bb2999.loopexit ]
  %i3001 = phi i32 [ %i2969, %bb2966.bb2999_crit_edge ], [ %i2997, %bb2999.loopexit ]
  %i3002 = add i32 %i3001, %i2978
  %i3003 = sub i32 32, %i3002
  %i3004 = shl i32 %i2980, %i3003
  %i3005 = or i32 %i3004, %i3000
  store i32 %i3005, ptr %i126, align 8, !tbaa !194
  store i32 %i3002, ptr %i123, align 4, !tbaa !193
  %i3006 = getelementptr i16, ptr %i2542, i64 14
  %i3007 = load i16, ptr %i3006, align 2, !tbaa !22
  %i3008 = zext i16 %i3007 to i64
  %i3009 = getelementptr inbounds i8, ptr %i2539, i64 %i3008
  %i3010 = load i8, ptr %i3009, align 1, !tbaa !21
  %i3011 = zext i8 %i3010 to i32
  %i3012 = getelementptr inbounds i32, ptr %i2540, i64 %i3008
  %i3013 = load i32, ptr %i3012, align 4, !tbaa !19
  %i3014 = icmp sgt i32 %i3002, 7
  br i1 %i3014, label %bb3015, label %bb2999.bb3032_crit_edge

bb2999.bb3032_crit_edge:                          ; preds = %bb2999
  br label %bb3032

bb3015:                                           ; preds = %bb2999
  %i3016 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3017

bb3017:                                           ; preds = %bb3017.bb3017_crit_edge, %bb3015
  %i3018 = phi i32 [ %i3016, %bb3015 ], [ %i3026, %bb3017.bb3017_crit_edge ]
  %i3019 = phi i32 [ %i3005, %bb3015 ], [ %i3028, %bb3017.bb3017_crit_edge ]
  %i3020 = lshr i32 %i3019, 24
  %i3021 = trunc i32 %i3020 to i8
  %i3022 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3023 = sext i32 %i3018 to i64
  %i3024 = getelementptr inbounds i8, ptr %i3022, i64 %i3023
  store i8 %i3021, ptr %i3024, align 1, !tbaa !21
  %i3025 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3026 = add nsw i32 %i3025, 1
  store i32 %i3026, ptr %i2071, align 4, !tbaa !137
  %i3027 = load i32, ptr %i126, align 8, !tbaa !194
  %i3028 = shl i32 %i3027, 8
  store i32 %i3028, ptr %i126, align 8, !tbaa !194
  %i3029 = load i32, ptr %i123, align 4, !tbaa !193
  %i3030 = add nsw i32 %i3029, -8
  store i32 %i3030, ptr %i123, align 4, !tbaa !193
  %i3031 = icmp sgt i32 %i3029, 15
  br i1 %i3031, label %bb3017.bb3017_crit_edge, label %bb3032.loopexit, !llvm.loop !195

bb3017.bb3017_crit_edge:                          ; preds = %bb3017
  br label %bb3017

bb3032.loopexit:                                  ; preds = %bb3017
  br label %bb3032

bb3032:                                           ; preds = %bb2999.bb3032_crit_edge, %bb3032.loopexit
  %i3033 = phi i32 [ %i3005, %bb2999.bb3032_crit_edge ], [ %i3028, %bb3032.loopexit ]
  %i3034 = phi i32 [ %i3002, %bb2999.bb3032_crit_edge ], [ %i3030, %bb3032.loopexit ]
  %i3035 = add i32 %i3034, %i3011
  %i3036 = sub i32 32, %i3035
  %i3037 = shl i32 %i3013, %i3036
  %i3038 = or i32 %i3037, %i3033
  store i32 %i3038, ptr %i126, align 8, !tbaa !194
  store i32 %i3035, ptr %i123, align 4, !tbaa !193
  %i3039 = getelementptr i16, ptr %i2542, i64 15
  %i3040 = load i16, ptr %i3039, align 2, !tbaa !22
  %i3041 = zext i16 %i3040 to i64
  %i3042 = getelementptr inbounds i8, ptr %i2539, i64 %i3041
  %i3043 = load i8, ptr %i3042, align 1, !tbaa !21
  %i3044 = zext i8 %i3043 to i32
  %i3045 = getelementptr inbounds i32, ptr %i2540, i64 %i3041
  %i3046 = load i32, ptr %i3045, align 4, !tbaa !19
  %i3047 = icmp sgt i32 %i3035, 7
  br i1 %i3047, label %bb3048, label %bb3032.bb3065_crit_edge

bb3032.bb3065_crit_edge:                          ; preds = %bb3032
  br label %bb3065

bb3048:                                           ; preds = %bb3032
  %i3049 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3050

bb3050:                                           ; preds = %bb3050.bb3050_crit_edge, %bb3048
  %i3051 = phi i32 [ %i3049, %bb3048 ], [ %i3059, %bb3050.bb3050_crit_edge ]
  %i3052 = phi i32 [ %i3038, %bb3048 ], [ %i3061, %bb3050.bb3050_crit_edge ]
  %i3053 = lshr i32 %i3052, 24
  %i3054 = trunc i32 %i3053 to i8
  %i3055 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3056 = sext i32 %i3051 to i64
  %i3057 = getelementptr inbounds i8, ptr %i3055, i64 %i3056
  store i8 %i3054, ptr %i3057, align 1, !tbaa !21
  %i3058 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3059 = add nsw i32 %i3058, 1
  store i32 %i3059, ptr %i2071, align 4, !tbaa !137
  %i3060 = load i32, ptr %i126, align 8, !tbaa !194
  %i3061 = shl i32 %i3060, 8
  store i32 %i3061, ptr %i126, align 8, !tbaa !194
  %i3062 = load i32, ptr %i123, align 4, !tbaa !193
  %i3063 = add nsw i32 %i3062, -8
  store i32 %i3063, ptr %i123, align 4, !tbaa !193
  %i3064 = icmp sgt i32 %i3062, 15
  br i1 %i3064, label %bb3050.bb3050_crit_edge, label %bb3065.loopexit, !llvm.loop !195

bb3050.bb3050_crit_edge:                          ; preds = %bb3050
  br label %bb3050

bb3065.loopexit:                                  ; preds = %bb3050
  br label %bb3065

bb3065:                                           ; preds = %bb3032.bb3065_crit_edge, %bb3065.loopexit
  %i3066 = phi i32 [ %i3038, %bb3032.bb3065_crit_edge ], [ %i3061, %bb3065.loopexit ]
  %i3067 = phi i32 [ %i3035, %bb3032.bb3065_crit_edge ], [ %i3063, %bb3065.loopexit ]
  %i3068 = add i32 %i3067, %i3044
  %i3069 = sub i32 32, %i3068
  %i3070 = shl i32 %i3046, %i3069
  %i3071 = or i32 %i3070, %i3066
  store i32 %i3071, ptr %i126, align 8, !tbaa !194
  store i32 %i3068, ptr %i123, align 4, !tbaa !193
  %i3072 = getelementptr i16, ptr %i2542, i64 16
  %i3073 = load i16, ptr %i3072, align 2, !tbaa !22
  %i3074 = zext i16 %i3073 to i64
  %i3075 = getelementptr inbounds i8, ptr %i2539, i64 %i3074
  %i3076 = load i8, ptr %i3075, align 1, !tbaa !21
  %i3077 = zext i8 %i3076 to i32
  %i3078 = getelementptr inbounds i32, ptr %i2540, i64 %i3074
  %i3079 = load i32, ptr %i3078, align 4, !tbaa !19
  %i3080 = icmp sgt i32 %i3068, 7
  br i1 %i3080, label %bb3081, label %bb3065.bb3098_crit_edge

bb3065.bb3098_crit_edge:                          ; preds = %bb3065
  br label %bb3098

bb3081:                                           ; preds = %bb3065
  %i3082 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3083

bb3083:                                           ; preds = %bb3083.bb3083_crit_edge, %bb3081
  %i3084 = phi i32 [ %i3082, %bb3081 ], [ %i3092, %bb3083.bb3083_crit_edge ]
  %i3085 = phi i32 [ %i3071, %bb3081 ], [ %i3094, %bb3083.bb3083_crit_edge ]
  %i3086 = lshr i32 %i3085, 24
  %i3087 = trunc i32 %i3086 to i8
  %i3088 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3089 = sext i32 %i3084 to i64
  %i3090 = getelementptr inbounds i8, ptr %i3088, i64 %i3089
  store i8 %i3087, ptr %i3090, align 1, !tbaa !21
  %i3091 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3092 = add nsw i32 %i3091, 1
  store i32 %i3092, ptr %i2071, align 4, !tbaa !137
  %i3093 = load i32, ptr %i126, align 8, !tbaa !194
  %i3094 = shl i32 %i3093, 8
  store i32 %i3094, ptr %i126, align 8, !tbaa !194
  %i3095 = load i32, ptr %i123, align 4, !tbaa !193
  %i3096 = add nsw i32 %i3095, -8
  store i32 %i3096, ptr %i123, align 4, !tbaa !193
  %i3097 = icmp sgt i32 %i3095, 15
  br i1 %i3097, label %bb3083.bb3083_crit_edge, label %bb3098.loopexit, !llvm.loop !195

bb3083.bb3083_crit_edge:                          ; preds = %bb3083
  br label %bb3083

bb3098.loopexit:                                  ; preds = %bb3083
  br label %bb3098

bb3098:                                           ; preds = %bb3065.bb3098_crit_edge, %bb3098.loopexit
  %i3099 = phi i32 [ %i3071, %bb3065.bb3098_crit_edge ], [ %i3094, %bb3098.loopexit ]
  %i3100 = phi i32 [ %i3068, %bb3065.bb3098_crit_edge ], [ %i3096, %bb3098.loopexit ]
  %i3101 = add i32 %i3100, %i3077
  %i3102 = sub i32 32, %i3101
  %i3103 = shl i32 %i3079, %i3102
  %i3104 = or i32 %i3103, %i3099
  store i32 %i3104, ptr %i126, align 8, !tbaa !194
  store i32 %i3101, ptr %i123, align 4, !tbaa !193
  %i3105 = getelementptr i16, ptr %i2542, i64 17
  %i3106 = load i16, ptr %i3105, align 2, !tbaa !22
  %i3107 = zext i16 %i3106 to i64
  %i3108 = getelementptr inbounds i8, ptr %i2539, i64 %i3107
  %i3109 = load i8, ptr %i3108, align 1, !tbaa !21
  %i3110 = zext i8 %i3109 to i32
  %i3111 = getelementptr inbounds i32, ptr %i2540, i64 %i3107
  %i3112 = load i32, ptr %i3111, align 4, !tbaa !19
  %i3113 = icmp sgt i32 %i3101, 7
  br i1 %i3113, label %bb3114, label %bb3098.bb3131_crit_edge

bb3098.bb3131_crit_edge:                          ; preds = %bb3098
  br label %bb3131

bb3114:                                           ; preds = %bb3098
  %i3115 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3116

bb3116:                                           ; preds = %bb3116.bb3116_crit_edge, %bb3114
  %i3117 = phi i32 [ %i3115, %bb3114 ], [ %i3125, %bb3116.bb3116_crit_edge ]
  %i3118 = phi i32 [ %i3104, %bb3114 ], [ %i3127, %bb3116.bb3116_crit_edge ]
  %i3119 = lshr i32 %i3118, 24
  %i3120 = trunc i32 %i3119 to i8
  %i3121 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3122 = sext i32 %i3117 to i64
  %i3123 = getelementptr inbounds i8, ptr %i3121, i64 %i3122
  store i8 %i3120, ptr %i3123, align 1, !tbaa !21
  %i3124 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3125 = add nsw i32 %i3124, 1
  store i32 %i3125, ptr %i2071, align 4, !tbaa !137
  %i3126 = load i32, ptr %i126, align 8, !tbaa !194
  %i3127 = shl i32 %i3126, 8
  store i32 %i3127, ptr %i126, align 8, !tbaa !194
  %i3128 = load i32, ptr %i123, align 4, !tbaa !193
  %i3129 = add nsw i32 %i3128, -8
  store i32 %i3129, ptr %i123, align 4, !tbaa !193
  %i3130 = icmp sgt i32 %i3128, 15
  br i1 %i3130, label %bb3116.bb3116_crit_edge, label %bb3131.loopexit, !llvm.loop !195

bb3116.bb3116_crit_edge:                          ; preds = %bb3116
  br label %bb3116

bb3131.loopexit:                                  ; preds = %bb3116
  br label %bb3131

bb3131:                                           ; preds = %bb3098.bb3131_crit_edge, %bb3131.loopexit
  %i3132 = phi i32 [ %i3104, %bb3098.bb3131_crit_edge ], [ %i3127, %bb3131.loopexit ]
  %i3133 = phi i32 [ %i3101, %bb3098.bb3131_crit_edge ], [ %i3129, %bb3131.loopexit ]
  %i3134 = add i32 %i3133, %i3110
  %i3135 = sub i32 32, %i3134
  %i3136 = shl i32 %i3112, %i3135
  %i3137 = or i32 %i3136, %i3132
  store i32 %i3137, ptr %i126, align 8, !tbaa !194
  store i32 %i3134, ptr %i123, align 4, !tbaa !193
  %i3138 = getelementptr i16, ptr %i2542, i64 18
  %i3139 = load i16, ptr %i3138, align 2, !tbaa !22
  %i3140 = zext i16 %i3139 to i64
  %i3141 = getelementptr inbounds i8, ptr %i2539, i64 %i3140
  %i3142 = load i8, ptr %i3141, align 1, !tbaa !21
  %i3143 = zext i8 %i3142 to i32
  %i3144 = getelementptr inbounds i32, ptr %i2540, i64 %i3140
  %i3145 = load i32, ptr %i3144, align 4, !tbaa !19
  %i3146 = icmp sgt i32 %i3134, 7
  br i1 %i3146, label %bb3147, label %bb3131.bb3164_crit_edge

bb3131.bb3164_crit_edge:                          ; preds = %bb3131
  br label %bb3164

bb3147:                                           ; preds = %bb3131
  %i3148 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3149

bb3149:                                           ; preds = %bb3149.bb3149_crit_edge, %bb3147
  %i3150 = phi i32 [ %i3148, %bb3147 ], [ %i3158, %bb3149.bb3149_crit_edge ]
  %i3151 = phi i32 [ %i3137, %bb3147 ], [ %i3160, %bb3149.bb3149_crit_edge ]
  %i3152 = lshr i32 %i3151, 24
  %i3153 = trunc i32 %i3152 to i8
  %i3154 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3155 = sext i32 %i3150 to i64
  %i3156 = getelementptr inbounds i8, ptr %i3154, i64 %i3155
  store i8 %i3153, ptr %i3156, align 1, !tbaa !21
  %i3157 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3158 = add nsw i32 %i3157, 1
  store i32 %i3158, ptr %i2071, align 4, !tbaa !137
  %i3159 = load i32, ptr %i126, align 8, !tbaa !194
  %i3160 = shl i32 %i3159, 8
  store i32 %i3160, ptr %i126, align 8, !tbaa !194
  %i3161 = load i32, ptr %i123, align 4, !tbaa !193
  %i3162 = add nsw i32 %i3161, -8
  store i32 %i3162, ptr %i123, align 4, !tbaa !193
  %i3163 = icmp sgt i32 %i3161, 15
  br i1 %i3163, label %bb3149.bb3149_crit_edge, label %bb3164.loopexit, !llvm.loop !195

bb3149.bb3149_crit_edge:                          ; preds = %bb3149
  br label %bb3149

bb3164.loopexit:                                  ; preds = %bb3149
  br label %bb3164

bb3164:                                           ; preds = %bb3131.bb3164_crit_edge, %bb3164.loopexit
  %i3165 = phi i32 [ %i3137, %bb3131.bb3164_crit_edge ], [ %i3160, %bb3164.loopexit ]
  %i3166 = phi i32 [ %i3134, %bb3131.bb3164_crit_edge ], [ %i3162, %bb3164.loopexit ]
  %i3167 = add i32 %i3166, %i3143
  %i3168 = sub i32 32, %i3167
  %i3169 = shl i32 %i3145, %i3168
  %i3170 = or i32 %i3169, %i3165
  store i32 %i3170, ptr %i126, align 8, !tbaa !194
  store i32 %i3167, ptr %i123, align 4, !tbaa !193
  %i3171 = getelementptr i16, ptr %i2542, i64 19
  %i3172 = load i16, ptr %i3171, align 2, !tbaa !22
  %i3173 = zext i16 %i3172 to i64
  %i3174 = getelementptr inbounds i8, ptr %i2539, i64 %i3173
  %i3175 = load i8, ptr %i3174, align 1, !tbaa !21
  %i3176 = zext i8 %i3175 to i32
  %i3177 = getelementptr inbounds i32, ptr %i2540, i64 %i3173
  %i3178 = load i32, ptr %i3177, align 4, !tbaa !19
  %i3179 = icmp sgt i32 %i3167, 7
  br i1 %i3179, label %bb3180, label %bb3164.bb3197_crit_edge

bb3164.bb3197_crit_edge:                          ; preds = %bb3164
  br label %bb3197

bb3180:                                           ; preds = %bb3164
  %i3181 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3182

bb3182:                                           ; preds = %bb3182.bb3182_crit_edge, %bb3180
  %i3183 = phi i32 [ %i3181, %bb3180 ], [ %i3191, %bb3182.bb3182_crit_edge ]
  %i3184 = phi i32 [ %i3170, %bb3180 ], [ %i3193, %bb3182.bb3182_crit_edge ]
  %i3185 = lshr i32 %i3184, 24
  %i3186 = trunc i32 %i3185 to i8
  %i3187 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3188 = sext i32 %i3183 to i64
  %i3189 = getelementptr inbounds i8, ptr %i3187, i64 %i3188
  store i8 %i3186, ptr %i3189, align 1, !tbaa !21
  %i3190 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3191 = add nsw i32 %i3190, 1
  store i32 %i3191, ptr %i2071, align 4, !tbaa !137
  %i3192 = load i32, ptr %i126, align 8, !tbaa !194
  %i3193 = shl i32 %i3192, 8
  store i32 %i3193, ptr %i126, align 8, !tbaa !194
  %i3194 = load i32, ptr %i123, align 4, !tbaa !193
  %i3195 = add nsw i32 %i3194, -8
  store i32 %i3195, ptr %i123, align 4, !tbaa !193
  %i3196 = icmp sgt i32 %i3194, 15
  br i1 %i3196, label %bb3182.bb3182_crit_edge, label %bb3197.loopexit, !llvm.loop !195

bb3182.bb3182_crit_edge:                          ; preds = %bb3182
  br label %bb3182

bb3197.loopexit:                                  ; preds = %bb3182
  br label %bb3197

bb3197:                                           ; preds = %bb3164.bb3197_crit_edge, %bb3197.loopexit
  %i3198 = phi i32 [ %i3170, %bb3164.bb3197_crit_edge ], [ %i3193, %bb3197.loopexit ]
  %i3199 = phi i32 [ %i3167, %bb3164.bb3197_crit_edge ], [ %i3195, %bb3197.loopexit ]
  %i3200 = add i32 %i3199, %i3176
  %i3201 = sub i32 32, %i3200
  %i3202 = shl i32 %i3178, %i3201
  %i3203 = or i32 %i3202, %i3198
  store i32 %i3203, ptr %i126, align 8, !tbaa !194
  store i32 %i3200, ptr %i123, align 4, !tbaa !193
  %i3204 = getelementptr i16, ptr %i2542, i64 20
  %i3205 = load i16, ptr %i3204, align 2, !tbaa !22
  %i3206 = zext i16 %i3205 to i64
  %i3207 = getelementptr inbounds i8, ptr %i2539, i64 %i3206
  %i3208 = load i8, ptr %i3207, align 1, !tbaa !21
  %i3209 = zext i8 %i3208 to i32
  %i3210 = getelementptr inbounds i32, ptr %i2540, i64 %i3206
  %i3211 = load i32, ptr %i3210, align 4, !tbaa !19
  %i3212 = icmp sgt i32 %i3200, 7
  br i1 %i3212, label %bb3213, label %bb3197.bb3230_crit_edge

bb3197.bb3230_crit_edge:                          ; preds = %bb3197
  br label %bb3230

bb3213:                                           ; preds = %bb3197
  %i3214 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3215

bb3215:                                           ; preds = %bb3215.bb3215_crit_edge, %bb3213
  %i3216 = phi i32 [ %i3214, %bb3213 ], [ %i3224, %bb3215.bb3215_crit_edge ]
  %i3217 = phi i32 [ %i3203, %bb3213 ], [ %i3226, %bb3215.bb3215_crit_edge ]
  %i3218 = lshr i32 %i3217, 24
  %i3219 = trunc i32 %i3218 to i8
  %i3220 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3221 = sext i32 %i3216 to i64
  %i3222 = getelementptr inbounds i8, ptr %i3220, i64 %i3221
  store i8 %i3219, ptr %i3222, align 1, !tbaa !21
  %i3223 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3224 = add nsw i32 %i3223, 1
  store i32 %i3224, ptr %i2071, align 4, !tbaa !137
  %i3225 = load i32, ptr %i126, align 8, !tbaa !194
  %i3226 = shl i32 %i3225, 8
  store i32 %i3226, ptr %i126, align 8, !tbaa !194
  %i3227 = load i32, ptr %i123, align 4, !tbaa !193
  %i3228 = add nsw i32 %i3227, -8
  store i32 %i3228, ptr %i123, align 4, !tbaa !193
  %i3229 = icmp sgt i32 %i3227, 15
  br i1 %i3229, label %bb3215.bb3215_crit_edge, label %bb3230.loopexit, !llvm.loop !195

bb3215.bb3215_crit_edge:                          ; preds = %bb3215
  br label %bb3215

bb3230.loopexit:                                  ; preds = %bb3215
  br label %bb3230

bb3230:                                           ; preds = %bb3197.bb3230_crit_edge, %bb3230.loopexit
  %i3231 = phi i32 [ %i3203, %bb3197.bb3230_crit_edge ], [ %i3226, %bb3230.loopexit ]
  %i3232 = phi i32 [ %i3200, %bb3197.bb3230_crit_edge ], [ %i3228, %bb3230.loopexit ]
  %i3233 = add i32 %i3232, %i3209
  %i3234 = sub i32 32, %i3233
  %i3235 = shl i32 %i3211, %i3234
  %i3236 = or i32 %i3235, %i3231
  store i32 %i3236, ptr %i126, align 8, !tbaa !194
  store i32 %i3233, ptr %i123, align 4, !tbaa !193
  %i3237 = getelementptr i16, ptr %i2542, i64 21
  %i3238 = load i16, ptr %i3237, align 2, !tbaa !22
  %i3239 = zext i16 %i3238 to i64
  %i3240 = getelementptr inbounds i8, ptr %i2539, i64 %i3239
  %i3241 = load i8, ptr %i3240, align 1, !tbaa !21
  %i3242 = zext i8 %i3241 to i32
  %i3243 = getelementptr inbounds i32, ptr %i2540, i64 %i3239
  %i3244 = load i32, ptr %i3243, align 4, !tbaa !19
  %i3245 = icmp sgt i32 %i3233, 7
  br i1 %i3245, label %bb3246, label %bb3230.bb3263_crit_edge

bb3230.bb3263_crit_edge:                          ; preds = %bb3230
  br label %bb3263

bb3246:                                           ; preds = %bb3230
  %i3247 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3248

bb3248:                                           ; preds = %bb3248.bb3248_crit_edge, %bb3246
  %i3249 = phi i32 [ %i3247, %bb3246 ], [ %i3257, %bb3248.bb3248_crit_edge ]
  %i3250 = phi i32 [ %i3236, %bb3246 ], [ %i3259, %bb3248.bb3248_crit_edge ]
  %i3251 = lshr i32 %i3250, 24
  %i3252 = trunc i32 %i3251 to i8
  %i3253 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3254 = sext i32 %i3249 to i64
  %i3255 = getelementptr inbounds i8, ptr %i3253, i64 %i3254
  store i8 %i3252, ptr %i3255, align 1, !tbaa !21
  %i3256 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3257 = add nsw i32 %i3256, 1
  store i32 %i3257, ptr %i2071, align 4, !tbaa !137
  %i3258 = load i32, ptr %i126, align 8, !tbaa !194
  %i3259 = shl i32 %i3258, 8
  store i32 %i3259, ptr %i126, align 8, !tbaa !194
  %i3260 = load i32, ptr %i123, align 4, !tbaa !193
  %i3261 = add nsw i32 %i3260, -8
  store i32 %i3261, ptr %i123, align 4, !tbaa !193
  %i3262 = icmp sgt i32 %i3260, 15
  br i1 %i3262, label %bb3248.bb3248_crit_edge, label %bb3263.loopexit, !llvm.loop !195

bb3248.bb3248_crit_edge:                          ; preds = %bb3248
  br label %bb3248

bb3263.loopexit:                                  ; preds = %bb3248
  br label %bb3263

bb3263:                                           ; preds = %bb3230.bb3263_crit_edge, %bb3263.loopexit
  %i3264 = phi i32 [ %i3236, %bb3230.bb3263_crit_edge ], [ %i3259, %bb3263.loopexit ]
  %i3265 = phi i32 [ %i3233, %bb3230.bb3263_crit_edge ], [ %i3261, %bb3263.loopexit ]
  %i3266 = add i32 %i3265, %i3242
  %i3267 = sub i32 32, %i3266
  %i3268 = shl i32 %i3244, %i3267
  %i3269 = or i32 %i3268, %i3264
  store i32 %i3269, ptr %i126, align 8, !tbaa !194
  store i32 %i3266, ptr %i123, align 4, !tbaa !193
  %i3270 = getelementptr i16, ptr %i2542, i64 22
  %i3271 = load i16, ptr %i3270, align 2, !tbaa !22
  %i3272 = zext i16 %i3271 to i64
  %i3273 = getelementptr inbounds i8, ptr %i2539, i64 %i3272
  %i3274 = load i8, ptr %i3273, align 1, !tbaa !21
  %i3275 = zext i8 %i3274 to i32
  %i3276 = getelementptr inbounds i32, ptr %i2540, i64 %i3272
  %i3277 = load i32, ptr %i3276, align 4, !tbaa !19
  %i3278 = icmp sgt i32 %i3266, 7
  br i1 %i3278, label %bb3279, label %bb3263.bb3296_crit_edge

bb3263.bb3296_crit_edge:                          ; preds = %bb3263
  br label %bb3296

bb3279:                                           ; preds = %bb3263
  %i3280 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3281

bb3281:                                           ; preds = %bb3281.bb3281_crit_edge, %bb3279
  %i3282 = phi i32 [ %i3280, %bb3279 ], [ %i3290, %bb3281.bb3281_crit_edge ]
  %i3283 = phi i32 [ %i3269, %bb3279 ], [ %i3292, %bb3281.bb3281_crit_edge ]
  %i3284 = lshr i32 %i3283, 24
  %i3285 = trunc i32 %i3284 to i8
  %i3286 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3287 = sext i32 %i3282 to i64
  %i3288 = getelementptr inbounds i8, ptr %i3286, i64 %i3287
  store i8 %i3285, ptr %i3288, align 1, !tbaa !21
  %i3289 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3290 = add nsw i32 %i3289, 1
  store i32 %i3290, ptr %i2071, align 4, !tbaa !137
  %i3291 = load i32, ptr %i126, align 8, !tbaa !194
  %i3292 = shl i32 %i3291, 8
  store i32 %i3292, ptr %i126, align 8, !tbaa !194
  %i3293 = load i32, ptr %i123, align 4, !tbaa !193
  %i3294 = add nsw i32 %i3293, -8
  store i32 %i3294, ptr %i123, align 4, !tbaa !193
  %i3295 = icmp sgt i32 %i3293, 15
  br i1 %i3295, label %bb3281.bb3281_crit_edge, label %bb3296.loopexit, !llvm.loop !195

bb3281.bb3281_crit_edge:                          ; preds = %bb3281
  br label %bb3281

bb3296.loopexit:                                  ; preds = %bb3281
  br label %bb3296

bb3296:                                           ; preds = %bb3263.bb3296_crit_edge, %bb3296.loopexit
  %i3297 = phi i32 [ %i3269, %bb3263.bb3296_crit_edge ], [ %i3292, %bb3296.loopexit ]
  %i3298 = phi i32 [ %i3266, %bb3263.bb3296_crit_edge ], [ %i3294, %bb3296.loopexit ]
  %i3299 = add i32 %i3298, %i3275
  %i3300 = sub i32 32, %i3299
  %i3301 = shl i32 %i3277, %i3300
  %i3302 = or i32 %i3301, %i3297
  store i32 %i3302, ptr %i126, align 8, !tbaa !194
  store i32 %i3299, ptr %i123, align 4, !tbaa !193
  %i3303 = getelementptr i16, ptr %i2542, i64 23
  %i3304 = load i16, ptr %i3303, align 2, !tbaa !22
  %i3305 = zext i16 %i3304 to i64
  %i3306 = getelementptr inbounds i8, ptr %i2539, i64 %i3305
  %i3307 = load i8, ptr %i3306, align 1, !tbaa !21
  %i3308 = zext i8 %i3307 to i32
  %i3309 = getelementptr inbounds i32, ptr %i2540, i64 %i3305
  %i3310 = load i32, ptr %i3309, align 4, !tbaa !19
  %i3311 = icmp sgt i32 %i3299, 7
  br i1 %i3311, label %bb3312, label %bb3296.bb3329_crit_edge

bb3296.bb3329_crit_edge:                          ; preds = %bb3296
  br label %bb3329

bb3312:                                           ; preds = %bb3296
  %i3313 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3314

bb3314:                                           ; preds = %bb3314.bb3314_crit_edge, %bb3312
  %i3315 = phi i32 [ %i3313, %bb3312 ], [ %i3323, %bb3314.bb3314_crit_edge ]
  %i3316 = phi i32 [ %i3302, %bb3312 ], [ %i3325, %bb3314.bb3314_crit_edge ]
  %i3317 = lshr i32 %i3316, 24
  %i3318 = trunc i32 %i3317 to i8
  %i3319 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3320 = sext i32 %i3315 to i64
  %i3321 = getelementptr inbounds i8, ptr %i3319, i64 %i3320
  store i8 %i3318, ptr %i3321, align 1, !tbaa !21
  %i3322 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3323 = add nsw i32 %i3322, 1
  store i32 %i3323, ptr %i2071, align 4, !tbaa !137
  %i3324 = load i32, ptr %i126, align 8, !tbaa !194
  %i3325 = shl i32 %i3324, 8
  store i32 %i3325, ptr %i126, align 8, !tbaa !194
  %i3326 = load i32, ptr %i123, align 4, !tbaa !193
  %i3327 = add nsw i32 %i3326, -8
  store i32 %i3327, ptr %i123, align 4, !tbaa !193
  %i3328 = icmp sgt i32 %i3326, 15
  br i1 %i3328, label %bb3314.bb3314_crit_edge, label %bb3329.loopexit, !llvm.loop !195

bb3314.bb3314_crit_edge:                          ; preds = %bb3314
  br label %bb3314

bb3329.loopexit:                                  ; preds = %bb3314
  br label %bb3329

bb3329:                                           ; preds = %bb3296.bb3329_crit_edge, %bb3329.loopexit
  %i3330 = phi i32 [ %i3302, %bb3296.bb3329_crit_edge ], [ %i3325, %bb3329.loopexit ]
  %i3331 = phi i32 [ %i3299, %bb3296.bb3329_crit_edge ], [ %i3327, %bb3329.loopexit ]
  %i3332 = add i32 %i3331, %i3308
  %i3333 = sub i32 32, %i3332
  %i3334 = shl i32 %i3310, %i3333
  %i3335 = or i32 %i3334, %i3330
  store i32 %i3335, ptr %i126, align 8, !tbaa !194
  store i32 %i3332, ptr %i123, align 4, !tbaa !193
  %i3336 = getelementptr i16, ptr %i2542, i64 24
  %i3337 = load i16, ptr %i3336, align 2, !tbaa !22
  %i3338 = zext i16 %i3337 to i64
  %i3339 = getelementptr inbounds i8, ptr %i2539, i64 %i3338
  %i3340 = load i8, ptr %i3339, align 1, !tbaa !21
  %i3341 = zext i8 %i3340 to i32
  %i3342 = getelementptr inbounds i32, ptr %i2540, i64 %i3338
  %i3343 = load i32, ptr %i3342, align 4, !tbaa !19
  %i3344 = icmp sgt i32 %i3332, 7
  br i1 %i3344, label %bb3345, label %bb3329.bb3362_crit_edge

bb3329.bb3362_crit_edge:                          ; preds = %bb3329
  br label %bb3362

bb3345:                                           ; preds = %bb3329
  %i3346 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3347

bb3347:                                           ; preds = %bb3347.bb3347_crit_edge, %bb3345
  %i3348 = phi i32 [ %i3346, %bb3345 ], [ %i3356, %bb3347.bb3347_crit_edge ]
  %i3349 = phi i32 [ %i3335, %bb3345 ], [ %i3358, %bb3347.bb3347_crit_edge ]
  %i3350 = lshr i32 %i3349, 24
  %i3351 = trunc i32 %i3350 to i8
  %i3352 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3353 = sext i32 %i3348 to i64
  %i3354 = getelementptr inbounds i8, ptr %i3352, i64 %i3353
  store i8 %i3351, ptr %i3354, align 1, !tbaa !21
  %i3355 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3356 = add nsw i32 %i3355, 1
  store i32 %i3356, ptr %i2071, align 4, !tbaa !137
  %i3357 = load i32, ptr %i126, align 8, !tbaa !194
  %i3358 = shl i32 %i3357, 8
  store i32 %i3358, ptr %i126, align 8, !tbaa !194
  %i3359 = load i32, ptr %i123, align 4, !tbaa !193
  %i3360 = add nsw i32 %i3359, -8
  store i32 %i3360, ptr %i123, align 4, !tbaa !193
  %i3361 = icmp sgt i32 %i3359, 15
  br i1 %i3361, label %bb3347.bb3347_crit_edge, label %bb3362.loopexit, !llvm.loop !195

bb3347.bb3347_crit_edge:                          ; preds = %bb3347
  br label %bb3347

bb3362.loopexit:                                  ; preds = %bb3347
  br label %bb3362

bb3362:                                           ; preds = %bb3329.bb3362_crit_edge, %bb3362.loopexit
  %i3363 = phi i32 [ %i3335, %bb3329.bb3362_crit_edge ], [ %i3358, %bb3362.loopexit ]
  %i3364 = phi i32 [ %i3332, %bb3329.bb3362_crit_edge ], [ %i3360, %bb3362.loopexit ]
  %i3365 = add i32 %i3364, %i3341
  %i3366 = sub i32 32, %i3365
  %i3367 = shl i32 %i3343, %i3366
  %i3368 = or i32 %i3367, %i3363
  store i32 %i3368, ptr %i126, align 8, !tbaa !194
  store i32 %i3365, ptr %i123, align 4, !tbaa !193
  %i3369 = getelementptr i16, ptr %i2542, i64 25
  %i3370 = load i16, ptr %i3369, align 2, !tbaa !22
  %i3371 = zext i16 %i3370 to i64
  %i3372 = getelementptr inbounds i8, ptr %i2539, i64 %i3371
  %i3373 = load i8, ptr %i3372, align 1, !tbaa !21
  %i3374 = zext i8 %i3373 to i32
  %i3375 = getelementptr inbounds i32, ptr %i2540, i64 %i3371
  %i3376 = load i32, ptr %i3375, align 4, !tbaa !19
  %i3377 = icmp sgt i32 %i3365, 7
  br i1 %i3377, label %bb3378, label %bb3362.bb3395_crit_edge

bb3362.bb3395_crit_edge:                          ; preds = %bb3362
  br label %bb3395

bb3378:                                           ; preds = %bb3362
  %i3379 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3380

bb3380:                                           ; preds = %bb3380.bb3380_crit_edge, %bb3378
  %i3381 = phi i32 [ %i3379, %bb3378 ], [ %i3389, %bb3380.bb3380_crit_edge ]
  %i3382 = phi i32 [ %i3368, %bb3378 ], [ %i3391, %bb3380.bb3380_crit_edge ]
  %i3383 = lshr i32 %i3382, 24
  %i3384 = trunc i32 %i3383 to i8
  %i3385 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3386 = sext i32 %i3381 to i64
  %i3387 = getelementptr inbounds i8, ptr %i3385, i64 %i3386
  store i8 %i3384, ptr %i3387, align 1, !tbaa !21
  %i3388 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3389 = add nsw i32 %i3388, 1
  store i32 %i3389, ptr %i2071, align 4, !tbaa !137
  %i3390 = load i32, ptr %i126, align 8, !tbaa !194
  %i3391 = shl i32 %i3390, 8
  store i32 %i3391, ptr %i126, align 8, !tbaa !194
  %i3392 = load i32, ptr %i123, align 4, !tbaa !193
  %i3393 = add nsw i32 %i3392, -8
  store i32 %i3393, ptr %i123, align 4, !tbaa !193
  %i3394 = icmp sgt i32 %i3392, 15
  br i1 %i3394, label %bb3380.bb3380_crit_edge, label %bb3395.loopexit, !llvm.loop !195

bb3380.bb3380_crit_edge:                          ; preds = %bb3380
  br label %bb3380

bb3395.loopexit:                                  ; preds = %bb3380
  br label %bb3395

bb3395:                                           ; preds = %bb3362.bb3395_crit_edge, %bb3395.loopexit
  %i3396 = phi i32 [ %i3368, %bb3362.bb3395_crit_edge ], [ %i3391, %bb3395.loopexit ]
  %i3397 = phi i32 [ %i3365, %bb3362.bb3395_crit_edge ], [ %i3393, %bb3395.loopexit ]
  %i3398 = add i32 %i3397, %i3374
  %i3399 = sub i32 32, %i3398
  %i3400 = shl i32 %i3376, %i3399
  %i3401 = or i32 %i3400, %i3396
  store i32 %i3401, ptr %i126, align 8, !tbaa !194
  store i32 %i3398, ptr %i123, align 4, !tbaa !193
  %i3402 = getelementptr i16, ptr %i2542, i64 26
  %i3403 = load i16, ptr %i3402, align 2, !tbaa !22
  %i3404 = zext i16 %i3403 to i64
  %i3405 = getelementptr inbounds i8, ptr %i2539, i64 %i3404
  %i3406 = load i8, ptr %i3405, align 1, !tbaa !21
  %i3407 = zext i8 %i3406 to i32
  %i3408 = getelementptr inbounds i32, ptr %i2540, i64 %i3404
  %i3409 = load i32, ptr %i3408, align 4, !tbaa !19
  %i3410 = icmp sgt i32 %i3398, 7
  br i1 %i3410, label %bb3411, label %bb3395.bb3428_crit_edge

bb3395.bb3428_crit_edge:                          ; preds = %bb3395
  br label %bb3428

bb3411:                                           ; preds = %bb3395
  %i3412 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3413

bb3413:                                           ; preds = %bb3413.bb3413_crit_edge, %bb3411
  %i3414 = phi i32 [ %i3412, %bb3411 ], [ %i3422, %bb3413.bb3413_crit_edge ]
  %i3415 = phi i32 [ %i3401, %bb3411 ], [ %i3424, %bb3413.bb3413_crit_edge ]
  %i3416 = lshr i32 %i3415, 24
  %i3417 = trunc i32 %i3416 to i8
  %i3418 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3419 = sext i32 %i3414 to i64
  %i3420 = getelementptr inbounds i8, ptr %i3418, i64 %i3419
  store i8 %i3417, ptr %i3420, align 1, !tbaa !21
  %i3421 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3422 = add nsw i32 %i3421, 1
  store i32 %i3422, ptr %i2071, align 4, !tbaa !137
  %i3423 = load i32, ptr %i126, align 8, !tbaa !194
  %i3424 = shl i32 %i3423, 8
  store i32 %i3424, ptr %i126, align 8, !tbaa !194
  %i3425 = load i32, ptr %i123, align 4, !tbaa !193
  %i3426 = add nsw i32 %i3425, -8
  store i32 %i3426, ptr %i123, align 4, !tbaa !193
  %i3427 = icmp sgt i32 %i3425, 15
  br i1 %i3427, label %bb3413.bb3413_crit_edge, label %bb3428.loopexit, !llvm.loop !195

bb3413.bb3413_crit_edge:                          ; preds = %bb3413
  br label %bb3413

bb3428.loopexit:                                  ; preds = %bb3413
  br label %bb3428

bb3428:                                           ; preds = %bb3395.bb3428_crit_edge, %bb3428.loopexit
  %i3429 = phi i32 [ %i3401, %bb3395.bb3428_crit_edge ], [ %i3424, %bb3428.loopexit ]
  %i3430 = phi i32 [ %i3398, %bb3395.bb3428_crit_edge ], [ %i3426, %bb3428.loopexit ]
  %i3431 = add i32 %i3430, %i3407
  %i3432 = sub i32 32, %i3431
  %i3433 = shl i32 %i3409, %i3432
  %i3434 = or i32 %i3433, %i3429
  store i32 %i3434, ptr %i126, align 8, !tbaa !194
  store i32 %i3431, ptr %i123, align 4, !tbaa !193
  %i3435 = getelementptr i16, ptr %i2542, i64 27
  %i3436 = load i16, ptr %i3435, align 2, !tbaa !22
  %i3437 = zext i16 %i3436 to i64
  %i3438 = getelementptr inbounds i8, ptr %i2539, i64 %i3437
  %i3439 = load i8, ptr %i3438, align 1, !tbaa !21
  %i3440 = zext i8 %i3439 to i32
  %i3441 = getelementptr inbounds i32, ptr %i2540, i64 %i3437
  %i3442 = load i32, ptr %i3441, align 4, !tbaa !19
  %i3443 = icmp sgt i32 %i3431, 7
  br i1 %i3443, label %bb3444, label %bb3428.bb3461_crit_edge

bb3428.bb3461_crit_edge:                          ; preds = %bb3428
  br label %bb3461

bb3444:                                           ; preds = %bb3428
  %i3445 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3446

bb3446:                                           ; preds = %bb3446.bb3446_crit_edge, %bb3444
  %i3447 = phi i32 [ %i3445, %bb3444 ], [ %i3455, %bb3446.bb3446_crit_edge ]
  %i3448 = phi i32 [ %i3434, %bb3444 ], [ %i3457, %bb3446.bb3446_crit_edge ]
  %i3449 = lshr i32 %i3448, 24
  %i3450 = trunc i32 %i3449 to i8
  %i3451 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3452 = sext i32 %i3447 to i64
  %i3453 = getelementptr inbounds i8, ptr %i3451, i64 %i3452
  store i8 %i3450, ptr %i3453, align 1, !tbaa !21
  %i3454 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3455 = add nsw i32 %i3454, 1
  store i32 %i3455, ptr %i2071, align 4, !tbaa !137
  %i3456 = load i32, ptr %i126, align 8, !tbaa !194
  %i3457 = shl i32 %i3456, 8
  store i32 %i3457, ptr %i126, align 8, !tbaa !194
  %i3458 = load i32, ptr %i123, align 4, !tbaa !193
  %i3459 = add nsw i32 %i3458, -8
  store i32 %i3459, ptr %i123, align 4, !tbaa !193
  %i3460 = icmp sgt i32 %i3458, 15
  br i1 %i3460, label %bb3446.bb3446_crit_edge, label %bb3461.loopexit, !llvm.loop !195

bb3446.bb3446_crit_edge:                          ; preds = %bb3446
  br label %bb3446

bb3461.loopexit:                                  ; preds = %bb3446
  br label %bb3461

bb3461:                                           ; preds = %bb3428.bb3461_crit_edge, %bb3461.loopexit
  %i3462 = phi i32 [ %i3434, %bb3428.bb3461_crit_edge ], [ %i3457, %bb3461.loopexit ]
  %i3463 = phi i32 [ %i3431, %bb3428.bb3461_crit_edge ], [ %i3459, %bb3461.loopexit ]
  %i3464 = add i32 %i3463, %i3440
  %i3465 = sub i32 32, %i3464
  %i3466 = shl i32 %i3442, %i3465
  %i3467 = or i32 %i3466, %i3462
  store i32 %i3467, ptr %i126, align 8, !tbaa !194
  store i32 %i3464, ptr %i123, align 4, !tbaa !193
  %i3468 = getelementptr i16, ptr %i2542, i64 28
  %i3469 = load i16, ptr %i3468, align 2, !tbaa !22
  %i3470 = zext i16 %i3469 to i64
  %i3471 = getelementptr inbounds i8, ptr %i2539, i64 %i3470
  %i3472 = load i8, ptr %i3471, align 1, !tbaa !21
  %i3473 = zext i8 %i3472 to i32
  %i3474 = getelementptr inbounds i32, ptr %i2540, i64 %i3470
  %i3475 = load i32, ptr %i3474, align 4, !tbaa !19
  %i3476 = icmp sgt i32 %i3464, 7
  br i1 %i3476, label %bb3477, label %bb3461.bb3494_crit_edge

bb3461.bb3494_crit_edge:                          ; preds = %bb3461
  br label %bb3494

bb3477:                                           ; preds = %bb3461
  %i3478 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3479

bb3479:                                           ; preds = %bb3479.bb3479_crit_edge, %bb3477
  %i3480 = phi i32 [ %i3478, %bb3477 ], [ %i3488, %bb3479.bb3479_crit_edge ]
  %i3481 = phi i32 [ %i3467, %bb3477 ], [ %i3490, %bb3479.bb3479_crit_edge ]
  %i3482 = lshr i32 %i3481, 24
  %i3483 = trunc i32 %i3482 to i8
  %i3484 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3485 = sext i32 %i3480 to i64
  %i3486 = getelementptr inbounds i8, ptr %i3484, i64 %i3485
  store i8 %i3483, ptr %i3486, align 1, !tbaa !21
  %i3487 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3488 = add nsw i32 %i3487, 1
  store i32 %i3488, ptr %i2071, align 4, !tbaa !137
  %i3489 = load i32, ptr %i126, align 8, !tbaa !194
  %i3490 = shl i32 %i3489, 8
  store i32 %i3490, ptr %i126, align 8, !tbaa !194
  %i3491 = load i32, ptr %i123, align 4, !tbaa !193
  %i3492 = add nsw i32 %i3491, -8
  store i32 %i3492, ptr %i123, align 4, !tbaa !193
  %i3493 = icmp sgt i32 %i3491, 15
  br i1 %i3493, label %bb3479.bb3479_crit_edge, label %bb3494.loopexit, !llvm.loop !195

bb3479.bb3479_crit_edge:                          ; preds = %bb3479
  br label %bb3479

bb3494.loopexit:                                  ; preds = %bb3479
  br label %bb3494

bb3494:                                           ; preds = %bb3461.bb3494_crit_edge, %bb3494.loopexit
  %i3495 = phi i32 [ %i3467, %bb3461.bb3494_crit_edge ], [ %i3490, %bb3494.loopexit ]
  %i3496 = phi i32 [ %i3464, %bb3461.bb3494_crit_edge ], [ %i3492, %bb3494.loopexit ]
  %i3497 = add i32 %i3496, %i3473
  %i3498 = sub i32 32, %i3497
  %i3499 = shl i32 %i3475, %i3498
  %i3500 = or i32 %i3499, %i3495
  store i32 %i3500, ptr %i126, align 8, !tbaa !194
  store i32 %i3497, ptr %i123, align 4, !tbaa !193
  %i3501 = getelementptr i16, ptr %i2542, i64 29
  %i3502 = load i16, ptr %i3501, align 2, !tbaa !22
  %i3503 = zext i16 %i3502 to i64
  %i3504 = getelementptr inbounds i8, ptr %i2539, i64 %i3503
  %i3505 = load i8, ptr %i3504, align 1, !tbaa !21
  %i3506 = zext i8 %i3505 to i32
  %i3507 = getelementptr inbounds i32, ptr %i2540, i64 %i3503
  %i3508 = load i32, ptr %i3507, align 4, !tbaa !19
  %i3509 = icmp sgt i32 %i3497, 7
  br i1 %i3509, label %bb3510, label %bb3494.bb3527_crit_edge

bb3494.bb3527_crit_edge:                          ; preds = %bb3494
  br label %bb3527

bb3510:                                           ; preds = %bb3494
  %i3511 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3512

bb3512:                                           ; preds = %bb3512.bb3512_crit_edge, %bb3510
  %i3513 = phi i32 [ %i3511, %bb3510 ], [ %i3521, %bb3512.bb3512_crit_edge ]
  %i3514 = phi i32 [ %i3500, %bb3510 ], [ %i3523, %bb3512.bb3512_crit_edge ]
  %i3515 = lshr i32 %i3514, 24
  %i3516 = trunc i32 %i3515 to i8
  %i3517 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3518 = sext i32 %i3513 to i64
  %i3519 = getelementptr inbounds i8, ptr %i3517, i64 %i3518
  store i8 %i3516, ptr %i3519, align 1, !tbaa !21
  %i3520 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3521 = add nsw i32 %i3520, 1
  store i32 %i3521, ptr %i2071, align 4, !tbaa !137
  %i3522 = load i32, ptr %i126, align 8, !tbaa !194
  %i3523 = shl i32 %i3522, 8
  store i32 %i3523, ptr %i126, align 8, !tbaa !194
  %i3524 = load i32, ptr %i123, align 4, !tbaa !193
  %i3525 = add nsw i32 %i3524, -8
  store i32 %i3525, ptr %i123, align 4, !tbaa !193
  %i3526 = icmp sgt i32 %i3524, 15
  br i1 %i3526, label %bb3512.bb3512_crit_edge, label %bb3527.loopexit, !llvm.loop !195

bb3512.bb3512_crit_edge:                          ; preds = %bb3512
  br label %bb3512

bb3527.loopexit:                                  ; preds = %bb3512
  br label %bb3527

bb3527:                                           ; preds = %bb3494.bb3527_crit_edge, %bb3527.loopexit
  %i3528 = phi i32 [ %i3500, %bb3494.bb3527_crit_edge ], [ %i3523, %bb3527.loopexit ]
  %i3529 = phi i32 [ %i3497, %bb3494.bb3527_crit_edge ], [ %i3525, %bb3527.loopexit ]
  %i3530 = add i32 %i3529, %i3506
  %i3531 = sub i32 32, %i3530
  %i3532 = shl i32 %i3508, %i3531
  %i3533 = or i32 %i3532, %i3528
  store i32 %i3533, ptr %i126, align 8, !tbaa !194
  store i32 %i3530, ptr %i123, align 4, !tbaa !193
  %i3534 = getelementptr i16, ptr %i2542, i64 30
  %i3535 = load i16, ptr %i3534, align 2, !tbaa !22
  %i3536 = zext i16 %i3535 to i64
  %i3537 = getelementptr inbounds i8, ptr %i2539, i64 %i3536
  %i3538 = load i8, ptr %i3537, align 1, !tbaa !21
  %i3539 = zext i8 %i3538 to i32
  %i3540 = getelementptr inbounds i32, ptr %i2540, i64 %i3536
  %i3541 = load i32, ptr %i3540, align 4, !tbaa !19
  %i3542 = icmp sgt i32 %i3530, 7
  br i1 %i3542, label %bb3543, label %bb3527.bb3560_crit_edge

bb3527.bb3560_crit_edge:                          ; preds = %bb3527
  br label %bb3560

bb3543:                                           ; preds = %bb3527
  %i3544 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3545

bb3545:                                           ; preds = %bb3545.bb3545_crit_edge, %bb3543
  %i3546 = phi i32 [ %i3544, %bb3543 ], [ %i3554, %bb3545.bb3545_crit_edge ]
  %i3547 = phi i32 [ %i3533, %bb3543 ], [ %i3556, %bb3545.bb3545_crit_edge ]
  %i3548 = lshr i32 %i3547, 24
  %i3549 = trunc i32 %i3548 to i8
  %i3550 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3551 = sext i32 %i3546 to i64
  %i3552 = getelementptr inbounds i8, ptr %i3550, i64 %i3551
  store i8 %i3549, ptr %i3552, align 1, !tbaa !21
  %i3553 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3554 = add nsw i32 %i3553, 1
  store i32 %i3554, ptr %i2071, align 4, !tbaa !137
  %i3555 = load i32, ptr %i126, align 8, !tbaa !194
  %i3556 = shl i32 %i3555, 8
  store i32 %i3556, ptr %i126, align 8, !tbaa !194
  %i3557 = load i32, ptr %i123, align 4, !tbaa !193
  %i3558 = add nsw i32 %i3557, -8
  store i32 %i3558, ptr %i123, align 4, !tbaa !193
  %i3559 = icmp sgt i32 %i3557, 15
  br i1 %i3559, label %bb3545.bb3545_crit_edge, label %bb3560.loopexit, !llvm.loop !195

bb3545.bb3545_crit_edge:                          ; preds = %bb3545
  br label %bb3545

bb3560.loopexit:                                  ; preds = %bb3545
  br label %bb3560

bb3560:                                           ; preds = %bb3527.bb3560_crit_edge, %bb3560.loopexit
  %i3561 = phi i32 [ %i3533, %bb3527.bb3560_crit_edge ], [ %i3556, %bb3560.loopexit ]
  %i3562 = phi i32 [ %i3530, %bb3527.bb3560_crit_edge ], [ %i3558, %bb3560.loopexit ]
  %i3563 = add i32 %i3562, %i3539
  %i3564 = sub i32 32, %i3563
  %i3565 = shl i32 %i3541, %i3564
  %i3566 = or i32 %i3565, %i3561
  store i32 %i3566, ptr %i126, align 8, !tbaa !194
  store i32 %i3563, ptr %i123, align 4, !tbaa !193
  %i3567 = getelementptr i16, ptr %i2542, i64 31
  %i3568 = load i16, ptr %i3567, align 2, !tbaa !22
  %i3569 = zext i16 %i3568 to i64
  %i3570 = getelementptr inbounds i8, ptr %i2539, i64 %i3569
  %i3571 = load i8, ptr %i3570, align 1, !tbaa !21
  %i3572 = zext i8 %i3571 to i32
  %i3573 = getelementptr inbounds i32, ptr %i2540, i64 %i3569
  %i3574 = load i32, ptr %i3573, align 4, !tbaa !19
  %i3575 = icmp sgt i32 %i3563, 7
  br i1 %i3575, label %bb3576, label %bb3560.bb3593_crit_edge

bb3560.bb3593_crit_edge:                          ; preds = %bb3560
  br label %bb3593

bb3576:                                           ; preds = %bb3560
  %i3577 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3578

bb3578:                                           ; preds = %bb3578.bb3578_crit_edge, %bb3576
  %i3579 = phi i32 [ %i3577, %bb3576 ], [ %i3587, %bb3578.bb3578_crit_edge ]
  %i3580 = phi i32 [ %i3566, %bb3576 ], [ %i3589, %bb3578.bb3578_crit_edge ]
  %i3581 = lshr i32 %i3580, 24
  %i3582 = trunc i32 %i3581 to i8
  %i3583 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3584 = sext i32 %i3579 to i64
  %i3585 = getelementptr inbounds i8, ptr %i3583, i64 %i3584
  store i8 %i3582, ptr %i3585, align 1, !tbaa !21
  %i3586 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3587 = add nsw i32 %i3586, 1
  store i32 %i3587, ptr %i2071, align 4, !tbaa !137
  %i3588 = load i32, ptr %i126, align 8, !tbaa !194
  %i3589 = shl i32 %i3588, 8
  store i32 %i3589, ptr %i126, align 8, !tbaa !194
  %i3590 = load i32, ptr %i123, align 4, !tbaa !193
  %i3591 = add nsw i32 %i3590, -8
  store i32 %i3591, ptr %i123, align 4, !tbaa !193
  %i3592 = icmp sgt i32 %i3590, 15
  br i1 %i3592, label %bb3578.bb3578_crit_edge, label %bb3593.loopexit, !llvm.loop !195

bb3578.bb3578_crit_edge:                          ; preds = %bb3578
  br label %bb3578

bb3593.loopexit:                                  ; preds = %bb3578
  br label %bb3593

bb3593:                                           ; preds = %bb3560.bb3593_crit_edge, %bb3593.loopexit
  %i3594 = phi i32 [ %i3566, %bb3560.bb3593_crit_edge ], [ %i3589, %bb3593.loopexit ]
  %i3595 = phi i32 [ %i3563, %bb3560.bb3593_crit_edge ], [ %i3591, %bb3593.loopexit ]
  %i3596 = add i32 %i3595, %i3572
  %i3597 = sub i32 32, %i3596
  %i3598 = shl i32 %i3574, %i3597
  %i3599 = or i32 %i3598, %i3594
  store i32 %i3599, ptr %i126, align 8, !tbaa !194
  store i32 %i3596, ptr %i123, align 4, !tbaa !193
  %i3600 = getelementptr i16, ptr %i2542, i64 32
  %i3601 = load i16, ptr %i3600, align 2, !tbaa !22
  %i3602 = zext i16 %i3601 to i64
  %i3603 = getelementptr inbounds i8, ptr %i2539, i64 %i3602
  %i3604 = load i8, ptr %i3603, align 1, !tbaa !21
  %i3605 = zext i8 %i3604 to i32
  %i3606 = getelementptr inbounds i32, ptr %i2540, i64 %i3602
  %i3607 = load i32, ptr %i3606, align 4, !tbaa !19
  %i3608 = icmp sgt i32 %i3596, 7
  br i1 %i3608, label %bb3609, label %bb3593.bb3626_crit_edge

bb3593.bb3626_crit_edge:                          ; preds = %bb3593
  br label %bb3626

bb3609:                                           ; preds = %bb3593
  %i3610 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3611

bb3611:                                           ; preds = %bb3611.bb3611_crit_edge, %bb3609
  %i3612 = phi i32 [ %i3610, %bb3609 ], [ %i3620, %bb3611.bb3611_crit_edge ]
  %i3613 = phi i32 [ %i3599, %bb3609 ], [ %i3622, %bb3611.bb3611_crit_edge ]
  %i3614 = lshr i32 %i3613, 24
  %i3615 = trunc i32 %i3614 to i8
  %i3616 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3617 = sext i32 %i3612 to i64
  %i3618 = getelementptr inbounds i8, ptr %i3616, i64 %i3617
  store i8 %i3615, ptr %i3618, align 1, !tbaa !21
  %i3619 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3620 = add nsw i32 %i3619, 1
  store i32 %i3620, ptr %i2071, align 4, !tbaa !137
  %i3621 = load i32, ptr %i126, align 8, !tbaa !194
  %i3622 = shl i32 %i3621, 8
  store i32 %i3622, ptr %i126, align 8, !tbaa !194
  %i3623 = load i32, ptr %i123, align 4, !tbaa !193
  %i3624 = add nsw i32 %i3623, -8
  store i32 %i3624, ptr %i123, align 4, !tbaa !193
  %i3625 = icmp sgt i32 %i3623, 15
  br i1 %i3625, label %bb3611.bb3611_crit_edge, label %bb3626.loopexit, !llvm.loop !195

bb3611.bb3611_crit_edge:                          ; preds = %bb3611
  br label %bb3611

bb3626.loopexit:                                  ; preds = %bb3611
  br label %bb3626

bb3626:                                           ; preds = %bb3593.bb3626_crit_edge, %bb3626.loopexit
  %i3627 = phi i32 [ %i3599, %bb3593.bb3626_crit_edge ], [ %i3622, %bb3626.loopexit ]
  %i3628 = phi i32 [ %i3596, %bb3593.bb3626_crit_edge ], [ %i3624, %bb3626.loopexit ]
  %i3629 = add i32 %i3628, %i3605
  %i3630 = sub i32 32, %i3629
  %i3631 = shl i32 %i3607, %i3630
  %i3632 = or i32 %i3631, %i3627
  store i32 %i3632, ptr %i126, align 8, !tbaa !194
  store i32 %i3629, ptr %i123, align 4, !tbaa !193
  %i3633 = getelementptr i16, ptr %i2542, i64 33
  %i3634 = load i16, ptr %i3633, align 2, !tbaa !22
  %i3635 = zext i16 %i3634 to i64
  %i3636 = getelementptr inbounds i8, ptr %i2539, i64 %i3635
  %i3637 = load i8, ptr %i3636, align 1, !tbaa !21
  %i3638 = zext i8 %i3637 to i32
  %i3639 = getelementptr inbounds i32, ptr %i2540, i64 %i3635
  %i3640 = load i32, ptr %i3639, align 4, !tbaa !19
  %i3641 = icmp sgt i32 %i3629, 7
  br i1 %i3641, label %bb3642, label %bb3626.bb3659_crit_edge

bb3626.bb3659_crit_edge:                          ; preds = %bb3626
  br label %bb3659

bb3642:                                           ; preds = %bb3626
  %i3643 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3644

bb3644:                                           ; preds = %bb3644.bb3644_crit_edge, %bb3642
  %i3645 = phi i32 [ %i3643, %bb3642 ], [ %i3653, %bb3644.bb3644_crit_edge ]
  %i3646 = phi i32 [ %i3632, %bb3642 ], [ %i3655, %bb3644.bb3644_crit_edge ]
  %i3647 = lshr i32 %i3646, 24
  %i3648 = trunc i32 %i3647 to i8
  %i3649 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3650 = sext i32 %i3645 to i64
  %i3651 = getelementptr inbounds i8, ptr %i3649, i64 %i3650
  store i8 %i3648, ptr %i3651, align 1, !tbaa !21
  %i3652 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3653 = add nsw i32 %i3652, 1
  store i32 %i3653, ptr %i2071, align 4, !tbaa !137
  %i3654 = load i32, ptr %i126, align 8, !tbaa !194
  %i3655 = shl i32 %i3654, 8
  store i32 %i3655, ptr %i126, align 8, !tbaa !194
  %i3656 = load i32, ptr %i123, align 4, !tbaa !193
  %i3657 = add nsw i32 %i3656, -8
  store i32 %i3657, ptr %i123, align 4, !tbaa !193
  %i3658 = icmp sgt i32 %i3656, 15
  br i1 %i3658, label %bb3644.bb3644_crit_edge, label %bb3659.loopexit, !llvm.loop !195

bb3644.bb3644_crit_edge:                          ; preds = %bb3644
  br label %bb3644

bb3659.loopexit:                                  ; preds = %bb3644
  br label %bb3659

bb3659:                                           ; preds = %bb3626.bb3659_crit_edge, %bb3659.loopexit
  %i3660 = phi i32 [ %i3632, %bb3626.bb3659_crit_edge ], [ %i3655, %bb3659.loopexit ]
  %i3661 = phi i32 [ %i3629, %bb3626.bb3659_crit_edge ], [ %i3657, %bb3659.loopexit ]
  %i3662 = add i32 %i3661, %i3638
  %i3663 = sub i32 32, %i3662
  %i3664 = shl i32 %i3640, %i3663
  %i3665 = or i32 %i3664, %i3660
  store i32 %i3665, ptr %i126, align 8, !tbaa !194
  store i32 %i3662, ptr %i123, align 4, !tbaa !193
  %i3666 = getelementptr i16, ptr %i2542, i64 34
  %i3667 = load i16, ptr %i3666, align 2, !tbaa !22
  %i3668 = zext i16 %i3667 to i64
  %i3669 = getelementptr inbounds i8, ptr %i2539, i64 %i3668
  %i3670 = load i8, ptr %i3669, align 1, !tbaa !21
  %i3671 = zext i8 %i3670 to i32
  %i3672 = getelementptr inbounds i32, ptr %i2540, i64 %i3668
  %i3673 = load i32, ptr %i3672, align 4, !tbaa !19
  %i3674 = icmp sgt i32 %i3662, 7
  br i1 %i3674, label %bb3675, label %bb3659.bb3692_crit_edge

bb3659.bb3692_crit_edge:                          ; preds = %bb3659
  br label %bb3692

bb3675:                                           ; preds = %bb3659
  %i3676 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3677

bb3677:                                           ; preds = %bb3677.bb3677_crit_edge, %bb3675
  %i3678 = phi i32 [ %i3676, %bb3675 ], [ %i3686, %bb3677.bb3677_crit_edge ]
  %i3679 = phi i32 [ %i3665, %bb3675 ], [ %i3688, %bb3677.bb3677_crit_edge ]
  %i3680 = lshr i32 %i3679, 24
  %i3681 = trunc i32 %i3680 to i8
  %i3682 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3683 = sext i32 %i3678 to i64
  %i3684 = getelementptr inbounds i8, ptr %i3682, i64 %i3683
  store i8 %i3681, ptr %i3684, align 1, !tbaa !21
  %i3685 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3686 = add nsw i32 %i3685, 1
  store i32 %i3686, ptr %i2071, align 4, !tbaa !137
  %i3687 = load i32, ptr %i126, align 8, !tbaa !194
  %i3688 = shl i32 %i3687, 8
  store i32 %i3688, ptr %i126, align 8, !tbaa !194
  %i3689 = load i32, ptr %i123, align 4, !tbaa !193
  %i3690 = add nsw i32 %i3689, -8
  store i32 %i3690, ptr %i123, align 4, !tbaa !193
  %i3691 = icmp sgt i32 %i3689, 15
  br i1 %i3691, label %bb3677.bb3677_crit_edge, label %bb3692.loopexit, !llvm.loop !195

bb3677.bb3677_crit_edge:                          ; preds = %bb3677
  br label %bb3677

bb3692.loopexit:                                  ; preds = %bb3677
  br label %bb3692

bb3692:                                           ; preds = %bb3659.bb3692_crit_edge, %bb3692.loopexit
  %i3693 = phi i32 [ %i3665, %bb3659.bb3692_crit_edge ], [ %i3688, %bb3692.loopexit ]
  %i3694 = phi i32 [ %i3662, %bb3659.bb3692_crit_edge ], [ %i3690, %bb3692.loopexit ]
  %i3695 = add i32 %i3694, %i3671
  %i3696 = sub i32 32, %i3695
  %i3697 = shl i32 %i3673, %i3696
  %i3698 = or i32 %i3697, %i3693
  store i32 %i3698, ptr %i126, align 8, !tbaa !194
  store i32 %i3695, ptr %i123, align 4, !tbaa !193
  %i3699 = getelementptr i16, ptr %i2542, i64 35
  %i3700 = load i16, ptr %i3699, align 2, !tbaa !22
  %i3701 = zext i16 %i3700 to i64
  %i3702 = getelementptr inbounds i8, ptr %i2539, i64 %i3701
  %i3703 = load i8, ptr %i3702, align 1, !tbaa !21
  %i3704 = zext i8 %i3703 to i32
  %i3705 = getelementptr inbounds i32, ptr %i2540, i64 %i3701
  %i3706 = load i32, ptr %i3705, align 4, !tbaa !19
  %i3707 = icmp sgt i32 %i3695, 7
  br i1 %i3707, label %bb3708, label %bb3692.bb3725_crit_edge

bb3692.bb3725_crit_edge:                          ; preds = %bb3692
  br label %bb3725

bb3708:                                           ; preds = %bb3692
  %i3709 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3710

bb3710:                                           ; preds = %bb3710.bb3710_crit_edge, %bb3708
  %i3711 = phi i32 [ %i3709, %bb3708 ], [ %i3719, %bb3710.bb3710_crit_edge ]
  %i3712 = phi i32 [ %i3698, %bb3708 ], [ %i3721, %bb3710.bb3710_crit_edge ]
  %i3713 = lshr i32 %i3712, 24
  %i3714 = trunc i32 %i3713 to i8
  %i3715 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3716 = sext i32 %i3711 to i64
  %i3717 = getelementptr inbounds i8, ptr %i3715, i64 %i3716
  store i8 %i3714, ptr %i3717, align 1, !tbaa !21
  %i3718 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3719 = add nsw i32 %i3718, 1
  store i32 %i3719, ptr %i2071, align 4, !tbaa !137
  %i3720 = load i32, ptr %i126, align 8, !tbaa !194
  %i3721 = shl i32 %i3720, 8
  store i32 %i3721, ptr %i126, align 8, !tbaa !194
  %i3722 = load i32, ptr %i123, align 4, !tbaa !193
  %i3723 = add nsw i32 %i3722, -8
  store i32 %i3723, ptr %i123, align 4, !tbaa !193
  %i3724 = icmp sgt i32 %i3722, 15
  br i1 %i3724, label %bb3710.bb3710_crit_edge, label %bb3725.loopexit, !llvm.loop !195

bb3710.bb3710_crit_edge:                          ; preds = %bb3710
  br label %bb3710

bb3725.loopexit:                                  ; preds = %bb3710
  br label %bb3725

bb3725:                                           ; preds = %bb3692.bb3725_crit_edge, %bb3725.loopexit
  %i3726 = phi i32 [ %i3698, %bb3692.bb3725_crit_edge ], [ %i3721, %bb3725.loopexit ]
  %i3727 = phi i32 [ %i3695, %bb3692.bb3725_crit_edge ], [ %i3723, %bb3725.loopexit ]
  %i3728 = add i32 %i3727, %i3704
  %i3729 = sub i32 32, %i3728
  %i3730 = shl i32 %i3706, %i3729
  %i3731 = or i32 %i3730, %i3726
  store i32 %i3731, ptr %i126, align 8, !tbaa !194
  store i32 %i3728, ptr %i123, align 4, !tbaa !193
  %i3732 = getelementptr i16, ptr %i2542, i64 36
  %i3733 = load i16, ptr %i3732, align 2, !tbaa !22
  %i3734 = zext i16 %i3733 to i64
  %i3735 = getelementptr inbounds i8, ptr %i2539, i64 %i3734
  %i3736 = load i8, ptr %i3735, align 1, !tbaa !21
  %i3737 = zext i8 %i3736 to i32
  %i3738 = getelementptr inbounds i32, ptr %i2540, i64 %i3734
  %i3739 = load i32, ptr %i3738, align 4, !tbaa !19
  %i3740 = icmp sgt i32 %i3728, 7
  br i1 %i3740, label %bb3741, label %bb3725.bb3758_crit_edge

bb3725.bb3758_crit_edge:                          ; preds = %bb3725
  br label %bb3758

bb3741:                                           ; preds = %bb3725
  %i3742 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3743

bb3743:                                           ; preds = %bb3743.bb3743_crit_edge, %bb3741
  %i3744 = phi i32 [ %i3742, %bb3741 ], [ %i3752, %bb3743.bb3743_crit_edge ]
  %i3745 = phi i32 [ %i3731, %bb3741 ], [ %i3754, %bb3743.bb3743_crit_edge ]
  %i3746 = lshr i32 %i3745, 24
  %i3747 = trunc i32 %i3746 to i8
  %i3748 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3749 = sext i32 %i3744 to i64
  %i3750 = getelementptr inbounds i8, ptr %i3748, i64 %i3749
  store i8 %i3747, ptr %i3750, align 1, !tbaa !21
  %i3751 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3752 = add nsw i32 %i3751, 1
  store i32 %i3752, ptr %i2071, align 4, !tbaa !137
  %i3753 = load i32, ptr %i126, align 8, !tbaa !194
  %i3754 = shl i32 %i3753, 8
  store i32 %i3754, ptr %i126, align 8, !tbaa !194
  %i3755 = load i32, ptr %i123, align 4, !tbaa !193
  %i3756 = add nsw i32 %i3755, -8
  store i32 %i3756, ptr %i123, align 4, !tbaa !193
  %i3757 = icmp sgt i32 %i3755, 15
  br i1 %i3757, label %bb3743.bb3743_crit_edge, label %bb3758.loopexit, !llvm.loop !195

bb3743.bb3743_crit_edge:                          ; preds = %bb3743
  br label %bb3743

bb3758.loopexit:                                  ; preds = %bb3743
  br label %bb3758

bb3758:                                           ; preds = %bb3725.bb3758_crit_edge, %bb3758.loopexit
  %i3759 = phi i32 [ %i3731, %bb3725.bb3758_crit_edge ], [ %i3754, %bb3758.loopexit ]
  %i3760 = phi i32 [ %i3728, %bb3725.bb3758_crit_edge ], [ %i3756, %bb3758.loopexit ]
  %i3761 = add i32 %i3760, %i3737
  %i3762 = sub i32 32, %i3761
  %i3763 = shl i32 %i3739, %i3762
  %i3764 = or i32 %i3763, %i3759
  store i32 %i3764, ptr %i126, align 8, !tbaa !194
  store i32 %i3761, ptr %i123, align 4, !tbaa !193
  %i3765 = getelementptr i16, ptr %i2542, i64 37
  %i3766 = load i16, ptr %i3765, align 2, !tbaa !22
  %i3767 = zext i16 %i3766 to i64
  %i3768 = getelementptr inbounds i8, ptr %i2539, i64 %i3767
  %i3769 = load i8, ptr %i3768, align 1, !tbaa !21
  %i3770 = zext i8 %i3769 to i32
  %i3771 = getelementptr inbounds i32, ptr %i2540, i64 %i3767
  %i3772 = load i32, ptr %i3771, align 4, !tbaa !19
  %i3773 = icmp sgt i32 %i3761, 7
  br i1 %i3773, label %bb3774, label %bb3758.bb3791_crit_edge

bb3758.bb3791_crit_edge:                          ; preds = %bb3758
  br label %bb3791

bb3774:                                           ; preds = %bb3758
  %i3775 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3776

bb3776:                                           ; preds = %bb3776.bb3776_crit_edge, %bb3774
  %i3777 = phi i32 [ %i3775, %bb3774 ], [ %i3785, %bb3776.bb3776_crit_edge ]
  %i3778 = phi i32 [ %i3764, %bb3774 ], [ %i3787, %bb3776.bb3776_crit_edge ]
  %i3779 = lshr i32 %i3778, 24
  %i3780 = trunc i32 %i3779 to i8
  %i3781 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3782 = sext i32 %i3777 to i64
  %i3783 = getelementptr inbounds i8, ptr %i3781, i64 %i3782
  store i8 %i3780, ptr %i3783, align 1, !tbaa !21
  %i3784 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3785 = add nsw i32 %i3784, 1
  store i32 %i3785, ptr %i2071, align 4, !tbaa !137
  %i3786 = load i32, ptr %i126, align 8, !tbaa !194
  %i3787 = shl i32 %i3786, 8
  store i32 %i3787, ptr %i126, align 8, !tbaa !194
  %i3788 = load i32, ptr %i123, align 4, !tbaa !193
  %i3789 = add nsw i32 %i3788, -8
  store i32 %i3789, ptr %i123, align 4, !tbaa !193
  %i3790 = icmp sgt i32 %i3788, 15
  br i1 %i3790, label %bb3776.bb3776_crit_edge, label %bb3791.loopexit, !llvm.loop !195

bb3776.bb3776_crit_edge:                          ; preds = %bb3776
  br label %bb3776

bb3791.loopexit:                                  ; preds = %bb3776
  br label %bb3791

bb3791:                                           ; preds = %bb3758.bb3791_crit_edge, %bb3791.loopexit
  %i3792 = phi i32 [ %i3764, %bb3758.bb3791_crit_edge ], [ %i3787, %bb3791.loopexit ]
  %i3793 = phi i32 [ %i3761, %bb3758.bb3791_crit_edge ], [ %i3789, %bb3791.loopexit ]
  %i3794 = add i32 %i3793, %i3770
  %i3795 = sub i32 32, %i3794
  %i3796 = shl i32 %i3772, %i3795
  %i3797 = or i32 %i3796, %i3792
  store i32 %i3797, ptr %i126, align 8, !tbaa !194
  store i32 %i3794, ptr %i123, align 4, !tbaa !193
  %i3798 = getelementptr i16, ptr %i2542, i64 38
  %i3799 = load i16, ptr %i3798, align 2, !tbaa !22
  %i3800 = zext i16 %i3799 to i64
  %i3801 = getelementptr inbounds i8, ptr %i2539, i64 %i3800
  %i3802 = load i8, ptr %i3801, align 1, !tbaa !21
  %i3803 = zext i8 %i3802 to i32
  %i3804 = getelementptr inbounds i32, ptr %i2540, i64 %i3800
  %i3805 = load i32, ptr %i3804, align 4, !tbaa !19
  %i3806 = icmp sgt i32 %i3794, 7
  br i1 %i3806, label %bb3807, label %bb3791.bb3824_crit_edge

bb3791.bb3824_crit_edge:                          ; preds = %bb3791
  br label %bb3824

bb3807:                                           ; preds = %bb3791
  %i3808 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3809

bb3809:                                           ; preds = %bb3809.bb3809_crit_edge, %bb3807
  %i3810 = phi i32 [ %i3808, %bb3807 ], [ %i3818, %bb3809.bb3809_crit_edge ]
  %i3811 = phi i32 [ %i3797, %bb3807 ], [ %i3820, %bb3809.bb3809_crit_edge ]
  %i3812 = lshr i32 %i3811, 24
  %i3813 = trunc i32 %i3812 to i8
  %i3814 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3815 = sext i32 %i3810 to i64
  %i3816 = getelementptr inbounds i8, ptr %i3814, i64 %i3815
  store i8 %i3813, ptr %i3816, align 1, !tbaa !21
  %i3817 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3818 = add nsw i32 %i3817, 1
  store i32 %i3818, ptr %i2071, align 4, !tbaa !137
  %i3819 = load i32, ptr %i126, align 8, !tbaa !194
  %i3820 = shl i32 %i3819, 8
  store i32 %i3820, ptr %i126, align 8, !tbaa !194
  %i3821 = load i32, ptr %i123, align 4, !tbaa !193
  %i3822 = add nsw i32 %i3821, -8
  store i32 %i3822, ptr %i123, align 4, !tbaa !193
  %i3823 = icmp sgt i32 %i3821, 15
  br i1 %i3823, label %bb3809.bb3809_crit_edge, label %bb3824.loopexit, !llvm.loop !195

bb3809.bb3809_crit_edge:                          ; preds = %bb3809
  br label %bb3809

bb3824.loopexit:                                  ; preds = %bb3809
  br label %bb3824

bb3824:                                           ; preds = %bb3791.bb3824_crit_edge, %bb3824.loopexit
  %i3825 = phi i32 [ %i3797, %bb3791.bb3824_crit_edge ], [ %i3820, %bb3824.loopexit ]
  %i3826 = phi i32 [ %i3794, %bb3791.bb3824_crit_edge ], [ %i3822, %bb3824.loopexit ]
  %i3827 = add i32 %i3826, %i3803
  %i3828 = sub i32 32, %i3827
  %i3829 = shl i32 %i3805, %i3828
  %i3830 = or i32 %i3829, %i3825
  store i32 %i3830, ptr %i126, align 8, !tbaa !194
  store i32 %i3827, ptr %i123, align 4, !tbaa !193
  %i3831 = getelementptr i16, ptr %i2542, i64 39
  %i3832 = load i16, ptr %i3831, align 2, !tbaa !22
  %i3833 = zext i16 %i3832 to i64
  %i3834 = getelementptr inbounds i8, ptr %i2539, i64 %i3833
  %i3835 = load i8, ptr %i3834, align 1, !tbaa !21
  %i3836 = zext i8 %i3835 to i32
  %i3837 = getelementptr inbounds i32, ptr %i2540, i64 %i3833
  %i3838 = load i32, ptr %i3837, align 4, !tbaa !19
  %i3839 = icmp sgt i32 %i3827, 7
  br i1 %i3839, label %bb3840, label %bb3824.bb3857_crit_edge

bb3824.bb3857_crit_edge:                          ; preds = %bb3824
  br label %bb3857

bb3840:                                           ; preds = %bb3824
  %i3841 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3842

bb3842:                                           ; preds = %bb3842.bb3842_crit_edge, %bb3840
  %i3843 = phi i32 [ %i3841, %bb3840 ], [ %i3851, %bb3842.bb3842_crit_edge ]
  %i3844 = phi i32 [ %i3830, %bb3840 ], [ %i3853, %bb3842.bb3842_crit_edge ]
  %i3845 = lshr i32 %i3844, 24
  %i3846 = trunc i32 %i3845 to i8
  %i3847 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3848 = sext i32 %i3843 to i64
  %i3849 = getelementptr inbounds i8, ptr %i3847, i64 %i3848
  store i8 %i3846, ptr %i3849, align 1, !tbaa !21
  %i3850 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3851 = add nsw i32 %i3850, 1
  store i32 %i3851, ptr %i2071, align 4, !tbaa !137
  %i3852 = load i32, ptr %i126, align 8, !tbaa !194
  %i3853 = shl i32 %i3852, 8
  store i32 %i3853, ptr %i126, align 8, !tbaa !194
  %i3854 = load i32, ptr %i123, align 4, !tbaa !193
  %i3855 = add nsw i32 %i3854, -8
  store i32 %i3855, ptr %i123, align 4, !tbaa !193
  %i3856 = icmp sgt i32 %i3854, 15
  br i1 %i3856, label %bb3842.bb3842_crit_edge, label %bb3857.loopexit, !llvm.loop !195

bb3842.bb3842_crit_edge:                          ; preds = %bb3842
  br label %bb3842

bb3857.loopexit:                                  ; preds = %bb3842
  br label %bb3857

bb3857:                                           ; preds = %bb3824.bb3857_crit_edge, %bb3857.loopexit
  %i3858 = phi i32 [ %i3830, %bb3824.bb3857_crit_edge ], [ %i3853, %bb3857.loopexit ]
  %i3859 = phi i32 [ %i3827, %bb3824.bb3857_crit_edge ], [ %i3855, %bb3857.loopexit ]
  %i3860 = add i32 %i3859, %i3836
  %i3861 = sub i32 32, %i3860
  %i3862 = shl i32 %i3838, %i3861
  %i3863 = or i32 %i3862, %i3858
  store i32 %i3863, ptr %i126, align 8, !tbaa !194
  store i32 %i3860, ptr %i123, align 4, !tbaa !193
  %i3864 = getelementptr i16, ptr %i2542, i64 40
  %i3865 = load i16, ptr %i3864, align 2, !tbaa !22
  %i3866 = zext i16 %i3865 to i64
  %i3867 = getelementptr inbounds i8, ptr %i2539, i64 %i3866
  %i3868 = load i8, ptr %i3867, align 1, !tbaa !21
  %i3869 = zext i8 %i3868 to i32
  %i3870 = getelementptr inbounds i32, ptr %i2540, i64 %i3866
  %i3871 = load i32, ptr %i3870, align 4, !tbaa !19
  %i3872 = icmp sgt i32 %i3860, 7
  br i1 %i3872, label %bb3873, label %bb3857.bb3890_crit_edge

bb3857.bb3890_crit_edge:                          ; preds = %bb3857
  br label %bb3890

bb3873:                                           ; preds = %bb3857
  %i3874 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3875

bb3875:                                           ; preds = %bb3875.bb3875_crit_edge, %bb3873
  %i3876 = phi i32 [ %i3874, %bb3873 ], [ %i3884, %bb3875.bb3875_crit_edge ]
  %i3877 = phi i32 [ %i3863, %bb3873 ], [ %i3886, %bb3875.bb3875_crit_edge ]
  %i3878 = lshr i32 %i3877, 24
  %i3879 = trunc i32 %i3878 to i8
  %i3880 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3881 = sext i32 %i3876 to i64
  %i3882 = getelementptr inbounds i8, ptr %i3880, i64 %i3881
  store i8 %i3879, ptr %i3882, align 1, !tbaa !21
  %i3883 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3884 = add nsw i32 %i3883, 1
  store i32 %i3884, ptr %i2071, align 4, !tbaa !137
  %i3885 = load i32, ptr %i126, align 8, !tbaa !194
  %i3886 = shl i32 %i3885, 8
  store i32 %i3886, ptr %i126, align 8, !tbaa !194
  %i3887 = load i32, ptr %i123, align 4, !tbaa !193
  %i3888 = add nsw i32 %i3887, -8
  store i32 %i3888, ptr %i123, align 4, !tbaa !193
  %i3889 = icmp sgt i32 %i3887, 15
  br i1 %i3889, label %bb3875.bb3875_crit_edge, label %bb3890.loopexit, !llvm.loop !195

bb3875.bb3875_crit_edge:                          ; preds = %bb3875
  br label %bb3875

bb3890.loopexit:                                  ; preds = %bb3875
  br label %bb3890

bb3890:                                           ; preds = %bb3857.bb3890_crit_edge, %bb3890.loopexit
  %i3891 = phi i32 [ %i3863, %bb3857.bb3890_crit_edge ], [ %i3886, %bb3890.loopexit ]
  %i3892 = phi i32 [ %i3860, %bb3857.bb3890_crit_edge ], [ %i3888, %bb3890.loopexit ]
  %i3893 = add i32 %i3892, %i3869
  %i3894 = sub i32 32, %i3893
  %i3895 = shl i32 %i3871, %i3894
  %i3896 = or i32 %i3895, %i3891
  store i32 %i3896, ptr %i126, align 8, !tbaa !194
  store i32 %i3893, ptr %i123, align 4, !tbaa !193
  %i3897 = getelementptr i16, ptr %i2542, i64 41
  %i3898 = load i16, ptr %i3897, align 2, !tbaa !22
  %i3899 = zext i16 %i3898 to i64
  %i3900 = getelementptr inbounds i8, ptr %i2539, i64 %i3899
  %i3901 = load i8, ptr %i3900, align 1, !tbaa !21
  %i3902 = zext i8 %i3901 to i32
  %i3903 = getelementptr inbounds i32, ptr %i2540, i64 %i3899
  %i3904 = load i32, ptr %i3903, align 4, !tbaa !19
  %i3905 = icmp sgt i32 %i3893, 7
  br i1 %i3905, label %bb3906, label %bb3890.bb3923_crit_edge

bb3890.bb3923_crit_edge:                          ; preds = %bb3890
  br label %bb3923

bb3906:                                           ; preds = %bb3890
  %i3907 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3908

bb3908:                                           ; preds = %bb3908.bb3908_crit_edge, %bb3906
  %i3909 = phi i32 [ %i3907, %bb3906 ], [ %i3917, %bb3908.bb3908_crit_edge ]
  %i3910 = phi i32 [ %i3896, %bb3906 ], [ %i3919, %bb3908.bb3908_crit_edge ]
  %i3911 = lshr i32 %i3910, 24
  %i3912 = trunc i32 %i3911 to i8
  %i3913 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3914 = sext i32 %i3909 to i64
  %i3915 = getelementptr inbounds i8, ptr %i3913, i64 %i3914
  store i8 %i3912, ptr %i3915, align 1, !tbaa !21
  %i3916 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3917 = add nsw i32 %i3916, 1
  store i32 %i3917, ptr %i2071, align 4, !tbaa !137
  %i3918 = load i32, ptr %i126, align 8, !tbaa !194
  %i3919 = shl i32 %i3918, 8
  store i32 %i3919, ptr %i126, align 8, !tbaa !194
  %i3920 = load i32, ptr %i123, align 4, !tbaa !193
  %i3921 = add nsw i32 %i3920, -8
  store i32 %i3921, ptr %i123, align 4, !tbaa !193
  %i3922 = icmp sgt i32 %i3920, 15
  br i1 %i3922, label %bb3908.bb3908_crit_edge, label %bb3923.loopexit, !llvm.loop !195

bb3908.bb3908_crit_edge:                          ; preds = %bb3908
  br label %bb3908

bb3923.loopexit:                                  ; preds = %bb3908
  br label %bb3923

bb3923:                                           ; preds = %bb3890.bb3923_crit_edge, %bb3923.loopexit
  %i3924 = phi i32 [ %i3896, %bb3890.bb3923_crit_edge ], [ %i3919, %bb3923.loopexit ]
  %i3925 = phi i32 [ %i3893, %bb3890.bb3923_crit_edge ], [ %i3921, %bb3923.loopexit ]
  %i3926 = add i32 %i3925, %i3902
  %i3927 = sub i32 32, %i3926
  %i3928 = shl i32 %i3904, %i3927
  %i3929 = or i32 %i3928, %i3924
  store i32 %i3929, ptr %i126, align 8, !tbaa !194
  store i32 %i3926, ptr %i123, align 4, !tbaa !193
  %i3930 = getelementptr i16, ptr %i2542, i64 42
  %i3931 = load i16, ptr %i3930, align 2, !tbaa !22
  %i3932 = zext i16 %i3931 to i64
  %i3933 = getelementptr inbounds i8, ptr %i2539, i64 %i3932
  %i3934 = load i8, ptr %i3933, align 1, !tbaa !21
  %i3935 = zext i8 %i3934 to i32
  %i3936 = getelementptr inbounds i32, ptr %i2540, i64 %i3932
  %i3937 = load i32, ptr %i3936, align 4, !tbaa !19
  %i3938 = icmp sgt i32 %i3926, 7
  br i1 %i3938, label %bb3939, label %bb3923.bb3956_crit_edge

bb3923.bb3956_crit_edge:                          ; preds = %bb3923
  br label %bb3956

bb3939:                                           ; preds = %bb3923
  %i3940 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3941

bb3941:                                           ; preds = %bb3941.bb3941_crit_edge, %bb3939
  %i3942 = phi i32 [ %i3940, %bb3939 ], [ %i3950, %bb3941.bb3941_crit_edge ]
  %i3943 = phi i32 [ %i3929, %bb3939 ], [ %i3952, %bb3941.bb3941_crit_edge ]
  %i3944 = lshr i32 %i3943, 24
  %i3945 = trunc i32 %i3944 to i8
  %i3946 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3947 = sext i32 %i3942 to i64
  %i3948 = getelementptr inbounds i8, ptr %i3946, i64 %i3947
  store i8 %i3945, ptr %i3948, align 1, !tbaa !21
  %i3949 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3950 = add nsw i32 %i3949, 1
  store i32 %i3950, ptr %i2071, align 4, !tbaa !137
  %i3951 = load i32, ptr %i126, align 8, !tbaa !194
  %i3952 = shl i32 %i3951, 8
  store i32 %i3952, ptr %i126, align 8, !tbaa !194
  %i3953 = load i32, ptr %i123, align 4, !tbaa !193
  %i3954 = add nsw i32 %i3953, -8
  store i32 %i3954, ptr %i123, align 4, !tbaa !193
  %i3955 = icmp sgt i32 %i3953, 15
  br i1 %i3955, label %bb3941.bb3941_crit_edge, label %bb3956.loopexit, !llvm.loop !195

bb3941.bb3941_crit_edge:                          ; preds = %bb3941
  br label %bb3941

bb3956.loopexit:                                  ; preds = %bb3941
  br label %bb3956

bb3956:                                           ; preds = %bb3923.bb3956_crit_edge, %bb3956.loopexit
  %i3957 = phi i32 [ %i3929, %bb3923.bb3956_crit_edge ], [ %i3952, %bb3956.loopexit ]
  %i3958 = phi i32 [ %i3926, %bb3923.bb3956_crit_edge ], [ %i3954, %bb3956.loopexit ]
  %i3959 = add i32 %i3958, %i3935
  %i3960 = sub i32 32, %i3959
  %i3961 = shl i32 %i3937, %i3960
  %i3962 = or i32 %i3961, %i3957
  store i32 %i3962, ptr %i126, align 8, !tbaa !194
  store i32 %i3959, ptr %i123, align 4, !tbaa !193
  %i3963 = getelementptr i16, ptr %i2542, i64 43
  %i3964 = load i16, ptr %i3963, align 2, !tbaa !22
  %i3965 = zext i16 %i3964 to i64
  %i3966 = getelementptr inbounds i8, ptr %i2539, i64 %i3965
  %i3967 = load i8, ptr %i3966, align 1, !tbaa !21
  %i3968 = zext i8 %i3967 to i32
  %i3969 = getelementptr inbounds i32, ptr %i2540, i64 %i3965
  %i3970 = load i32, ptr %i3969, align 4, !tbaa !19
  %i3971 = icmp sgt i32 %i3959, 7
  br i1 %i3971, label %bb3972, label %bb3956.bb3989_crit_edge

bb3956.bb3989_crit_edge:                          ; preds = %bb3956
  br label %bb3989

bb3972:                                           ; preds = %bb3956
  %i3973 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb3974

bb3974:                                           ; preds = %bb3974.bb3974_crit_edge, %bb3972
  %i3975 = phi i32 [ %i3973, %bb3972 ], [ %i3983, %bb3974.bb3974_crit_edge ]
  %i3976 = phi i32 [ %i3962, %bb3972 ], [ %i3985, %bb3974.bb3974_crit_edge ]
  %i3977 = lshr i32 %i3976, 24
  %i3978 = trunc i32 %i3977 to i8
  %i3979 = load ptr, ptr %i37, align 8, !tbaa !129
  %i3980 = sext i32 %i3975 to i64
  %i3981 = getelementptr inbounds i8, ptr %i3979, i64 %i3980
  store i8 %i3978, ptr %i3981, align 1, !tbaa !21
  %i3982 = load i32, ptr %i2071, align 4, !tbaa !137
  %i3983 = add nsw i32 %i3982, 1
  store i32 %i3983, ptr %i2071, align 4, !tbaa !137
  %i3984 = load i32, ptr %i126, align 8, !tbaa !194
  %i3985 = shl i32 %i3984, 8
  store i32 %i3985, ptr %i126, align 8, !tbaa !194
  %i3986 = load i32, ptr %i123, align 4, !tbaa !193
  %i3987 = add nsw i32 %i3986, -8
  store i32 %i3987, ptr %i123, align 4, !tbaa !193
  %i3988 = icmp sgt i32 %i3986, 15
  br i1 %i3988, label %bb3974.bb3974_crit_edge, label %bb3989.loopexit, !llvm.loop !195

bb3974.bb3974_crit_edge:                          ; preds = %bb3974
  br label %bb3974

bb3989.loopexit:                                  ; preds = %bb3974
  br label %bb3989

bb3989:                                           ; preds = %bb3956.bb3989_crit_edge, %bb3989.loopexit
  %i3990 = phi i32 [ %i3962, %bb3956.bb3989_crit_edge ], [ %i3985, %bb3989.loopexit ]
  %i3991 = phi i32 [ %i3959, %bb3956.bb3989_crit_edge ], [ %i3987, %bb3989.loopexit ]
  %i3992 = add i32 %i3991, %i3968
  %i3993 = sub i32 32, %i3992
  %i3994 = shl i32 %i3970, %i3993
  %i3995 = or i32 %i3994, %i3990
  store i32 %i3995, ptr %i126, align 8, !tbaa !194
  store i32 %i3992, ptr %i123, align 4, !tbaa !193
  %i3996 = getelementptr i16, ptr %i2542, i64 44
  %i3997 = load i16, ptr %i3996, align 2, !tbaa !22
  %i3998 = zext i16 %i3997 to i64
  %i3999 = getelementptr inbounds i8, ptr %i2539, i64 %i3998
  %i4000 = load i8, ptr %i3999, align 1, !tbaa !21
  %i4001 = zext i8 %i4000 to i32
  %i4002 = getelementptr inbounds i32, ptr %i2540, i64 %i3998
  %i4003 = load i32, ptr %i4002, align 4, !tbaa !19
  %i4004 = icmp sgt i32 %i3992, 7
  br i1 %i4004, label %bb4005, label %bb3989.bb4022_crit_edge

bb3989.bb4022_crit_edge:                          ; preds = %bb3989
  br label %bb4022

bb4005:                                           ; preds = %bb3989
  %i4006 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb4007

bb4007:                                           ; preds = %bb4007.bb4007_crit_edge, %bb4005
  %i4008 = phi i32 [ %i4006, %bb4005 ], [ %i4016, %bb4007.bb4007_crit_edge ]
  %i4009 = phi i32 [ %i3995, %bb4005 ], [ %i4018, %bb4007.bb4007_crit_edge ]
  %i4010 = lshr i32 %i4009, 24
  %i4011 = trunc i32 %i4010 to i8
  %i4012 = load ptr, ptr %i37, align 8, !tbaa !129
  %i4013 = sext i32 %i4008 to i64
  %i4014 = getelementptr inbounds i8, ptr %i4012, i64 %i4013
  store i8 %i4011, ptr %i4014, align 1, !tbaa !21
  %i4015 = load i32, ptr %i2071, align 4, !tbaa !137
  %i4016 = add nsw i32 %i4015, 1
  store i32 %i4016, ptr %i2071, align 4, !tbaa !137
  %i4017 = load i32, ptr %i126, align 8, !tbaa !194
  %i4018 = shl i32 %i4017, 8
  store i32 %i4018, ptr %i126, align 8, !tbaa !194
  %i4019 = load i32, ptr %i123, align 4, !tbaa !193
  %i4020 = add nsw i32 %i4019, -8
  store i32 %i4020, ptr %i123, align 4, !tbaa !193
  %i4021 = icmp sgt i32 %i4019, 15
  br i1 %i4021, label %bb4007.bb4007_crit_edge, label %bb4022.loopexit, !llvm.loop !195

bb4007.bb4007_crit_edge:                          ; preds = %bb4007
  br label %bb4007

bb4022.loopexit:                                  ; preds = %bb4007
  br label %bb4022

bb4022:                                           ; preds = %bb3989.bb4022_crit_edge, %bb4022.loopexit
  %i4023 = phi i32 [ %i3995, %bb3989.bb4022_crit_edge ], [ %i4018, %bb4022.loopexit ]
  %i4024 = phi i32 [ %i3992, %bb3989.bb4022_crit_edge ], [ %i4020, %bb4022.loopexit ]
  %i4025 = add i32 %i4024, %i4001
  %i4026 = sub i32 32, %i4025
  %i4027 = shl i32 %i4003, %i4026
  %i4028 = or i32 %i4027, %i4023
  store i32 %i4028, ptr %i126, align 8, !tbaa !194
  store i32 %i4025, ptr %i123, align 4, !tbaa !193
  %i4029 = getelementptr i16, ptr %i2542, i64 45
  %i4030 = load i16, ptr %i4029, align 2, !tbaa !22
  %i4031 = zext i16 %i4030 to i64
  %i4032 = getelementptr inbounds i8, ptr %i2539, i64 %i4031
  %i4033 = load i8, ptr %i4032, align 1, !tbaa !21
  %i4034 = zext i8 %i4033 to i32
  %i4035 = getelementptr inbounds i32, ptr %i2540, i64 %i4031
  %i4036 = load i32, ptr %i4035, align 4, !tbaa !19
  %i4037 = icmp sgt i32 %i4025, 7
  br i1 %i4037, label %bb4038, label %bb4022.bb4055_crit_edge

bb4022.bb4055_crit_edge:                          ; preds = %bb4022
  br label %bb4055

bb4038:                                           ; preds = %bb4022
  %i4039 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb4040

bb4040:                                           ; preds = %bb4040.bb4040_crit_edge, %bb4038
  %i4041 = phi i32 [ %i4039, %bb4038 ], [ %i4049, %bb4040.bb4040_crit_edge ]
  %i4042 = phi i32 [ %i4028, %bb4038 ], [ %i4051, %bb4040.bb4040_crit_edge ]
  %i4043 = lshr i32 %i4042, 24
  %i4044 = trunc i32 %i4043 to i8
  %i4045 = load ptr, ptr %i37, align 8, !tbaa !129
  %i4046 = sext i32 %i4041 to i64
  %i4047 = getelementptr inbounds i8, ptr %i4045, i64 %i4046
  store i8 %i4044, ptr %i4047, align 1, !tbaa !21
  %i4048 = load i32, ptr %i2071, align 4, !tbaa !137
  %i4049 = add nsw i32 %i4048, 1
  store i32 %i4049, ptr %i2071, align 4, !tbaa !137
  %i4050 = load i32, ptr %i126, align 8, !tbaa !194
  %i4051 = shl i32 %i4050, 8
  store i32 %i4051, ptr %i126, align 8, !tbaa !194
  %i4052 = load i32, ptr %i123, align 4, !tbaa !193
  %i4053 = add nsw i32 %i4052, -8
  store i32 %i4053, ptr %i123, align 4, !tbaa !193
  %i4054 = icmp sgt i32 %i4052, 15
  br i1 %i4054, label %bb4040.bb4040_crit_edge, label %bb4055.loopexit, !llvm.loop !195

bb4040.bb4040_crit_edge:                          ; preds = %bb4040
  br label %bb4040

bb4055.loopexit:                                  ; preds = %bb4040
  br label %bb4055

bb4055:                                           ; preds = %bb4022.bb4055_crit_edge, %bb4055.loopexit
  %i4056 = phi i32 [ %i4028, %bb4022.bb4055_crit_edge ], [ %i4051, %bb4055.loopexit ]
  %i4057 = phi i32 [ %i4025, %bb4022.bb4055_crit_edge ], [ %i4053, %bb4055.loopexit ]
  %i4058 = add i32 %i4057, %i4034
  %i4059 = sub i32 32, %i4058
  %i4060 = shl i32 %i4036, %i4059
  %i4061 = or i32 %i4060, %i4056
  store i32 %i4061, ptr %i126, align 8, !tbaa !194
  store i32 %i4058, ptr %i123, align 4, !tbaa !193
  %i4062 = getelementptr i16, ptr %i2542, i64 46
  %i4063 = load i16, ptr %i4062, align 2, !tbaa !22
  %i4064 = zext i16 %i4063 to i64
  %i4065 = getelementptr inbounds i8, ptr %i2539, i64 %i4064
  %i4066 = load i8, ptr %i4065, align 1, !tbaa !21
  %i4067 = zext i8 %i4066 to i32
  %i4068 = getelementptr inbounds i32, ptr %i2540, i64 %i4064
  %i4069 = load i32, ptr %i4068, align 4, !tbaa !19
  %i4070 = icmp sgt i32 %i4058, 7
  br i1 %i4070, label %bb4071, label %bb4055.bb4088_crit_edge

bb4055.bb4088_crit_edge:                          ; preds = %bb4055
  br label %bb4088

bb4071:                                           ; preds = %bb4055
  %i4072 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb4073

bb4073:                                           ; preds = %bb4073.bb4073_crit_edge, %bb4071
  %i4074 = phi i32 [ %i4072, %bb4071 ], [ %i4082, %bb4073.bb4073_crit_edge ]
  %i4075 = phi i32 [ %i4061, %bb4071 ], [ %i4084, %bb4073.bb4073_crit_edge ]
  %i4076 = lshr i32 %i4075, 24
  %i4077 = trunc i32 %i4076 to i8
  %i4078 = load ptr, ptr %i37, align 8, !tbaa !129
  %i4079 = sext i32 %i4074 to i64
  %i4080 = getelementptr inbounds i8, ptr %i4078, i64 %i4079
  store i8 %i4077, ptr %i4080, align 1, !tbaa !21
  %i4081 = load i32, ptr %i2071, align 4, !tbaa !137
  %i4082 = add nsw i32 %i4081, 1
  store i32 %i4082, ptr %i2071, align 4, !tbaa !137
  %i4083 = load i32, ptr %i126, align 8, !tbaa !194
  %i4084 = shl i32 %i4083, 8
  store i32 %i4084, ptr %i126, align 8, !tbaa !194
  %i4085 = load i32, ptr %i123, align 4, !tbaa !193
  %i4086 = add nsw i32 %i4085, -8
  store i32 %i4086, ptr %i123, align 4, !tbaa !193
  %i4087 = icmp sgt i32 %i4085, 15
  br i1 %i4087, label %bb4073.bb4073_crit_edge, label %bb4088.loopexit, !llvm.loop !195

bb4073.bb4073_crit_edge:                          ; preds = %bb4073
  br label %bb4073

bb4088.loopexit:                                  ; preds = %bb4073
  br label %bb4088

bb4088:                                           ; preds = %bb4055.bb4088_crit_edge, %bb4088.loopexit
  %i4089 = phi i32 [ %i4061, %bb4055.bb4088_crit_edge ], [ %i4084, %bb4088.loopexit ]
  %i4090 = phi i32 [ %i4058, %bb4055.bb4088_crit_edge ], [ %i4086, %bb4088.loopexit ]
  %i4091 = add i32 %i4090, %i4067
  %i4092 = sub i32 32, %i4091
  %i4093 = shl i32 %i4069, %i4092
  %i4094 = or i32 %i4093, %i4089
  store i32 %i4094, ptr %i126, align 8, !tbaa !194
  store i32 %i4091, ptr %i123, align 4, !tbaa !193
  %i4095 = getelementptr i16, ptr %i2542, i64 47
  %i4096 = load i16, ptr %i4095, align 2, !tbaa !22
  %i4097 = zext i16 %i4096 to i64
  %i4098 = getelementptr inbounds i8, ptr %i2539, i64 %i4097
  %i4099 = load i8, ptr %i4098, align 1, !tbaa !21
  %i4100 = zext i8 %i4099 to i32
  %i4101 = getelementptr inbounds i32, ptr %i2540, i64 %i4097
  %i4102 = load i32, ptr %i4101, align 4, !tbaa !19
  %i4103 = icmp sgt i32 %i4091, 7
  br i1 %i4103, label %bb4104, label %bb4088.bb4121_crit_edge

bb4088.bb4121_crit_edge:                          ; preds = %bb4088
  br label %bb4121

bb4104:                                           ; preds = %bb4088
  %i4105 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb4106

bb4106:                                           ; preds = %bb4106.bb4106_crit_edge, %bb4104
  %i4107 = phi i32 [ %i4105, %bb4104 ], [ %i4115, %bb4106.bb4106_crit_edge ]
  %i4108 = phi i32 [ %i4094, %bb4104 ], [ %i4117, %bb4106.bb4106_crit_edge ]
  %i4109 = lshr i32 %i4108, 24
  %i4110 = trunc i32 %i4109 to i8
  %i4111 = load ptr, ptr %i37, align 8, !tbaa !129
  %i4112 = sext i32 %i4107 to i64
  %i4113 = getelementptr inbounds i8, ptr %i4111, i64 %i4112
  store i8 %i4110, ptr %i4113, align 1, !tbaa !21
  %i4114 = load i32, ptr %i2071, align 4, !tbaa !137
  %i4115 = add nsw i32 %i4114, 1
  store i32 %i4115, ptr %i2071, align 4, !tbaa !137
  %i4116 = load i32, ptr %i126, align 8, !tbaa !194
  %i4117 = shl i32 %i4116, 8
  store i32 %i4117, ptr %i126, align 8, !tbaa !194
  %i4118 = load i32, ptr %i123, align 4, !tbaa !193
  %i4119 = add nsw i32 %i4118, -8
  store i32 %i4119, ptr %i123, align 4, !tbaa !193
  %i4120 = icmp sgt i32 %i4118, 15
  br i1 %i4120, label %bb4106.bb4106_crit_edge, label %bb4121.loopexit, !llvm.loop !195

bb4106.bb4106_crit_edge:                          ; preds = %bb4106
  br label %bb4106

bb4121.loopexit:                                  ; preds = %bb4106
  br label %bb4121

bb4121:                                           ; preds = %bb4088.bb4121_crit_edge, %bb4121.loopexit
  %i4122 = phi i32 [ %i4094, %bb4088.bb4121_crit_edge ], [ %i4117, %bb4121.loopexit ]
  %i4123 = phi i32 [ %i4091, %bb4088.bb4121_crit_edge ], [ %i4119, %bb4121.loopexit ]
  %i4124 = add i32 %i4123, %i4100
  %i4125 = sub i32 32, %i4124
  %i4126 = shl i32 %i4102, %i4125
  %i4127 = or i32 %i4126, %i4122
  store i32 %i4127, ptr %i126, align 8, !tbaa !194
  store i32 %i4124, ptr %i123, align 4, !tbaa !193
  %i4128 = getelementptr i16, ptr %i2542, i64 48
  %i4129 = load i16, ptr %i4128, align 2, !tbaa !22
  %i4130 = zext i16 %i4129 to i64
  %i4131 = getelementptr inbounds i8, ptr %i2539, i64 %i4130
  %i4132 = load i8, ptr %i4131, align 1, !tbaa !21
  %i4133 = zext i8 %i4132 to i32
  %i4134 = getelementptr inbounds i32, ptr %i2540, i64 %i4130
  %i4135 = load i32, ptr %i4134, align 4, !tbaa !19
  %i4136 = icmp sgt i32 %i4124, 7
  br i1 %i4136, label %bb4137, label %bb4121.bb4154_crit_edge

bb4121.bb4154_crit_edge:                          ; preds = %bb4121
  br label %bb4154

bb4137:                                           ; preds = %bb4121
  %i4138 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb4139

bb4139:                                           ; preds = %bb4139.bb4139_crit_edge, %bb4137
  %i4140 = phi i32 [ %i4138, %bb4137 ], [ %i4148, %bb4139.bb4139_crit_edge ]
  %i4141 = phi i32 [ %i4127, %bb4137 ], [ %i4150, %bb4139.bb4139_crit_edge ]
  %i4142 = lshr i32 %i4141, 24
  %i4143 = trunc i32 %i4142 to i8
  %i4144 = load ptr, ptr %i37, align 8, !tbaa !129
  %i4145 = sext i32 %i4140 to i64
  %i4146 = getelementptr inbounds i8, ptr %i4144, i64 %i4145
  store i8 %i4143, ptr %i4146, align 1, !tbaa !21
  %i4147 = load i32, ptr %i2071, align 4, !tbaa !137
  %i4148 = add nsw i32 %i4147, 1
  store i32 %i4148, ptr %i2071, align 4, !tbaa !137
  %i4149 = load i32, ptr %i126, align 8, !tbaa !194
  %i4150 = shl i32 %i4149, 8
  store i32 %i4150, ptr %i126, align 8, !tbaa !194
  %i4151 = load i32, ptr %i123, align 4, !tbaa !193
  %i4152 = add nsw i32 %i4151, -8
  store i32 %i4152, ptr %i123, align 4, !tbaa !193
  %i4153 = icmp sgt i32 %i4151, 15
  br i1 %i4153, label %bb4139.bb4139_crit_edge, label %bb4154.loopexit, !llvm.loop !195

bb4139.bb4139_crit_edge:                          ; preds = %bb4139
  br label %bb4139

bb4154.loopexit:                                  ; preds = %bb4139
  br label %bb4154

bb4154:                                           ; preds = %bb4121.bb4154_crit_edge, %bb4154.loopexit
  %i4155 = phi i32 [ %i4127, %bb4121.bb4154_crit_edge ], [ %i4150, %bb4154.loopexit ]
  %i4156 = phi i32 [ %i4124, %bb4121.bb4154_crit_edge ], [ %i4152, %bb4154.loopexit ]
  %i4157 = add i32 %i4156, %i4133
  %i4158 = sub i32 32, %i4157
  %i4159 = shl i32 %i4135, %i4158
  %i4160 = or i32 %i4159, %i4155
  store i32 %i4160, ptr %i126, align 8, !tbaa !194
  store i32 %i4157, ptr %i123, align 4, !tbaa !193
  %i4161 = getelementptr i16, ptr %i2542, i64 49
  %i4162 = load i16, ptr %i4161, align 2, !tbaa !22
  %i4163 = zext i16 %i4162 to i64
  %i4164 = getelementptr inbounds i8, ptr %i2539, i64 %i4163
  %i4165 = load i8, ptr %i4164, align 1, !tbaa !21
  %i4166 = zext i8 %i4165 to i32
  %i4167 = getelementptr inbounds i32, ptr %i2540, i64 %i4163
  %i4168 = load i32, ptr %i4167, align 4, !tbaa !19
  %i4169 = icmp sgt i32 %i4157, 7
  br i1 %i4169, label %bb4170, label %bb4154.bb4187_crit_edge

bb4154.bb4187_crit_edge:                          ; preds = %bb4154
  br label %bb4187

bb4170:                                           ; preds = %bb4154
  %i4171 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb4172

bb4172:                                           ; preds = %bb4172.bb4172_crit_edge, %bb4170
  %i4173 = phi i32 [ %i4171, %bb4170 ], [ %i4181, %bb4172.bb4172_crit_edge ]
  %i4174 = phi i32 [ %i4160, %bb4170 ], [ %i4183, %bb4172.bb4172_crit_edge ]
  %i4175 = lshr i32 %i4174, 24
  %i4176 = trunc i32 %i4175 to i8
  %i4177 = load ptr, ptr %i37, align 8, !tbaa !129
  %i4178 = sext i32 %i4173 to i64
  %i4179 = getelementptr inbounds i8, ptr %i4177, i64 %i4178
  store i8 %i4176, ptr %i4179, align 1, !tbaa !21
  %i4180 = load i32, ptr %i2071, align 4, !tbaa !137
  %i4181 = add nsw i32 %i4180, 1
  store i32 %i4181, ptr %i2071, align 4, !tbaa !137
  %i4182 = load i32, ptr %i126, align 8, !tbaa !194
  %i4183 = shl i32 %i4182, 8
  store i32 %i4183, ptr %i126, align 8, !tbaa !194
  %i4184 = load i32, ptr %i123, align 4, !tbaa !193
  %i4185 = add nsw i32 %i4184, -8
  store i32 %i4185, ptr %i123, align 4, !tbaa !193
  %i4186 = icmp sgt i32 %i4184, 15
  br i1 %i4186, label %bb4172.bb4172_crit_edge, label %bb4187.loopexit, !llvm.loop !195

bb4172.bb4172_crit_edge:                          ; preds = %bb4172
  br label %bb4172

bb4187.loopexit:                                  ; preds = %bb4172
  br label %bb4187

bb4187:                                           ; preds = %bb4154.bb4187_crit_edge, %bb4187.loopexit
  %i4188 = phi i32 [ %i4160, %bb4154.bb4187_crit_edge ], [ %i4183, %bb4187.loopexit ]
  %i4189 = phi i32 [ %i4157, %bb4154.bb4187_crit_edge ], [ %i4185, %bb4187.loopexit ]
  %i4190 = add i32 %i4189, %i4166
  %i4191 = sub i32 32, %i4190
  %i4192 = shl i32 %i4168, %i4191
  %i4193 = or i32 %i4192, %i4188
  store i32 %i4193, ptr %i126, align 8, !tbaa !194
  store i32 %i4190, ptr %i123, align 4, !tbaa !193
  br label %bb4236

bb4194:                                           ; preds = %bb4226.bb4194_crit_edge, %bb2531
  %i4195 = phi i32 [ %i2535, %bb2531 ], [ %i4232, %bb4226.bb4194_crit_edge ]
  %i4196 = phi i32 [ %i2534, %bb2531 ], [ %i4229, %bb4226.bb4194_crit_edge ]
  %i4197 = phi i64 [ %i2532, %bb2531 ], [ %i4233, %bb4226.bb4194_crit_edge ]
  %i4198 = load i8, ptr %i2520, align 1, !tbaa !21
  %i4199 = zext i8 %i4198 to i64
  %i4200 = getelementptr inbounds i16, ptr %i561, i64 %i4197
  %i4201 = load i16, ptr %i4200, align 2, !tbaa !22
  %i4202 = zext i16 %i4201 to i64
  %i4203 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 35, i64 %i4199, i64 %i4202
  %i4204 = load i8, ptr %i4203, align 1, !tbaa !21
  %i4205 = zext i8 %i4204 to i32
  %i4206 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 36, i64 %i4199, i64 %i4202
  %i4207 = load i32, ptr %i4206, align 4, !tbaa !19
  %i4208 = icmp sgt i32 %i4196, 7
  br i1 %i4208, label %bb4209, label %bb4194.bb4226_crit_edge

bb4194.bb4226_crit_edge:                          ; preds = %bb4194
  br label %bb4226

bb4209:                                           ; preds = %bb4194
  %i4210 = load i32, ptr %i2071, align 4, !tbaa !137
  br label %bb4211

bb4211:                                           ; preds = %bb4211.bb4211_crit_edge, %bb4209
  %i4212 = phi i32 [ %i4210, %bb4209 ], [ %i4220, %bb4211.bb4211_crit_edge ]
  %i4213 = phi i32 [ %i4195, %bb4209 ], [ %i4222, %bb4211.bb4211_crit_edge ]
  %i4214 = lshr i32 %i4213, 24
  %i4215 = trunc i32 %i4214 to i8
  %i4216 = load ptr, ptr %i37, align 8, !tbaa !129
  %i4217 = sext i32 %i4212 to i64
  %i4218 = getelementptr inbounds i8, ptr %i4216, i64 %i4217
  store i8 %i4215, ptr %i4218, align 1, !tbaa !21
  %i4219 = load i32, ptr %i2071, align 4, !tbaa !137
  %i4220 = add nsw i32 %i4219, 1
  store i32 %i4220, ptr %i2071, align 4, !tbaa !137
  %i4221 = load i32, ptr %i126, align 8, !tbaa !194
  %i4222 = shl i32 %i4221, 8
  store i32 %i4222, ptr %i126, align 8, !tbaa !194
  %i4223 = load i32, ptr %i123, align 4, !tbaa !193
  %i4224 = add nsw i32 %i4223, -8
  store i32 %i4224, ptr %i123, align 4, !tbaa !193
  %i4225 = icmp sgt i32 %i4223, 15
  br i1 %i4225, label %bb4211.bb4211_crit_edge, label %bb4226.loopexit, !llvm.loop !195

bb4211.bb4211_crit_edge:                          ; preds = %bb4211
  br label %bb4211

bb4226.loopexit:                                  ; preds = %bb4211
  br label %bb4226

bb4226:                                           ; preds = %bb4194.bb4226_crit_edge, %bb4226.loopexit
  %i4227 = phi i32 [ %i4195, %bb4194.bb4226_crit_edge ], [ %i4222, %bb4226.loopexit ]
  %i4228 = phi i32 [ %i4196, %bb4194.bb4226_crit_edge ], [ %i4224, %bb4226.loopexit ]
  %i4229 = add i32 %i4228, %i4205
  %i4230 = sub i32 32, %i4229
  %i4231 = shl i32 %i4207, %i4230
  %i4232 = or i32 %i4231, %i4227
  store i32 %i4232, ptr %i126, align 8, !tbaa !194
  store i32 %i4229, ptr %i123, align 4, !tbaa !193
  %i4233 = add nsw i64 %i4197, 1
  %i4234 = trunc i64 %i4233 to i32
  %i4235 = icmp eq i32 %i2533, %i4234
  br i1 %i4235, label %bb4236.loopexit, label %bb4226.bb4194_crit_edge, !llvm.loop !230

bb4226.bb4194_crit_edge:                          ; preds = %bb4226
  br label %bb4194

bb4236.loopexit:                                  ; preds = %bb4226
  br label %bb4236

bb4236:                                           ; preds = %bb2529.bb4236_crit_edge, %bb4236.loopexit, %bb4187
  %i4237 = add nsw i32 %i2519, 1
  %i4238 = add nuw i64 %i2513, 1
  %i4239 = load i32, ptr %i560, align 4, !tbaa !202
  %i4240 = icmp slt i32 %i4237, %i4239
  br i1 %i4240, label %bb4236.bb2512_crit_edge, label %bb4241

bb4236.bb2512_crit_edge:                          ; preds = %bb4236
  br label %bb2512

bb4241:                                           ; preds = %bb4236
  %i4242 = trunc i64 %i4238 to i32
  br label %bb4243

bb4243:                                           ; preds = %bb2508.bb4243_crit_edge, %bb4241
  %i4244 = phi i32 [ 0, %bb2508.bb4243_crit_edge ], [ %i4242, %bb4241 ]
  %i4245 = icmp eq i32 %i4244, %i1854
  br i1 %i4245, label %bb4243.bb4247_crit_edge, label %bb4246

bb4243.bb4247_crit_edge:                          ; preds = %bb4243
  br label %bb4247

bb4246:                                           ; preds = %bb4243
  call void @BZ2_bz__AssertH__fail(i32 noundef 3007) #31
  br label %bb4247

bb4247:                                           ; preds = %bb4243.bb4247_crit_edge, %bb4246
  %i4248 = load i32, ptr %i562, align 8, !tbaa !17
  %i4249 = icmp sgt i32 %i4248, 2
  br i1 %i4249, label %bb4250, label %bb4247.bb4255_crit_edge

bb4247.bb4255_crit_edge:                          ; preds = %bb4247
  br label %bb4255

bb4250:                                           ; preds = %bb4247
  %i4251 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i4252 = load i32, ptr %i2071, align 4, !tbaa !137
  %i4253 = sub nsw i32 %i4252, %i2509
  %i4254 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i4251, ptr noundef nonnull @.str.10.113, i32 noundef %i4253) #32
  br label %bb4255

bb4255:                                           ; preds = %bb4247.bb4255_crit_edge, %bb4250
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %i2) #31
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %i)
  br label %bb4256

bb4256:                                           ; preds = %bb119.bb4256_crit_edge, %bb4255
  %i4257 = icmp eq i8 %arg1, 0
  br i1 %i4257, label %bb4256.bb4457_crit_edge, label %bb4258

bb4256.bb4457_crit_edge:                          ; preds = %bb4256
  br label %bb4457

bb4258:                                           ; preds = %bb4256
  %i4259 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 25
  %i4260 = load i32, ptr %i4259, align 4, !tbaa !193
  %i4261 = icmp sgt i32 %i4260, 7
  %i4262 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 24
  br i1 %i4261, label %bb4266, label %bb4263

bb4263:                                           ; preds = %bb4258
  %i4264 = load i32, ptr %i4262, align 8, !tbaa !194
  %i4265 = add nsw i32 %i4260, 8
  br label %bb4285

bb4266:                                           ; preds = %bb4258
  %i4267 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i4268 = load i32, ptr %i4262, align 8, !tbaa !194
  %i4269 = load i32, ptr %i4267, align 4, !tbaa !137
  br label %bb4270

bb4270:                                           ; preds = %bb4270.bb4270_crit_edge, %bb4266
  %i4271 = phi i32 [ %i4269, %bb4266 ], [ %i4279, %bb4270.bb4270_crit_edge ]
  %i4272 = phi i32 [ %i4268, %bb4266 ], [ %i4281, %bb4270.bb4270_crit_edge ]
  %i4273 = lshr i32 %i4272, 24
  %i4274 = trunc i32 %i4273 to i8
  %i4275 = load ptr, ptr %i37, align 8, !tbaa !129
  %i4276 = sext i32 %i4271 to i64
  %i4277 = getelementptr inbounds i8, ptr %i4275, i64 %i4276
  store i8 %i4274, ptr %i4277, align 1, !tbaa !21
  %i4278 = load i32, ptr %i4267, align 4, !tbaa !137
  %i4279 = add nsw i32 %i4278, 1
  store i32 %i4279, ptr %i4267, align 4, !tbaa !137
  %i4280 = load i32, ptr %i4262, align 8, !tbaa !194
  %i4281 = shl i32 %i4280, 8
  store i32 %i4281, ptr %i4262, align 8, !tbaa !194
  %i4282 = load i32, ptr %i4259, align 4, !tbaa !193
  %i4283 = add nsw i32 %i4282, -8
  store i32 %i4283, ptr %i4259, align 4, !tbaa !193
  %i4284 = icmp sgt i32 %i4282, 15
  br i1 %i4284, label %bb4270.bb4270_crit_edge, label %bb4285.loopexit, !llvm.loop !195

bb4270.bb4270_crit_edge:                          ; preds = %bb4270
  br label %bb4270

bb4285.loopexit:                                  ; preds = %bb4270
  br label %bb4285

bb4285:                                           ; preds = %bb4285.loopexit, %bb4263
  %i4286 = phi i32 [ %i4264, %bb4263 ], [ %i4281, %bb4285.loopexit ]
  %i4287 = phi i32 [ %i4265, %bb4263 ], [ %i4282, %bb4285.loopexit ]
  %i4288 = sub i32 32, %i4287
  %i4289 = shl i32 23, %i4288
  %i4290 = or i32 %i4289, %i4286
  store i32 %i4290, ptr %i4262, align 8, !tbaa !194
  store i32 %i4287, ptr %i4259, align 4, !tbaa !193
  %i4291 = icmp sgt i32 %i4287, 7
  br i1 %i4291, label %bb4294, label %bb4292

bb4292:                                           ; preds = %bb4285
  %i4293 = add nsw i32 %i4287, 8
  br label %bb4312

bb4294:                                           ; preds = %bb4285
  %i4295 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i4296 = load i32, ptr %i4295, align 4, !tbaa !137
  br label %bb4297

bb4297:                                           ; preds = %bb4297.bb4297_crit_edge, %bb4294
  %i4298 = phi i32 [ %i4296, %bb4294 ], [ %i4306, %bb4297.bb4297_crit_edge ]
  %i4299 = phi i32 [ %i4290, %bb4294 ], [ %i4308, %bb4297.bb4297_crit_edge ]
  %i4300 = lshr i32 %i4299, 24
  %i4301 = trunc i32 %i4300 to i8
  %i4302 = load ptr, ptr %i37, align 8, !tbaa !129
  %i4303 = sext i32 %i4298 to i64
  %i4304 = getelementptr inbounds i8, ptr %i4302, i64 %i4303
  store i8 %i4301, ptr %i4304, align 1, !tbaa !21
  %i4305 = load i32, ptr %i4295, align 4, !tbaa !137
  %i4306 = add nsw i32 %i4305, 1
  store i32 %i4306, ptr %i4295, align 4, !tbaa !137
  %i4307 = load i32, ptr %i4262, align 8, !tbaa !194
  %i4308 = shl i32 %i4307, 8
  store i32 %i4308, ptr %i4262, align 8, !tbaa !194
  %i4309 = load i32, ptr %i4259, align 4, !tbaa !193
  %i4310 = add nsw i32 %i4309, -8
  store i32 %i4310, ptr %i4259, align 4, !tbaa !193
  %i4311 = icmp sgt i32 %i4309, 15
  br i1 %i4311, label %bb4297.bb4297_crit_edge, label %bb4312.loopexit, !llvm.loop !195

bb4297.bb4297_crit_edge:                          ; preds = %bb4297
  br label %bb4297

bb4312.loopexit:                                  ; preds = %bb4297
  br label %bb4312

bb4312:                                           ; preds = %bb4312.loopexit, %bb4292
  %i4313 = phi i32 [ %i4290, %bb4292 ], [ %i4308, %bb4312.loopexit ]
  %i4314 = phi i32 [ %i4293, %bb4292 ], [ %i4309, %bb4312.loopexit ]
  %i4315 = sub i32 32, %i4314
  %i4316 = shl i32 114, %i4315
  %i4317 = or i32 %i4316, %i4313
  store i32 %i4317, ptr %i4262, align 8, !tbaa !194
  store i32 %i4314, ptr %i4259, align 4, !tbaa !193
  %i4318 = icmp sgt i32 %i4314, 7
  br i1 %i4318, label %bb4321, label %bb4319

bb4319:                                           ; preds = %bb4312
  %i4320 = add nsw i32 %i4314, 8
  br label %bb4339

bb4321:                                           ; preds = %bb4312
  %i4322 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i4323 = load i32, ptr %i4322, align 4, !tbaa !137
  br label %bb4324

bb4324:                                           ; preds = %bb4324.bb4324_crit_edge, %bb4321
  %i4325 = phi i32 [ %i4323, %bb4321 ], [ %i4333, %bb4324.bb4324_crit_edge ]
  %i4326 = phi i32 [ %i4317, %bb4321 ], [ %i4335, %bb4324.bb4324_crit_edge ]
  %i4327 = lshr i32 %i4326, 24
  %i4328 = trunc i32 %i4327 to i8
  %i4329 = load ptr, ptr %i37, align 8, !tbaa !129
  %i4330 = sext i32 %i4325 to i64
  %i4331 = getelementptr inbounds i8, ptr %i4329, i64 %i4330
  store i8 %i4328, ptr %i4331, align 1, !tbaa !21
  %i4332 = load i32, ptr %i4322, align 4, !tbaa !137
  %i4333 = add nsw i32 %i4332, 1
  store i32 %i4333, ptr %i4322, align 4, !tbaa !137
  %i4334 = load i32, ptr %i4262, align 8, !tbaa !194
  %i4335 = shl i32 %i4334, 8
  store i32 %i4335, ptr %i4262, align 8, !tbaa !194
  %i4336 = load i32, ptr %i4259, align 4, !tbaa !193
  %i4337 = add nsw i32 %i4336, -8
  store i32 %i4337, ptr %i4259, align 4, !tbaa !193
  %i4338 = icmp sgt i32 %i4336, 15
  br i1 %i4338, label %bb4324.bb4324_crit_edge, label %bb4339.loopexit, !llvm.loop !195

bb4324.bb4324_crit_edge:                          ; preds = %bb4324
  br label %bb4324

bb4339.loopexit:                                  ; preds = %bb4324
  br label %bb4339

bb4339:                                           ; preds = %bb4339.loopexit, %bb4319
  %i4340 = phi i32 [ %i4317, %bb4319 ], [ %i4335, %bb4339.loopexit ]
  %i4341 = phi i32 [ %i4320, %bb4319 ], [ %i4336, %bb4339.loopexit ]
  %i4342 = sub i32 32, %i4341
  %i4343 = shl i32 69, %i4342
  %i4344 = or i32 %i4343, %i4340
  store i32 %i4344, ptr %i4262, align 8, !tbaa !194
  store i32 %i4341, ptr %i4259, align 4, !tbaa !193
  %i4345 = icmp sgt i32 %i4341, 7
  br i1 %i4345, label %bb4348, label %bb4346

bb4346:                                           ; preds = %bb4339
  %i4347 = add nsw i32 %i4341, 8
  br label %bb4366

bb4348:                                           ; preds = %bb4339
  %i4349 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i4350 = load i32, ptr %i4349, align 4, !tbaa !137
  br label %bb4351

bb4351:                                           ; preds = %bb4351.bb4351_crit_edge, %bb4348
  %i4352 = phi i32 [ %i4350, %bb4348 ], [ %i4360, %bb4351.bb4351_crit_edge ]
  %i4353 = phi i32 [ %i4344, %bb4348 ], [ %i4362, %bb4351.bb4351_crit_edge ]
  %i4354 = lshr i32 %i4353, 24
  %i4355 = trunc i32 %i4354 to i8
  %i4356 = load ptr, ptr %i37, align 8, !tbaa !129
  %i4357 = sext i32 %i4352 to i64
  %i4358 = getelementptr inbounds i8, ptr %i4356, i64 %i4357
  store i8 %i4355, ptr %i4358, align 1, !tbaa !21
  %i4359 = load i32, ptr %i4349, align 4, !tbaa !137
  %i4360 = add nsw i32 %i4359, 1
  store i32 %i4360, ptr %i4349, align 4, !tbaa !137
  %i4361 = load i32, ptr %i4262, align 8, !tbaa !194
  %i4362 = shl i32 %i4361, 8
  store i32 %i4362, ptr %i4262, align 8, !tbaa !194
  %i4363 = load i32, ptr %i4259, align 4, !tbaa !193
  %i4364 = add nsw i32 %i4363, -8
  store i32 %i4364, ptr %i4259, align 4, !tbaa !193
  %i4365 = icmp sgt i32 %i4363, 15
  br i1 %i4365, label %bb4351.bb4351_crit_edge, label %bb4366.loopexit, !llvm.loop !195

bb4351.bb4351_crit_edge:                          ; preds = %bb4351
  br label %bb4351

bb4366.loopexit:                                  ; preds = %bb4351
  br label %bb4366

bb4366:                                           ; preds = %bb4366.loopexit, %bb4346
  %i4367 = phi i32 [ %i4344, %bb4346 ], [ %i4362, %bb4366.loopexit ]
  %i4368 = phi i32 [ %i4347, %bb4346 ], [ %i4363, %bb4366.loopexit ]
  %i4369 = sub i32 32, %i4368
  %i4370 = shl i32 56, %i4369
  %i4371 = or i32 %i4370, %i4367
  store i32 %i4371, ptr %i4262, align 8, !tbaa !194
  store i32 %i4368, ptr %i4259, align 4, !tbaa !193
  %i4372 = icmp sgt i32 %i4368, 7
  br i1 %i4372, label %bb4375, label %bb4373

bb4373:                                           ; preds = %bb4366
  %i4374 = add nsw i32 %i4368, 8
  br label %bb4393

bb4375:                                           ; preds = %bb4366
  %i4376 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i4377 = load i32, ptr %i4376, align 4, !tbaa !137
  br label %bb4378

bb4378:                                           ; preds = %bb4378.bb4378_crit_edge, %bb4375
  %i4379 = phi i32 [ %i4377, %bb4375 ], [ %i4387, %bb4378.bb4378_crit_edge ]
  %i4380 = phi i32 [ %i4371, %bb4375 ], [ %i4389, %bb4378.bb4378_crit_edge ]
  %i4381 = lshr i32 %i4380, 24
  %i4382 = trunc i32 %i4381 to i8
  %i4383 = load ptr, ptr %i37, align 8, !tbaa !129
  %i4384 = sext i32 %i4379 to i64
  %i4385 = getelementptr inbounds i8, ptr %i4383, i64 %i4384
  store i8 %i4382, ptr %i4385, align 1, !tbaa !21
  %i4386 = load i32, ptr %i4376, align 4, !tbaa !137
  %i4387 = add nsw i32 %i4386, 1
  store i32 %i4387, ptr %i4376, align 4, !tbaa !137
  %i4388 = load i32, ptr %i4262, align 8, !tbaa !194
  %i4389 = shl i32 %i4388, 8
  store i32 %i4389, ptr %i4262, align 8, !tbaa !194
  %i4390 = load i32, ptr %i4259, align 4, !tbaa !193
  %i4391 = add nsw i32 %i4390, -8
  store i32 %i4391, ptr %i4259, align 4, !tbaa !193
  %i4392 = icmp sgt i32 %i4390, 15
  br i1 %i4392, label %bb4378.bb4378_crit_edge, label %bb4393.loopexit, !llvm.loop !195

bb4378.bb4378_crit_edge:                          ; preds = %bb4378
  br label %bb4378

bb4393.loopexit:                                  ; preds = %bb4378
  br label %bb4393

bb4393:                                           ; preds = %bb4393.loopexit, %bb4373
  %i4394 = phi i32 [ %i4371, %bb4373 ], [ %i4389, %bb4393.loopexit ]
  %i4395 = phi i32 [ %i4374, %bb4373 ], [ %i4390, %bb4393.loopexit ]
  %i4396 = sub i32 32, %i4395
  %i4397 = shl i32 80, %i4396
  %i4398 = or i32 %i4397, %i4394
  store i32 %i4398, ptr %i4262, align 8, !tbaa !194
  store i32 %i4395, ptr %i4259, align 4, !tbaa !193
  %i4399 = icmp sgt i32 %i4395, 7
  br i1 %i4399, label %bb4402, label %bb4400

bb4400:                                           ; preds = %bb4393
  %i4401 = add nsw i32 %i4395, 8
  br label %bb4420

bb4402:                                           ; preds = %bb4393
  %i4403 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i4404 = load i32, ptr %i4403, align 4, !tbaa !137
  br label %bb4405

bb4405:                                           ; preds = %bb4405.bb4405_crit_edge, %bb4402
  %i4406 = phi i32 [ %i4404, %bb4402 ], [ %i4414, %bb4405.bb4405_crit_edge ]
  %i4407 = phi i32 [ %i4398, %bb4402 ], [ %i4416, %bb4405.bb4405_crit_edge ]
  %i4408 = lshr i32 %i4407, 24
  %i4409 = trunc i32 %i4408 to i8
  %i4410 = load ptr, ptr %i37, align 8, !tbaa !129
  %i4411 = sext i32 %i4406 to i64
  %i4412 = getelementptr inbounds i8, ptr %i4410, i64 %i4411
  store i8 %i4409, ptr %i4412, align 1, !tbaa !21
  %i4413 = load i32, ptr %i4403, align 4, !tbaa !137
  %i4414 = add nsw i32 %i4413, 1
  store i32 %i4414, ptr %i4403, align 4, !tbaa !137
  %i4415 = load i32, ptr %i4262, align 8, !tbaa !194
  %i4416 = shl i32 %i4415, 8
  store i32 %i4416, ptr %i4262, align 8, !tbaa !194
  %i4417 = load i32, ptr %i4259, align 4, !tbaa !193
  %i4418 = add nsw i32 %i4417, -8
  store i32 %i4418, ptr %i4259, align 4, !tbaa !193
  %i4419 = icmp sgt i32 %i4417, 15
  br i1 %i4419, label %bb4405.bb4405_crit_edge, label %bb4420.loopexit, !llvm.loop !195

bb4405.bb4405_crit_edge:                          ; preds = %bb4405
  br label %bb4405

bb4420.loopexit:                                  ; preds = %bb4405
  br label %bb4420

bb4420:                                           ; preds = %bb4420.loopexit, %bb4400
  %i4421 = phi i32 [ %i4398, %bb4400 ], [ %i4416, %bb4420.loopexit ]
  %i4422 = phi i32 [ %i4401, %bb4400 ], [ %i4417, %bb4420.loopexit ]
  %i4423 = sub i32 32, %i4422
  %i4424 = shl i32 144, %i4423
  %i4425 = or i32 %i4424, %i4421
  store i32 %i4425, ptr %i4262, align 8, !tbaa !194
  store i32 %i4422, ptr %i4259, align 4, !tbaa !193
  %i4426 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 27
  %i4427 = load i32, ptr %i4426, align 4, !tbaa !125
  call fastcc void @bsPutUInt32(ptr noundef nonnull %arg, i32 noundef %i4427)
  %i4428 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 28
  %i4429 = load i32, ptr %i4428, align 8, !tbaa !17
  %i4430 = icmp sgt i32 %i4429, 1
  br i1 %i4430, label %bb4431, label %bb4420.bb4435_crit_edge

bb4420.bb4435_crit_edge:                          ; preds = %bb4420
  br label %bb4435

bb4431:                                           ; preds = %bb4420
  %i4432 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i4433 = load i32, ptr %i4426, align 4, !tbaa !125
  %i4434 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i4432, ptr noundef nonnull @.str.1.114, i32 noundef %i4433) #32
  br label %bb4435

bb4435:                                           ; preds = %bb4420.bb4435_crit_edge, %bb4431
  %i4436 = load i32, ptr %i4259, align 4, !tbaa !193
  %i4437 = icmp sgt i32 %i4436, 0
  br i1 %i4437, label %bb4438, label %bb4435.bb4457_crit_edge

bb4435.bb4457_crit_edge:                          ; preds = %bb4435
  br label %bb4457

bb4438:                                           ; preds = %bb4435
  %i4439 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i4440 = load i32, ptr %i4262, align 8, !tbaa !194
  %i4441 = load i32, ptr %i4439, align 4, !tbaa !137
  br label %bb4442

bb4442:                                           ; preds = %bb4442.bb4442_crit_edge, %bb4438
  %i4443 = phi i32 [ %i4441, %bb4438 ], [ %i4451, %bb4442.bb4442_crit_edge ]
  %i4444 = phi i32 [ %i4440, %bb4438 ], [ %i4453, %bb4442.bb4442_crit_edge ]
  %i4445 = lshr i32 %i4444, 24
  %i4446 = trunc i32 %i4445 to i8
  %i4447 = load ptr, ptr %i37, align 8, !tbaa !129
  %i4448 = sext i32 %i4443 to i64
  %i4449 = getelementptr inbounds i8, ptr %i4447, i64 %i4448
  store i8 %i4446, ptr %i4449, align 1, !tbaa !21
  %i4450 = load i32, ptr %i4439, align 4, !tbaa !137
  %i4451 = add nsw i32 %i4450, 1
  store i32 %i4451, ptr %i4439, align 4, !tbaa !137
  %i4452 = load i32, ptr %i4262, align 8, !tbaa !194
  %i4453 = shl i32 %i4452, 8
  store i32 %i4453, ptr %i4262, align 8, !tbaa !194
  %i4454 = load i32, ptr %i4259, align 4, !tbaa !193
  %i4455 = add nsw i32 %i4454, -8
  store i32 %i4455, ptr %i4259, align 4, !tbaa !193
  %i4456 = icmp sgt i32 %i4454, 8
  br i1 %i4456, label %bb4442.bb4442_crit_edge, label %bb4457.loopexit, !llvm.loop !231

bb4442.bb4442_crit_edge:                          ; preds = %bb4442
  br label %bb4442

bb4457.loopexit:                                  ; preds = %bb4442
  br label %bb4457

bb4457:                                           ; preds = %bb4435.bb4457_crit_edge, %bb4256.bb4457_crit_edge, %bb4457.loopexit
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @bsPutUInt32(ptr nocapture noundef %arg, i32 noundef %arg1) unnamed_addr #29 {
bb:
  %i = lshr i32 %arg1, 24
  %i2 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 25
  %i3 = load i32, ptr %i2, align 4, !tbaa !193
  %i4 = icmp sgt i32 %i3, 7
  %i5 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 24
  br i1 %i4, label %bb9, label %bb6

bb6:                                              ; preds = %bb
  %i7 = load i32, ptr %i5, align 8, !tbaa !194
  %i8 = add nsw i32 %i3, 8
  br label %bb29

bb9:                                              ; preds = %bb
  %i10 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 11
  %i11 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i12 = load i32, ptr %i5, align 8, !tbaa !194
  %i13 = load i32, ptr %i11, align 4, !tbaa !137
  br label %bb14

bb14:                                             ; preds = %bb14.bb14_crit_edge, %bb9
  %i15 = phi i32 [ %i13, %bb9 ], [ %i23, %bb14.bb14_crit_edge ]
  %i16 = phi i32 [ %i12, %bb9 ], [ %i25, %bb14.bb14_crit_edge ]
  %i17 = lshr i32 %i16, 24
  %i18 = trunc i32 %i17 to i8
  %i19 = load ptr, ptr %i10, align 8, !tbaa !129
  %i20 = sext i32 %i15 to i64
  %i21 = getelementptr inbounds i8, ptr %i19, i64 %i20
  store i8 %i18, ptr %i21, align 1, !tbaa !21
  %i22 = load i32, ptr %i11, align 4, !tbaa !137
  %i23 = add nsw i32 %i22, 1
  store i32 %i23, ptr %i11, align 4, !tbaa !137
  %i24 = load i32, ptr %i5, align 8, !tbaa !194
  %i25 = shl i32 %i24, 8
  store i32 %i25, ptr %i5, align 8, !tbaa !194
  %i26 = load i32, ptr %i2, align 4, !tbaa !193
  %i27 = add nsw i32 %i26, -8
  store i32 %i27, ptr %i2, align 4, !tbaa !193
  %i28 = icmp sgt i32 %i26, 15
  br i1 %i28, label %bb14.bb14_crit_edge, label %bb29.loopexit, !llvm.loop !195

bb14.bb14_crit_edge:                              ; preds = %bb14
  br label %bb14

bb29.loopexit:                                    ; preds = %bb14
  br label %bb29

bb29:                                             ; preds = %bb29.loopexit, %bb6
  %i30 = phi i32 [ %i7, %bb6 ], [ %i25, %bb29.loopexit ]
  %i31 = phi i32 [ %i8, %bb6 ], [ %i26, %bb29.loopexit ]
  %i32 = sub i32 32, %i31
  %i33 = shl i32 %i, %i32
  %i34 = or i32 %i33, %i30
  store i32 %i34, ptr %i5, align 8, !tbaa !194
  store i32 %i31, ptr %i2, align 4, !tbaa !193
  %i35 = lshr i32 %arg1, 16
  %i36 = and i32 %i35, 255
  %i37 = icmp sgt i32 %i31, 7
  br i1 %i37, label %bb38, label %bb29.bb57_crit_edge

bb29.bb57_crit_edge:                              ; preds = %bb29
  br label %bb57

bb38:                                             ; preds = %bb29
  %i39 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 11
  %i40 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i41 = load i32, ptr %i40, align 4, !tbaa !137
  br label %bb42

bb42:                                             ; preds = %bb42.bb42_crit_edge, %bb38
  %i43 = phi i32 [ %i41, %bb38 ], [ %i51, %bb42.bb42_crit_edge ]
  %i44 = phi i32 [ %i34, %bb38 ], [ %i53, %bb42.bb42_crit_edge ]
  %i45 = lshr i32 %i44, 24
  %i46 = trunc i32 %i45 to i8
  %i47 = load ptr, ptr %i39, align 8, !tbaa !129
  %i48 = sext i32 %i43 to i64
  %i49 = getelementptr inbounds i8, ptr %i47, i64 %i48
  store i8 %i46, ptr %i49, align 1, !tbaa !21
  %i50 = load i32, ptr %i40, align 4, !tbaa !137
  %i51 = add nsw i32 %i50, 1
  store i32 %i51, ptr %i40, align 4, !tbaa !137
  %i52 = load i32, ptr %i5, align 8, !tbaa !194
  %i53 = shl i32 %i52, 8
  store i32 %i53, ptr %i5, align 8, !tbaa !194
  %i54 = load i32, ptr %i2, align 4, !tbaa !193
  %i55 = add nsw i32 %i54, -8
  store i32 %i55, ptr %i2, align 4, !tbaa !193
  %i56 = icmp sgt i32 %i54, 15
  br i1 %i56, label %bb42.bb42_crit_edge, label %bb57.loopexit, !llvm.loop !195

bb42.bb42_crit_edge:                              ; preds = %bb42
  br label %bb42

bb57.loopexit:                                    ; preds = %bb42
  br label %bb57

bb57:                                             ; preds = %bb29.bb57_crit_edge, %bb57.loopexit
  %i58 = phi i32 [ %i34, %bb29.bb57_crit_edge ], [ %i53, %bb57.loopexit ]
  %i59 = phi i32 [ %i31, %bb29.bb57_crit_edge ], [ %i55, %bb57.loopexit ]
  %i60 = add nsw i32 %i59, 8
  %i61 = sub i32 24, %i59
  %i62 = shl i32 %i36, %i61
  %i63 = or i32 %i62, %i58
  store i32 %i63, ptr %i5, align 8, !tbaa !194
  store i32 %i60, ptr %i2, align 4, !tbaa !193
  %i64 = lshr i32 %arg1, 8
  %i65 = and i32 %i64, 255
  %i66 = icmp sgt i32 %i59, -1
  br i1 %i66, label %bb67, label %bb57.bb86_crit_edge

bb57.bb86_crit_edge:                              ; preds = %bb57
  br label %bb86

bb67:                                             ; preds = %bb57
  %i68 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 11
  %i69 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i70 = load i32, ptr %i69, align 4, !tbaa !137
  br label %bb71

bb71:                                             ; preds = %bb71.bb71_crit_edge, %bb67
  %i72 = phi i32 [ %i70, %bb67 ], [ %i80, %bb71.bb71_crit_edge ]
  %i73 = phi i32 [ %i63, %bb67 ], [ %i82, %bb71.bb71_crit_edge ]
  %i74 = lshr i32 %i73, 24
  %i75 = trunc i32 %i74 to i8
  %i76 = load ptr, ptr %i68, align 8, !tbaa !129
  %i77 = sext i32 %i72 to i64
  %i78 = getelementptr inbounds i8, ptr %i76, i64 %i77
  store i8 %i75, ptr %i78, align 1, !tbaa !21
  %i79 = load i32, ptr %i69, align 4, !tbaa !137
  %i80 = add nsw i32 %i79, 1
  store i32 %i80, ptr %i69, align 4, !tbaa !137
  %i81 = load i32, ptr %i5, align 8, !tbaa !194
  %i82 = shl i32 %i81, 8
  store i32 %i82, ptr %i5, align 8, !tbaa !194
  %i83 = load i32, ptr %i2, align 4, !tbaa !193
  %i84 = add nsw i32 %i83, -8
  store i32 %i84, ptr %i2, align 4, !tbaa !193
  %i85 = icmp sgt i32 %i83, 15
  br i1 %i85, label %bb71.bb71_crit_edge, label %bb86.loopexit, !llvm.loop !195

bb71.bb71_crit_edge:                              ; preds = %bb71
  br label %bb71

bb86.loopexit:                                    ; preds = %bb71
  br label %bb86

bb86:                                             ; preds = %bb57.bb86_crit_edge, %bb86.loopexit
  %i87 = phi i32 [ %i63, %bb57.bb86_crit_edge ], [ %i82, %bb86.loopexit ]
  %i88 = phi i32 [ %i60, %bb57.bb86_crit_edge ], [ %i84, %bb86.loopexit ]
  %i89 = add nsw i32 %i88, 8
  %i90 = sub i32 24, %i88
  %i91 = shl i32 %i65, %i90
  %i92 = or i32 %i91, %i87
  store i32 %i92, ptr %i5, align 8, !tbaa !194
  store i32 %i89, ptr %i2, align 4, !tbaa !193
  %i93 = icmp sgt i32 %i88, -1
  br i1 %i93, label %bb94, label %bb86.bb113_crit_edge

bb86.bb113_crit_edge:                             ; preds = %bb86
  br label %bb113

bb94:                                             ; preds = %bb86
  %i95 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 11
  %i96 = getelementptr inbounds %struct.EState, ptr %arg, i64 0, i32 19
  %i97 = load i32, ptr %i96, align 4, !tbaa !137
  br label %bb98

bb98:                                             ; preds = %bb98.bb98_crit_edge, %bb94
  %i99 = phi i32 [ %i97, %bb94 ], [ %i107, %bb98.bb98_crit_edge ]
  %i100 = phi i32 [ %i92, %bb94 ], [ %i109, %bb98.bb98_crit_edge ]
  %i101 = lshr i32 %i100, 24
  %i102 = trunc i32 %i101 to i8
  %i103 = load ptr, ptr %i95, align 8, !tbaa !129
  %i104 = sext i32 %i99 to i64
  %i105 = getelementptr inbounds i8, ptr %i103, i64 %i104
  store i8 %i102, ptr %i105, align 1, !tbaa !21
  %i106 = load i32, ptr %i96, align 4, !tbaa !137
  %i107 = add nsw i32 %i106, 1
  store i32 %i107, ptr %i96, align 4, !tbaa !137
  %i108 = load i32, ptr %i5, align 8, !tbaa !194
  %i109 = shl i32 %i108, 8
  store i32 %i109, ptr %i5, align 8, !tbaa !194
  %i110 = load i32, ptr %i2, align 4, !tbaa !193
  %i111 = add nsw i32 %i110, -8
  store i32 %i111, ptr %i2, align 4, !tbaa !193
  %i112 = icmp sgt i32 %i110, 15
  br i1 %i112, label %bb98.bb98_crit_edge, label %bb113.loopexit, !llvm.loop !195

bb98.bb98_crit_edge:                              ; preds = %bb98
  br label %bb98

bb113.loopexit:                                   ; preds = %bb98
  br label %bb113

bb113:                                            ; preds = %bb86.bb113_crit_edge, %bb113.loopexit
  %i114 = phi i32 [ %i92, %bb86.bb113_crit_edge ], [ %i109, %bb113.loopexit ]
  %i115 = phi i32 [ %i89, %bb86.bb113_crit_edge ], [ %i111, %bb113.loopexit ]
  %i116 = and i32 %arg1, 255
  %i117 = add nsw i32 %i115, 8
  %i118 = sub i32 24, %i115
  %i119 = shl i32 %i116, %i118
  %i120 = or i32 %i119, %i114
  store i32 %i120, ptr %i5, align 8, !tbaa !194
  store i32 %i117, ptr %i2, align 4, !tbaa !193
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @BZ2_decompress(ptr noundef %arg) local_unnamed_addr #0 {
bb:
  %i = alloca [6 x i8], align 1
  %i1 = load ptr, ptr %arg, align 8, !tbaa !151
  %i2 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 1
  %i3 = load i32, ptr %i2, align 8, !tbaa !153
  %i4 = icmp eq i32 %i3, 10
  %i5 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 40
  br i1 %i4, label %bb6, label %bb10

bb6:                                              ; preds = %bb
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(108) %i5, i8 0, i64 108, i1 false)
  store i32 10, ptr %i2, align 8, !tbaa !153
  %i7 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i8 = load i32, ptr %i7, align 4, !tbaa !154
  %i9 = icmp sgt i32 %i8, 7
  br i1 %i9, label %bb145, label %bb148

bb10:                                             ; preds = %bb
  %i11 = load i32, ptr %i5, align 4, !tbaa !232
  %i12 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 41
  %i13 = load i32, ptr %i12, align 8, !tbaa !233
  %i14 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 42
  %i15 = load i32, ptr %i14, align 4, !tbaa !234
  %i16 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 43
  %i17 = load i32, ptr %i16, align 8, !tbaa !235
  %i18 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 44
  %i19 = load i32, ptr %i18, align 4, !tbaa !236
  %i20 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 45
  %i21 = load i32, ptr %i20, align 8, !tbaa !237
  %i22 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 46
  %i23 = load i32, ptr %i22, align 4, !tbaa !238
  %i24 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 47
  %i25 = load i32, ptr %i24, align 8, !tbaa !239
  %i26 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 48
  %i27 = load i32, ptr %i26, align 4, !tbaa !240
  %i28 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 49
  %i29 = load i32, ptr %i28, align 8, !tbaa !241
  %i30 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 50
  %i31 = load i32, ptr %i30, align 4, !tbaa !242
  %i32 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 51
  %i33 = load i32, ptr %i32, align 8, !tbaa !166
  %i34 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 52
  %i35 = load i32, ptr %i34, align 4, !tbaa !243
  %i36 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 53
  %i37 = load i32, ptr %i36, align 8, !tbaa !244
  %i38 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 54
  %i39 = load i32, ptr %i38, align 4, !tbaa !245
  %i40 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 55
  %i41 = load i32, ptr %i40, align 8, !tbaa !246
  %i42 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 56
  %i43 = load i32, ptr %i42, align 4, !tbaa !247
  %i44 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 57
  %i45 = load i32, ptr %i44, align 8, !tbaa !248
  %i46 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 58
  %i47 = load i32, ptr %i46, align 4, !tbaa !249
  %i48 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 59
  %i49 = load i32, ptr %i48, align 8, !tbaa !250
  %i50 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 60
  %i51 = load i32, ptr %i50, align 4, !tbaa !251
  %i52 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 61
  %i53 = load ptr, ptr %i52, align 8, !tbaa !252
  %i54 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 62
  %i55 = load ptr, ptr %i54, align 8, !tbaa !253
  %i56 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 63
  %i57 = load ptr, ptr %i56, align 8, !tbaa !254
  switch i32 %i3, label %bb4386 [
    i32 50, label %bb58
    i32 11, label %bb142
    i32 12, label %bb139
    i32 13, label %bb136
    i32 14, label %bb10.bb412_crit_edge
    i32 15, label %bb133
    i32 16, label %bb130
    i32 17, label %bb127
    i32 18, label %bb124
    i32 19, label %bb121
    i32 20, label %bb10.bb825_crit_edge
    i32 21, label %bb118
    i32 22, label %bb115
    i32 23, label %bb112
    i32 24, label %bb109
    i32 25, label %bb106
    i32 26, label %bb103
    i32 27, label %bb100
    i32 28, label %bb10.bb1419_crit_edge
    i32 29, label %bb10.bb1547_crit_edge
    i32 30, label %bb10.bb1681_crit_edge
    i32 31, label %bb97
    i32 32, label %bb10.bb1840_crit_edge
    i32 33, label %bb10.bb2010_crit_edge
    i32 34, label %bb10.bb2129_crit_edge
    i32 35, label %bb85
    i32 36, label %bb10.bb2409_crit_edge
    i32 37, label %bb88
    i32 38, label %bb10.bb2669_crit_edge
    i32 39, label %bb91
    i32 40, label %bb10.bb3208_crit_edge
    i32 41, label %bb94
    i32 42, label %bb82
    i32 43, label %bb79
    i32 44, label %bb76
    i32 45, label %bb73
    i32 46, label %bb70
    i32 47, label %bb67
    i32 48, label %bb64
    i32 49, label %bb61
  ]

bb10.bb3208_crit_edge:                            ; preds = %bb10
  br label %bb3208

bb10.bb2669_crit_edge:                            ; preds = %bb10
  br label %bb2669

bb10.bb2409_crit_edge:                            ; preds = %bb10
  br label %bb2409

bb10.bb2129_crit_edge:                            ; preds = %bb10
  br label %bb2129

bb10.bb2010_crit_edge:                            ; preds = %bb10
  br label %bb2010

bb10.bb1840_crit_edge:                            ; preds = %bb10
  br label %bb1840

bb10.bb1681_crit_edge:                            ; preds = %bb10
  br label %bb1681

bb10.bb1547_crit_edge:                            ; preds = %bb10
  br label %bb1547

bb10.bb1419_crit_edge:                            ; preds = %bb10
  br label %bb1419

bb10.bb825_crit_edge:                             ; preds = %bb10
  br label %bb825

bb10.bb412_crit_edge:                             ; preds = %bb10
  br label %bb412

bb58:                                             ; preds = %bb10
  %i59 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i60 = load i32, ptr %i59, align 4, !tbaa !154
  br label %bb4316

bb61:                                             ; preds = %bb10
  %i62 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i63 = load i32, ptr %i62, align 4, !tbaa !154
  br label %bb4246

bb64:                                             ; preds = %bb10
  %i65 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i66 = load i32, ptr %i65, align 4, !tbaa !154
  br label %bb4176

bb67:                                             ; preds = %bb10
  %i68 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i69 = load i32, ptr %i68, align 4, !tbaa !154
  br label %bb4106

bb70:                                             ; preds = %bb10
  %i71 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i72 = load i32, ptr %i71, align 4, !tbaa !154
  br label %bb4037

bb73:                                             ; preds = %bb10
  %i74 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i75 = load i32, ptr %i74, align 4, !tbaa !154
  br label %bb3970

bb76:                                             ; preds = %bb10
  %i77 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i78 = load i32, ptr %i77, align 4, !tbaa !154
  br label %bb3903

bb79:                                             ; preds = %bb10
  %i80 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i81 = load i32, ptr %i80, align 4, !tbaa !154
  br label %bb3836

bb82:                                             ; preds = %bb10
  %i83 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i84 = load i32, ptr %i83, align 4, !tbaa !154
  br label %bb3769

bb85:                                             ; preds = %bb10
  %i86 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i87 = load i32, ptr %i86, align 4, !tbaa !154
  br label %bb2196

bb88:                                             ; preds = %bb10
  %i89 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i90 = load i32, ptr %i89, align 4, !tbaa !154
  br label %bb2511

bb91:                                             ; preds = %bb10
  %i92 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i93 = load i32, ptr %i92, align 4, !tbaa !154
  br label %bb2771

bb94:                                             ; preds = %bb10
  %i95 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i96 = load i32, ptr %i95, align 4, !tbaa !154
  br label %bb3310

bb97:                                             ; preds = %bb10
  %i98 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i99 = load i32, ptr %i98, align 4, !tbaa !154
  br label %bb1747

bb100:                                            ; preds = %bb10
  %i101 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i102 = load i32, ptr %i101, align 4, !tbaa !154
  br label %bb1314

bb103:                                            ; preds = %bb10
  %i104 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i105 = load i32, ptr %i104, align 4, !tbaa !154
  br label %bb1244

bb106:                                            ; preds = %bb10
  %i107 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i108 = load i32, ptr %i107, align 4, !tbaa !154
  br label %bb1174

bb109:                                            ; preds = %bb10
  %i110 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i111 = load i32, ptr %i110, align 4, !tbaa !154
  br label %bb1105

bb112:                                            ; preds = %bb10
  %i113 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i114 = load i32, ptr %i113, align 4, !tbaa !154
  br label %bb1035

bb115:                                            ; preds = %bb10
  %i116 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i117 = load i32, ptr %i116, align 4, !tbaa !154
  br label %bb965

bb118:                                            ; preds = %bb10
  %i119 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i120 = load i32, ptr %i119, align 4, !tbaa !154
  br label %bb895

bb121:                                            ; preds = %bb10
  %i122 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i123 = load i32, ptr %i122, align 4, !tbaa !154
  br label %bb746

bb124:                                            ; preds = %bb10
  %i125 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i126 = load i32, ptr %i125, align 4, !tbaa !154
  br label %bb679

bb127:                                            ; preds = %bb10
  %i128 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i129 = load i32, ptr %i128, align 4, !tbaa !154
  br label %bb612

bb130:                                            ; preds = %bb10
  %i131 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i132 = load i32, ptr %i131, align 4, !tbaa !154
  br label %bb545

bb133:                                            ; preds = %bb10
  %i134 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i135 = load i32, ptr %i134, align 4, !tbaa !154
  br label %bb478

bb136:                                            ; preds = %bb10
  %i137 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i138 = load i32, ptr %i137, align 4, !tbaa !154
  br label %bb315

bb139:                                            ; preds = %bb10
  %i140 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i141 = load i32, ptr %i140, align 4, !tbaa !154
  br label %bb249

bb142:                                            ; preds = %bb10
  %i143 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i144 = load i32, ptr %i143, align 4, !tbaa !154
  br label %bb183

bb145:                                            ; preds = %bb6
  %i146 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i147 = load i32, ptr %i146, align 8, !tbaa !155
  br label %bb154

bb148:                                            ; preds = %bb6
  %i149 = getelementptr inbounds %struct.bz_stream, ptr %i1, i64 0, i32 1
  %i150 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i151 = getelementptr inbounds %struct.bz_stream, ptr %i1, i64 0, i32 2
  %i152 = getelementptr inbounds %struct.bz_stream, ptr %i1, i64 0, i32 3
  %i153 = load i32, ptr %i149, align 8, !tbaa !141
  br label %bb161

bb154.loopexit:                                   ; preds = %bb181
  br label %bb154

bb154:                                            ; preds = %bb154.loopexit, %bb145
  %i155 = phi i32 [ %i147, %bb145 ], [ %i171, %bb154.loopexit ]
  %i156 = phi i32 [ %i8, %bb145 ], [ %i172, %bb154.loopexit ]
  %i157 = add nsw i32 %i156, -8
  %i158 = lshr i32 %i155, %i157
  store i32 %i157, ptr %i7, align 4, !tbaa !154
  %i159 = and i32 %i158, 255
  %i160 = icmp eq i32 %i159, 66
  br i1 %i160, label %bb154.bb183_crit_edge, label %bb154.bb4390_crit_edge

bb154.bb4390_crit_edge:                           ; preds = %bb154
  br label %bb4390

bb154.bb183_crit_edge:                            ; preds = %bb154
  br label %bb183

bb161:                                            ; preds = %bb181.bb161_crit_edge, %bb148
  %i162 = phi i32 [ %i153, %bb148 ], [ %i174, %bb181.bb161_crit_edge ]
  %i163 = phi i32 [ %i8, %bb148 ], [ %i172, %bb181.bb161_crit_edge ]
  %i164 = icmp eq i32 %i162, 0
  br i1 %i164, label %bb4390.loopexit43, label %bb165

bb165:                                            ; preds = %bb161
  %i166 = load i32, ptr %i150, align 8, !tbaa !155
  %i167 = shl i32 %i166, 8
  %i168 = load ptr, ptr %i1, align 8, !tbaa !147
  %i169 = load i8, ptr %i168, align 1, !tbaa !21
  %i170 = zext i8 %i169 to i32
  %i171 = or disjoint i32 %i167, %i170
  store i32 %i171, ptr %i150, align 8, !tbaa !155
  %i172 = add nsw i32 %i163, 8
  store i32 %i172, ptr %i7, align 4, !tbaa !154
  %i173 = getelementptr inbounds i8, ptr %i168, i64 1
  store ptr %i173, ptr %i1, align 8, !tbaa !147
  %i174 = add i32 %i162, -1
  store i32 %i174, ptr %i149, align 8, !tbaa !141
  %i175 = load i32, ptr %i151, align 4, !tbaa !131
  %i176 = add i32 %i175, 1
  store i32 %i176, ptr %i151, align 4, !tbaa !131
  %i177 = icmp eq i32 %i176, 0
  br i1 %i177, label %bb178, label %bb165.bb181_crit_edge

bb165.bb181_crit_edge:                            ; preds = %bb165
  br label %bb181

bb178:                                            ; preds = %bb165
  %i179 = load i32, ptr %i152, align 8, !tbaa !132
  %i180 = add i32 %i179, 1
  store i32 %i180, ptr %i152, align 8, !tbaa !132
  br label %bb181

bb181:                                            ; preds = %bb165.bb181_crit_edge, %bb178
  %i182 = icmp sgt i32 %i163, -1
  br i1 %i182, label %bb154.loopexit, label %bb181.bb161_crit_edge

bb181.bb161_crit_edge:                            ; preds = %bb181
  br label %bb161

bb183:                                            ; preds = %bb154.bb183_crit_edge, %bb142
  %i184 = phi i32 [ %i11, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i185 = phi i32 [ %i13, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i186 = phi i32 [ %i15, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i187 = phi i32 [ %i17, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i188 = phi i32 [ %i19, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i189 = phi i32 [ %i21, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i190 = phi i32 [ %i23, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i191 = phi i32 [ %i25, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i192 = phi i32 [ %i27, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i193 = phi i32 [ %i29, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i194 = phi i32 [ %i31, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i195 = phi i32 [ %i33, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i196 = phi i32 [ %i35, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i197 = phi i32 [ %i37, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i198 = phi i32 [ %i39, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i199 = phi i32 [ %i41, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i200 = phi i32 [ %i43, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i201 = phi i32 [ %i45, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i202 = phi i32 [ %i47, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i203 = phi i32 [ %i49, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i204 = phi i32 [ %i51, %bb142 ], [ 0, %bb154.bb183_crit_edge ]
  %i205 = phi ptr [ %i53, %bb142 ], [ null, %bb154.bb183_crit_edge ]
  %i206 = phi ptr [ %i55, %bb142 ], [ null, %bb154.bb183_crit_edge ]
  %i207 = phi ptr [ %i57, %bb142 ], [ null, %bb154.bb183_crit_edge ]
  %i208 = phi i32 [ %i144, %bb142 ], [ %i157, %bb154.bb183_crit_edge ]
  store i32 11, ptr %i2, align 8, !tbaa !153
  %i209 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i210 = icmp sgt i32 %i208, 7
  br i1 %i210, label %bb211, label %bb214

bb211:                                            ; preds = %bb183
  %i212 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i213 = load i32, ptr %i212, align 8, !tbaa !155
  br label %bb220

bb214:                                            ; preds = %bb183
  %i215 = getelementptr inbounds %struct.bz_stream, ptr %i1, i64 0, i32 1
  %i216 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i217 = getelementptr inbounds %struct.bz_stream, ptr %i1, i64 0, i32 2
  %i218 = getelementptr inbounds %struct.bz_stream, ptr %i1, i64 0, i32 3
  %i219 = load i32, ptr %i215, align 8, !tbaa !141
  br label %bb227

bb220.loopexit:                                   ; preds = %bb247
  br label %bb220

bb220:                                            ; preds = %bb220.loopexit, %bb211
  %i221 = phi i32 [ %i213, %bb211 ], [ %i237, %bb220.loopexit ]
  %i222 = phi i32 [ %i208, %bb211 ], [ %i238, %bb220.loopexit ]
  %i223 = add nsw i32 %i222, -8
  %i224 = lshr i32 %i221, %i223
  store i32 %i223, ptr %i209, align 4, !tbaa !154
  %i225 = and i32 %i224, 255
  %i226 = icmp eq i32 %i225, 90
  br i1 %i226, label %bb220.bb249_crit_edge, label %bb220.bb4390_crit_edge

bb220.bb4390_crit_edge:                           ; preds = %bb220
  br label %bb4390

bb220.bb249_crit_edge:                            ; preds = %bb220
  br label %bb249

bb227:                                            ; preds = %bb247.bb227_crit_edge, %bb214
  %i228 = phi i32 [ %i219, %bb214 ], [ %i240, %bb247.bb227_crit_edge ]
  %i229 = phi i32 [ %i208, %bb214 ], [ %i238, %bb247.bb227_crit_edge ]
  %i230 = icmp eq i32 %i228, 0
  br i1 %i230, label %bb4390.loopexit42, label %bb231

bb231:                                            ; preds = %bb227
  %i232 = load i32, ptr %i216, align 8, !tbaa !155
  %i233 = shl i32 %i232, 8
  %i234 = load ptr, ptr %i1, align 8, !tbaa !147
  %i235 = load i8, ptr %i234, align 1, !tbaa !21
  %i236 = zext i8 %i235 to i32
  %i237 = or disjoint i32 %i233, %i236
  store i32 %i237, ptr %i216, align 8, !tbaa !155
  %i238 = add nsw i32 %i229, 8
  store i32 %i238, ptr %i209, align 4, !tbaa !154
  %i239 = getelementptr inbounds i8, ptr %i234, i64 1
  store ptr %i239, ptr %i1, align 8, !tbaa !147
  %i240 = add i32 %i228, -1
  store i32 %i240, ptr %i215, align 8, !tbaa !141
  %i241 = load i32, ptr %i217, align 4, !tbaa !131
  %i242 = add i32 %i241, 1
  store i32 %i242, ptr %i217, align 4, !tbaa !131
  %i243 = icmp eq i32 %i242, 0
  br i1 %i243, label %bb244, label %bb231.bb247_crit_edge

bb231.bb247_crit_edge:                            ; preds = %bb231
  br label %bb247

bb244:                                            ; preds = %bb231
  %i245 = load i32, ptr %i218, align 8, !tbaa !132
  %i246 = add i32 %i245, 1
  store i32 %i246, ptr %i218, align 8, !tbaa !132
  br label %bb247

bb247:                                            ; preds = %bb231.bb247_crit_edge, %bb244
  %i248 = icmp sgt i32 %i229, -1
  br i1 %i248, label %bb220.loopexit, label %bb247.bb227_crit_edge

bb247.bb227_crit_edge:                            ; preds = %bb247
  br label %bb227

bb249:                                            ; preds = %bb220.bb249_crit_edge, %bb139
  %i250 = phi i32 [ %i11, %bb139 ], [ %i184, %bb220.bb249_crit_edge ]
  %i251 = phi i32 [ %i13, %bb139 ], [ %i185, %bb220.bb249_crit_edge ]
  %i252 = phi i32 [ %i15, %bb139 ], [ %i186, %bb220.bb249_crit_edge ]
  %i253 = phi i32 [ %i17, %bb139 ], [ %i187, %bb220.bb249_crit_edge ]
  %i254 = phi i32 [ %i19, %bb139 ], [ %i188, %bb220.bb249_crit_edge ]
  %i255 = phi i32 [ %i21, %bb139 ], [ %i189, %bb220.bb249_crit_edge ]
  %i256 = phi i32 [ %i23, %bb139 ], [ %i190, %bb220.bb249_crit_edge ]
  %i257 = phi i32 [ %i25, %bb139 ], [ %i191, %bb220.bb249_crit_edge ]
  %i258 = phi i32 [ %i27, %bb139 ], [ %i192, %bb220.bb249_crit_edge ]
  %i259 = phi i32 [ %i29, %bb139 ], [ %i193, %bb220.bb249_crit_edge ]
  %i260 = phi i32 [ %i31, %bb139 ], [ %i194, %bb220.bb249_crit_edge ]
  %i261 = phi i32 [ %i33, %bb139 ], [ %i195, %bb220.bb249_crit_edge ]
  %i262 = phi i32 [ %i35, %bb139 ], [ %i196, %bb220.bb249_crit_edge ]
  %i263 = phi i32 [ %i37, %bb139 ], [ %i197, %bb220.bb249_crit_edge ]
  %i264 = phi i32 [ %i39, %bb139 ], [ %i198, %bb220.bb249_crit_edge ]
  %i265 = phi i32 [ %i41, %bb139 ], [ %i199, %bb220.bb249_crit_edge ]
  %i266 = phi i32 [ %i43, %bb139 ], [ %i200, %bb220.bb249_crit_edge ]
  %i267 = phi i32 [ %i45, %bb139 ], [ %i201, %bb220.bb249_crit_edge ]
  %i268 = phi i32 [ %i47, %bb139 ], [ %i202, %bb220.bb249_crit_edge ]
  %i269 = phi i32 [ %i49, %bb139 ], [ %i203, %bb220.bb249_crit_edge ]
  %i270 = phi i32 [ %i51, %bb139 ], [ %i204, %bb220.bb249_crit_edge ]
  %i271 = phi ptr [ %i53, %bb139 ], [ %i205, %bb220.bb249_crit_edge ]
  %i272 = phi ptr [ %i55, %bb139 ], [ %i206, %bb220.bb249_crit_edge ]
  %i273 = phi ptr [ %i57, %bb139 ], [ %i207, %bb220.bb249_crit_edge ]
  %i274 = phi i32 [ %i141, %bb139 ], [ %i223, %bb220.bb249_crit_edge ]
  store i32 12, ptr %i2, align 8, !tbaa !153
  %i275 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i276 = icmp sgt i32 %i274, 7
  br i1 %i276, label %bb277, label %bb280

bb277:                                            ; preds = %bb249
  %i278 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i279 = load i32, ptr %i278, align 8, !tbaa !155
  br label %bb286

bb280:                                            ; preds = %bb249
  %i281 = getelementptr inbounds %struct.bz_stream, ptr %i1, i64 0, i32 1
  %i282 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i283 = getelementptr inbounds %struct.bz_stream, ptr %i1, i64 0, i32 2
  %i284 = getelementptr inbounds %struct.bz_stream, ptr %i1, i64 0, i32 3
  %i285 = load i32, ptr %i281, align 8, !tbaa !141
  br label %bb293

bb286.loopexit:                                   ; preds = %bb313
  br label %bb286

bb286:                                            ; preds = %bb286.loopexit, %bb277
  %i287 = phi i32 [ %i279, %bb277 ], [ %i303, %bb286.loopexit ]
  %i288 = phi i32 [ %i274, %bb277 ], [ %i304, %bb286.loopexit ]
  %i289 = add nsw i32 %i288, -8
  %i290 = lshr i32 %i287, %i289
  store i32 %i289, ptr %i275, align 4, !tbaa !154
  %i291 = and i32 %i290, 255
  %i292 = icmp eq i32 %i291, 104
  br i1 %i292, label %bb286.bb315_crit_edge, label %bb286.bb4390_crit_edge

bb286.bb4390_crit_edge:                           ; preds = %bb286
  br label %bb4390

bb286.bb315_crit_edge:                            ; preds = %bb286
  br label %bb315

bb293:                                            ; preds = %bb313.bb293_crit_edge, %bb280
  %i294 = phi i32 [ %i285, %bb280 ], [ %i306, %bb313.bb293_crit_edge ]
  %i295 = phi i32 [ %i274, %bb280 ], [ %i304, %bb313.bb293_crit_edge ]
  %i296 = icmp eq i32 %i294, 0
  br i1 %i296, label %bb4390.loopexit41, label %bb297

bb297:                                            ; preds = %bb293
  %i298 = load i32, ptr %i282, align 8, !tbaa !155
  %i299 = shl i32 %i298, 8
  %i300 = load ptr, ptr %i1, align 8, !tbaa !147
  %i301 = load i8, ptr %i300, align 1, !tbaa !21
  %i302 = zext i8 %i301 to i32
  %i303 = or disjoint i32 %i299, %i302
  store i32 %i303, ptr %i282, align 8, !tbaa !155
  %i304 = add nsw i32 %i295, 8
  store i32 %i304, ptr %i275, align 4, !tbaa !154
  %i305 = getelementptr inbounds i8, ptr %i300, i64 1
  store ptr %i305, ptr %i1, align 8, !tbaa !147
  %i306 = add i32 %i294, -1
  store i32 %i306, ptr %i281, align 8, !tbaa !141
  %i307 = load i32, ptr %i283, align 4, !tbaa !131
  %i308 = add i32 %i307, 1
  store i32 %i308, ptr %i283, align 4, !tbaa !131
  %i309 = icmp eq i32 %i308, 0
  br i1 %i309, label %bb310, label %bb297.bb313_crit_edge

bb297.bb313_crit_edge:                            ; preds = %bb297
  br label %bb313

bb310:                                            ; preds = %bb297
  %i311 = load i32, ptr %i284, align 8, !tbaa !132
  %i312 = add i32 %i311, 1
  store i32 %i312, ptr %i284, align 8, !tbaa !132
  br label %bb313

bb313:                                            ; preds = %bb297.bb313_crit_edge, %bb310
  %i314 = icmp sgt i32 %i295, -1
  br i1 %i314, label %bb286.loopexit, label %bb313.bb293_crit_edge

bb313.bb293_crit_edge:                            ; preds = %bb313
  br label %bb293

bb315:                                            ; preds = %bb286.bb315_crit_edge, %bb136
  %i316 = phi i32 [ %i11, %bb136 ], [ %i250, %bb286.bb315_crit_edge ]
  %i317 = phi i32 [ %i13, %bb136 ], [ %i251, %bb286.bb315_crit_edge ]
  %i318 = phi i32 [ %i15, %bb136 ], [ %i252, %bb286.bb315_crit_edge ]
  %i319 = phi i32 [ %i17, %bb136 ], [ %i253, %bb286.bb315_crit_edge ]
  %i320 = phi i32 [ %i19, %bb136 ], [ %i254, %bb286.bb315_crit_edge ]
  %i321 = phi i32 [ %i21, %bb136 ], [ %i255, %bb286.bb315_crit_edge ]
  %i322 = phi i32 [ %i23, %bb136 ], [ %i256, %bb286.bb315_crit_edge ]
  %i323 = phi i32 [ %i25, %bb136 ], [ %i257, %bb286.bb315_crit_edge ]
  %i324 = phi i32 [ %i27, %bb136 ], [ %i258, %bb286.bb315_crit_edge ]
  %i325 = phi i32 [ %i29, %bb136 ], [ %i259, %bb286.bb315_crit_edge ]
  %i326 = phi i32 [ %i31, %bb136 ], [ %i260, %bb286.bb315_crit_edge ]
  %i327 = phi i32 [ %i33, %bb136 ], [ %i261, %bb286.bb315_crit_edge ]
  %i328 = phi i32 [ %i35, %bb136 ], [ %i262, %bb286.bb315_crit_edge ]
  %i329 = phi i32 [ %i37, %bb136 ], [ %i263, %bb286.bb315_crit_edge ]
  %i330 = phi i32 [ %i39, %bb136 ], [ %i264, %bb286.bb315_crit_edge ]
  %i331 = phi i32 [ %i41, %bb136 ], [ %i265, %bb286.bb315_crit_edge ]
  %i332 = phi i32 [ %i43, %bb136 ], [ %i266, %bb286.bb315_crit_edge ]
  %i333 = phi i32 [ %i45, %bb136 ], [ %i267, %bb286.bb315_crit_edge ]
  %i334 = phi i32 [ %i47, %bb136 ], [ %i268, %bb286.bb315_crit_edge ]
  %i335 = phi i32 [ %i49, %bb136 ], [ %i269, %bb286.bb315_crit_edge ]
  %i336 = phi i32 [ %i51, %bb136 ], [ %i270, %bb286.bb315_crit_edge ]
  %i337 = phi ptr [ %i53, %bb136 ], [ %i271, %bb286.bb315_crit_edge ]
  %i338 = phi ptr [ %i55, %bb136 ], [ %i272, %bb286.bb315_crit_edge ]
  %i339 = phi ptr [ %i57, %bb136 ], [ %i273, %bb286.bb315_crit_edge ]
  %i340 = phi i32 [ %i138, %bb136 ], [ %i289, %bb286.bb315_crit_edge ]
  store i32 13, ptr %i2, align 8, !tbaa !153
  %i341 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i342 = icmp sgt i32 %i340, 7
  br i1 %i342, label %bb343, label %bb346

bb343:                                            ; preds = %bb315
  %i344 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i345 = load i32, ptr %i344, align 8, !tbaa !155
  br label %bb352

bb346:                                            ; preds = %bb315
  %i347 = getelementptr inbounds %struct.bz_stream, ptr %i1, i64 0, i32 1
  %i348 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i349 = getelementptr inbounds %struct.bz_stream, ptr %i1, i64 0, i32 2
  %i350 = getelementptr inbounds %struct.bz_stream, ptr %i1, i64 0, i32 3
  %i351 = load i32, ptr %i347, align 8, !tbaa !141
  br label %bb361

bb352.loopexit:                                   ; preds = %bb381
  br label %bb352

bb352:                                            ; preds = %bb352.loopexit, %bb343
  %i353 = phi i32 [ %i345, %bb343 ], [ %i371, %bb352.loopexit ]
  %i354 = phi i32 [ %i340, %bb343 ], [ %i372, %bb352.loopexit ]
  %i355 = add nsw i32 %i354, -8
  %i356 = lshr i32 %i353, %i355
  %i357 = and i32 %i356, 255
  store i32 %i355, ptr %i341, align 4, !tbaa !154
  %i358 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 9
  store i32 %i357, ptr %i358, align 8, !tbaa !255
  %i359 = add nsw i32 %i357, -58
  %i360 = icmp ult i32 %i359, -9
  br i1 %i360, label %bb352.bb4390_crit_edge, label %bb383

bb352.bb4390_crit_edge:                           ; preds = %bb352
  br label %bb4390

bb361:                                            ; preds = %bb381.bb361_crit_edge, %bb346
  %i362 = phi i32 [ %i351, %bb346 ], [ %i374, %bb381.bb361_crit_edge ]
  %i363 = phi i32 [ %i340, %bb346 ], [ %i372, %bb381.bb361_crit_edge ]
  %i364 = icmp eq i32 %i362, 0
  br i1 %i364, label %bb4390.loopexit40, label %bb365

bb365:                                            ; preds = %bb361
  %i366 = load i32, ptr %i348, align 8, !tbaa !155
  %i367 = shl i32 %i366, 8
  %i368 = load ptr, ptr %i1, align 8, !tbaa !147
  %i369 = load i8, ptr %i368, align 1, !tbaa !21
  %i370 = zext i8 %i369 to i32
  %i371 = or disjoint i32 %i367, %i370
  store i32 %i371, ptr %i348, align 8, !tbaa !155
  %i372 = add nsw i32 %i363, 8
  store i32 %i372, ptr %i341, align 4, !tbaa !154
  %i373 = getelementptr inbounds i8, ptr %i368, i64 1
  store ptr %i373, ptr %i1, align 8, !tbaa !147
  %i374 = add i32 %i362, -1
  store i32 %i374, ptr %i347, align 8, !tbaa !141
  %i375 = load i32, ptr %i349, align 4, !tbaa !131
  %i376 = add i32 %i375, 1
  store i32 %i376, ptr %i349, align 4, !tbaa !131
  %i377 = icmp eq i32 %i376, 0
  br i1 %i377, label %bb378, label %bb365.bb381_crit_edge

bb365.bb381_crit_edge:                            ; preds = %bb365
  br label %bb381

bb378:                                            ; preds = %bb365
  %i379 = load i32, ptr %i350, align 8, !tbaa !132
  %i380 = add i32 %i379, 1
  store i32 %i380, ptr %i350, align 8, !tbaa !132
  br label %bb381

bb381:                                            ; preds = %bb365.bb381_crit_edge, %bb378
  %i382 = icmp sgt i32 %i363, -1
  br i1 %i382, label %bb352.loopexit, label %bb381.bb361_crit_edge

bb381.bb361_crit_edge:                            ; preds = %bb381
  br label %bb361

bb383:                                            ; preds = %bb352
  %i384 = add nsw i32 %i357, -48
  store i32 %i384, ptr %i358, align 8, !tbaa !255
  %i385 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 10
  %i386 = load i8, ptr %i385, align 4, !tbaa !157
  %i387 = icmp eq i8 %i386, 0
  %i388 = getelementptr inbounds %struct.bz_stream, ptr %i1, i64 0, i32 9
  %i389 = load ptr, ptr %i388, align 8, !tbaa !118
  %i390 = getelementptr inbounds %struct.bz_stream, ptr %i1, i64 0, i32 11
  %i391 = load ptr, ptr %i390, align 8, !tbaa !121
  br i1 %i387, label %bb407, label %bb392

bb392:                                            ; preds = %bb383
  %i393 = mul nuw nsw i32 %i384, 200000
  %i394 = tail call ptr %i389(ptr noundef %i391, i32 noundef %i393, i32 noundef 1) #31
  %i395 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 21
  store ptr %i394, ptr %i395, align 8, !tbaa !169
  %i396 = load ptr, ptr %i388, align 8, !tbaa !118
  %i397 = load ptr, ptr %i390, align 8, !tbaa !121
  %i398 = load i32, ptr %i358, align 8, !tbaa !255
  %i399 = mul nsw i32 %i398, 100000
  %i400 = ashr exact i32 %i399, 1
  %i401 = tail call ptr %i396(ptr noundef %i397, i32 noundef %i400, i32 noundef 1) #31
  %i402 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 22
  store ptr %i401, ptr %i402, align 8, !tbaa !170
  %i403 = load ptr, ptr %i395, align 8, !tbaa !169
  %i404 = icmp eq ptr %i403, null
  %i405 = icmp eq ptr %i401, null
  %i406 = select i1 %i404, i1 true, i1 %i405
  br i1 %i406, label %bb392.bb4390_crit_edge, label %bb392.bb412_crit_edge

bb392.bb412_crit_edge:                            ; preds = %bb392
  br label %bb412

bb392.bb4390_crit_edge:                           ; preds = %bb392
  br label %bb4390

bb407:                                            ; preds = %bb383
  %i408 = mul nuw nsw i32 %i384, 400000
  %i409 = tail call ptr %i389(ptr noundef %i391, i32 noundef %i408, i32 noundef 1) #31
  %i410 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 20
  store ptr %i409, ptr %i410, align 8, !tbaa !173
  %i411 = icmp eq ptr %i409, null
  br i1 %i411, label %bb407.bb4390_crit_edge, label %bb407.bb412_crit_edge

bb407.bb412_crit_edge:                            ; preds = %bb407
  br label %bb412

bb407.bb4390_crit_edge:                           ; preds = %bb407
  br label %bb4390

bb412:                                            ; preds = %bb407.bb412_crit_edge, %bb392.bb412_crit_edge, %bb10.bb412_crit_edge
  %i413 = phi i32 [ %i316, %bb392.bb412_crit_edge ], [ %i316, %bb407.bb412_crit_edge ], [ %i11, %bb10.bb412_crit_edge ]
  %i414 = phi i32 [ %i317, %bb392.bb412_crit_edge ], [ %i317, %bb407.bb412_crit_edge ], [ %i13, %bb10.bb412_crit_edge ]
  %i415 = phi i32 [ %i318, %bb392.bb412_crit_edge ], [ %i318, %bb407.bb412_crit_edge ], [ %i15, %bb10.bb412_crit_edge ]
  %i416 = phi i32 [ %i319, %bb392.bb412_crit_edge ], [ %i319, %bb407.bb412_crit_edge ], [ %i17, %bb10.bb412_crit_edge ]
  %i417 = phi i32 [ %i320, %bb392.bb412_crit_edge ], [ %i320, %bb407.bb412_crit_edge ], [ %i19, %bb10.bb412_crit_edge ]
  %i418 = phi i32 [ %i321, %bb392.bb412_crit_edge ], [ %i321, %bb407.bb412_crit_edge ], [ %i21, %bb10.bb412_crit_edge ]
  %i419 = phi i32 [ %i322, %bb392.bb412_crit_edge ], [ %i322, %bb407.bb412_crit_edge ], [ %i23, %bb10.bb412_crit_edge ]
  %i420 = phi i32 [ %i323, %bb392.bb412_crit_edge ], [ %i323, %bb407.bb412_crit_edge ], [ %i25, %bb10.bb412_crit_edge ]
  %i421 = phi i32 [ %i324, %bb392.bb412_crit_edge ], [ %i324, %bb407.bb412_crit_edge ], [ %i27, %bb10.bb412_crit_edge ]
  %i422 = phi i32 [ %i325, %bb392.bb412_crit_edge ], [ %i325, %bb407.bb412_crit_edge ], [ %i29, %bb10.bb412_crit_edge ]
  %i423 = phi i32 [ %i326, %bb392.bb412_crit_edge ], [ %i326, %bb407.bb412_crit_edge ], [ %i31, %bb10.bb412_crit_edge ]
  %i424 = phi i32 [ %i327, %bb392.bb412_crit_edge ], [ %i327, %bb407.bb412_crit_edge ], [ %i33, %bb10.bb412_crit_edge ]
  %i425 = phi i32 [ %i328, %bb392.bb412_crit_edge ], [ %i328, %bb407.bb412_crit_edge ], [ %i35, %bb10.bb412_crit_edge ]
  %i426 = phi i32 [ %i329, %bb392.bb412_crit_edge ], [ %i329, %bb407.bb412_crit_edge ], [ %i37, %bb10.bb412_crit_edge ]
  %i427 = phi i32 [ %i330, %bb392.bb412_crit_edge ], [ %i330, %bb407.bb412_crit_edge ], [ %i39, %bb10.bb412_crit_edge ]
  %i428 = phi i32 [ %i331, %bb392.bb412_crit_edge ], [ %i331, %bb407.bb412_crit_edge ], [ %i41, %bb10.bb412_crit_edge ]
  %i429 = phi i32 [ %i332, %bb392.bb412_crit_edge ], [ %i332, %bb407.bb412_crit_edge ], [ %i43, %bb10.bb412_crit_edge ]
  %i430 = phi i32 [ %i333, %bb392.bb412_crit_edge ], [ %i333, %bb407.bb412_crit_edge ], [ %i45, %bb10.bb412_crit_edge ]
  %i431 = phi i32 [ %i334, %bb392.bb412_crit_edge ], [ %i334, %bb407.bb412_crit_edge ], [ %i47, %bb10.bb412_crit_edge ]
  %i432 = phi i32 [ %i335, %bb392.bb412_crit_edge ], [ %i335, %bb407.bb412_crit_edge ], [ %i49, %bb10.bb412_crit_edge ]
  %i433 = phi i32 [ %i336, %bb392.bb412_crit_edge ], [ %i336, %bb407.bb412_crit_edge ], [ %i51, %bb10.bb412_crit_edge ]
  %i434 = phi ptr [ %i337, %bb392.bb412_crit_edge ], [ %i337, %bb407.bb412_crit_edge ], [ %i53, %bb10.bb412_crit_edge ]
  %i435 = phi ptr [ %i338, %bb392.bb412_crit_edge ], [ %i338, %bb407.bb412_crit_edge ], [ %i55, %bb10.bb412_crit_edge ]
  %i436 = phi ptr [ %i339, %bb392.bb412_crit_edge ], [ %i339, %bb407.bb412_crit_edge ], [ %i57, %bb10.bb412_crit_edge ]
  store i32 14, ptr %i2, align 8, !tbaa !153
  %i437 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i438 = load i32, ptr %i437, align 4, !tbaa !154
  %i439 = icmp sgt i32 %i438, 7
  br i1 %i439, label %bb440, label %bb443

bb440:                                            ; preds = %bb412
  %i441 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i442 = load i32, ptr %i441, align 8, !tbaa !155
  br label %bb450

bb443:                                            ; preds = %bb412
  %i444 = load ptr, ptr %arg, align 8, !tbaa !151
  %i445 = getelementptr inbounds %struct.bz_stream, ptr %i444, i64 0, i32 1
  %i446 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i447 = getelementptr inbounds %struct.bz_stream, ptr %i444, i64 0, i32 2
  %i448 = getelementptr inbounds %struct.bz_stream, ptr %i444, i64 0, i32 3
  %i449 = load i32, ptr %i445, align 8, !tbaa !141
  br label %bb456

bb450.loopexit:                                   ; preds = %bb476
  br label %bb450

bb450:                                            ; preds = %bb450.loopexit, %bb440
  %i451 = phi i32 [ %i442, %bb440 ], [ %i466, %bb450.loopexit ]
  %i452 = phi i32 [ %i438, %bb440 ], [ %i467, %bb450.loopexit ]
  %i453 = add nsw i32 %i452, -8
  %i454 = lshr i32 %i451, %i453
  store i32 %i453, ptr %i437, align 4, !tbaa !154
  %i455 = trunc i32 %i454 to i8
  switch i8 %i455, label %bb450.bb4390_crit_edge [
    i8 23, label %bb450.bb3769_crit_edge
    i8 49, label %bb450.bb478_crit_edge
  ]

bb450.bb478_crit_edge:                            ; preds = %bb450
  br label %bb478

bb450.bb3769_crit_edge:                           ; preds = %bb450
  br label %bb3769

bb450.bb4390_crit_edge:                           ; preds = %bb450
  br label %bb4390

bb456:                                            ; preds = %bb476.bb456_crit_edge, %bb443
  %i457 = phi i32 [ %i449, %bb443 ], [ %i469, %bb476.bb456_crit_edge ]
  %i458 = phi i32 [ %i438, %bb443 ], [ %i467, %bb476.bb456_crit_edge ]
  %i459 = icmp eq i32 %i457, 0
  br i1 %i459, label %bb4390.loopexit39, label %bb460

bb460:                                            ; preds = %bb456
  %i461 = load i32, ptr %i446, align 8, !tbaa !155
  %i462 = shl i32 %i461, 8
  %i463 = load ptr, ptr %i444, align 8, !tbaa !147
  %i464 = load i8, ptr %i463, align 1, !tbaa !21
  %i465 = zext i8 %i464 to i32
  %i466 = or disjoint i32 %i462, %i465
  store i32 %i466, ptr %i446, align 8, !tbaa !155
  %i467 = add nsw i32 %i458, 8
  store i32 %i467, ptr %i437, align 4, !tbaa !154
  %i468 = getelementptr inbounds i8, ptr %i463, i64 1
  store ptr %i468, ptr %i444, align 8, !tbaa !147
  %i469 = add i32 %i457, -1
  store i32 %i469, ptr %i445, align 8, !tbaa !141
  %i470 = load i32, ptr %i447, align 4, !tbaa !131
  %i471 = add i32 %i470, 1
  store i32 %i471, ptr %i447, align 4, !tbaa !131
  %i472 = icmp eq i32 %i471, 0
  br i1 %i472, label %bb473, label %bb460.bb476_crit_edge

bb460.bb476_crit_edge:                            ; preds = %bb460
  br label %bb476

bb473:                                            ; preds = %bb460
  %i474 = load i32, ptr %i448, align 8, !tbaa !132
  %i475 = add i32 %i474, 1
  store i32 %i475, ptr %i448, align 8, !tbaa !132
  br label %bb476

bb476:                                            ; preds = %bb460.bb476_crit_edge, %bb473
  %i477 = icmp sgt i32 %i458, -1
  br i1 %i477, label %bb450.loopexit, label %bb476.bb456_crit_edge

bb476.bb456_crit_edge:                            ; preds = %bb476
  br label %bb456

bb478:                                            ; preds = %bb450.bb478_crit_edge, %bb133
  %i479 = phi i32 [ %i11, %bb133 ], [ %i413, %bb450.bb478_crit_edge ]
  %i480 = phi i32 [ %i13, %bb133 ], [ %i414, %bb450.bb478_crit_edge ]
  %i481 = phi i32 [ %i15, %bb133 ], [ %i415, %bb450.bb478_crit_edge ]
  %i482 = phi i32 [ %i17, %bb133 ], [ %i416, %bb450.bb478_crit_edge ]
  %i483 = phi i32 [ %i19, %bb133 ], [ %i417, %bb450.bb478_crit_edge ]
  %i484 = phi i32 [ %i21, %bb133 ], [ %i418, %bb450.bb478_crit_edge ]
  %i485 = phi i32 [ %i23, %bb133 ], [ %i419, %bb450.bb478_crit_edge ]
  %i486 = phi i32 [ %i25, %bb133 ], [ %i420, %bb450.bb478_crit_edge ]
  %i487 = phi i32 [ %i27, %bb133 ], [ %i421, %bb450.bb478_crit_edge ]
  %i488 = phi i32 [ %i29, %bb133 ], [ %i422, %bb450.bb478_crit_edge ]
  %i489 = phi i32 [ %i31, %bb133 ], [ %i423, %bb450.bb478_crit_edge ]
  %i490 = phi i32 [ %i33, %bb133 ], [ %i424, %bb450.bb478_crit_edge ]
  %i491 = phi i32 [ %i35, %bb133 ], [ %i425, %bb450.bb478_crit_edge ]
  %i492 = phi i32 [ %i37, %bb133 ], [ %i426, %bb450.bb478_crit_edge ]
  %i493 = phi i32 [ %i39, %bb133 ], [ %i427, %bb450.bb478_crit_edge ]
  %i494 = phi i32 [ %i41, %bb133 ], [ %i428, %bb450.bb478_crit_edge ]
  %i495 = phi i32 [ %i43, %bb133 ], [ %i429, %bb450.bb478_crit_edge ]
  %i496 = phi i32 [ %i45, %bb133 ], [ %i430, %bb450.bb478_crit_edge ]
  %i497 = phi i32 [ %i47, %bb133 ], [ %i431, %bb450.bb478_crit_edge ]
  %i498 = phi i32 [ %i49, %bb133 ], [ %i432, %bb450.bb478_crit_edge ]
  %i499 = phi i32 [ %i51, %bb133 ], [ %i433, %bb450.bb478_crit_edge ]
  %i500 = phi ptr [ %i53, %bb133 ], [ %i434, %bb450.bb478_crit_edge ]
  %i501 = phi ptr [ %i55, %bb133 ], [ %i435, %bb450.bb478_crit_edge ]
  %i502 = phi ptr [ %i57, %bb133 ], [ %i436, %bb450.bb478_crit_edge ]
  %i503 = phi i32 [ %i135, %bb133 ], [ %i453, %bb450.bb478_crit_edge ]
  store i32 15, ptr %i2, align 8, !tbaa !153
  %i504 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i505 = icmp sgt i32 %i503, 7
  br i1 %i505, label %bb506, label %bb509

bb506:                                            ; preds = %bb478
  %i507 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i508 = load i32, ptr %i507, align 8, !tbaa !155
  br label %bb516

bb509:                                            ; preds = %bb478
  %i510 = load ptr, ptr %arg, align 8, !tbaa !151
  %i511 = getelementptr inbounds %struct.bz_stream, ptr %i510, i64 0, i32 1
  %i512 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i513 = getelementptr inbounds %struct.bz_stream, ptr %i510, i64 0, i32 2
  %i514 = getelementptr inbounds %struct.bz_stream, ptr %i510, i64 0, i32 3
  %i515 = load i32, ptr %i511, align 8, !tbaa !141
  br label %bb523

bb516.loopexit:                                   ; preds = %bb543
  br label %bb516

bb516:                                            ; preds = %bb516.loopexit, %bb506
  %i517 = phi i32 [ %i508, %bb506 ], [ %i533, %bb516.loopexit ]
  %i518 = phi i32 [ %i503, %bb506 ], [ %i534, %bb516.loopexit ]
  %i519 = add nsw i32 %i518, -8
  %i520 = lshr i32 %i517, %i519
  store i32 %i519, ptr %i504, align 4, !tbaa !154
  %i521 = and i32 %i520, 255
  %i522 = icmp eq i32 %i521, 65
  br i1 %i522, label %bb516.bb545_crit_edge, label %bb516.bb4390_crit_edge

bb516.bb4390_crit_edge:                           ; preds = %bb516
  br label %bb4390

bb516.bb545_crit_edge:                            ; preds = %bb516
  br label %bb545

bb523:                                            ; preds = %bb543.bb523_crit_edge, %bb509
  %i524 = phi i32 [ %i515, %bb509 ], [ %i536, %bb543.bb523_crit_edge ]
  %i525 = phi i32 [ %i503, %bb509 ], [ %i534, %bb543.bb523_crit_edge ]
  %i526 = icmp eq i32 %i524, 0
  br i1 %i526, label %bb4390.loopexit38, label %bb527

bb527:                                            ; preds = %bb523
  %i528 = load i32, ptr %i512, align 8, !tbaa !155
  %i529 = shl i32 %i528, 8
  %i530 = load ptr, ptr %i510, align 8, !tbaa !147
  %i531 = load i8, ptr %i530, align 1, !tbaa !21
  %i532 = zext i8 %i531 to i32
  %i533 = or disjoint i32 %i529, %i532
  store i32 %i533, ptr %i512, align 8, !tbaa !155
  %i534 = add nsw i32 %i525, 8
  store i32 %i534, ptr %i504, align 4, !tbaa !154
  %i535 = getelementptr inbounds i8, ptr %i530, i64 1
  store ptr %i535, ptr %i510, align 8, !tbaa !147
  %i536 = add i32 %i524, -1
  store i32 %i536, ptr %i511, align 8, !tbaa !141
  %i537 = load i32, ptr %i513, align 4, !tbaa !131
  %i538 = add i32 %i537, 1
  store i32 %i538, ptr %i513, align 4, !tbaa !131
  %i539 = icmp eq i32 %i538, 0
  br i1 %i539, label %bb540, label %bb527.bb543_crit_edge

bb527.bb543_crit_edge:                            ; preds = %bb527
  br label %bb543

bb540:                                            ; preds = %bb527
  %i541 = load i32, ptr %i514, align 8, !tbaa !132
  %i542 = add i32 %i541, 1
  store i32 %i542, ptr %i514, align 8, !tbaa !132
  br label %bb543

bb543:                                            ; preds = %bb527.bb543_crit_edge, %bb540
  %i544 = icmp sgt i32 %i525, -1
  br i1 %i544, label %bb516.loopexit, label %bb543.bb523_crit_edge

bb543.bb523_crit_edge:                            ; preds = %bb543
  br label %bb523

bb545:                                            ; preds = %bb516.bb545_crit_edge, %bb130
  %i546 = phi i32 [ %i11, %bb130 ], [ %i479, %bb516.bb545_crit_edge ]
  %i547 = phi i32 [ %i13, %bb130 ], [ %i480, %bb516.bb545_crit_edge ]
  %i548 = phi i32 [ %i15, %bb130 ], [ %i481, %bb516.bb545_crit_edge ]
  %i549 = phi i32 [ %i17, %bb130 ], [ %i482, %bb516.bb545_crit_edge ]
  %i550 = phi i32 [ %i19, %bb130 ], [ %i483, %bb516.bb545_crit_edge ]
  %i551 = phi i32 [ %i21, %bb130 ], [ %i484, %bb516.bb545_crit_edge ]
  %i552 = phi i32 [ %i23, %bb130 ], [ %i485, %bb516.bb545_crit_edge ]
  %i553 = phi i32 [ %i25, %bb130 ], [ %i486, %bb516.bb545_crit_edge ]
  %i554 = phi i32 [ %i27, %bb130 ], [ %i487, %bb516.bb545_crit_edge ]
  %i555 = phi i32 [ %i29, %bb130 ], [ %i488, %bb516.bb545_crit_edge ]
  %i556 = phi i32 [ %i31, %bb130 ], [ %i489, %bb516.bb545_crit_edge ]
  %i557 = phi i32 [ %i33, %bb130 ], [ %i490, %bb516.bb545_crit_edge ]
  %i558 = phi i32 [ %i35, %bb130 ], [ %i491, %bb516.bb545_crit_edge ]
  %i559 = phi i32 [ %i37, %bb130 ], [ %i492, %bb516.bb545_crit_edge ]
  %i560 = phi i32 [ %i39, %bb130 ], [ %i493, %bb516.bb545_crit_edge ]
  %i561 = phi i32 [ %i41, %bb130 ], [ %i494, %bb516.bb545_crit_edge ]
  %i562 = phi i32 [ %i43, %bb130 ], [ %i495, %bb516.bb545_crit_edge ]
  %i563 = phi i32 [ %i45, %bb130 ], [ %i496, %bb516.bb545_crit_edge ]
  %i564 = phi i32 [ %i47, %bb130 ], [ %i497, %bb516.bb545_crit_edge ]
  %i565 = phi i32 [ %i49, %bb130 ], [ %i498, %bb516.bb545_crit_edge ]
  %i566 = phi i32 [ %i51, %bb130 ], [ %i499, %bb516.bb545_crit_edge ]
  %i567 = phi ptr [ %i53, %bb130 ], [ %i500, %bb516.bb545_crit_edge ]
  %i568 = phi ptr [ %i55, %bb130 ], [ %i501, %bb516.bb545_crit_edge ]
  %i569 = phi ptr [ %i57, %bb130 ], [ %i502, %bb516.bb545_crit_edge ]
  %i570 = phi i32 [ %i132, %bb130 ], [ %i519, %bb516.bb545_crit_edge ]
  store i32 16, ptr %i2, align 8, !tbaa !153
  %i571 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i572 = icmp sgt i32 %i570, 7
  br i1 %i572, label %bb573, label %bb576

bb573:                                            ; preds = %bb545
  %i574 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i575 = load i32, ptr %i574, align 8, !tbaa !155
  br label %bb583

bb576:                                            ; preds = %bb545
  %i577 = load ptr, ptr %arg, align 8, !tbaa !151
  %i578 = getelementptr inbounds %struct.bz_stream, ptr %i577, i64 0, i32 1
  %i579 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i580 = getelementptr inbounds %struct.bz_stream, ptr %i577, i64 0, i32 2
  %i581 = getelementptr inbounds %struct.bz_stream, ptr %i577, i64 0, i32 3
  %i582 = load i32, ptr %i578, align 8, !tbaa !141
  br label %bb590

bb583.loopexit:                                   ; preds = %bb610
  br label %bb583

bb583:                                            ; preds = %bb583.loopexit, %bb573
  %i584 = phi i32 [ %i575, %bb573 ], [ %i600, %bb583.loopexit ]
  %i585 = phi i32 [ %i570, %bb573 ], [ %i601, %bb583.loopexit ]
  %i586 = add nsw i32 %i585, -8
  %i587 = lshr i32 %i584, %i586
  store i32 %i586, ptr %i571, align 4, !tbaa !154
  %i588 = and i32 %i587, 255
  %i589 = icmp eq i32 %i588, 89
  br i1 %i589, label %bb583.bb612_crit_edge, label %bb583.bb4390_crit_edge

bb583.bb4390_crit_edge:                           ; preds = %bb583
  br label %bb4390

bb583.bb612_crit_edge:                            ; preds = %bb583
  br label %bb612

bb590:                                            ; preds = %bb610.bb590_crit_edge, %bb576
  %i591 = phi i32 [ %i582, %bb576 ], [ %i603, %bb610.bb590_crit_edge ]
  %i592 = phi i32 [ %i570, %bb576 ], [ %i601, %bb610.bb590_crit_edge ]
  %i593 = icmp eq i32 %i591, 0
  br i1 %i593, label %bb4390.loopexit37, label %bb594

bb594:                                            ; preds = %bb590
  %i595 = load i32, ptr %i579, align 8, !tbaa !155
  %i596 = shl i32 %i595, 8
  %i597 = load ptr, ptr %i577, align 8, !tbaa !147
  %i598 = load i8, ptr %i597, align 1, !tbaa !21
  %i599 = zext i8 %i598 to i32
  %i600 = or disjoint i32 %i596, %i599
  store i32 %i600, ptr %i579, align 8, !tbaa !155
  %i601 = add nsw i32 %i592, 8
  store i32 %i601, ptr %i571, align 4, !tbaa !154
  %i602 = getelementptr inbounds i8, ptr %i597, i64 1
  store ptr %i602, ptr %i577, align 8, !tbaa !147
  %i603 = add i32 %i591, -1
  store i32 %i603, ptr %i578, align 8, !tbaa !141
  %i604 = load i32, ptr %i580, align 4, !tbaa !131
  %i605 = add i32 %i604, 1
  store i32 %i605, ptr %i580, align 4, !tbaa !131
  %i606 = icmp eq i32 %i605, 0
  br i1 %i606, label %bb607, label %bb594.bb610_crit_edge

bb594.bb610_crit_edge:                            ; preds = %bb594
  br label %bb610

bb607:                                            ; preds = %bb594
  %i608 = load i32, ptr %i581, align 8, !tbaa !132
  %i609 = add i32 %i608, 1
  store i32 %i609, ptr %i581, align 8, !tbaa !132
  br label %bb610

bb610:                                            ; preds = %bb594.bb610_crit_edge, %bb607
  %i611 = icmp sgt i32 %i592, -1
  br i1 %i611, label %bb583.loopexit, label %bb610.bb590_crit_edge

bb610.bb590_crit_edge:                            ; preds = %bb610
  br label %bb590

bb612:                                            ; preds = %bb583.bb612_crit_edge, %bb127
  %i613 = phi i32 [ %i11, %bb127 ], [ %i546, %bb583.bb612_crit_edge ]
  %i614 = phi i32 [ %i13, %bb127 ], [ %i547, %bb583.bb612_crit_edge ]
  %i615 = phi i32 [ %i15, %bb127 ], [ %i548, %bb583.bb612_crit_edge ]
  %i616 = phi i32 [ %i17, %bb127 ], [ %i549, %bb583.bb612_crit_edge ]
  %i617 = phi i32 [ %i19, %bb127 ], [ %i550, %bb583.bb612_crit_edge ]
  %i618 = phi i32 [ %i21, %bb127 ], [ %i551, %bb583.bb612_crit_edge ]
  %i619 = phi i32 [ %i23, %bb127 ], [ %i552, %bb583.bb612_crit_edge ]
  %i620 = phi i32 [ %i25, %bb127 ], [ %i553, %bb583.bb612_crit_edge ]
  %i621 = phi i32 [ %i27, %bb127 ], [ %i554, %bb583.bb612_crit_edge ]
  %i622 = phi i32 [ %i29, %bb127 ], [ %i555, %bb583.bb612_crit_edge ]
  %i623 = phi i32 [ %i31, %bb127 ], [ %i556, %bb583.bb612_crit_edge ]
  %i624 = phi i32 [ %i33, %bb127 ], [ %i557, %bb583.bb612_crit_edge ]
  %i625 = phi i32 [ %i35, %bb127 ], [ %i558, %bb583.bb612_crit_edge ]
  %i626 = phi i32 [ %i37, %bb127 ], [ %i559, %bb583.bb612_crit_edge ]
  %i627 = phi i32 [ %i39, %bb127 ], [ %i560, %bb583.bb612_crit_edge ]
  %i628 = phi i32 [ %i41, %bb127 ], [ %i561, %bb583.bb612_crit_edge ]
  %i629 = phi i32 [ %i43, %bb127 ], [ %i562, %bb583.bb612_crit_edge ]
  %i630 = phi i32 [ %i45, %bb127 ], [ %i563, %bb583.bb612_crit_edge ]
  %i631 = phi i32 [ %i47, %bb127 ], [ %i564, %bb583.bb612_crit_edge ]
  %i632 = phi i32 [ %i49, %bb127 ], [ %i565, %bb583.bb612_crit_edge ]
  %i633 = phi i32 [ %i51, %bb127 ], [ %i566, %bb583.bb612_crit_edge ]
  %i634 = phi ptr [ %i53, %bb127 ], [ %i567, %bb583.bb612_crit_edge ]
  %i635 = phi ptr [ %i55, %bb127 ], [ %i568, %bb583.bb612_crit_edge ]
  %i636 = phi ptr [ %i57, %bb127 ], [ %i569, %bb583.bb612_crit_edge ]
  %i637 = phi i32 [ %i129, %bb127 ], [ %i586, %bb583.bb612_crit_edge ]
  store i32 17, ptr %i2, align 8, !tbaa !153
  %i638 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i639 = icmp sgt i32 %i637, 7
  br i1 %i639, label %bb640, label %bb643

bb640:                                            ; preds = %bb612
  %i641 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i642 = load i32, ptr %i641, align 8, !tbaa !155
  br label %bb650

bb643:                                            ; preds = %bb612
  %i644 = load ptr, ptr %arg, align 8, !tbaa !151
  %i645 = getelementptr inbounds %struct.bz_stream, ptr %i644, i64 0, i32 1
  %i646 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i647 = getelementptr inbounds %struct.bz_stream, ptr %i644, i64 0, i32 2
  %i648 = getelementptr inbounds %struct.bz_stream, ptr %i644, i64 0, i32 3
  %i649 = load i32, ptr %i645, align 8, !tbaa !141
  br label %bb657

bb650.loopexit:                                   ; preds = %bb677
  br label %bb650

bb650:                                            ; preds = %bb650.loopexit, %bb640
  %i651 = phi i32 [ %i642, %bb640 ], [ %i667, %bb650.loopexit ]
  %i652 = phi i32 [ %i637, %bb640 ], [ %i668, %bb650.loopexit ]
  %i653 = add nsw i32 %i652, -8
  %i654 = lshr i32 %i651, %i653
  store i32 %i653, ptr %i638, align 4, !tbaa !154
  %i655 = and i32 %i654, 255
  %i656 = icmp eq i32 %i655, 38
  br i1 %i656, label %bb650.bb679_crit_edge, label %bb650.bb4390_crit_edge

bb650.bb4390_crit_edge:                           ; preds = %bb650
  br label %bb4390

bb650.bb679_crit_edge:                            ; preds = %bb650
  br label %bb679

bb657:                                            ; preds = %bb677.bb657_crit_edge, %bb643
  %i658 = phi i32 [ %i649, %bb643 ], [ %i670, %bb677.bb657_crit_edge ]
  %i659 = phi i32 [ %i637, %bb643 ], [ %i668, %bb677.bb657_crit_edge ]
  %i660 = icmp eq i32 %i658, 0
  br i1 %i660, label %bb4390.loopexit36, label %bb661

bb661:                                            ; preds = %bb657
  %i662 = load i32, ptr %i646, align 8, !tbaa !155
  %i663 = shl i32 %i662, 8
  %i664 = load ptr, ptr %i644, align 8, !tbaa !147
  %i665 = load i8, ptr %i664, align 1, !tbaa !21
  %i666 = zext i8 %i665 to i32
  %i667 = or disjoint i32 %i663, %i666
  store i32 %i667, ptr %i646, align 8, !tbaa !155
  %i668 = add nsw i32 %i659, 8
  store i32 %i668, ptr %i638, align 4, !tbaa !154
  %i669 = getelementptr inbounds i8, ptr %i664, i64 1
  store ptr %i669, ptr %i644, align 8, !tbaa !147
  %i670 = add i32 %i658, -1
  store i32 %i670, ptr %i645, align 8, !tbaa !141
  %i671 = load i32, ptr %i647, align 4, !tbaa !131
  %i672 = add i32 %i671, 1
  store i32 %i672, ptr %i647, align 4, !tbaa !131
  %i673 = icmp eq i32 %i672, 0
  br i1 %i673, label %bb674, label %bb661.bb677_crit_edge

bb661.bb677_crit_edge:                            ; preds = %bb661
  br label %bb677

bb674:                                            ; preds = %bb661
  %i675 = load i32, ptr %i648, align 8, !tbaa !132
  %i676 = add i32 %i675, 1
  store i32 %i676, ptr %i648, align 8, !tbaa !132
  br label %bb677

bb677:                                            ; preds = %bb661.bb677_crit_edge, %bb674
  %i678 = icmp sgt i32 %i659, -1
  br i1 %i678, label %bb650.loopexit, label %bb677.bb657_crit_edge

bb677.bb657_crit_edge:                            ; preds = %bb677
  br label %bb657

bb679:                                            ; preds = %bb650.bb679_crit_edge, %bb124
  %i680 = phi i32 [ %i11, %bb124 ], [ %i613, %bb650.bb679_crit_edge ]
  %i681 = phi i32 [ %i13, %bb124 ], [ %i614, %bb650.bb679_crit_edge ]
  %i682 = phi i32 [ %i15, %bb124 ], [ %i615, %bb650.bb679_crit_edge ]
  %i683 = phi i32 [ %i17, %bb124 ], [ %i616, %bb650.bb679_crit_edge ]
  %i684 = phi i32 [ %i19, %bb124 ], [ %i617, %bb650.bb679_crit_edge ]
  %i685 = phi i32 [ %i21, %bb124 ], [ %i618, %bb650.bb679_crit_edge ]
  %i686 = phi i32 [ %i23, %bb124 ], [ %i619, %bb650.bb679_crit_edge ]
  %i687 = phi i32 [ %i25, %bb124 ], [ %i620, %bb650.bb679_crit_edge ]
  %i688 = phi i32 [ %i27, %bb124 ], [ %i621, %bb650.bb679_crit_edge ]
  %i689 = phi i32 [ %i29, %bb124 ], [ %i622, %bb650.bb679_crit_edge ]
  %i690 = phi i32 [ %i31, %bb124 ], [ %i623, %bb650.bb679_crit_edge ]
  %i691 = phi i32 [ %i33, %bb124 ], [ %i624, %bb650.bb679_crit_edge ]
  %i692 = phi i32 [ %i35, %bb124 ], [ %i625, %bb650.bb679_crit_edge ]
  %i693 = phi i32 [ %i37, %bb124 ], [ %i626, %bb650.bb679_crit_edge ]
  %i694 = phi i32 [ %i39, %bb124 ], [ %i627, %bb650.bb679_crit_edge ]
  %i695 = phi i32 [ %i41, %bb124 ], [ %i628, %bb650.bb679_crit_edge ]
  %i696 = phi i32 [ %i43, %bb124 ], [ %i629, %bb650.bb679_crit_edge ]
  %i697 = phi i32 [ %i45, %bb124 ], [ %i630, %bb650.bb679_crit_edge ]
  %i698 = phi i32 [ %i47, %bb124 ], [ %i631, %bb650.bb679_crit_edge ]
  %i699 = phi i32 [ %i49, %bb124 ], [ %i632, %bb650.bb679_crit_edge ]
  %i700 = phi i32 [ %i51, %bb124 ], [ %i633, %bb650.bb679_crit_edge ]
  %i701 = phi ptr [ %i53, %bb124 ], [ %i634, %bb650.bb679_crit_edge ]
  %i702 = phi ptr [ %i55, %bb124 ], [ %i635, %bb650.bb679_crit_edge ]
  %i703 = phi ptr [ %i57, %bb124 ], [ %i636, %bb650.bb679_crit_edge ]
  %i704 = phi i32 [ %i126, %bb124 ], [ %i653, %bb650.bb679_crit_edge ]
  store i32 18, ptr %i2, align 8, !tbaa !153
  %i705 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i706 = icmp sgt i32 %i704, 7
  br i1 %i706, label %bb707, label %bb710

bb707:                                            ; preds = %bb679
  %i708 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i709 = load i32, ptr %i708, align 8, !tbaa !155
  br label %bb717

bb710:                                            ; preds = %bb679
  %i711 = load ptr, ptr %arg, align 8, !tbaa !151
  %i712 = getelementptr inbounds %struct.bz_stream, ptr %i711, i64 0, i32 1
  %i713 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i714 = getelementptr inbounds %struct.bz_stream, ptr %i711, i64 0, i32 2
  %i715 = getelementptr inbounds %struct.bz_stream, ptr %i711, i64 0, i32 3
  %i716 = load i32, ptr %i712, align 8, !tbaa !141
  br label %bb724

bb717.loopexit:                                   ; preds = %bb744
  br label %bb717

bb717:                                            ; preds = %bb717.loopexit, %bb707
  %i718 = phi i32 [ %i709, %bb707 ], [ %i734, %bb717.loopexit ]
  %i719 = phi i32 [ %i704, %bb707 ], [ %i735, %bb717.loopexit ]
  %i720 = add nsw i32 %i719, -8
  %i721 = lshr i32 %i718, %i720
  store i32 %i720, ptr %i705, align 4, !tbaa !154
  %i722 = and i32 %i721, 255
  %i723 = icmp eq i32 %i722, 83
  br i1 %i723, label %bb717.bb746_crit_edge, label %bb717.bb4390_crit_edge

bb717.bb4390_crit_edge:                           ; preds = %bb717
  br label %bb4390

bb717.bb746_crit_edge:                            ; preds = %bb717
  br label %bb746

bb724:                                            ; preds = %bb744.bb724_crit_edge, %bb710
  %i725 = phi i32 [ %i716, %bb710 ], [ %i737, %bb744.bb724_crit_edge ]
  %i726 = phi i32 [ %i704, %bb710 ], [ %i735, %bb744.bb724_crit_edge ]
  %i727 = icmp eq i32 %i725, 0
  br i1 %i727, label %bb4390.loopexit35, label %bb728

bb728:                                            ; preds = %bb724
  %i729 = load i32, ptr %i713, align 8, !tbaa !155
  %i730 = shl i32 %i729, 8
  %i731 = load ptr, ptr %i711, align 8, !tbaa !147
  %i732 = load i8, ptr %i731, align 1, !tbaa !21
  %i733 = zext i8 %i732 to i32
  %i734 = or disjoint i32 %i730, %i733
  store i32 %i734, ptr %i713, align 8, !tbaa !155
  %i735 = add nsw i32 %i726, 8
  store i32 %i735, ptr %i705, align 4, !tbaa !154
  %i736 = getelementptr inbounds i8, ptr %i731, i64 1
  store ptr %i736, ptr %i711, align 8, !tbaa !147
  %i737 = add i32 %i725, -1
  store i32 %i737, ptr %i712, align 8, !tbaa !141
  %i738 = load i32, ptr %i714, align 4, !tbaa !131
  %i739 = add i32 %i738, 1
  store i32 %i739, ptr %i714, align 4, !tbaa !131
  %i740 = icmp eq i32 %i739, 0
  br i1 %i740, label %bb741, label %bb728.bb744_crit_edge

bb728.bb744_crit_edge:                            ; preds = %bb728
  br label %bb744

bb741:                                            ; preds = %bb728
  %i742 = load i32, ptr %i715, align 8, !tbaa !132
  %i743 = add i32 %i742, 1
  store i32 %i743, ptr %i715, align 8, !tbaa !132
  br label %bb744

bb744:                                            ; preds = %bb728.bb744_crit_edge, %bb741
  %i745 = icmp sgt i32 %i726, -1
  br i1 %i745, label %bb717.loopexit, label %bb744.bb724_crit_edge

bb744.bb724_crit_edge:                            ; preds = %bb744
  br label %bb724

bb746:                                            ; preds = %bb717.bb746_crit_edge, %bb121
  %i747 = phi i32 [ %i11, %bb121 ], [ %i680, %bb717.bb746_crit_edge ]
  %i748 = phi i32 [ %i13, %bb121 ], [ %i681, %bb717.bb746_crit_edge ]
  %i749 = phi i32 [ %i15, %bb121 ], [ %i682, %bb717.bb746_crit_edge ]
  %i750 = phi i32 [ %i17, %bb121 ], [ %i683, %bb717.bb746_crit_edge ]
  %i751 = phi i32 [ %i19, %bb121 ], [ %i684, %bb717.bb746_crit_edge ]
  %i752 = phi i32 [ %i21, %bb121 ], [ %i685, %bb717.bb746_crit_edge ]
  %i753 = phi i32 [ %i23, %bb121 ], [ %i686, %bb717.bb746_crit_edge ]
  %i754 = phi i32 [ %i25, %bb121 ], [ %i687, %bb717.bb746_crit_edge ]
  %i755 = phi i32 [ %i27, %bb121 ], [ %i688, %bb717.bb746_crit_edge ]
  %i756 = phi i32 [ %i29, %bb121 ], [ %i689, %bb717.bb746_crit_edge ]
  %i757 = phi i32 [ %i31, %bb121 ], [ %i690, %bb717.bb746_crit_edge ]
  %i758 = phi i32 [ %i33, %bb121 ], [ %i691, %bb717.bb746_crit_edge ]
  %i759 = phi i32 [ %i35, %bb121 ], [ %i692, %bb717.bb746_crit_edge ]
  %i760 = phi i32 [ %i37, %bb121 ], [ %i693, %bb717.bb746_crit_edge ]
  %i761 = phi i32 [ %i39, %bb121 ], [ %i694, %bb717.bb746_crit_edge ]
  %i762 = phi i32 [ %i41, %bb121 ], [ %i695, %bb717.bb746_crit_edge ]
  %i763 = phi i32 [ %i43, %bb121 ], [ %i696, %bb717.bb746_crit_edge ]
  %i764 = phi i32 [ %i45, %bb121 ], [ %i697, %bb717.bb746_crit_edge ]
  %i765 = phi i32 [ %i47, %bb121 ], [ %i698, %bb717.bb746_crit_edge ]
  %i766 = phi i32 [ %i49, %bb121 ], [ %i699, %bb717.bb746_crit_edge ]
  %i767 = phi i32 [ %i51, %bb121 ], [ %i700, %bb717.bb746_crit_edge ]
  %i768 = phi ptr [ %i53, %bb121 ], [ %i701, %bb717.bb746_crit_edge ]
  %i769 = phi ptr [ %i55, %bb121 ], [ %i702, %bb717.bb746_crit_edge ]
  %i770 = phi ptr [ %i57, %bb121 ], [ %i703, %bb717.bb746_crit_edge ]
  %i771 = phi i32 [ %i123, %bb121 ], [ %i720, %bb717.bb746_crit_edge ]
  store i32 19, ptr %i2, align 8, !tbaa !153
  %i772 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i773 = icmp sgt i32 %i771, 7
  br i1 %i773, label %bb774, label %bb777

bb774:                                            ; preds = %bb746
  %i775 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i776 = load i32, ptr %i775, align 8, !tbaa !155
  br label %bb784

bb777:                                            ; preds = %bb746
  %i778 = load ptr, ptr %arg, align 8, !tbaa !151
  %i779 = getelementptr inbounds %struct.bz_stream, ptr %i778, i64 0, i32 1
  %i780 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i781 = getelementptr inbounds %struct.bz_stream, ptr %i778, i64 0, i32 2
  %i782 = getelementptr inbounds %struct.bz_stream, ptr %i778, i64 0, i32 3
  %i783 = load i32, ptr %i779, align 8, !tbaa !141
  br label %bb791

bb784.loopexit:                                   ; preds = %bb811
  br label %bb784

bb784:                                            ; preds = %bb784.loopexit, %bb774
  %i785 = phi i32 [ %i776, %bb774 ], [ %i801, %bb784.loopexit ]
  %i786 = phi i32 [ %i771, %bb774 ], [ %i802, %bb784.loopexit ]
  %i787 = add nsw i32 %i786, -8
  %i788 = lshr i32 %i785, %i787
  store i32 %i787, ptr %i772, align 4, !tbaa !154
  %i789 = and i32 %i788, 255
  %i790 = icmp eq i32 %i789, 89
  br i1 %i790, label %bb813, label %bb784.bb4390_crit_edge

bb784.bb4390_crit_edge:                           ; preds = %bb784
  br label %bb4390

bb791:                                            ; preds = %bb811.bb791_crit_edge, %bb777
  %i792 = phi i32 [ %i783, %bb777 ], [ %i804, %bb811.bb791_crit_edge ]
  %i793 = phi i32 [ %i771, %bb777 ], [ %i802, %bb811.bb791_crit_edge ]
  %i794 = icmp eq i32 %i792, 0
  br i1 %i794, label %bb4390.loopexit34, label %bb795

bb795:                                            ; preds = %bb791
  %i796 = load i32, ptr %i780, align 8, !tbaa !155
  %i797 = shl i32 %i796, 8
  %i798 = load ptr, ptr %i778, align 8, !tbaa !147
  %i799 = load i8, ptr %i798, align 1, !tbaa !21
  %i800 = zext i8 %i799 to i32
  %i801 = or disjoint i32 %i797, %i800
  store i32 %i801, ptr %i780, align 8, !tbaa !155
  %i802 = add nsw i32 %i793, 8
  store i32 %i802, ptr %i772, align 4, !tbaa !154
  %i803 = getelementptr inbounds i8, ptr %i798, i64 1
  store ptr %i803, ptr %i778, align 8, !tbaa !147
  %i804 = add i32 %i792, -1
  store i32 %i804, ptr %i779, align 8, !tbaa !141
  %i805 = load i32, ptr %i781, align 4, !tbaa !131
  %i806 = add i32 %i805, 1
  store i32 %i806, ptr %i781, align 4, !tbaa !131
  %i807 = icmp eq i32 %i806, 0
  br i1 %i807, label %bb808, label %bb795.bb811_crit_edge

bb795.bb811_crit_edge:                            ; preds = %bb795
  br label %bb811

bb808:                                            ; preds = %bb795
  %i809 = load i32, ptr %i782, align 8, !tbaa !132
  %i810 = add i32 %i809, 1
  store i32 %i810, ptr %i782, align 8, !tbaa !132
  br label %bb811

bb811:                                            ; preds = %bb795.bb811_crit_edge, %bb808
  %i812 = icmp sgt i32 %i793, -1
  br i1 %i812, label %bb784.loopexit, label %bb811.bb791_crit_edge

bb811.bb791_crit_edge:                            ; preds = %bb811
  br label %bb791

bb813:                                            ; preds = %bb784
  %i814 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 11
  %i815 = load i32, ptr %i814, align 8, !tbaa !158
  %i816 = add nsw i32 %i815, 1
  store i32 %i816, ptr %i814, align 8, !tbaa !158
  %i817 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 12
  %i818 = load i32, ptr %i817, align 4, !tbaa !159
  %i819 = icmp sgt i32 %i818, 1
  br i1 %i819, label %bb820, label %bb813.bb823_crit_edge

bb813.bb823_crit_edge:                            ; preds = %bb813
  br label %bb823

bb820:                                            ; preds = %bb813
  %i821 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i822 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %i821, ptr noundef nonnull @.str.119, i32 noundef %i816) #32
  br label %bb823

bb823:                                            ; preds = %bb813.bb823_crit_edge, %bb820
  %i824 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 23
  store i32 0, ptr %i824, align 8, !tbaa !174
  br label %bb825

bb825:                                            ; preds = %bb10.bb825_crit_edge, %bb823
  %i826 = phi i32 [ %i11, %bb10.bb825_crit_edge ], [ %i747, %bb823 ]
  %i827 = phi i32 [ %i13, %bb10.bb825_crit_edge ], [ %i748, %bb823 ]
  %i828 = phi i32 [ %i15, %bb10.bb825_crit_edge ], [ %i749, %bb823 ]
  %i829 = phi i32 [ %i17, %bb10.bb825_crit_edge ], [ %i750, %bb823 ]
  %i830 = phi i32 [ %i19, %bb10.bb825_crit_edge ], [ %i751, %bb823 ]
  %i831 = phi i32 [ %i21, %bb10.bb825_crit_edge ], [ %i752, %bb823 ]
  %i832 = phi i32 [ %i23, %bb10.bb825_crit_edge ], [ %i753, %bb823 ]
  %i833 = phi i32 [ %i25, %bb10.bb825_crit_edge ], [ %i754, %bb823 ]
  %i834 = phi i32 [ %i27, %bb10.bb825_crit_edge ], [ %i755, %bb823 ]
  %i835 = phi i32 [ %i29, %bb10.bb825_crit_edge ], [ %i756, %bb823 ]
  %i836 = phi i32 [ %i31, %bb10.bb825_crit_edge ], [ %i757, %bb823 ]
  %i837 = phi i32 [ %i33, %bb10.bb825_crit_edge ], [ %i758, %bb823 ]
  %i838 = phi i32 [ %i35, %bb10.bb825_crit_edge ], [ %i759, %bb823 ]
  %i839 = phi i32 [ %i37, %bb10.bb825_crit_edge ], [ %i760, %bb823 ]
  %i840 = phi i32 [ %i39, %bb10.bb825_crit_edge ], [ %i761, %bb823 ]
  %i841 = phi i32 [ %i41, %bb10.bb825_crit_edge ], [ %i762, %bb823 ]
  %i842 = phi i32 [ %i43, %bb10.bb825_crit_edge ], [ %i763, %bb823 ]
  %i843 = phi i32 [ %i45, %bb10.bb825_crit_edge ], [ %i764, %bb823 ]
  %i844 = phi i32 [ %i47, %bb10.bb825_crit_edge ], [ %i765, %bb823 ]
  %i845 = phi i32 [ %i49, %bb10.bb825_crit_edge ], [ %i766, %bb823 ]
  %i846 = phi i32 [ %i51, %bb10.bb825_crit_edge ], [ %i767, %bb823 ]
  %i847 = phi ptr [ %i53, %bb10.bb825_crit_edge ], [ %i768, %bb823 ]
  %i848 = phi ptr [ %i55, %bb10.bb825_crit_edge ], [ %i769, %bb823 ]
  %i849 = phi ptr [ %i57, %bb10.bb825_crit_edge ], [ %i770, %bb823 ]
  store i32 20, ptr %i2, align 8, !tbaa !153
  %i850 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i851 = load i32, ptr %i850, align 4, !tbaa !154
  %i852 = icmp sgt i32 %i851, 7
  br i1 %i852, label %bb853, label %bb856

bb853:                                            ; preds = %bb825
  %i854 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i855 = load i32, ptr %i854, align 8, !tbaa !155
  br label %bb863

bb856:                                            ; preds = %bb825
  %i857 = load ptr, ptr %arg, align 8, !tbaa !151
  %i858 = getelementptr inbounds %struct.bz_stream, ptr %i857, i64 0, i32 1
  %i859 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i860 = getelementptr inbounds %struct.bz_stream, ptr %i857, i64 0, i32 2
  %i861 = getelementptr inbounds %struct.bz_stream, ptr %i857, i64 0, i32 3
  %i862 = load i32, ptr %i858, align 8, !tbaa !141
  br label %bb873

bb863.loopexit:                                   ; preds = %bb893
  br label %bb863

bb863:                                            ; preds = %bb863.loopexit, %bb853
  %i864 = phi i32 [ %i855, %bb853 ], [ %i883, %bb863.loopexit ]
  %i865 = phi i32 [ %i851, %bb853 ], [ %i884, %bb863.loopexit ]
  %i866 = add nsw i32 %i865, -8
  %i867 = lshr i32 %i864, %i866
  store i32 %i866, ptr %i850, align 4, !tbaa !154
  %i868 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 23
  %i869 = load i32, ptr %i868, align 8, !tbaa !174
  %i870 = shl i32 %i869, 8
  %i871 = and i32 %i867, 255
  %i872 = or disjoint i32 %i870, %i871
  store i32 %i872, ptr %i868, align 8, !tbaa !174
  br label %bb895

bb873:                                            ; preds = %bb893.bb873_crit_edge, %bb856
  %i874 = phi i32 [ %i862, %bb856 ], [ %i886, %bb893.bb873_crit_edge ]
  %i875 = phi i32 [ %i851, %bb856 ], [ %i884, %bb893.bb873_crit_edge ]
  %i876 = icmp eq i32 %i874, 0
  br i1 %i876, label %bb4390.loopexit33, label %bb877

bb877:                                            ; preds = %bb873
  %i878 = load i32, ptr %i859, align 8, !tbaa !155
  %i879 = shl i32 %i878, 8
  %i880 = load ptr, ptr %i857, align 8, !tbaa !147
  %i881 = load i8, ptr %i880, align 1, !tbaa !21
  %i882 = zext i8 %i881 to i32
  %i883 = or disjoint i32 %i879, %i882
  store i32 %i883, ptr %i859, align 8, !tbaa !155
  %i884 = add nsw i32 %i875, 8
  store i32 %i884, ptr %i850, align 4, !tbaa !154
  %i885 = getelementptr inbounds i8, ptr %i880, i64 1
  store ptr %i885, ptr %i857, align 8, !tbaa !147
  %i886 = add i32 %i874, -1
  store i32 %i886, ptr %i858, align 8, !tbaa !141
  %i887 = load i32, ptr %i860, align 4, !tbaa !131
  %i888 = add i32 %i887, 1
  store i32 %i888, ptr %i860, align 4, !tbaa !131
  %i889 = icmp eq i32 %i888, 0
  br i1 %i889, label %bb890, label %bb877.bb893_crit_edge

bb877.bb893_crit_edge:                            ; preds = %bb877
  br label %bb893

bb890:                                            ; preds = %bb877
  %i891 = load i32, ptr %i861, align 8, !tbaa !132
  %i892 = add i32 %i891, 1
  store i32 %i892, ptr %i861, align 8, !tbaa !132
  br label %bb893

bb893:                                            ; preds = %bb877.bb893_crit_edge, %bb890
  %i894 = icmp sgt i32 %i875, -1
  br i1 %i894, label %bb863.loopexit, label %bb893.bb873_crit_edge

bb893.bb873_crit_edge:                            ; preds = %bb893
  br label %bb873

bb895:                                            ; preds = %bb863, %bb118
  %i896 = phi i32 [ %i11, %bb118 ], [ %i826, %bb863 ]
  %i897 = phi i32 [ %i13, %bb118 ], [ %i827, %bb863 ]
  %i898 = phi i32 [ %i15, %bb118 ], [ %i828, %bb863 ]
  %i899 = phi i32 [ %i17, %bb118 ], [ %i829, %bb863 ]
  %i900 = phi i32 [ %i19, %bb118 ], [ %i830, %bb863 ]
  %i901 = phi i32 [ %i21, %bb118 ], [ %i831, %bb863 ]
  %i902 = phi i32 [ %i23, %bb118 ], [ %i832, %bb863 ]
  %i903 = phi i32 [ %i25, %bb118 ], [ %i833, %bb863 ]
  %i904 = phi i32 [ %i27, %bb118 ], [ %i834, %bb863 ]
  %i905 = phi i32 [ %i29, %bb118 ], [ %i835, %bb863 ]
  %i906 = phi i32 [ %i31, %bb118 ], [ %i836, %bb863 ]
  %i907 = phi i32 [ %i33, %bb118 ], [ %i837, %bb863 ]
  %i908 = phi i32 [ %i35, %bb118 ], [ %i838, %bb863 ]
  %i909 = phi i32 [ %i37, %bb118 ], [ %i839, %bb863 ]
  %i910 = phi i32 [ %i39, %bb118 ], [ %i840, %bb863 ]
  %i911 = phi i32 [ %i41, %bb118 ], [ %i841, %bb863 ]
  %i912 = phi i32 [ %i43, %bb118 ], [ %i842, %bb863 ]
  %i913 = phi i32 [ %i45, %bb118 ], [ %i843, %bb863 ]
  %i914 = phi i32 [ %i47, %bb118 ], [ %i844, %bb863 ]
  %i915 = phi i32 [ %i49, %bb118 ], [ %i845, %bb863 ]
  %i916 = phi i32 [ %i51, %bb118 ], [ %i846, %bb863 ]
  %i917 = phi ptr [ %i53, %bb118 ], [ %i847, %bb863 ]
  %i918 = phi ptr [ %i55, %bb118 ], [ %i848, %bb863 ]
  %i919 = phi ptr [ %i57, %bb118 ], [ %i849, %bb863 ]
  %i920 = phi i32 [ %i120, %bb118 ], [ %i866, %bb863 ]
  store i32 21, ptr %i2, align 8, !tbaa !153
  %i921 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i922 = icmp sgt i32 %i920, 7
  br i1 %i922, label %bb923, label %bb926

bb923:                                            ; preds = %bb895
  %i924 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i925 = load i32, ptr %i924, align 8, !tbaa !155
  br label %bb933

bb926:                                            ; preds = %bb895
  %i927 = load ptr, ptr %arg, align 8, !tbaa !151
  %i928 = getelementptr inbounds %struct.bz_stream, ptr %i927, i64 0, i32 1
  %i929 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i930 = getelementptr inbounds %struct.bz_stream, ptr %i927, i64 0, i32 2
  %i931 = getelementptr inbounds %struct.bz_stream, ptr %i927, i64 0, i32 3
  %i932 = load i32, ptr %i928, align 8, !tbaa !141
  br label %bb943

bb933.loopexit:                                   ; preds = %bb963
  br label %bb933

bb933:                                            ; preds = %bb933.loopexit, %bb923
  %i934 = phi i32 [ %i925, %bb923 ], [ %i953, %bb933.loopexit ]
  %i935 = phi i32 [ %i920, %bb923 ], [ %i954, %bb933.loopexit ]
  %i936 = add nsw i32 %i935, -8
  %i937 = lshr i32 %i934, %i936
  store i32 %i936, ptr %i921, align 4, !tbaa !154
  %i938 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 23
  %i939 = load i32, ptr %i938, align 8, !tbaa !174
  %i940 = shl i32 %i939, 8
  %i941 = and i32 %i937, 255
  %i942 = or disjoint i32 %i940, %i941
  store i32 %i942, ptr %i938, align 8, !tbaa !174
  br label %bb965

bb943:                                            ; preds = %bb963.bb943_crit_edge, %bb926
  %i944 = phi i32 [ %i932, %bb926 ], [ %i956, %bb963.bb943_crit_edge ]
  %i945 = phi i32 [ %i920, %bb926 ], [ %i954, %bb963.bb943_crit_edge ]
  %i946 = icmp eq i32 %i944, 0
  br i1 %i946, label %bb4390.loopexit32, label %bb947

bb947:                                            ; preds = %bb943
  %i948 = load i32, ptr %i929, align 8, !tbaa !155
  %i949 = shl i32 %i948, 8
  %i950 = load ptr, ptr %i927, align 8, !tbaa !147
  %i951 = load i8, ptr %i950, align 1, !tbaa !21
  %i952 = zext i8 %i951 to i32
  %i953 = or disjoint i32 %i949, %i952
  store i32 %i953, ptr %i929, align 8, !tbaa !155
  %i954 = add nsw i32 %i945, 8
  store i32 %i954, ptr %i921, align 4, !tbaa !154
  %i955 = getelementptr inbounds i8, ptr %i950, i64 1
  store ptr %i955, ptr %i927, align 8, !tbaa !147
  %i956 = add i32 %i944, -1
  store i32 %i956, ptr %i928, align 8, !tbaa !141
  %i957 = load i32, ptr %i930, align 4, !tbaa !131
  %i958 = add i32 %i957, 1
  store i32 %i958, ptr %i930, align 4, !tbaa !131
  %i959 = icmp eq i32 %i958, 0
  br i1 %i959, label %bb960, label %bb947.bb963_crit_edge

bb947.bb963_crit_edge:                            ; preds = %bb947
  br label %bb963

bb960:                                            ; preds = %bb947
  %i961 = load i32, ptr %i931, align 8, !tbaa !132
  %i962 = add i32 %i961, 1
  store i32 %i962, ptr %i931, align 8, !tbaa !132
  br label %bb963

bb963:                                            ; preds = %bb947.bb963_crit_edge, %bb960
  %i964 = icmp sgt i32 %i945, -1
  br i1 %i964, label %bb933.loopexit, label %bb963.bb943_crit_edge

bb963.bb943_crit_edge:                            ; preds = %bb963
  br label %bb943

bb965:                                            ; preds = %bb933, %bb115
  %i966 = phi i32 [ %i11, %bb115 ], [ %i896, %bb933 ]
  %i967 = phi i32 [ %i13, %bb115 ], [ %i897, %bb933 ]
  %i968 = phi i32 [ %i15, %bb115 ], [ %i898, %bb933 ]
  %i969 = phi i32 [ %i17, %bb115 ], [ %i899, %bb933 ]
  %i970 = phi i32 [ %i19, %bb115 ], [ %i900, %bb933 ]
  %i971 = phi i32 [ %i21, %bb115 ], [ %i901, %bb933 ]
  %i972 = phi i32 [ %i23, %bb115 ], [ %i902, %bb933 ]
  %i973 = phi i32 [ %i25, %bb115 ], [ %i903, %bb933 ]
  %i974 = phi i32 [ %i27, %bb115 ], [ %i904, %bb933 ]
  %i975 = phi i32 [ %i29, %bb115 ], [ %i905, %bb933 ]
  %i976 = phi i32 [ %i31, %bb115 ], [ %i906, %bb933 ]
  %i977 = phi i32 [ %i33, %bb115 ], [ %i907, %bb933 ]
  %i978 = phi i32 [ %i35, %bb115 ], [ %i908, %bb933 ]
  %i979 = phi i32 [ %i37, %bb115 ], [ %i909, %bb933 ]
  %i980 = phi i32 [ %i39, %bb115 ], [ %i910, %bb933 ]
  %i981 = phi i32 [ %i41, %bb115 ], [ %i911, %bb933 ]
  %i982 = phi i32 [ %i43, %bb115 ], [ %i912, %bb933 ]
  %i983 = phi i32 [ %i45, %bb115 ], [ %i913, %bb933 ]
  %i984 = phi i32 [ %i47, %bb115 ], [ %i914, %bb933 ]
  %i985 = phi i32 [ %i49, %bb115 ], [ %i915, %bb933 ]
  %i986 = phi i32 [ %i51, %bb115 ], [ %i916, %bb933 ]
  %i987 = phi ptr [ %i53, %bb115 ], [ %i917, %bb933 ]
  %i988 = phi ptr [ %i55, %bb115 ], [ %i918, %bb933 ]
  %i989 = phi ptr [ %i57, %bb115 ], [ %i919, %bb933 ]
  %i990 = phi i32 [ %i117, %bb115 ], [ %i936, %bb933 ]
  store i32 22, ptr %i2, align 8, !tbaa !153
  %i991 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i992 = icmp sgt i32 %i990, 7
  br i1 %i992, label %bb993, label %bb996

bb993:                                            ; preds = %bb965
  %i994 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i995 = load i32, ptr %i994, align 8, !tbaa !155
  br label %bb1003

bb996:                                            ; preds = %bb965
  %i997 = load ptr, ptr %arg, align 8, !tbaa !151
  %i998 = getelementptr inbounds %struct.bz_stream, ptr %i997, i64 0, i32 1
  %i999 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1000 = getelementptr inbounds %struct.bz_stream, ptr %i997, i64 0, i32 2
  %i1001 = getelementptr inbounds %struct.bz_stream, ptr %i997, i64 0, i32 3
  %i1002 = load i32, ptr %i998, align 8, !tbaa !141
  br label %bb1013

bb1003.loopexit:                                  ; preds = %bb1033
  br label %bb1003

bb1003:                                           ; preds = %bb1003.loopexit, %bb993
  %i1004 = phi i32 [ %i995, %bb993 ], [ %i1023, %bb1003.loopexit ]
  %i1005 = phi i32 [ %i990, %bb993 ], [ %i1024, %bb1003.loopexit ]
  %i1006 = add nsw i32 %i1005, -8
  %i1007 = lshr i32 %i1004, %i1006
  store i32 %i1006, ptr %i991, align 4, !tbaa !154
  %i1008 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 23
  %i1009 = load i32, ptr %i1008, align 8, !tbaa !174
  %i1010 = shl i32 %i1009, 8
  %i1011 = and i32 %i1007, 255
  %i1012 = or disjoint i32 %i1010, %i1011
  store i32 %i1012, ptr %i1008, align 8, !tbaa !174
  br label %bb1035

bb1013:                                           ; preds = %bb1033.bb1013_crit_edge, %bb996
  %i1014 = phi i32 [ %i1002, %bb996 ], [ %i1026, %bb1033.bb1013_crit_edge ]
  %i1015 = phi i32 [ %i990, %bb996 ], [ %i1024, %bb1033.bb1013_crit_edge ]
  %i1016 = icmp eq i32 %i1014, 0
  br i1 %i1016, label %bb4390.loopexit31, label %bb1017

bb1017:                                           ; preds = %bb1013
  %i1018 = load i32, ptr %i999, align 8, !tbaa !155
  %i1019 = shl i32 %i1018, 8
  %i1020 = load ptr, ptr %i997, align 8, !tbaa !147
  %i1021 = load i8, ptr %i1020, align 1, !tbaa !21
  %i1022 = zext i8 %i1021 to i32
  %i1023 = or disjoint i32 %i1019, %i1022
  store i32 %i1023, ptr %i999, align 8, !tbaa !155
  %i1024 = add nsw i32 %i1015, 8
  store i32 %i1024, ptr %i991, align 4, !tbaa !154
  %i1025 = getelementptr inbounds i8, ptr %i1020, i64 1
  store ptr %i1025, ptr %i997, align 8, !tbaa !147
  %i1026 = add i32 %i1014, -1
  store i32 %i1026, ptr %i998, align 8, !tbaa !141
  %i1027 = load i32, ptr %i1000, align 4, !tbaa !131
  %i1028 = add i32 %i1027, 1
  store i32 %i1028, ptr %i1000, align 4, !tbaa !131
  %i1029 = icmp eq i32 %i1028, 0
  br i1 %i1029, label %bb1030, label %bb1017.bb1033_crit_edge

bb1017.bb1033_crit_edge:                          ; preds = %bb1017
  br label %bb1033

bb1030:                                           ; preds = %bb1017
  %i1031 = load i32, ptr %i1001, align 8, !tbaa !132
  %i1032 = add i32 %i1031, 1
  store i32 %i1032, ptr %i1001, align 8, !tbaa !132
  br label %bb1033

bb1033:                                           ; preds = %bb1017.bb1033_crit_edge, %bb1030
  %i1034 = icmp sgt i32 %i1015, -1
  br i1 %i1034, label %bb1003.loopexit, label %bb1033.bb1013_crit_edge

bb1033.bb1013_crit_edge:                          ; preds = %bb1033
  br label %bb1013

bb1035:                                           ; preds = %bb1003, %bb112
  %i1036 = phi i32 [ %i11, %bb112 ], [ %i966, %bb1003 ]
  %i1037 = phi i32 [ %i13, %bb112 ], [ %i967, %bb1003 ]
  %i1038 = phi i32 [ %i15, %bb112 ], [ %i968, %bb1003 ]
  %i1039 = phi i32 [ %i17, %bb112 ], [ %i969, %bb1003 ]
  %i1040 = phi i32 [ %i19, %bb112 ], [ %i970, %bb1003 ]
  %i1041 = phi i32 [ %i21, %bb112 ], [ %i971, %bb1003 ]
  %i1042 = phi i32 [ %i23, %bb112 ], [ %i972, %bb1003 ]
  %i1043 = phi i32 [ %i25, %bb112 ], [ %i973, %bb1003 ]
  %i1044 = phi i32 [ %i27, %bb112 ], [ %i974, %bb1003 ]
  %i1045 = phi i32 [ %i29, %bb112 ], [ %i975, %bb1003 ]
  %i1046 = phi i32 [ %i31, %bb112 ], [ %i976, %bb1003 ]
  %i1047 = phi i32 [ %i33, %bb112 ], [ %i977, %bb1003 ]
  %i1048 = phi i32 [ %i35, %bb112 ], [ %i978, %bb1003 ]
  %i1049 = phi i32 [ %i37, %bb112 ], [ %i979, %bb1003 ]
  %i1050 = phi i32 [ %i39, %bb112 ], [ %i980, %bb1003 ]
  %i1051 = phi i32 [ %i41, %bb112 ], [ %i981, %bb1003 ]
  %i1052 = phi i32 [ %i43, %bb112 ], [ %i982, %bb1003 ]
  %i1053 = phi i32 [ %i45, %bb112 ], [ %i983, %bb1003 ]
  %i1054 = phi i32 [ %i47, %bb112 ], [ %i984, %bb1003 ]
  %i1055 = phi i32 [ %i49, %bb112 ], [ %i985, %bb1003 ]
  %i1056 = phi i32 [ %i51, %bb112 ], [ %i986, %bb1003 ]
  %i1057 = phi ptr [ %i53, %bb112 ], [ %i987, %bb1003 ]
  %i1058 = phi ptr [ %i55, %bb112 ], [ %i988, %bb1003 ]
  %i1059 = phi ptr [ %i57, %bb112 ], [ %i989, %bb1003 ]
  %i1060 = phi i32 [ %i114, %bb112 ], [ %i1006, %bb1003 ]
  store i32 23, ptr %i2, align 8, !tbaa !153
  %i1061 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i1062 = icmp sgt i32 %i1060, 7
  br i1 %i1062, label %bb1063, label %bb1066

bb1063:                                           ; preds = %bb1035
  %i1064 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1065 = load i32, ptr %i1064, align 8, !tbaa !155
  br label %bb1073

bb1066:                                           ; preds = %bb1035
  %i1067 = load ptr, ptr %arg, align 8, !tbaa !151
  %i1068 = getelementptr inbounds %struct.bz_stream, ptr %i1067, i64 0, i32 1
  %i1069 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1070 = getelementptr inbounds %struct.bz_stream, ptr %i1067, i64 0, i32 2
  %i1071 = getelementptr inbounds %struct.bz_stream, ptr %i1067, i64 0, i32 3
  %i1072 = load i32, ptr %i1068, align 8, !tbaa !141
  br label %bb1083

bb1073.loopexit:                                  ; preds = %bb1103
  br label %bb1073

bb1073:                                           ; preds = %bb1073.loopexit, %bb1063
  %i1074 = phi i32 [ %i1065, %bb1063 ], [ %i1093, %bb1073.loopexit ]
  %i1075 = phi i32 [ %i1060, %bb1063 ], [ %i1094, %bb1073.loopexit ]
  %i1076 = add nsw i32 %i1075, -8
  %i1077 = lshr i32 %i1074, %i1076
  store i32 %i1076, ptr %i1061, align 4, !tbaa !154
  %i1078 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 23
  %i1079 = load i32, ptr %i1078, align 8, !tbaa !174
  %i1080 = shl i32 %i1079, 8
  %i1081 = and i32 %i1077, 255
  %i1082 = or disjoint i32 %i1080, %i1081
  store i32 %i1082, ptr %i1078, align 8, !tbaa !174
  br label %bb1105

bb1083:                                           ; preds = %bb1103.bb1083_crit_edge, %bb1066
  %i1084 = phi i32 [ %i1072, %bb1066 ], [ %i1096, %bb1103.bb1083_crit_edge ]
  %i1085 = phi i32 [ %i1060, %bb1066 ], [ %i1094, %bb1103.bb1083_crit_edge ]
  %i1086 = icmp eq i32 %i1084, 0
  br i1 %i1086, label %bb4390.loopexit30, label %bb1087

bb1087:                                           ; preds = %bb1083
  %i1088 = load i32, ptr %i1069, align 8, !tbaa !155
  %i1089 = shl i32 %i1088, 8
  %i1090 = load ptr, ptr %i1067, align 8, !tbaa !147
  %i1091 = load i8, ptr %i1090, align 1, !tbaa !21
  %i1092 = zext i8 %i1091 to i32
  %i1093 = or disjoint i32 %i1089, %i1092
  store i32 %i1093, ptr %i1069, align 8, !tbaa !155
  %i1094 = add nsw i32 %i1085, 8
  store i32 %i1094, ptr %i1061, align 4, !tbaa !154
  %i1095 = getelementptr inbounds i8, ptr %i1090, i64 1
  store ptr %i1095, ptr %i1067, align 8, !tbaa !147
  %i1096 = add i32 %i1084, -1
  store i32 %i1096, ptr %i1068, align 8, !tbaa !141
  %i1097 = load i32, ptr %i1070, align 4, !tbaa !131
  %i1098 = add i32 %i1097, 1
  store i32 %i1098, ptr %i1070, align 4, !tbaa !131
  %i1099 = icmp eq i32 %i1098, 0
  br i1 %i1099, label %bb1100, label %bb1087.bb1103_crit_edge

bb1087.bb1103_crit_edge:                          ; preds = %bb1087
  br label %bb1103

bb1100:                                           ; preds = %bb1087
  %i1101 = load i32, ptr %i1071, align 8, !tbaa !132
  %i1102 = add i32 %i1101, 1
  store i32 %i1102, ptr %i1071, align 8, !tbaa !132
  br label %bb1103

bb1103:                                           ; preds = %bb1087.bb1103_crit_edge, %bb1100
  %i1104 = icmp sgt i32 %i1085, -1
  br i1 %i1104, label %bb1073.loopexit, label %bb1103.bb1083_crit_edge

bb1103.bb1083_crit_edge:                          ; preds = %bb1103
  br label %bb1083

bb1105:                                           ; preds = %bb1073, %bb109
  %i1106 = phi i32 [ %i11, %bb109 ], [ %i1036, %bb1073 ]
  %i1107 = phi i32 [ %i13, %bb109 ], [ %i1037, %bb1073 ]
  %i1108 = phi i32 [ %i15, %bb109 ], [ %i1038, %bb1073 ]
  %i1109 = phi i32 [ %i17, %bb109 ], [ %i1039, %bb1073 ]
  %i1110 = phi i32 [ %i19, %bb109 ], [ %i1040, %bb1073 ]
  %i1111 = phi i32 [ %i21, %bb109 ], [ %i1041, %bb1073 ]
  %i1112 = phi i32 [ %i23, %bb109 ], [ %i1042, %bb1073 ]
  %i1113 = phi i32 [ %i25, %bb109 ], [ %i1043, %bb1073 ]
  %i1114 = phi i32 [ %i27, %bb109 ], [ %i1044, %bb1073 ]
  %i1115 = phi i32 [ %i29, %bb109 ], [ %i1045, %bb1073 ]
  %i1116 = phi i32 [ %i31, %bb109 ], [ %i1046, %bb1073 ]
  %i1117 = phi i32 [ %i33, %bb109 ], [ %i1047, %bb1073 ]
  %i1118 = phi i32 [ %i35, %bb109 ], [ %i1048, %bb1073 ]
  %i1119 = phi i32 [ %i37, %bb109 ], [ %i1049, %bb1073 ]
  %i1120 = phi i32 [ %i39, %bb109 ], [ %i1050, %bb1073 ]
  %i1121 = phi i32 [ %i41, %bb109 ], [ %i1051, %bb1073 ]
  %i1122 = phi i32 [ %i43, %bb109 ], [ %i1052, %bb1073 ]
  %i1123 = phi i32 [ %i45, %bb109 ], [ %i1053, %bb1073 ]
  %i1124 = phi i32 [ %i47, %bb109 ], [ %i1054, %bb1073 ]
  %i1125 = phi i32 [ %i49, %bb109 ], [ %i1055, %bb1073 ]
  %i1126 = phi i32 [ %i51, %bb109 ], [ %i1056, %bb1073 ]
  %i1127 = phi ptr [ %i53, %bb109 ], [ %i1057, %bb1073 ]
  %i1128 = phi ptr [ %i55, %bb109 ], [ %i1058, %bb1073 ]
  %i1129 = phi ptr [ %i57, %bb109 ], [ %i1059, %bb1073 ]
  %i1130 = phi i32 [ %i111, %bb109 ], [ %i1076, %bb1073 ]
  store i32 24, ptr %i2, align 8, !tbaa !153
  %i1131 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i1132 = icmp sgt i32 %i1130, 0
  br i1 %i1132, label %bb1133, label %bb1136

bb1133:                                           ; preds = %bb1105
  %i1134 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1135 = load i32, ptr %i1134, align 8, !tbaa !155
  br label %bb1143

bb1136:                                           ; preds = %bb1105
  %i1137 = load ptr, ptr %arg, align 8, !tbaa !151
  %i1138 = getelementptr inbounds %struct.bz_stream, ptr %i1137, i64 0, i32 1
  %i1139 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1140 = getelementptr inbounds %struct.bz_stream, ptr %i1137, i64 0, i32 2
  %i1141 = getelementptr inbounds %struct.bz_stream, ptr %i1137, i64 0, i32 3
  %i1142 = load i32, ptr %i1138, align 8, !tbaa !141
  br label %bb1152

bb1143.loopexit:                                  ; preds = %bb1172
  br label %bb1143

bb1143:                                           ; preds = %bb1143.loopexit, %bb1133
  %i1144 = phi i32 [ %i1135, %bb1133 ], [ %i1162, %bb1143.loopexit ]
  %i1145 = phi i32 [ %i1130, %bb1133 ], [ %i1163, %bb1143.loopexit ]
  %i1146 = add nsw i32 %i1145, -1
  %i1147 = lshr i32 %i1144, %i1146
  store i32 %i1146, ptr %i1131, align 4, !tbaa !154
  %i1148 = trunc i32 %i1147 to i8
  %i1149 = and i8 %i1148, 1
  %i1150 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 4
  store i8 %i1149, ptr %i1150, align 4, !tbaa !161
  %i1151 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 13
  store i32 0, ptr %i1151, align 8, !tbaa !256
  br label %bb1174

bb1152:                                           ; preds = %bb1172.bb1152_crit_edge, %bb1136
  %i1153 = phi i32 [ %i1142, %bb1136 ], [ %i1165, %bb1172.bb1152_crit_edge ]
  %i1154 = phi i32 [ %i1130, %bb1136 ], [ %i1163, %bb1172.bb1152_crit_edge ]
  %i1155 = icmp eq i32 %i1153, 0
  br i1 %i1155, label %bb4390.loopexit29, label %bb1156

bb1156:                                           ; preds = %bb1152
  %i1157 = load i32, ptr %i1139, align 8, !tbaa !155
  %i1158 = shl i32 %i1157, 8
  %i1159 = load ptr, ptr %i1137, align 8, !tbaa !147
  %i1160 = load i8, ptr %i1159, align 1, !tbaa !21
  %i1161 = zext i8 %i1160 to i32
  %i1162 = or disjoint i32 %i1158, %i1161
  store i32 %i1162, ptr %i1139, align 8, !tbaa !155
  %i1163 = add nsw i32 %i1154, 8
  store i32 %i1163, ptr %i1131, align 4, !tbaa !154
  %i1164 = getelementptr inbounds i8, ptr %i1159, i64 1
  store ptr %i1164, ptr %i1137, align 8, !tbaa !147
  %i1165 = add i32 %i1153, -1
  store i32 %i1165, ptr %i1138, align 8, !tbaa !141
  %i1166 = load i32, ptr %i1140, align 4, !tbaa !131
  %i1167 = add i32 %i1166, 1
  store i32 %i1167, ptr %i1140, align 4, !tbaa !131
  %i1168 = icmp eq i32 %i1167, 0
  br i1 %i1168, label %bb1169, label %bb1156.bb1172_crit_edge

bb1156.bb1172_crit_edge:                          ; preds = %bb1156
  br label %bb1172

bb1169:                                           ; preds = %bb1156
  %i1170 = load i32, ptr %i1141, align 8, !tbaa !132
  %i1171 = add i32 %i1170, 1
  store i32 %i1171, ptr %i1141, align 8, !tbaa !132
  br label %bb1172

bb1172:                                           ; preds = %bb1156.bb1172_crit_edge, %bb1169
  %i1173 = icmp sgt i32 %i1154, -8
  br i1 %i1173, label %bb1143.loopexit, label %bb1172.bb1152_crit_edge

bb1172.bb1152_crit_edge:                          ; preds = %bb1172
  br label %bb1152

bb1174:                                           ; preds = %bb1143, %bb106
  %i1175 = phi i32 [ %i11, %bb106 ], [ %i1106, %bb1143 ]
  %i1176 = phi i32 [ %i13, %bb106 ], [ %i1107, %bb1143 ]
  %i1177 = phi i32 [ %i15, %bb106 ], [ %i1108, %bb1143 ]
  %i1178 = phi i32 [ %i17, %bb106 ], [ %i1109, %bb1143 ]
  %i1179 = phi i32 [ %i19, %bb106 ], [ %i1110, %bb1143 ]
  %i1180 = phi i32 [ %i21, %bb106 ], [ %i1111, %bb1143 ]
  %i1181 = phi i32 [ %i23, %bb106 ], [ %i1112, %bb1143 ]
  %i1182 = phi i32 [ %i25, %bb106 ], [ %i1113, %bb1143 ]
  %i1183 = phi i32 [ %i27, %bb106 ], [ %i1114, %bb1143 ]
  %i1184 = phi i32 [ %i29, %bb106 ], [ %i1115, %bb1143 ]
  %i1185 = phi i32 [ %i31, %bb106 ], [ %i1116, %bb1143 ]
  %i1186 = phi i32 [ %i33, %bb106 ], [ %i1117, %bb1143 ]
  %i1187 = phi i32 [ %i35, %bb106 ], [ %i1118, %bb1143 ]
  %i1188 = phi i32 [ %i37, %bb106 ], [ %i1119, %bb1143 ]
  %i1189 = phi i32 [ %i39, %bb106 ], [ %i1120, %bb1143 ]
  %i1190 = phi i32 [ %i41, %bb106 ], [ %i1121, %bb1143 ]
  %i1191 = phi i32 [ %i43, %bb106 ], [ %i1122, %bb1143 ]
  %i1192 = phi i32 [ %i45, %bb106 ], [ %i1123, %bb1143 ]
  %i1193 = phi i32 [ %i47, %bb106 ], [ %i1124, %bb1143 ]
  %i1194 = phi i32 [ %i49, %bb106 ], [ %i1125, %bb1143 ]
  %i1195 = phi i32 [ %i51, %bb106 ], [ %i1126, %bb1143 ]
  %i1196 = phi ptr [ %i53, %bb106 ], [ %i1127, %bb1143 ]
  %i1197 = phi ptr [ %i55, %bb106 ], [ %i1128, %bb1143 ]
  %i1198 = phi ptr [ %i57, %bb106 ], [ %i1129, %bb1143 ]
  %i1199 = phi i32 [ %i108, %bb106 ], [ %i1146, %bb1143 ]
  store i32 25, ptr %i2, align 8, !tbaa !153
  %i1200 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i1201 = icmp sgt i32 %i1199, 7
  br i1 %i1201, label %bb1202, label %bb1205

bb1202:                                           ; preds = %bb1174
  %i1203 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1204 = load i32, ptr %i1203, align 8, !tbaa !155
  br label %bb1212

bb1205:                                           ; preds = %bb1174
  %i1206 = load ptr, ptr %arg, align 8, !tbaa !151
  %i1207 = getelementptr inbounds %struct.bz_stream, ptr %i1206, i64 0, i32 1
  %i1208 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1209 = getelementptr inbounds %struct.bz_stream, ptr %i1206, i64 0, i32 2
  %i1210 = getelementptr inbounds %struct.bz_stream, ptr %i1206, i64 0, i32 3
  %i1211 = load i32, ptr %i1207, align 8, !tbaa !141
  br label %bb1222

bb1212.loopexit:                                  ; preds = %bb1242
  br label %bb1212

bb1212:                                           ; preds = %bb1212.loopexit, %bb1202
  %i1213 = phi i32 [ %i1204, %bb1202 ], [ %i1232, %bb1212.loopexit ]
  %i1214 = phi i32 [ %i1199, %bb1202 ], [ %i1233, %bb1212.loopexit ]
  %i1215 = add nsw i32 %i1214, -8
  %i1216 = lshr i32 %i1213, %i1215
  store i32 %i1215, ptr %i1200, align 4, !tbaa !154
  %i1217 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 13
  %i1218 = load i32, ptr %i1217, align 8, !tbaa !256
  %i1219 = shl i32 %i1218, 8
  %i1220 = and i32 %i1216, 255
  %i1221 = or disjoint i32 %i1219, %i1220
  store i32 %i1221, ptr %i1217, align 8, !tbaa !256
  br label %bb1244

bb1222:                                           ; preds = %bb1242.bb1222_crit_edge, %bb1205
  %i1223 = phi i32 [ %i1211, %bb1205 ], [ %i1235, %bb1242.bb1222_crit_edge ]
  %i1224 = phi i32 [ %i1199, %bb1205 ], [ %i1233, %bb1242.bb1222_crit_edge ]
  %i1225 = icmp eq i32 %i1223, 0
  br i1 %i1225, label %bb4390.loopexit28, label %bb1226

bb1226:                                           ; preds = %bb1222
  %i1227 = load i32, ptr %i1208, align 8, !tbaa !155
  %i1228 = shl i32 %i1227, 8
  %i1229 = load ptr, ptr %i1206, align 8, !tbaa !147
  %i1230 = load i8, ptr %i1229, align 1, !tbaa !21
  %i1231 = zext i8 %i1230 to i32
  %i1232 = or disjoint i32 %i1228, %i1231
  store i32 %i1232, ptr %i1208, align 8, !tbaa !155
  %i1233 = add nsw i32 %i1224, 8
  store i32 %i1233, ptr %i1200, align 4, !tbaa !154
  %i1234 = getelementptr inbounds i8, ptr %i1229, i64 1
  store ptr %i1234, ptr %i1206, align 8, !tbaa !147
  %i1235 = add i32 %i1223, -1
  store i32 %i1235, ptr %i1207, align 8, !tbaa !141
  %i1236 = load i32, ptr %i1209, align 4, !tbaa !131
  %i1237 = add i32 %i1236, 1
  store i32 %i1237, ptr %i1209, align 4, !tbaa !131
  %i1238 = icmp eq i32 %i1237, 0
  br i1 %i1238, label %bb1239, label %bb1226.bb1242_crit_edge

bb1226.bb1242_crit_edge:                          ; preds = %bb1226
  br label %bb1242

bb1239:                                           ; preds = %bb1226
  %i1240 = load i32, ptr %i1210, align 8, !tbaa !132
  %i1241 = add i32 %i1240, 1
  store i32 %i1241, ptr %i1210, align 8, !tbaa !132
  br label %bb1242

bb1242:                                           ; preds = %bb1226.bb1242_crit_edge, %bb1239
  %i1243 = icmp sgt i32 %i1224, -1
  br i1 %i1243, label %bb1212.loopexit, label %bb1242.bb1222_crit_edge

bb1242.bb1222_crit_edge:                          ; preds = %bb1242
  br label %bb1222

bb1244:                                           ; preds = %bb1212, %bb103
  %i1245 = phi i32 [ %i11, %bb103 ], [ %i1175, %bb1212 ]
  %i1246 = phi i32 [ %i13, %bb103 ], [ %i1176, %bb1212 ]
  %i1247 = phi i32 [ %i15, %bb103 ], [ %i1177, %bb1212 ]
  %i1248 = phi i32 [ %i17, %bb103 ], [ %i1178, %bb1212 ]
  %i1249 = phi i32 [ %i19, %bb103 ], [ %i1179, %bb1212 ]
  %i1250 = phi i32 [ %i21, %bb103 ], [ %i1180, %bb1212 ]
  %i1251 = phi i32 [ %i23, %bb103 ], [ %i1181, %bb1212 ]
  %i1252 = phi i32 [ %i25, %bb103 ], [ %i1182, %bb1212 ]
  %i1253 = phi i32 [ %i27, %bb103 ], [ %i1183, %bb1212 ]
  %i1254 = phi i32 [ %i29, %bb103 ], [ %i1184, %bb1212 ]
  %i1255 = phi i32 [ %i31, %bb103 ], [ %i1185, %bb1212 ]
  %i1256 = phi i32 [ %i33, %bb103 ], [ %i1186, %bb1212 ]
  %i1257 = phi i32 [ %i35, %bb103 ], [ %i1187, %bb1212 ]
  %i1258 = phi i32 [ %i37, %bb103 ], [ %i1188, %bb1212 ]
  %i1259 = phi i32 [ %i39, %bb103 ], [ %i1189, %bb1212 ]
  %i1260 = phi i32 [ %i41, %bb103 ], [ %i1190, %bb1212 ]
  %i1261 = phi i32 [ %i43, %bb103 ], [ %i1191, %bb1212 ]
  %i1262 = phi i32 [ %i45, %bb103 ], [ %i1192, %bb1212 ]
  %i1263 = phi i32 [ %i47, %bb103 ], [ %i1193, %bb1212 ]
  %i1264 = phi i32 [ %i49, %bb103 ], [ %i1194, %bb1212 ]
  %i1265 = phi i32 [ %i51, %bb103 ], [ %i1195, %bb1212 ]
  %i1266 = phi ptr [ %i53, %bb103 ], [ %i1196, %bb1212 ]
  %i1267 = phi ptr [ %i55, %bb103 ], [ %i1197, %bb1212 ]
  %i1268 = phi ptr [ %i57, %bb103 ], [ %i1198, %bb1212 ]
  %i1269 = phi i32 [ %i105, %bb103 ], [ %i1215, %bb1212 ]
  store i32 26, ptr %i2, align 8, !tbaa !153
  %i1270 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i1271 = icmp sgt i32 %i1269, 7
  br i1 %i1271, label %bb1272, label %bb1275

bb1272:                                           ; preds = %bb1244
  %i1273 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1274 = load i32, ptr %i1273, align 8, !tbaa !155
  br label %bb1282

bb1275:                                           ; preds = %bb1244
  %i1276 = load ptr, ptr %arg, align 8, !tbaa !151
  %i1277 = getelementptr inbounds %struct.bz_stream, ptr %i1276, i64 0, i32 1
  %i1278 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1279 = getelementptr inbounds %struct.bz_stream, ptr %i1276, i64 0, i32 2
  %i1280 = getelementptr inbounds %struct.bz_stream, ptr %i1276, i64 0, i32 3
  %i1281 = load i32, ptr %i1277, align 8, !tbaa !141
  br label %bb1292

bb1282.loopexit:                                  ; preds = %bb1312
  br label %bb1282

bb1282:                                           ; preds = %bb1282.loopexit, %bb1272
  %i1283 = phi i32 [ %i1274, %bb1272 ], [ %i1302, %bb1282.loopexit ]
  %i1284 = phi i32 [ %i1269, %bb1272 ], [ %i1303, %bb1282.loopexit ]
  %i1285 = add nsw i32 %i1284, -8
  %i1286 = lshr i32 %i1283, %i1285
  store i32 %i1285, ptr %i1270, align 4, !tbaa !154
  %i1287 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 13
  %i1288 = load i32, ptr %i1287, align 8, !tbaa !256
  %i1289 = shl i32 %i1288, 8
  %i1290 = and i32 %i1286, 255
  %i1291 = or disjoint i32 %i1289, %i1290
  store i32 %i1291, ptr %i1287, align 8, !tbaa !256
  br label %bb1314

bb1292:                                           ; preds = %bb1312.bb1292_crit_edge, %bb1275
  %i1293 = phi i32 [ %i1281, %bb1275 ], [ %i1305, %bb1312.bb1292_crit_edge ]
  %i1294 = phi i32 [ %i1269, %bb1275 ], [ %i1303, %bb1312.bb1292_crit_edge ]
  %i1295 = icmp eq i32 %i1293, 0
  br i1 %i1295, label %bb4390.loopexit27, label %bb1296

bb1296:                                           ; preds = %bb1292
  %i1297 = load i32, ptr %i1278, align 8, !tbaa !155
  %i1298 = shl i32 %i1297, 8
  %i1299 = load ptr, ptr %i1276, align 8, !tbaa !147
  %i1300 = load i8, ptr %i1299, align 1, !tbaa !21
  %i1301 = zext i8 %i1300 to i32
  %i1302 = or disjoint i32 %i1298, %i1301
  store i32 %i1302, ptr %i1278, align 8, !tbaa !155
  %i1303 = add nsw i32 %i1294, 8
  store i32 %i1303, ptr %i1270, align 4, !tbaa !154
  %i1304 = getelementptr inbounds i8, ptr %i1299, i64 1
  store ptr %i1304, ptr %i1276, align 8, !tbaa !147
  %i1305 = add i32 %i1293, -1
  store i32 %i1305, ptr %i1277, align 8, !tbaa !141
  %i1306 = load i32, ptr %i1279, align 4, !tbaa !131
  %i1307 = add i32 %i1306, 1
  store i32 %i1307, ptr %i1279, align 4, !tbaa !131
  %i1308 = icmp eq i32 %i1307, 0
  br i1 %i1308, label %bb1309, label %bb1296.bb1312_crit_edge

bb1296.bb1312_crit_edge:                          ; preds = %bb1296
  br label %bb1312

bb1309:                                           ; preds = %bb1296
  %i1310 = load i32, ptr %i1280, align 8, !tbaa !132
  %i1311 = add i32 %i1310, 1
  store i32 %i1311, ptr %i1280, align 8, !tbaa !132
  br label %bb1312

bb1312:                                           ; preds = %bb1296.bb1312_crit_edge, %bb1309
  %i1313 = icmp sgt i32 %i1294, -1
  br i1 %i1313, label %bb1282.loopexit, label %bb1312.bb1292_crit_edge

bb1312.bb1292_crit_edge:                          ; preds = %bb1312
  br label %bb1292

bb1314:                                           ; preds = %bb1282, %bb100
  %i1315 = phi i32 [ %i11, %bb100 ], [ %i1245, %bb1282 ]
  %i1316 = phi i32 [ %i13, %bb100 ], [ %i1246, %bb1282 ]
  %i1317 = phi i32 [ %i15, %bb100 ], [ %i1247, %bb1282 ]
  %i1318 = phi i32 [ %i17, %bb100 ], [ %i1248, %bb1282 ]
  %i1319 = phi i32 [ %i19, %bb100 ], [ %i1249, %bb1282 ]
  %i1320 = phi i32 [ %i21, %bb100 ], [ %i1250, %bb1282 ]
  %i1321 = phi i32 [ %i23, %bb100 ], [ %i1251, %bb1282 ]
  %i1322 = phi i32 [ %i25, %bb100 ], [ %i1252, %bb1282 ]
  %i1323 = phi i32 [ %i27, %bb100 ], [ %i1253, %bb1282 ]
  %i1324 = phi i32 [ %i29, %bb100 ], [ %i1254, %bb1282 ]
  %i1325 = phi i32 [ %i31, %bb100 ], [ %i1255, %bb1282 ]
  %i1326 = phi i32 [ %i33, %bb100 ], [ %i1256, %bb1282 ]
  %i1327 = phi i32 [ %i35, %bb100 ], [ %i1257, %bb1282 ]
  %i1328 = phi i32 [ %i37, %bb100 ], [ %i1258, %bb1282 ]
  %i1329 = phi i32 [ %i39, %bb100 ], [ %i1259, %bb1282 ]
  %i1330 = phi i32 [ %i41, %bb100 ], [ %i1260, %bb1282 ]
  %i1331 = phi i32 [ %i43, %bb100 ], [ %i1261, %bb1282 ]
  %i1332 = phi i32 [ %i45, %bb100 ], [ %i1262, %bb1282 ]
  %i1333 = phi i32 [ %i47, %bb100 ], [ %i1263, %bb1282 ]
  %i1334 = phi i32 [ %i49, %bb100 ], [ %i1264, %bb1282 ]
  %i1335 = phi i32 [ %i51, %bb100 ], [ %i1265, %bb1282 ]
  %i1336 = phi ptr [ %i53, %bb100 ], [ %i1266, %bb1282 ]
  %i1337 = phi ptr [ %i55, %bb100 ], [ %i1267, %bb1282 ]
  %i1338 = phi ptr [ %i57, %bb100 ], [ %i1268, %bb1282 ]
  %i1339 = phi i32 [ %i102, %bb100 ], [ %i1285, %bb1282 ]
  store i32 27, ptr %i2, align 8, !tbaa !153
  %i1340 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i1341 = icmp sgt i32 %i1339, 7
  br i1 %i1341, label %bb1342, label %bb1345

bb1342:                                           ; preds = %bb1314
  %i1343 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1344 = load i32, ptr %i1343, align 8, !tbaa !155
  br label %bb1352

bb1345:                                           ; preds = %bb1314
  %i1346 = load ptr, ptr %arg, align 8, !tbaa !151
  %i1347 = getelementptr inbounds %struct.bz_stream, ptr %i1346, i64 0, i32 1
  %i1348 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1349 = getelementptr inbounds %struct.bz_stream, ptr %i1346, i64 0, i32 2
  %i1350 = getelementptr inbounds %struct.bz_stream, ptr %i1346, i64 0, i32 3
  %i1351 = load i32, ptr %i1347, align 8, !tbaa !141
  br label %bb1363

bb1352.loopexit:                                  ; preds = %bb1383
  br label %bb1352

bb1352:                                           ; preds = %bb1352.loopexit, %bb1342
  %i1353 = phi i32 [ %i1344, %bb1342 ], [ %i1373, %bb1352.loopexit ]
  %i1354 = phi i32 [ %i1339, %bb1342 ], [ %i1374, %bb1352.loopexit ]
  %i1355 = add nsw i32 %i1354, -8
  %i1356 = lshr i32 %i1353, %i1355
  store i32 %i1355, ptr %i1340, align 4, !tbaa !154
  %i1357 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 13
  %i1358 = load i32, ptr %i1357, align 8, !tbaa !256
  %i1359 = shl i32 %i1358, 8
  %i1360 = and i32 %i1356, 255
  %i1361 = or disjoint i32 %i1359, %i1360
  store i32 %i1361, ptr %i1357, align 8, !tbaa !256
  %i1362 = icmp slt i32 %i1361, 0
  br i1 %i1362, label %bb1352.bb4390_crit_edge, label %bb1385

bb1352.bb4390_crit_edge:                          ; preds = %bb1352
  br label %bb4390

bb1363:                                           ; preds = %bb1383.bb1363_crit_edge, %bb1345
  %i1364 = phi i32 [ %i1351, %bb1345 ], [ %i1376, %bb1383.bb1363_crit_edge ]
  %i1365 = phi i32 [ %i1339, %bb1345 ], [ %i1374, %bb1383.bb1363_crit_edge ]
  %i1366 = icmp eq i32 %i1364, 0
  br i1 %i1366, label %bb4390.loopexit26, label %bb1367

bb1367:                                           ; preds = %bb1363
  %i1368 = load i32, ptr %i1348, align 8, !tbaa !155
  %i1369 = shl i32 %i1368, 8
  %i1370 = load ptr, ptr %i1346, align 8, !tbaa !147
  %i1371 = load i8, ptr %i1370, align 1, !tbaa !21
  %i1372 = zext i8 %i1371 to i32
  %i1373 = or disjoint i32 %i1369, %i1372
  store i32 %i1373, ptr %i1348, align 8, !tbaa !155
  %i1374 = add nsw i32 %i1365, 8
  store i32 %i1374, ptr %i1340, align 4, !tbaa !154
  %i1375 = getelementptr inbounds i8, ptr %i1370, i64 1
  store ptr %i1375, ptr %i1346, align 8, !tbaa !147
  %i1376 = add i32 %i1364, -1
  store i32 %i1376, ptr %i1347, align 8, !tbaa !141
  %i1377 = load i32, ptr %i1349, align 4, !tbaa !131
  %i1378 = add i32 %i1377, 1
  store i32 %i1378, ptr %i1349, align 4, !tbaa !131
  %i1379 = icmp eq i32 %i1378, 0
  br i1 %i1379, label %bb1380, label %bb1367.bb1383_crit_edge

bb1367.bb1383_crit_edge:                          ; preds = %bb1367
  br label %bb1383

bb1380:                                           ; preds = %bb1367
  %i1381 = load i32, ptr %i1350, align 8, !tbaa !132
  %i1382 = add i32 %i1381, 1
  store i32 %i1382, ptr %i1350, align 8, !tbaa !132
  br label %bb1383

bb1383:                                           ; preds = %bb1367.bb1383_crit_edge, %bb1380
  %i1384 = icmp sgt i32 %i1365, -1
  br i1 %i1384, label %bb1352.loopexit, label %bb1383.bb1363_crit_edge

bb1383.bb1363_crit_edge:                          ; preds = %bb1383
  br label %bb1363

bb1385:                                           ; preds = %bb1352
  %i1386 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 9
  %i1387 = load i32, ptr %i1386, align 8, !tbaa !255
  %i1388 = mul nsw i32 %i1387, 100000
  %i1389 = or disjoint i32 %i1388, 10
  %i1390 = icmp sgt i32 %i1361, %i1389
  br i1 %i1390, label %bb1385.bb4390_crit_edge, label %bb1385.bb1391_crit_edge

bb1385.bb1391_crit_edge:                          ; preds = %bb1385
  br label %bb1391

bb1385.bb4390_crit_edge:                          ; preds = %bb1385
  br label %bb4390

bb1391:                                           ; preds = %bb1385.bb1391_crit_edge, %bb1457
  %i1392 = phi i32 [ %i1420, %bb1457 ], [ %i1316, %bb1385.bb1391_crit_edge ]
  %i1393 = phi i32 [ %i1421, %bb1457 ], [ %i1317, %bb1385.bb1391_crit_edge ]
  %i1394 = phi i32 [ %i1422, %bb1457 ], [ %i1318, %bb1385.bb1391_crit_edge ]
  %i1395 = phi i32 [ %i1423, %bb1457 ], [ %i1319, %bb1385.bb1391_crit_edge ]
  %i1396 = phi i32 [ %i1424, %bb1457 ], [ %i1320, %bb1385.bb1391_crit_edge ]
  %i1397 = phi i32 [ %i1425, %bb1457 ], [ %i1321, %bb1385.bb1391_crit_edge ]
  %i1398 = phi i32 [ %i1426, %bb1457 ], [ %i1322, %bb1385.bb1391_crit_edge ]
  %i1399 = phi i32 [ %i1427, %bb1457 ], [ %i1323, %bb1385.bb1391_crit_edge ]
  %i1400 = phi i32 [ %i1428, %bb1457 ], [ %i1324, %bb1385.bb1391_crit_edge ]
  %i1401 = phi i32 [ %i1429, %bb1457 ], [ %i1325, %bb1385.bb1391_crit_edge ]
  %i1402 = phi i32 [ %i1430, %bb1457 ], [ %i1326, %bb1385.bb1391_crit_edge ]
  %i1403 = phi i32 [ %i1431, %bb1457 ], [ %i1327, %bb1385.bb1391_crit_edge ]
  %i1404 = phi i32 [ %i1432, %bb1457 ], [ %i1328, %bb1385.bb1391_crit_edge ]
  %i1405 = phi i32 [ %i1433, %bb1457 ], [ %i1329, %bb1385.bb1391_crit_edge ]
  %i1406 = phi i32 [ %i1434, %bb1457 ], [ %i1330, %bb1385.bb1391_crit_edge ]
  %i1407 = phi i32 [ %i1435, %bb1457 ], [ %i1331, %bb1385.bb1391_crit_edge ]
  %i1408 = phi i32 [ %i1436, %bb1457 ], [ %i1332, %bb1385.bb1391_crit_edge ]
  %i1409 = phi i32 [ %i1437, %bb1457 ], [ %i1333, %bb1385.bb1391_crit_edge ]
  %i1410 = phi i32 [ %i1438, %bb1457 ], [ %i1334, %bb1385.bb1391_crit_edge ]
  %i1411 = phi i32 [ %i1439, %bb1457 ], [ %i1335, %bb1385.bb1391_crit_edge ]
  %i1412 = phi ptr [ %i1440, %bb1457 ], [ %i1336, %bb1385.bb1391_crit_edge ]
  %i1413 = phi ptr [ %i1441, %bb1457 ], [ %i1337, %bb1385.bb1391_crit_edge ]
  %i1414 = phi ptr [ %i1442, %bb1457 ], [ %i1338, %bb1385.bb1391_crit_edge ]
  %i1415 = phi i32 [ %i1467, %bb1457 ], [ 0, %bb1385.bb1391_crit_edge ]
  %i1416 = icmp slt i32 %i1415, 16
  br i1 %i1416, label %bb1391.bb1419_crit_edge, label %bb1417

bb1391.bb1419_crit_edge:                          ; preds = %bb1391
  br label %bb1419

bb1417:                                           ; preds = %bb1391
  %i1418 = getelementptr i8, ptr %arg, i64 3196
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(256) %i1418, i8 0, i64 256, i1 false), !tbaa !21
  br label %bb1490

bb1419:                                           ; preds = %bb1391.bb1419_crit_edge, %bb10.bb1419_crit_edge
  %i1420 = phi i32 [ %i13, %bb10.bb1419_crit_edge ], [ %i1392, %bb1391.bb1419_crit_edge ]
  %i1421 = phi i32 [ %i15, %bb10.bb1419_crit_edge ], [ %i1393, %bb1391.bb1419_crit_edge ]
  %i1422 = phi i32 [ %i17, %bb10.bb1419_crit_edge ], [ %i1394, %bb1391.bb1419_crit_edge ]
  %i1423 = phi i32 [ %i19, %bb10.bb1419_crit_edge ], [ %i1395, %bb1391.bb1419_crit_edge ]
  %i1424 = phi i32 [ %i21, %bb10.bb1419_crit_edge ], [ %i1396, %bb1391.bb1419_crit_edge ]
  %i1425 = phi i32 [ %i23, %bb10.bb1419_crit_edge ], [ %i1397, %bb1391.bb1419_crit_edge ]
  %i1426 = phi i32 [ %i25, %bb10.bb1419_crit_edge ], [ %i1398, %bb1391.bb1419_crit_edge ]
  %i1427 = phi i32 [ %i27, %bb10.bb1419_crit_edge ], [ %i1399, %bb1391.bb1419_crit_edge ]
  %i1428 = phi i32 [ %i29, %bb10.bb1419_crit_edge ], [ %i1400, %bb1391.bb1419_crit_edge ]
  %i1429 = phi i32 [ %i31, %bb10.bb1419_crit_edge ], [ %i1401, %bb1391.bb1419_crit_edge ]
  %i1430 = phi i32 [ %i33, %bb10.bb1419_crit_edge ], [ %i1402, %bb1391.bb1419_crit_edge ]
  %i1431 = phi i32 [ %i35, %bb10.bb1419_crit_edge ], [ %i1403, %bb1391.bb1419_crit_edge ]
  %i1432 = phi i32 [ %i37, %bb10.bb1419_crit_edge ], [ %i1404, %bb1391.bb1419_crit_edge ]
  %i1433 = phi i32 [ %i39, %bb10.bb1419_crit_edge ], [ %i1405, %bb1391.bb1419_crit_edge ]
  %i1434 = phi i32 [ %i41, %bb10.bb1419_crit_edge ], [ %i1406, %bb1391.bb1419_crit_edge ]
  %i1435 = phi i32 [ %i43, %bb10.bb1419_crit_edge ], [ %i1407, %bb1391.bb1419_crit_edge ]
  %i1436 = phi i32 [ %i45, %bb10.bb1419_crit_edge ], [ %i1408, %bb1391.bb1419_crit_edge ]
  %i1437 = phi i32 [ %i47, %bb10.bb1419_crit_edge ], [ %i1409, %bb1391.bb1419_crit_edge ]
  %i1438 = phi i32 [ %i49, %bb10.bb1419_crit_edge ], [ %i1410, %bb1391.bb1419_crit_edge ]
  %i1439 = phi i32 [ %i51, %bb10.bb1419_crit_edge ], [ %i1411, %bb1391.bb1419_crit_edge ]
  %i1440 = phi ptr [ %i53, %bb10.bb1419_crit_edge ], [ %i1412, %bb1391.bb1419_crit_edge ]
  %i1441 = phi ptr [ %i55, %bb10.bb1419_crit_edge ], [ %i1413, %bb1391.bb1419_crit_edge ]
  %i1442 = phi ptr [ %i57, %bb10.bb1419_crit_edge ], [ %i1414, %bb1391.bb1419_crit_edge ]
  %i1443 = phi i32 [ %i11, %bb10.bb1419_crit_edge ], [ %i1415, %bb1391.bb1419_crit_edge ]
  store i32 28, ptr %i2, align 8, !tbaa !153
  %i1444 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i1445 = load i32, ptr %i1444, align 4, !tbaa !154
  %i1446 = icmp sgt i32 %i1445, 0
  br i1 %i1446, label %bb1447, label %bb1450

bb1447:                                           ; preds = %bb1419
  %i1448 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1449 = load i32, ptr %i1448, align 8, !tbaa !155
  br label %bb1457

bb1450:                                           ; preds = %bb1419
  %i1451 = load ptr, ptr %arg, align 8, !tbaa !151
  %i1452 = getelementptr inbounds %struct.bz_stream, ptr %i1451, i64 0, i32 1
  %i1453 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1454 = getelementptr inbounds %struct.bz_stream, ptr %i1451, i64 0, i32 2
  %i1455 = getelementptr inbounds %struct.bz_stream, ptr %i1451, i64 0, i32 3
  %i1456 = load i32, ptr %i1452, align 8, !tbaa !141
  br label %bb1468

bb1457.loopexit:                                  ; preds = %bb1488
  br label %bb1457

bb1457:                                           ; preds = %bb1457.loopexit, %bb1447
  %i1458 = phi i32 [ %i1449, %bb1447 ], [ %i1478, %bb1457.loopexit ]
  %i1459 = phi i32 [ %i1445, %bb1447 ], [ %i1479, %bb1457.loopexit ]
  %i1460 = add nsw i32 %i1459, -1
  store i32 %i1460, ptr %i1444, align 4, !tbaa !154
  %i1461 = shl nuw i32 1, %i1460
  %i1462 = and i32 %i1458, %i1461
  %i1463 = icmp ne i32 %i1462, 0
  %i1464 = sext i32 %i1443 to i64
  %i1465 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 29, i64 %i1464
  %i1466 = zext i1 %i1463 to i8
  store i8 %i1466, ptr %i1465, align 1, !tbaa !21
  %i1467 = add nsw i32 %i1443, 1
  br label %bb1391, !llvm.loop !257

bb1468:                                           ; preds = %bb1488.bb1468_crit_edge, %bb1450
  %i1469 = phi i32 [ %i1456, %bb1450 ], [ %i1481, %bb1488.bb1468_crit_edge ]
  %i1470 = phi i32 [ %i1445, %bb1450 ], [ %i1479, %bb1488.bb1468_crit_edge ]
  %i1471 = icmp eq i32 %i1469, 0
  br i1 %i1471, label %bb4390.loopexit9, label %bb1472

bb1472:                                           ; preds = %bb1468
  %i1473 = load i32, ptr %i1453, align 8, !tbaa !155
  %i1474 = shl i32 %i1473, 8
  %i1475 = load ptr, ptr %i1451, align 8, !tbaa !147
  %i1476 = load i8, ptr %i1475, align 1, !tbaa !21
  %i1477 = zext i8 %i1476 to i32
  %i1478 = or disjoint i32 %i1474, %i1477
  store i32 %i1478, ptr %i1453, align 8, !tbaa !155
  %i1479 = add nsw i32 %i1470, 8
  store i32 %i1479, ptr %i1444, align 4, !tbaa !154
  %i1480 = getelementptr inbounds i8, ptr %i1475, i64 1
  store ptr %i1480, ptr %i1451, align 8, !tbaa !147
  %i1481 = add i32 %i1469, -1
  store i32 %i1481, ptr %i1452, align 8, !tbaa !141
  %i1482 = load i32, ptr %i1454, align 4, !tbaa !131
  %i1483 = add i32 %i1482, 1
  store i32 %i1483, ptr %i1454, align 4, !tbaa !131
  %i1484 = icmp eq i32 %i1483, 0
  br i1 %i1484, label %bb1485, label %bb1472.bb1488_crit_edge

bb1472.bb1488_crit_edge:                          ; preds = %bb1472
  br label %bb1488

bb1485:                                           ; preds = %bb1472
  %i1486 = load i32, ptr %i1455, align 8, !tbaa !132
  %i1487 = add i32 %i1486, 1
  store i32 %i1487, ptr %i1455, align 8, !tbaa !132
  br label %bb1488

bb1488:                                           ; preds = %bb1472.bb1488_crit_edge, %bb1485
  %i1489 = icmp sgt i32 %i1470, -8
  br i1 %i1489, label %bb1457.loopexit, label %bb1488.bb1468_crit_edge

bb1488.bb1468_crit_edge:                          ; preds = %bb1488
  br label %bb1468

bb1490:                                           ; preds = %bb1621, %bb1417
  %i1491 = phi i32 [ %i1622, %bb1621 ], [ %i1393, %bb1417 ]
  %i1492 = phi i32 [ %i1623, %bb1621 ], [ %i1394, %bb1417 ]
  %i1493 = phi i32 [ %i1624, %bb1621 ], [ %i1395, %bb1417 ]
  %i1494 = phi i32 [ %i1625, %bb1621 ], [ %i1396, %bb1417 ]
  %i1495 = phi i32 [ %i1626, %bb1621 ], [ %i1397, %bb1417 ]
  %i1496 = phi i32 [ %i1627, %bb1621 ], [ %i1398, %bb1417 ]
  %i1497 = phi i32 [ %i1628, %bb1621 ], [ %i1399, %bb1417 ]
  %i1498 = phi i32 [ %i1629, %bb1621 ], [ %i1400, %bb1417 ]
  %i1499 = phi i32 [ %i1630, %bb1621 ], [ %i1401, %bb1417 ]
  %i1500 = phi i32 [ %i1631, %bb1621 ], [ %i1402, %bb1417 ]
  %i1501 = phi i32 [ %i1632, %bb1621 ], [ %i1403, %bb1417 ]
  %i1502 = phi i32 [ %i1633, %bb1621 ], [ %i1404, %bb1417 ]
  %i1503 = phi i32 [ %i1634, %bb1621 ], [ %i1405, %bb1417 ]
  %i1504 = phi i32 [ %i1635, %bb1621 ], [ %i1406, %bb1417 ]
  %i1505 = phi i32 [ %i1636, %bb1621 ], [ %i1407, %bb1417 ]
  %i1506 = phi i32 [ %i1637, %bb1621 ], [ %i1408, %bb1417 ]
  %i1507 = phi i32 [ %i1638, %bb1621 ], [ %i1409, %bb1417 ]
  %i1508 = phi i32 [ %i1639, %bb1621 ], [ %i1410, %bb1417 ]
  %i1509 = phi i32 [ %i1640, %bb1621 ], [ %i1411, %bb1417 ]
  %i1510 = phi ptr [ %i1641, %bb1621 ], [ %i1412, %bb1417 ]
  %i1511 = phi ptr [ %i1642, %bb1621 ], [ %i1413, %bb1417 ]
  %i1512 = phi ptr [ %i1643, %bb1621 ], [ %i1414, %bb1417 ]
  %i1513 = phi i32 [ %i1644, %bb1621 ], [ %i1392, %bb1417 ]
  %i1514 = phi i32 [ %i1646, %bb1621 ], [ 0, %bb1417 ]
  %i1515 = icmp slt i32 %i1514, 16
  br i1 %i1515, label %bb1516, label %bb1647

bb1516:                                           ; preds = %bb1490
  %i1517 = sext i32 %i1514 to i64
  %i1518 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 29, i64 %i1517
  %i1519 = load i8, ptr %i1518, align 1, !tbaa !21
  %i1520 = icmp eq i8 %i1519, 0
  br i1 %i1520, label %bb1516.bb1621_crit_edge, label %bb1516.bb1521_crit_edge

bb1516.bb1521_crit_edge:                          ; preds = %bb1516
  br label %bb1521

bb1516.bb1621_crit_edge:                          ; preds = %bb1516
  br label %bb1621

bb1521:                                           ; preds = %bb1516.bb1521_crit_edge, %bb1619
  %i1522 = phi i32 [ %i1548, %bb1619 ], [ %i1491, %bb1516.bb1521_crit_edge ]
  %i1523 = phi i32 [ %i1549, %bb1619 ], [ %i1492, %bb1516.bb1521_crit_edge ]
  %i1524 = phi i32 [ %i1550, %bb1619 ], [ %i1493, %bb1516.bb1521_crit_edge ]
  %i1525 = phi i32 [ %i1551, %bb1619 ], [ %i1494, %bb1516.bb1521_crit_edge ]
  %i1526 = phi i32 [ %i1552, %bb1619 ], [ %i1495, %bb1516.bb1521_crit_edge ]
  %i1527 = phi i32 [ %i1553, %bb1619 ], [ %i1496, %bb1516.bb1521_crit_edge ]
  %i1528 = phi i32 [ %i1554, %bb1619 ], [ %i1497, %bb1516.bb1521_crit_edge ]
  %i1529 = phi i32 [ %i1555, %bb1619 ], [ %i1498, %bb1516.bb1521_crit_edge ]
  %i1530 = phi i32 [ %i1556, %bb1619 ], [ %i1499, %bb1516.bb1521_crit_edge ]
  %i1531 = phi i32 [ %i1557, %bb1619 ], [ %i1500, %bb1516.bb1521_crit_edge ]
  %i1532 = phi i32 [ %i1558, %bb1619 ], [ %i1501, %bb1516.bb1521_crit_edge ]
  %i1533 = phi i32 [ %i1559, %bb1619 ], [ %i1502, %bb1516.bb1521_crit_edge ]
  %i1534 = phi i32 [ %i1560, %bb1619 ], [ %i1503, %bb1516.bb1521_crit_edge ]
  %i1535 = phi i32 [ %i1561, %bb1619 ], [ %i1504, %bb1516.bb1521_crit_edge ]
  %i1536 = phi i32 [ %i1562, %bb1619 ], [ %i1505, %bb1516.bb1521_crit_edge ]
  %i1537 = phi i32 [ %i1563, %bb1619 ], [ %i1506, %bb1516.bb1521_crit_edge ]
  %i1538 = phi i32 [ %i1564, %bb1619 ], [ %i1507, %bb1516.bb1521_crit_edge ]
  %i1539 = phi i32 [ %i1565, %bb1619 ], [ %i1508, %bb1516.bb1521_crit_edge ]
  %i1540 = phi i32 [ %i1566, %bb1619 ], [ %i1509, %bb1516.bb1521_crit_edge ]
  %i1541 = phi ptr [ %i1567, %bb1619 ], [ %i1510, %bb1516.bb1521_crit_edge ]
  %i1542 = phi ptr [ %i1568, %bb1619 ], [ %i1511, %bb1516.bb1521_crit_edge ]
  %i1543 = phi ptr [ %i1569, %bb1619 ], [ %i1512, %bb1516.bb1521_crit_edge ]
  %i1544 = phi i32 [ %i1620, %bb1619 ], [ 0, %bb1516.bb1521_crit_edge ]
  %i1545 = phi i32 [ %i1571, %bb1619 ], [ %i1514, %bb1516.bb1521_crit_edge ]
  %i1546 = icmp slt i32 %i1544, 16
  br i1 %i1546, label %bb1521.bb1547_crit_edge, label %bb1521.bb1621_crit_edge

bb1521.bb1621_crit_edge:                          ; preds = %bb1521
  br label %bb1621

bb1521.bb1547_crit_edge:                          ; preds = %bb1521
  br label %bb1547

bb1547:                                           ; preds = %bb1521.bb1547_crit_edge, %bb10.bb1547_crit_edge
  %i1548 = phi i32 [ %i15, %bb10.bb1547_crit_edge ], [ %i1522, %bb1521.bb1547_crit_edge ]
  %i1549 = phi i32 [ %i17, %bb10.bb1547_crit_edge ], [ %i1523, %bb1521.bb1547_crit_edge ]
  %i1550 = phi i32 [ %i19, %bb10.bb1547_crit_edge ], [ %i1524, %bb1521.bb1547_crit_edge ]
  %i1551 = phi i32 [ %i21, %bb10.bb1547_crit_edge ], [ %i1525, %bb1521.bb1547_crit_edge ]
  %i1552 = phi i32 [ %i23, %bb10.bb1547_crit_edge ], [ %i1526, %bb1521.bb1547_crit_edge ]
  %i1553 = phi i32 [ %i25, %bb10.bb1547_crit_edge ], [ %i1527, %bb1521.bb1547_crit_edge ]
  %i1554 = phi i32 [ %i27, %bb10.bb1547_crit_edge ], [ %i1528, %bb1521.bb1547_crit_edge ]
  %i1555 = phi i32 [ %i29, %bb10.bb1547_crit_edge ], [ %i1529, %bb1521.bb1547_crit_edge ]
  %i1556 = phi i32 [ %i31, %bb10.bb1547_crit_edge ], [ %i1530, %bb1521.bb1547_crit_edge ]
  %i1557 = phi i32 [ %i33, %bb10.bb1547_crit_edge ], [ %i1531, %bb1521.bb1547_crit_edge ]
  %i1558 = phi i32 [ %i35, %bb10.bb1547_crit_edge ], [ %i1532, %bb1521.bb1547_crit_edge ]
  %i1559 = phi i32 [ %i37, %bb10.bb1547_crit_edge ], [ %i1533, %bb1521.bb1547_crit_edge ]
  %i1560 = phi i32 [ %i39, %bb10.bb1547_crit_edge ], [ %i1534, %bb1521.bb1547_crit_edge ]
  %i1561 = phi i32 [ %i41, %bb10.bb1547_crit_edge ], [ %i1535, %bb1521.bb1547_crit_edge ]
  %i1562 = phi i32 [ %i43, %bb10.bb1547_crit_edge ], [ %i1536, %bb1521.bb1547_crit_edge ]
  %i1563 = phi i32 [ %i45, %bb10.bb1547_crit_edge ], [ %i1537, %bb1521.bb1547_crit_edge ]
  %i1564 = phi i32 [ %i47, %bb10.bb1547_crit_edge ], [ %i1538, %bb1521.bb1547_crit_edge ]
  %i1565 = phi i32 [ %i49, %bb10.bb1547_crit_edge ], [ %i1539, %bb1521.bb1547_crit_edge ]
  %i1566 = phi i32 [ %i51, %bb10.bb1547_crit_edge ], [ %i1540, %bb1521.bb1547_crit_edge ]
  %i1567 = phi ptr [ %i53, %bb10.bb1547_crit_edge ], [ %i1541, %bb1521.bb1547_crit_edge ]
  %i1568 = phi ptr [ %i55, %bb10.bb1547_crit_edge ], [ %i1542, %bb1521.bb1547_crit_edge ]
  %i1569 = phi ptr [ %i57, %bb10.bb1547_crit_edge ], [ %i1543, %bb1521.bb1547_crit_edge ]
  %i1570 = phi i32 [ %i13, %bb10.bb1547_crit_edge ], [ %i1544, %bb1521.bb1547_crit_edge ]
  %i1571 = phi i32 [ %i11, %bb10.bb1547_crit_edge ], [ %i1545, %bb1521.bb1547_crit_edge ]
  store i32 29, ptr %i2, align 8, !tbaa !153
  %i1572 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i1573 = load i32, ptr %i1572, align 4, !tbaa !154
  %i1574 = icmp sgt i32 %i1573, 0
  br i1 %i1574, label %bb1575, label %bb1578

bb1575:                                           ; preds = %bb1547
  %i1576 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1577 = load i32, ptr %i1576, align 8, !tbaa !155
  br label %bb1585

bb1578:                                           ; preds = %bb1547
  %i1579 = load ptr, ptr %arg, align 8, !tbaa !151
  %i1580 = getelementptr inbounds %struct.bz_stream, ptr %i1579, i64 0, i32 1
  %i1581 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1582 = getelementptr inbounds %struct.bz_stream, ptr %i1579, i64 0, i32 2
  %i1583 = getelementptr inbounds %struct.bz_stream, ptr %i1579, i64 0, i32 3
  %i1584 = load i32, ptr %i1580, align 8, !tbaa !141
  br label %bb1592

bb1585.loopexit:                                  ; preds = %bb1612
  br label %bb1585

bb1585:                                           ; preds = %bb1585.loopexit, %bb1575
  %i1586 = phi i32 [ %i1577, %bb1575 ], [ %i1602, %bb1585.loopexit ]
  %i1587 = phi i32 [ %i1573, %bb1575 ], [ %i1603, %bb1585.loopexit ]
  %i1588 = add nsw i32 %i1587, -1
  store i32 %i1588, ptr %i1572, align 4, !tbaa !154
  %i1589 = shl nuw i32 1, %i1588
  %i1590 = and i32 %i1586, %i1589
  %i1591 = icmp eq i32 %i1590, 0
  br i1 %i1591, label %bb1585.bb1619_crit_edge, label %bb1614

bb1585.bb1619_crit_edge:                          ; preds = %bb1585
  br label %bb1619

bb1592:                                           ; preds = %bb1612.bb1592_crit_edge, %bb1578
  %i1593 = phi i32 [ %i1584, %bb1578 ], [ %i1605, %bb1612.bb1592_crit_edge ]
  %i1594 = phi i32 [ %i1573, %bb1578 ], [ %i1603, %bb1612.bb1592_crit_edge ]
  %i1595 = icmp eq i32 %i1593, 0
  br i1 %i1595, label %bb4390.loopexit10, label %bb1596

bb1596:                                           ; preds = %bb1592
  %i1597 = load i32, ptr %i1581, align 8, !tbaa !155
  %i1598 = shl i32 %i1597, 8
  %i1599 = load ptr, ptr %i1579, align 8, !tbaa !147
  %i1600 = load i8, ptr %i1599, align 1, !tbaa !21
  %i1601 = zext i8 %i1600 to i32
  %i1602 = or disjoint i32 %i1598, %i1601
  store i32 %i1602, ptr %i1581, align 8, !tbaa !155
  %i1603 = add nsw i32 %i1594, 8
  store i32 %i1603, ptr %i1572, align 4, !tbaa !154
  %i1604 = getelementptr inbounds i8, ptr %i1599, i64 1
  store ptr %i1604, ptr %i1579, align 8, !tbaa !147
  %i1605 = add i32 %i1593, -1
  store i32 %i1605, ptr %i1580, align 8, !tbaa !141
  %i1606 = load i32, ptr %i1582, align 4, !tbaa !131
  %i1607 = add i32 %i1606, 1
  store i32 %i1607, ptr %i1582, align 4, !tbaa !131
  %i1608 = icmp eq i32 %i1607, 0
  br i1 %i1608, label %bb1609, label %bb1596.bb1612_crit_edge

bb1596.bb1612_crit_edge:                          ; preds = %bb1596
  br label %bb1612

bb1609:                                           ; preds = %bb1596
  %i1610 = load i32, ptr %i1583, align 8, !tbaa !132
  %i1611 = add i32 %i1610, 1
  store i32 %i1611, ptr %i1583, align 8, !tbaa !132
  br label %bb1612

bb1612:                                           ; preds = %bb1596.bb1612_crit_edge, %bb1609
  %i1613 = icmp sgt i32 %i1594, -8
  br i1 %i1613, label %bb1585.loopexit, label %bb1612.bb1592_crit_edge

bb1612.bb1592_crit_edge:                          ; preds = %bb1612
  br label %bb1592

bb1614:                                           ; preds = %bb1585
  %i1615 = shl nsw i32 %i1571, 4
  %i1616 = add nsw i32 %i1615, %i1570
  %i1617 = sext i32 %i1616 to i64
  %i1618 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 28, i64 %i1617
  store i8 1, ptr %i1618, align 1, !tbaa !21
  br label %bb1619

bb1619:                                           ; preds = %bb1585.bb1619_crit_edge, %bb1614
  %i1620 = add nsw i32 %i1570, 1
  br label %bb1521, !llvm.loop !258

bb1621:                                           ; preds = %bb1521.bb1621_crit_edge, %bb1516.bb1621_crit_edge
  %i1622 = phi i32 [ %i1522, %bb1521.bb1621_crit_edge ], [ %i1491, %bb1516.bb1621_crit_edge ]
  %i1623 = phi i32 [ %i1523, %bb1521.bb1621_crit_edge ], [ %i1492, %bb1516.bb1621_crit_edge ]
  %i1624 = phi i32 [ %i1524, %bb1521.bb1621_crit_edge ], [ %i1493, %bb1516.bb1621_crit_edge ]
  %i1625 = phi i32 [ %i1525, %bb1521.bb1621_crit_edge ], [ %i1494, %bb1516.bb1621_crit_edge ]
  %i1626 = phi i32 [ %i1526, %bb1521.bb1621_crit_edge ], [ %i1495, %bb1516.bb1621_crit_edge ]
  %i1627 = phi i32 [ %i1527, %bb1521.bb1621_crit_edge ], [ %i1496, %bb1516.bb1621_crit_edge ]
  %i1628 = phi i32 [ %i1528, %bb1521.bb1621_crit_edge ], [ %i1497, %bb1516.bb1621_crit_edge ]
  %i1629 = phi i32 [ %i1529, %bb1521.bb1621_crit_edge ], [ %i1498, %bb1516.bb1621_crit_edge ]
  %i1630 = phi i32 [ %i1530, %bb1521.bb1621_crit_edge ], [ %i1499, %bb1516.bb1621_crit_edge ]
  %i1631 = phi i32 [ %i1531, %bb1521.bb1621_crit_edge ], [ %i1500, %bb1516.bb1621_crit_edge ]
  %i1632 = phi i32 [ %i1532, %bb1521.bb1621_crit_edge ], [ %i1501, %bb1516.bb1621_crit_edge ]
  %i1633 = phi i32 [ %i1533, %bb1521.bb1621_crit_edge ], [ %i1502, %bb1516.bb1621_crit_edge ]
  %i1634 = phi i32 [ %i1534, %bb1521.bb1621_crit_edge ], [ %i1503, %bb1516.bb1621_crit_edge ]
  %i1635 = phi i32 [ %i1535, %bb1521.bb1621_crit_edge ], [ %i1504, %bb1516.bb1621_crit_edge ]
  %i1636 = phi i32 [ %i1536, %bb1521.bb1621_crit_edge ], [ %i1505, %bb1516.bb1621_crit_edge ]
  %i1637 = phi i32 [ %i1537, %bb1521.bb1621_crit_edge ], [ %i1506, %bb1516.bb1621_crit_edge ]
  %i1638 = phi i32 [ %i1538, %bb1521.bb1621_crit_edge ], [ %i1507, %bb1516.bb1621_crit_edge ]
  %i1639 = phi i32 [ %i1539, %bb1521.bb1621_crit_edge ], [ %i1508, %bb1516.bb1621_crit_edge ]
  %i1640 = phi i32 [ %i1540, %bb1521.bb1621_crit_edge ], [ %i1509, %bb1516.bb1621_crit_edge ]
  %i1641 = phi ptr [ %i1541, %bb1521.bb1621_crit_edge ], [ %i1510, %bb1516.bb1621_crit_edge ]
  %i1642 = phi ptr [ %i1542, %bb1521.bb1621_crit_edge ], [ %i1511, %bb1516.bb1621_crit_edge ]
  %i1643 = phi ptr [ %i1543, %bb1521.bb1621_crit_edge ], [ %i1512, %bb1516.bb1621_crit_edge ]
  %i1644 = phi i32 [ %i1544, %bb1521.bb1621_crit_edge ], [ %i1513, %bb1516.bb1621_crit_edge ]
  %i1645 = phi i32 [ %i1545, %bb1521.bb1621_crit_edge ], [ %i1514, %bb1516.bb1621_crit_edge ]
  %i1646 = add nsw i32 %i1645, 1
  br label %bb1490, !llvm.loop !259

bb1647:                                           ; preds = %bb1490
  %i1648 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 27
  store i32 0, ptr %i1648, align 8, !tbaa !260
  br label %bb1649

bb1649:                                           ; preds = %bb1673.bb1649_crit_edge, %bb1647
  %i1650 = phi i32 [ 0, %bb1647 ], [ %i1674, %bb1673.bb1649_crit_edge ]
  %i1651 = phi i64 [ 0, %bb1647 ], [ %i1675, %bb1673.bb1649_crit_edge ]
  %i1652 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 28, i64 %i1651
  %i1653 = load i8, ptr %i1652, align 1, !tbaa !21
  %i1654 = icmp eq i8 %i1653, 0
  br i1 %i1654, label %bb1649.bb1661_crit_edge, label %bb1655

bb1649.bb1661_crit_edge:                          ; preds = %bb1649
  br label %bb1661

bb1655:                                           ; preds = %bb1649
  %i1656 = trunc i64 %i1651 to i8
  %i1657 = sext i32 %i1650 to i64
  %i1658 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 30, i64 %i1657
  store i8 %i1656, ptr %i1658, align 1, !tbaa !21
  %i1659 = load i32, ptr %i1648, align 8, !tbaa !260
  %i1660 = add nsw i32 %i1659, 1
  store i32 %i1660, ptr %i1648, align 8, !tbaa !260
  br label %bb1661

bb1661:                                           ; preds = %bb1649.bb1661_crit_edge, %bb1655
  %i1662 = phi i32 [ %i1650, %bb1649.bb1661_crit_edge ], [ %i1660, %bb1655 ]
  %i1663 = or disjoint i64 %i1651, 1
  %i1664 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 28, i64 %i1663
  %i1665 = load i8, ptr %i1664, align 1, !tbaa !21
  %i1666 = icmp eq i8 %i1665, 0
  br i1 %i1666, label %bb1661.bb1673_crit_edge, label %bb1667

bb1661.bb1673_crit_edge:                          ; preds = %bb1661
  br label %bb1673

bb1667:                                           ; preds = %bb1661
  %i1668 = trunc i64 %i1663 to i8
  %i1669 = sext i32 %i1662 to i64
  %i1670 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 30, i64 %i1669
  store i8 %i1668, ptr %i1670, align 1, !tbaa !21
  %i1671 = load i32, ptr %i1648, align 8, !tbaa !260
  %i1672 = add nsw i32 %i1671, 1
  store i32 %i1672, ptr %i1648, align 8, !tbaa !260
  br label %bb1673

bb1673:                                           ; preds = %bb1661.bb1673_crit_edge, %bb1667
  %i1674 = phi i32 [ %i1662, %bb1661.bb1673_crit_edge ], [ %i1672, %bb1667 ]
  %i1675 = add nuw nsw i64 %i1651, 2
  %i1676 = icmp eq i64 %i1675, 256
  br i1 %i1676, label %bb1677, label %bb1673.bb1649_crit_edge, !llvm.loop !261

bb1673.bb1649_crit_edge:                          ; preds = %bb1673
  br label %bb1649

bb1677:                                           ; preds = %bb1673
  %i1678 = icmp eq i32 %i1674, 0
  br i1 %i1678, label %bb1677.bb4390_crit_edge, label %bb1679

bb1677.bb4390_crit_edge:                          ; preds = %bb1677
  br label %bb4390

bb1679:                                           ; preds = %bb1677
  %i1680 = add nsw i32 %i1674, 2
  br label %bb1681

bb1681:                                           ; preds = %bb10.bb1681_crit_edge, %bb1679
  %i1682 = phi i32 [ %i15, %bb10.bb1681_crit_edge ], [ %i1491, %bb1679 ]
  %i1683 = phi i32 [ %i19, %bb10.bb1681_crit_edge ], [ %i1493, %bb1679 ]
  %i1684 = phi i32 [ %i21, %bb10.bb1681_crit_edge ], [ %i1494, %bb1679 ]
  %i1685 = phi i32 [ %i23, %bb10.bb1681_crit_edge ], [ %i1495, %bb1679 ]
  %i1686 = phi i32 [ %i25, %bb10.bb1681_crit_edge ], [ %i1496, %bb1679 ]
  %i1687 = phi i32 [ %i27, %bb10.bb1681_crit_edge ], [ %i1497, %bb1679 ]
  %i1688 = phi i32 [ %i29, %bb10.bb1681_crit_edge ], [ %i1498, %bb1679 ]
  %i1689 = phi i32 [ %i31, %bb10.bb1681_crit_edge ], [ %i1499, %bb1679 ]
  %i1690 = phi i32 [ %i33, %bb10.bb1681_crit_edge ], [ %i1500, %bb1679 ]
  %i1691 = phi i32 [ %i35, %bb10.bb1681_crit_edge ], [ %i1501, %bb1679 ]
  %i1692 = phi i32 [ %i37, %bb10.bb1681_crit_edge ], [ %i1502, %bb1679 ]
  %i1693 = phi i32 [ %i39, %bb10.bb1681_crit_edge ], [ %i1503, %bb1679 ]
  %i1694 = phi i32 [ %i41, %bb10.bb1681_crit_edge ], [ %i1504, %bb1679 ]
  %i1695 = phi i32 [ %i43, %bb10.bb1681_crit_edge ], [ %i1505, %bb1679 ]
  %i1696 = phi i32 [ %i45, %bb10.bb1681_crit_edge ], [ %i1506, %bb1679 ]
  %i1697 = phi i32 [ %i47, %bb10.bb1681_crit_edge ], [ %i1507, %bb1679 ]
  %i1698 = phi i32 [ %i49, %bb10.bb1681_crit_edge ], [ %i1508, %bb1679 ]
  %i1699 = phi i32 [ %i51, %bb10.bb1681_crit_edge ], [ %i1509, %bb1679 ]
  %i1700 = phi ptr [ %i53, %bb10.bb1681_crit_edge ], [ %i1510, %bb1679 ]
  %i1701 = phi ptr [ %i55, %bb10.bb1681_crit_edge ], [ %i1511, %bb1679 ]
  %i1702 = phi ptr [ %i57, %bb10.bb1681_crit_edge ], [ %i1512, %bb1679 ]
  %i1703 = phi i32 [ %i17, %bb10.bb1681_crit_edge ], [ %i1680, %bb1679 ]
  %i1704 = phi i32 [ %i13, %bb10.bb1681_crit_edge ], [ %i1513, %bb1679 ]
  %i1705 = phi i32 [ %i11, %bb10.bb1681_crit_edge ], [ %i1514, %bb1679 ]
  store i32 30, ptr %i2, align 8, !tbaa !153
  %i1706 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i1707 = load i32, ptr %i1706, align 4, !tbaa !154
  %i1708 = icmp sgt i32 %i1707, 2
  br i1 %i1708, label %bb1709, label %bb1712

bb1709:                                           ; preds = %bb1681
  %i1710 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1711 = load i32, ptr %i1710, align 8, !tbaa !155
  br label %bb1719

bb1712:                                           ; preds = %bb1681
  %i1713 = load ptr, ptr %arg, align 8, !tbaa !151
  %i1714 = getelementptr inbounds %struct.bz_stream, ptr %i1713, i64 0, i32 1
  %i1715 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1716 = getelementptr inbounds %struct.bz_stream, ptr %i1713, i64 0, i32 2
  %i1717 = getelementptr inbounds %struct.bz_stream, ptr %i1713, i64 0, i32 3
  %i1718 = load i32, ptr %i1714, align 8, !tbaa !141
  br label %bb1725

bb1719.loopexit:                                  ; preds = %bb1745
  br label %bb1719

bb1719:                                           ; preds = %bb1719.loopexit, %bb1709
  %i1720 = phi i32 [ %i1711, %bb1709 ], [ %i1735, %bb1719.loopexit ]
  %i1721 = phi i32 [ %i1707, %bb1709 ], [ %i1736, %bb1719.loopexit ]
  %i1722 = add nsw i32 %i1721, -3
  %i1723 = lshr i32 %i1720, %i1722
  %i1724 = and i32 %i1723, 7
  store i32 %i1722, ptr %i1706, align 4, !tbaa !154
  switch i32 %i1724, label %bb1719.bb1747_crit_edge [
    i32 7, label %bb1719.bb4390_crit_edge
    i32 1, label %bb1719.bb4390_crit_edge44
    i32 0, label %bb1719.bb4390_crit_edge45
  ]

bb1719.bb4390_crit_edge45:                        ; preds = %bb1719
  br label %bb4390

bb1719.bb4390_crit_edge44:                        ; preds = %bb1719
  br label %bb4390

bb1719.bb4390_crit_edge:                          ; preds = %bb1719
  br label %bb4390

bb1719.bb1747_crit_edge:                          ; preds = %bb1719
  br label %bb1747

bb1725:                                           ; preds = %bb1745.bb1725_crit_edge, %bb1712
  %i1726 = phi i32 [ %i1718, %bb1712 ], [ %i1738, %bb1745.bb1725_crit_edge ]
  %i1727 = phi i32 [ %i1707, %bb1712 ], [ %i1736, %bb1745.bb1725_crit_edge ]
  %i1728 = icmp eq i32 %i1726, 0
  br i1 %i1728, label %bb4390.loopexit25, label %bb1729

bb1729:                                           ; preds = %bb1725
  %i1730 = load i32, ptr %i1715, align 8, !tbaa !155
  %i1731 = shl i32 %i1730, 8
  %i1732 = load ptr, ptr %i1713, align 8, !tbaa !147
  %i1733 = load i8, ptr %i1732, align 1, !tbaa !21
  %i1734 = zext i8 %i1733 to i32
  %i1735 = or disjoint i32 %i1731, %i1734
  store i32 %i1735, ptr %i1715, align 8, !tbaa !155
  %i1736 = add nsw i32 %i1727, 8
  store i32 %i1736, ptr %i1706, align 4, !tbaa !154
  %i1737 = getelementptr inbounds i8, ptr %i1732, i64 1
  store ptr %i1737, ptr %i1713, align 8, !tbaa !147
  %i1738 = add i32 %i1726, -1
  store i32 %i1738, ptr %i1714, align 8, !tbaa !141
  %i1739 = load i32, ptr %i1716, align 4, !tbaa !131
  %i1740 = add i32 %i1739, 1
  store i32 %i1740, ptr %i1716, align 4, !tbaa !131
  %i1741 = icmp eq i32 %i1740, 0
  br i1 %i1741, label %bb1742, label %bb1729.bb1745_crit_edge

bb1729.bb1745_crit_edge:                          ; preds = %bb1729
  br label %bb1745

bb1742:                                           ; preds = %bb1729
  %i1743 = load i32, ptr %i1717, align 8, !tbaa !132
  %i1744 = add i32 %i1743, 1
  store i32 %i1744, ptr %i1717, align 8, !tbaa !132
  br label %bb1745

bb1745:                                           ; preds = %bb1729.bb1745_crit_edge, %bb1742
  %i1746 = icmp sgt i32 %i1727, -6
  br i1 %i1746, label %bb1719.loopexit, label %bb1745.bb1725_crit_edge

bb1745.bb1725_crit_edge:                          ; preds = %bb1745
  br label %bb1725

bb1747:                                           ; preds = %bb1719.bb1747_crit_edge, %bb97
  %i1748 = phi i32 [ %i15, %bb97 ], [ %i1682, %bb1719.bb1747_crit_edge ]
  %i1749 = phi i32 [ %i21, %bb97 ], [ %i1684, %bb1719.bb1747_crit_edge ]
  %i1750 = phi i32 [ %i23, %bb97 ], [ %i1685, %bb1719.bb1747_crit_edge ]
  %i1751 = phi i32 [ %i25, %bb97 ], [ %i1686, %bb1719.bb1747_crit_edge ]
  %i1752 = phi i32 [ %i27, %bb97 ], [ %i1687, %bb1719.bb1747_crit_edge ]
  %i1753 = phi i32 [ %i29, %bb97 ], [ %i1688, %bb1719.bb1747_crit_edge ]
  %i1754 = phi i32 [ %i31, %bb97 ], [ %i1689, %bb1719.bb1747_crit_edge ]
  %i1755 = phi i32 [ %i33, %bb97 ], [ %i1690, %bb1719.bb1747_crit_edge ]
  %i1756 = phi i32 [ %i35, %bb97 ], [ %i1691, %bb1719.bb1747_crit_edge ]
  %i1757 = phi i32 [ %i37, %bb97 ], [ %i1692, %bb1719.bb1747_crit_edge ]
  %i1758 = phi i32 [ %i39, %bb97 ], [ %i1693, %bb1719.bb1747_crit_edge ]
  %i1759 = phi i32 [ %i41, %bb97 ], [ %i1694, %bb1719.bb1747_crit_edge ]
  %i1760 = phi i32 [ %i43, %bb97 ], [ %i1695, %bb1719.bb1747_crit_edge ]
  %i1761 = phi i32 [ %i45, %bb97 ], [ %i1696, %bb1719.bb1747_crit_edge ]
  %i1762 = phi i32 [ %i47, %bb97 ], [ %i1697, %bb1719.bb1747_crit_edge ]
  %i1763 = phi i32 [ %i49, %bb97 ], [ %i1698, %bb1719.bb1747_crit_edge ]
  %i1764 = phi i32 [ %i51, %bb97 ], [ %i1699, %bb1719.bb1747_crit_edge ]
  %i1765 = phi ptr [ %i53, %bb97 ], [ %i1700, %bb1719.bb1747_crit_edge ]
  %i1766 = phi ptr [ %i55, %bb97 ], [ %i1701, %bb1719.bb1747_crit_edge ]
  %i1767 = phi ptr [ %i57, %bb97 ], [ %i1702, %bb1719.bb1747_crit_edge ]
  %i1768 = phi i32 [ %i99, %bb97 ], [ %i1722, %bb1719.bb1747_crit_edge ]
  %i1769 = phi i32 [ %i19, %bb97 ], [ %i1724, %bb1719.bb1747_crit_edge ]
  %i1770 = phi i32 [ %i17, %bb97 ], [ %i1703, %bb1719.bb1747_crit_edge ]
  %i1771 = phi i32 [ %i13, %bb97 ], [ %i1704, %bb1719.bb1747_crit_edge ]
  %i1772 = phi i32 [ %i11, %bb97 ], [ %i1705, %bb1719.bb1747_crit_edge ]
  store i32 31, ptr %i2, align 8, !tbaa !153
  %i1773 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i1774 = icmp sgt i32 %i1768, 14
  br i1 %i1774, label %bb1775, label %bb1778

bb1775:                                           ; preds = %bb1747
  %i1776 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1777 = load i32, ptr %i1776, align 8, !tbaa !155
  br label %bb1785

bb1778:                                           ; preds = %bb1747
  %i1779 = load ptr, ptr %arg, align 8, !tbaa !151
  %i1780 = getelementptr inbounds %struct.bz_stream, ptr %i1779, i64 0, i32 1
  %i1781 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1782 = getelementptr inbounds %struct.bz_stream, ptr %i1779, i64 0, i32 2
  %i1783 = getelementptr inbounds %struct.bz_stream, ptr %i1779, i64 0, i32 3
  %i1784 = load i32, ptr %i1780, align 8, !tbaa !141
  br label %bb1792

bb1785.loopexit:                                  ; preds = %bb1812
  br label %bb1785

bb1785:                                           ; preds = %bb1785.loopexit, %bb1775
  %i1786 = phi i32 [ %i1777, %bb1775 ], [ %i1802, %bb1785.loopexit ]
  %i1787 = phi i32 [ %i1768, %bb1775 ], [ %i1803, %bb1785.loopexit ]
  %i1788 = add nsw i32 %i1787, -15
  %i1789 = lshr i32 %i1786, %i1788
  %i1790 = and i32 %i1789, 32767
  store i32 %i1788, ptr %i1773, align 4, !tbaa !154
  %i1791 = icmp eq i32 %i1790, 0
  br i1 %i1791, label %bb1785.bb4390_crit_edge, label %bb1785.bb1814_crit_edge

bb1785.bb1814_crit_edge:                          ; preds = %bb1785
  br label %bb1814

bb1785.bb4390_crit_edge:                          ; preds = %bb1785
  br label %bb4390

bb1792:                                           ; preds = %bb1812.bb1792_crit_edge, %bb1778
  %i1793 = phi i32 [ %i1784, %bb1778 ], [ %i1805, %bb1812.bb1792_crit_edge ]
  %i1794 = phi i32 [ %i1768, %bb1778 ], [ %i1803, %bb1812.bb1792_crit_edge ]
  %i1795 = icmp eq i32 %i1793, 0
  br i1 %i1795, label %bb4390.loopexit24, label %bb1796

bb1796:                                           ; preds = %bb1792
  %i1797 = load i32, ptr %i1781, align 8, !tbaa !155
  %i1798 = shl i32 %i1797, 8
  %i1799 = load ptr, ptr %i1779, align 8, !tbaa !147
  %i1800 = load i8, ptr %i1799, align 1, !tbaa !21
  %i1801 = zext i8 %i1800 to i32
  %i1802 = or disjoint i32 %i1798, %i1801
  store i32 %i1802, ptr %i1781, align 8, !tbaa !155
  %i1803 = add nsw i32 %i1794, 8
  store i32 %i1803, ptr %i1773, align 4, !tbaa !154
  %i1804 = getelementptr inbounds i8, ptr %i1799, i64 1
  store ptr %i1804, ptr %i1779, align 8, !tbaa !147
  %i1805 = add i32 %i1793, -1
  store i32 %i1805, ptr %i1780, align 8, !tbaa !141
  %i1806 = load i32, ptr %i1782, align 4, !tbaa !131
  %i1807 = add i32 %i1806, 1
  store i32 %i1807, ptr %i1782, align 4, !tbaa !131
  %i1808 = icmp eq i32 %i1807, 0
  br i1 %i1808, label %bb1809, label %bb1796.bb1812_crit_edge

bb1796.bb1812_crit_edge:                          ; preds = %bb1796
  br label %bb1812

bb1809:                                           ; preds = %bb1796
  %i1810 = load i32, ptr %i1783, align 8, !tbaa !132
  %i1811 = add i32 %i1810, 1
  store i32 %i1811, ptr %i1783, align 8, !tbaa !132
  br label %bb1812

bb1812:                                           ; preds = %bb1796.bb1812_crit_edge, %bb1809
  %i1813 = icmp sgt i32 %i1794, 6
  br i1 %i1813, label %bb1785.loopexit, label %bb1812.bb1792_crit_edge

bb1812.bb1792_crit_edge:                          ; preds = %bb1812
  br label %bb1792

bb1814:                                           ; preds = %bb1785.bb1814_crit_edge, %bb1913
  %i1815 = phi i32 [ %i1841, %bb1913 ], [ %i1748, %bb1785.bb1814_crit_edge ]
  %i1816 = phi i32 [ %i1842, %bb1913 ], [ %i1750, %bb1785.bb1814_crit_edge ]
  %i1817 = phi i32 [ %i1843, %bb1913 ], [ %i1751, %bb1785.bb1814_crit_edge ]
  %i1818 = phi i32 [ %i1844, %bb1913 ], [ %i1752, %bb1785.bb1814_crit_edge ]
  %i1819 = phi i32 [ %i1845, %bb1913 ], [ %i1753, %bb1785.bb1814_crit_edge ]
  %i1820 = phi i32 [ %i1846, %bb1913 ], [ %i1754, %bb1785.bb1814_crit_edge ]
  %i1821 = phi i32 [ %i1847, %bb1913 ], [ %i1755, %bb1785.bb1814_crit_edge ]
  %i1822 = phi i32 [ %i1848, %bb1913 ], [ %i1756, %bb1785.bb1814_crit_edge ]
  %i1823 = phi i32 [ %i1849, %bb1913 ], [ %i1757, %bb1785.bb1814_crit_edge ]
  %i1824 = phi i32 [ %i1850, %bb1913 ], [ %i1758, %bb1785.bb1814_crit_edge ]
  %i1825 = phi i32 [ %i1851, %bb1913 ], [ %i1759, %bb1785.bb1814_crit_edge ]
  %i1826 = phi i32 [ %i1852, %bb1913 ], [ %i1760, %bb1785.bb1814_crit_edge ]
  %i1827 = phi i32 [ %i1853, %bb1913 ], [ %i1761, %bb1785.bb1814_crit_edge ]
  %i1828 = phi i32 [ %i1854, %bb1913 ], [ %i1762, %bb1785.bb1814_crit_edge ]
  %i1829 = phi i32 [ %i1855, %bb1913 ], [ %i1763, %bb1785.bb1814_crit_edge ]
  %i1830 = phi i32 [ %i1856, %bb1913 ], [ %i1764, %bb1785.bb1814_crit_edge ]
  %i1831 = phi ptr [ %i1857, %bb1913 ], [ %i1765, %bb1785.bb1814_crit_edge ]
  %i1832 = phi ptr [ %i1858, %bb1913 ], [ %i1766, %bb1785.bb1814_crit_edge ]
  %i1833 = phi ptr [ %i1859, %bb1913 ], [ %i1767, %bb1785.bb1814_crit_edge ]
  %i1834 = phi i32 [ %i1860, %bb1913 ], [ %i1790, %bb1785.bb1814_crit_edge ]
  %i1835 = phi i32 [ %i1861, %bb1913 ], [ %i1769, %bb1785.bb1814_crit_edge ]
  %i1836 = phi i32 [ %i1862, %bb1913 ], [ %i1770, %bb1785.bb1814_crit_edge ]
  %i1837 = phi i32 [ %i1871, %bb1913 ], [ %i1771, %bb1785.bb1814_crit_edge ]
  %i1838 = phi i32 [ %i1917, %bb1913 ], [ 0, %bb1785.bb1814_crit_edge ]
  %i1839 = icmp slt i32 %i1838, %i1834
  br i1 %i1839, label %bb1814.bb1840_crit_edge, label %bb1918

bb1814.bb1840_crit_edge:                          ; preds = %bb1814
  br label %bb1840

bb1840:                                           ; preds = %bb1814.bb1840_crit_edge, %bb10.bb1840_crit_edge
  %i1841 = phi i32 [ %i1815, %bb1814.bb1840_crit_edge ], [ %i15, %bb10.bb1840_crit_edge ]
  %i1842 = phi i32 [ %i1816, %bb1814.bb1840_crit_edge ], [ %i23, %bb10.bb1840_crit_edge ]
  %i1843 = phi i32 [ %i1817, %bb1814.bb1840_crit_edge ], [ %i25, %bb10.bb1840_crit_edge ]
  %i1844 = phi i32 [ %i1818, %bb1814.bb1840_crit_edge ], [ %i27, %bb10.bb1840_crit_edge ]
  %i1845 = phi i32 [ %i1819, %bb1814.bb1840_crit_edge ], [ %i29, %bb10.bb1840_crit_edge ]
  %i1846 = phi i32 [ %i1820, %bb1814.bb1840_crit_edge ], [ %i31, %bb10.bb1840_crit_edge ]
  %i1847 = phi i32 [ %i1821, %bb1814.bb1840_crit_edge ], [ %i33, %bb10.bb1840_crit_edge ]
  %i1848 = phi i32 [ %i1822, %bb1814.bb1840_crit_edge ], [ %i35, %bb10.bb1840_crit_edge ]
  %i1849 = phi i32 [ %i1823, %bb1814.bb1840_crit_edge ], [ %i37, %bb10.bb1840_crit_edge ]
  %i1850 = phi i32 [ %i1824, %bb1814.bb1840_crit_edge ], [ %i39, %bb10.bb1840_crit_edge ]
  %i1851 = phi i32 [ %i1825, %bb1814.bb1840_crit_edge ], [ %i41, %bb10.bb1840_crit_edge ]
  %i1852 = phi i32 [ %i1826, %bb1814.bb1840_crit_edge ], [ %i43, %bb10.bb1840_crit_edge ]
  %i1853 = phi i32 [ %i1827, %bb1814.bb1840_crit_edge ], [ %i45, %bb10.bb1840_crit_edge ]
  %i1854 = phi i32 [ %i1828, %bb1814.bb1840_crit_edge ], [ %i47, %bb10.bb1840_crit_edge ]
  %i1855 = phi i32 [ %i1829, %bb1814.bb1840_crit_edge ], [ %i49, %bb10.bb1840_crit_edge ]
  %i1856 = phi i32 [ %i1830, %bb1814.bb1840_crit_edge ], [ %i51, %bb10.bb1840_crit_edge ]
  %i1857 = phi ptr [ %i1831, %bb1814.bb1840_crit_edge ], [ %i53, %bb10.bb1840_crit_edge ]
  %i1858 = phi ptr [ %i1832, %bb1814.bb1840_crit_edge ], [ %i55, %bb10.bb1840_crit_edge ]
  %i1859 = phi ptr [ %i1833, %bb1814.bb1840_crit_edge ], [ %i57, %bb10.bb1840_crit_edge ]
  %i1860 = phi i32 [ %i1834, %bb1814.bb1840_crit_edge ], [ %i21, %bb10.bb1840_crit_edge ]
  %i1861 = phi i32 [ %i1835, %bb1814.bb1840_crit_edge ], [ %i19, %bb10.bb1840_crit_edge ]
  %i1862 = phi i32 [ %i1836, %bb1814.bb1840_crit_edge ], [ %i17, %bb10.bb1840_crit_edge ]
  %i1863 = phi i32 [ 0, %bb1814.bb1840_crit_edge ], [ %i13, %bb10.bb1840_crit_edge ]
  %i1864 = phi i32 [ %i1838, %bb1814.bb1840_crit_edge ], [ %i11, %bb10.bb1840_crit_edge ]
  %i1865 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i1866 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1867 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i1868 = load i32, ptr %i1865, align 4, !tbaa !154
  br label %bb1869

bb1869:                                           ; preds = %bb1910.bb1869_crit_edge, %bb1840
  %i1870 = phi i32 [ %i1884, %bb1910.bb1869_crit_edge ], [ %i1868, %bb1840 ]
  %i1871 = phi i32 [ %i1911, %bb1910.bb1869_crit_edge ], [ %i1863, %bb1840 ]
  store i32 32, ptr %i2, align 8, !tbaa !153
  %i1872 = icmp sgt i32 %i1870, 0
  br i1 %i1872, label %bb1873, label %bb1875

bb1873:                                           ; preds = %bb1869
  %i1874 = load i32, ptr %i1867, align 8, !tbaa !155
  br label %bb1881

bb1875:                                           ; preds = %bb1869
  %i1876 = load ptr, ptr %arg, align 8, !tbaa !151
  %i1877 = getelementptr inbounds %struct.bz_stream, ptr %i1876, i64 0, i32 1
  %i1878 = getelementptr inbounds %struct.bz_stream, ptr %i1876, i64 0, i32 2
  %i1879 = getelementptr inbounds %struct.bz_stream, ptr %i1876, i64 0, i32 3
  %i1880 = load i32, ptr %i1877, align 8, !tbaa !141
  br label %bb1888

bb1881.loopexit:                                  ; preds = %bb1908
  br label %bb1881

bb1881:                                           ; preds = %bb1881.loopexit, %bb1873
  %i1882 = phi i32 [ %i1874, %bb1873 ], [ %i1898, %bb1881.loopexit ]
  %i1883 = phi i32 [ %i1870, %bb1873 ], [ %i1899, %bb1881.loopexit ]
  %i1884 = add nsw i32 %i1883, -1
  store i32 %i1884, ptr %i1865, align 4, !tbaa !154
  %i1885 = shl nuw i32 1, %i1884
  %i1886 = and i32 %i1882, %i1885
  %i1887 = icmp eq i32 %i1886, 0
  br i1 %i1887, label %bb1913, label %bb1910

bb1888:                                           ; preds = %bb1908.bb1888_crit_edge, %bb1875
  %i1889 = phi i32 [ %i1880, %bb1875 ], [ %i1901, %bb1908.bb1888_crit_edge ]
  %i1890 = phi i32 [ %i1870, %bb1875 ], [ %i1899, %bb1908.bb1888_crit_edge ]
  %i1891 = icmp eq i32 %i1889, 0
  br i1 %i1891, label %bb4390.loopexit11, label %bb1892

bb1892:                                           ; preds = %bb1888
  %i1893 = load i32, ptr %i1866, align 8, !tbaa !155
  %i1894 = shl i32 %i1893, 8
  %i1895 = load ptr, ptr %i1876, align 8, !tbaa !147
  %i1896 = load i8, ptr %i1895, align 1, !tbaa !21
  %i1897 = zext i8 %i1896 to i32
  %i1898 = or disjoint i32 %i1894, %i1897
  store i32 %i1898, ptr %i1866, align 8, !tbaa !155
  %i1899 = add nsw i32 %i1890, 8
  store i32 %i1899, ptr %i1865, align 4, !tbaa !154
  %i1900 = getelementptr inbounds i8, ptr %i1895, i64 1
  store ptr %i1900, ptr %i1876, align 8, !tbaa !147
  %i1901 = add i32 %i1889, -1
  store i32 %i1901, ptr %i1877, align 8, !tbaa !141
  %i1902 = load i32, ptr %i1878, align 4, !tbaa !131
  %i1903 = add i32 %i1902, 1
  store i32 %i1903, ptr %i1878, align 4, !tbaa !131
  %i1904 = icmp eq i32 %i1903, 0
  br i1 %i1904, label %bb1905, label %bb1892.bb1908_crit_edge

bb1892.bb1908_crit_edge:                          ; preds = %bb1892
  br label %bb1908

bb1905:                                           ; preds = %bb1892
  %i1906 = load i32, ptr %i1879, align 8, !tbaa !132
  %i1907 = add i32 %i1906, 1
  store i32 %i1907, ptr %i1879, align 8, !tbaa !132
  br label %bb1908

bb1908:                                           ; preds = %bb1892.bb1908_crit_edge, %bb1905
  %i1909 = icmp sgt i32 %i1890, -8
  br i1 %i1909, label %bb1881.loopexit, label %bb1908.bb1888_crit_edge

bb1908.bb1888_crit_edge:                          ; preds = %bb1908
  br label %bb1888

bb1910:                                           ; preds = %bb1881
  %i1911 = add nsw i32 %i1871, 1
  %i1912 = icmp slt i32 %i1911, %i1861
  br i1 %i1912, label %bb1910.bb1869_crit_edge, label %bb4390.loopexit12

bb1910.bb1869_crit_edge:                          ; preds = %bb1910
  br label %bb1869

bb1913:                                           ; preds = %bb1881
  %i1914 = trunc i32 %i1871 to i8
  %i1915 = sext i32 %i1864 to i64
  %i1916 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 34, i64 %i1915
  store i8 %i1914, ptr %i1916, align 1, !tbaa !21
  %i1917 = add nsw i32 %i1864, 1
  br label %bb1814, !llvm.loop !262

bb1918:                                           ; preds = %bb1814
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %i) #31
  %i1919 = icmp sgt i32 %i1835, 0
  br i1 %i1919, label %bb1924.preheader, label %bb1918.bb1920_crit_edge

bb1918.bb1920_crit_edge:                          ; preds = %bb1918
  br label %bb1920

bb1924.preheader:                                 ; preds = %bb1918
  br label %bb1924

bb1920.loopexit:                                  ; preds = %bb1924
  br label %bb1920

bb1920:                                           ; preds = %bb1918.bb1920_crit_edge, %bb1920.loopexit
  %i1921 = icmp sgt i32 %i1834, 0
  br i1 %i1921, label %bb1922, label %bb1920.bb1972_crit_edge

bb1920.bb1972_crit_edge:                          ; preds = %bb1920
  br label %bb1972

bb1922:                                           ; preds = %bb1920
  %i1923 = zext nneg i32 %i1834 to i64
  br label %bb1931

bb1924:                                           ; preds = %bb1924.bb1924_crit_edge, %bb1924.preheader
  %i1925 = phi i8 [ %i1928, %bb1924.bb1924_crit_edge ], [ 0, %bb1924.preheader ]
  %i1926 = zext i8 %i1925 to i64
  %i1927 = getelementptr inbounds [6 x i8], ptr %i, i64 0, i64 %i1926
  store i8 %i1925, ptr %i1927, align 1, !tbaa !21
  %i1928 = add i8 %i1925, 1
  %i1929 = zext i8 %i1928 to i32
  %i1930 = icmp ugt i32 %i1835, %i1929
  br i1 %i1930, label %bb1924.bb1924_crit_edge, label %bb1920.loopexit, !llvm.loop !263

bb1924.bb1924_crit_edge:                          ; preds = %bb1924
  br label %bb1924

bb1931:                                           ; preds = %bb1968.bb1931_crit_edge, %bb1922
  %i1932 = phi i64 [ 0, %bb1922 ], [ %i1970, %bb1968.bb1931_crit_edge ]
  %i1933 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 34, i64 %i1932
  %i1934 = load i8, ptr %i1933, align 1, !tbaa !21
  %i1935 = zext i8 %i1934 to i64
  %i1936 = getelementptr inbounds [6 x i8], ptr %i, i64 0, i64 %i1935
  %i1937 = load i8, ptr %i1936, align 1, !tbaa !21
  %i1938 = icmp eq i8 %i1934, 0
  br i1 %i1938, label %bb1931.bb1968_crit_edge, label %bb1939

bb1931.bb1968_crit_edge:                          ; preds = %bb1931
  br label %bb1968

bb1939:                                           ; preds = %bb1931
  %i1940 = and i8 %i1934, 1
  %i1941 = icmp eq i8 %i1940, 0
  br i1 %i1941, label %bb1939.bb1949_crit_edge, label %bb1942

bb1939.bb1949_crit_edge:                          ; preds = %bb1939
  br label %bb1949

bb1942:                                           ; preds = %bb1939
  %i1943 = add nuw nsw i64 %i1935, 255
  %i1944 = and i64 %i1943, 254
  %i1945 = getelementptr inbounds [6 x i8], ptr %i, i64 0, i64 %i1944
  %i1946 = load i8, ptr %i1945, align 1, !tbaa !21
  %i1947 = getelementptr inbounds [6 x i8], ptr %i, i64 0, i64 %i1935
  store i8 %i1946, ptr %i1947, align 1, !tbaa !21
  %i1948 = add nsw i64 %i1935, -1
  br label %bb1949

bb1949:                                           ; preds = %bb1939.bb1949_crit_edge, %bb1942
  %i1950 = phi i64 [ %i1935, %bb1939.bb1949_crit_edge ], [ %i1948, %bb1942 ]
  %i1951 = icmp eq i8 %i1934, 1
  br i1 %i1951, label %bb1949.bb1968_crit_edge, label %bb1952.preheader

bb1949.bb1968_crit_edge:                          ; preds = %bb1949
  br label %bb1968

bb1952.preheader:                                 ; preds = %bb1949
  br label %bb1952

bb1952:                                           ; preds = %bb1952.bb1952_crit_edge, %bb1952.preheader
  %i1953 = phi i64 [ %i1965, %bb1952.bb1952_crit_edge ], [ %i1950, %bb1952.preheader ]
  %i1954 = add nuw nsw i64 %i1953, 4294967295
  %i1955 = and i64 %i1954, 4294967295
  %i1956 = getelementptr inbounds [6 x i8], ptr %i, i64 0, i64 %i1955
  %i1957 = load i8, ptr %i1956, align 1, !tbaa !21
  %i1958 = getelementptr inbounds [6 x i8], ptr %i, i64 0, i64 %i1953
  store i8 %i1957, ptr %i1958, align 1, !tbaa !21
  %i1959 = add nsw i64 %i1953, -1
  %i1960 = add nsw i64 %i1953, 4294967294
  %i1961 = and i64 %i1960, 4294967295
  %i1962 = getelementptr inbounds [6 x i8], ptr %i, i64 0, i64 %i1961
  %i1963 = load i8, ptr %i1962, align 1, !tbaa !21
  %i1964 = getelementptr inbounds [6 x i8], ptr %i, i64 0, i64 %i1959
  store i8 %i1963, ptr %i1964, align 1, !tbaa !21
  %i1965 = add nsw i64 %i1953, -2
  %i1966 = and i64 %i1965, 255
  %i1967 = icmp eq i64 %i1966, 0
  br i1 %i1967, label %bb1968.loopexit, label %bb1952.bb1952_crit_edge, !llvm.loop !264

bb1952.bb1952_crit_edge:                          ; preds = %bb1952
  br label %bb1952

bb1968.loopexit:                                  ; preds = %bb1952
  br label %bb1968

bb1968:                                           ; preds = %bb1949.bb1968_crit_edge, %bb1931.bb1968_crit_edge, %bb1968.loopexit
  store i8 %i1937, ptr %i, align 1, !tbaa !21
  %i1969 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 33, i64 %i1932
  store i8 %i1937, ptr %i1969, align 1, !tbaa !21
  %i1970 = add nuw nsw i64 %i1932, 1
  %i1971 = icmp eq i64 %i1970, %i1923
  br i1 %i1971, label %bb1972.loopexit, label %bb1968.bb1931_crit_edge, !llvm.loop !265

bb1968.bb1931_crit_edge:                          ; preds = %bb1968
  br label %bb1931

bb1972.loopexit:                                  ; preds = %bb1968
  br label %bb1972

bb1972:                                           ; preds = %bb1920.bb1972_crit_edge, %bb1972.loopexit
  %i1973 = phi i32 [ 0, %bb1920.bb1972_crit_edge ], [ %i1834, %bb1972.loopexit ]
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %i) #31
  br label %bb1974

bb1974:                                           ; preds = %bb2271, %bb1972
  %i1975 = phi i32 [ %i2077, %bb2271 ], [ %i1816, %bb1972 ]
  %i1976 = phi i32 [ %i2078, %bb2271 ], [ %i1817, %bb1972 ]
  %i1977 = phi i32 [ %i2079, %bb2271 ], [ %i1818, %bb1972 ]
  %i1978 = phi i32 [ %i2080, %bb2271 ], [ %i1819, %bb1972 ]
  %i1979 = phi i32 [ %i2081, %bb2271 ], [ %i1820, %bb1972 ]
  %i1980 = phi i32 [ %i2082, %bb2271 ], [ %i1821, %bb1972 ]
  %i1981 = phi i32 [ %i2083, %bb2271 ], [ %i1822, %bb1972 ]
  %i1982 = phi i32 [ %i2084, %bb2271 ], [ %i1823, %bb1972 ]
  %i1983 = phi i32 [ %i2085, %bb2271 ], [ %i1825, %bb1972 ]
  %i1984 = phi i32 [ %i2086, %bb2271 ], [ %i1826, %bb1972 ]
  %i1985 = phi i32 [ %i2087, %bb2271 ], [ %i1827, %bb1972 ]
  %i1986 = phi i32 [ %i2088, %bb2271 ], [ %i1828, %bb1972 ]
  %i1987 = phi i32 [ %i2089, %bb2271 ], [ %i1829, %bb1972 ]
  %i1988 = phi i32 [ %i2090, %bb2271 ], [ %i1830, %bb1972 ]
  %i1989 = phi ptr [ %i2091, %bb2271 ], [ %i1831, %bb1972 ]
  %i1990 = phi ptr [ %i2092, %bb2271 ], [ %i1832, %bb1972 ]
  %i1991 = phi ptr [ %i2093, %bb2271 ], [ %i1833, %bb1972 ]
  %i1992 = phi i32 [ %i2094, %bb2271 ], [ %i1824, %bb1972 ]
  %i1993 = phi i32 [ %i2095, %bb2271 ], [ %i1834, %bb1972 ]
  %i1994 = phi i32 [ %i2096, %bb2271 ], [ %i1835, %bb1972 ]
  %i1995 = phi i32 [ %i2097, %bb2271 ], [ %i1836, %bb1972 ]
  %i1996 = phi i32 [ %i2272, %bb2271 ], [ 0, %bb1972 ]
  %i1997 = phi i32 [ %i2099, %bb2271 ], [ %i1837, %bb1972 ]
  %i1998 = phi i32 [ %i2100, %bb2271 ], [ %i1973, %bb1972 ]
  %i1999 = icmp slt i32 %i1996, %i1994
  br i1 %i1999, label %bb1974.bb2010_crit_edge, label %bb2000

bb1974.bb2010_crit_edge:                          ; preds = %bb1974
  br label %bb2010

bb2000:                                           ; preds = %bb1974
  %i2001 = icmp sgt i32 %i1994, 0
  br i1 %i2001, label %bb2002, label %bb2000.bb2317_crit_edge

bb2000.bb2317_crit_edge:                          ; preds = %bb2000
  br label %bb2317

bb2002:                                           ; preds = %bb2000
  %i2003 = icmp sgt i32 %i1995, 0
  %i2004 = zext nneg i32 %i1994 to i64
  %i2005 = zext i32 %i1995 to i64
  %i2006 = and i64 %i2005, 1
  %i2007 = icmp eq i32 %i1995, 1
  %i2008 = and i64 %i2005, 2147483646
  %i2009 = icmp eq i64 %i2006, 0
  br label %bb2273

bb2010:                                           ; preds = %bb1974.bb2010_crit_edge, %bb10.bb2010_crit_edge
  %i2011 = phi i32 [ %i1975, %bb1974.bb2010_crit_edge ], [ %i23, %bb10.bb2010_crit_edge ]
  %i2012 = phi i32 [ %i1976, %bb1974.bb2010_crit_edge ], [ %i25, %bb10.bb2010_crit_edge ]
  %i2013 = phi i32 [ %i1977, %bb1974.bb2010_crit_edge ], [ %i27, %bb10.bb2010_crit_edge ]
  %i2014 = phi i32 [ %i1978, %bb1974.bb2010_crit_edge ], [ %i29, %bb10.bb2010_crit_edge ]
  %i2015 = phi i32 [ %i1979, %bb1974.bb2010_crit_edge ], [ %i31, %bb10.bb2010_crit_edge ]
  %i2016 = phi i32 [ %i1980, %bb1974.bb2010_crit_edge ], [ %i33, %bb10.bb2010_crit_edge ]
  %i2017 = phi i32 [ %i1981, %bb1974.bb2010_crit_edge ], [ %i35, %bb10.bb2010_crit_edge ]
  %i2018 = phi i32 [ %i1982, %bb1974.bb2010_crit_edge ], [ %i37, %bb10.bb2010_crit_edge ]
  %i2019 = phi i32 [ %i1983, %bb1974.bb2010_crit_edge ], [ %i41, %bb10.bb2010_crit_edge ]
  %i2020 = phi i32 [ %i1984, %bb1974.bb2010_crit_edge ], [ %i43, %bb10.bb2010_crit_edge ]
  %i2021 = phi i32 [ %i1985, %bb1974.bb2010_crit_edge ], [ %i45, %bb10.bb2010_crit_edge ]
  %i2022 = phi i32 [ %i1986, %bb1974.bb2010_crit_edge ], [ %i47, %bb10.bb2010_crit_edge ]
  %i2023 = phi i32 [ %i1987, %bb1974.bb2010_crit_edge ], [ %i49, %bb10.bb2010_crit_edge ]
  %i2024 = phi i32 [ %i1988, %bb1974.bb2010_crit_edge ], [ %i51, %bb10.bb2010_crit_edge ]
  %i2025 = phi ptr [ %i1989, %bb1974.bb2010_crit_edge ], [ %i53, %bb10.bb2010_crit_edge ]
  %i2026 = phi ptr [ %i1990, %bb1974.bb2010_crit_edge ], [ %i55, %bb10.bb2010_crit_edge ]
  %i2027 = phi ptr [ %i1991, %bb1974.bb2010_crit_edge ], [ %i57, %bb10.bb2010_crit_edge ]
  %i2028 = phi i32 [ %i1992, %bb1974.bb2010_crit_edge ], [ %i39, %bb10.bb2010_crit_edge ]
  %i2029 = phi i32 [ %i1993, %bb1974.bb2010_crit_edge ], [ %i21, %bb10.bb2010_crit_edge ]
  %i2030 = phi i32 [ %i1994, %bb1974.bb2010_crit_edge ], [ %i19, %bb10.bb2010_crit_edge ]
  %i2031 = phi i32 [ %i1995, %bb1974.bb2010_crit_edge ], [ %i17, %bb10.bb2010_crit_edge ]
  %i2032 = phi i32 [ %i1996, %bb1974.bb2010_crit_edge ], [ %i15, %bb10.bb2010_crit_edge ]
  %i2033 = phi i32 [ %i1997, %bb1974.bb2010_crit_edge ], [ %i13, %bb10.bb2010_crit_edge ]
  %i2034 = phi i32 [ %i1998, %bb1974.bb2010_crit_edge ], [ %i11, %bb10.bb2010_crit_edge ]
  store i32 33, ptr %i2, align 8, !tbaa !153
  %i2035 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i2036 = load i32, ptr %i2035, align 4, !tbaa !154
  %i2037 = icmp sgt i32 %i2036, 4
  br i1 %i2037, label %bb2038, label %bb2041

bb2038:                                           ; preds = %bb2010
  %i2039 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i2040 = load i32, ptr %i2039, align 8, !tbaa !155
  br label %bb2048

bb2041:                                           ; preds = %bb2010
  %i2042 = load ptr, ptr %arg, align 8, !tbaa !151
  %i2043 = getelementptr inbounds %struct.bz_stream, ptr %i2042, i64 0, i32 1
  %i2044 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i2045 = getelementptr inbounds %struct.bz_stream, ptr %i2042, i64 0, i32 2
  %i2046 = getelementptr inbounds %struct.bz_stream, ptr %i2042, i64 0, i32 3
  %i2047 = load i32, ptr %i2043, align 8, !tbaa !141
  br label %bb2054

bb2048.loopexit:                                  ; preds = %bb2074
  br label %bb2048

bb2048:                                           ; preds = %bb2048.loopexit, %bb2038
  %i2049 = phi i32 [ %i2040, %bb2038 ], [ %i2064, %bb2048.loopexit ]
  %i2050 = phi i32 [ %i2036, %bb2038 ], [ %i2065, %bb2048.loopexit ]
  %i2051 = add nsw i32 %i2050, -5
  %i2052 = lshr i32 %i2049, %i2051
  %i2053 = and i32 %i2052, 31
  store i32 %i2051, ptr %i2035, align 4, !tbaa !154
  br label %bb2076

bb2054:                                           ; preds = %bb2074.bb2054_crit_edge, %bb2041
  %i2055 = phi i32 [ %i2047, %bb2041 ], [ %i2067, %bb2074.bb2054_crit_edge ]
  %i2056 = phi i32 [ %i2036, %bb2041 ], [ %i2065, %bb2074.bb2054_crit_edge ]
  %i2057 = icmp eq i32 %i2055, 0
  br i1 %i2057, label %bb4390.loopexit15, label %bb2058

bb2058:                                           ; preds = %bb2054
  %i2059 = load i32, ptr %i2044, align 8, !tbaa !155
  %i2060 = shl i32 %i2059, 8
  %i2061 = load ptr, ptr %i2042, align 8, !tbaa !147
  %i2062 = load i8, ptr %i2061, align 1, !tbaa !21
  %i2063 = zext i8 %i2062 to i32
  %i2064 = or disjoint i32 %i2060, %i2063
  store i32 %i2064, ptr %i2044, align 8, !tbaa !155
  %i2065 = add nsw i32 %i2056, 8
  store i32 %i2065, ptr %i2035, align 4, !tbaa !154
  %i2066 = getelementptr inbounds i8, ptr %i2061, i64 1
  store ptr %i2066, ptr %i2042, align 8, !tbaa !147
  %i2067 = add i32 %i2055, -1
  store i32 %i2067, ptr %i2043, align 8, !tbaa !141
  %i2068 = load i32, ptr %i2045, align 4, !tbaa !131
  %i2069 = add i32 %i2068, 1
  store i32 %i2069, ptr %i2045, align 4, !tbaa !131
  %i2070 = icmp eq i32 %i2069, 0
  br i1 %i2070, label %bb2071, label %bb2058.bb2074_crit_edge

bb2058.bb2074_crit_edge:                          ; preds = %bb2058
  br label %bb2074

bb2071:                                           ; preds = %bb2058
  %i2072 = load i32, ptr %i2046, align 8, !tbaa !132
  %i2073 = add i32 %i2072, 1
  store i32 %i2073, ptr %i2046, align 8, !tbaa !132
  br label %bb2074

bb2074:                                           ; preds = %bb2058.bb2074_crit_edge, %bb2071
  %i2075 = icmp sgt i32 %i2056, -4
  br i1 %i2075, label %bb2048.loopexit, label %bb2074.bb2054_crit_edge

bb2074.bb2054_crit_edge:                          ; preds = %bb2074
  br label %bb2054

bb2076:                                           ; preds = %bb2265, %bb2048
  %i2077 = phi i32 [ %i2130, %bb2265 ], [ %i2011, %bb2048 ]
  %i2078 = phi i32 [ %i2131, %bb2265 ], [ %i2012, %bb2048 ]
  %i2079 = phi i32 [ %i2132, %bb2265 ], [ %i2013, %bb2048 ]
  %i2080 = phi i32 [ %i2133, %bb2265 ], [ %i2014, %bb2048 ]
  %i2081 = phi i32 [ %i2134, %bb2265 ], [ %i2015, %bb2048 ]
  %i2082 = phi i32 [ %i2135, %bb2265 ], [ %i2016, %bb2048 ]
  %i2083 = phi i32 [ %i2136, %bb2265 ], [ %i2017, %bb2048 ]
  %i2084 = phi i32 [ %i2137, %bb2265 ], [ %i2018, %bb2048 ]
  %i2085 = phi i32 [ %i2138, %bb2265 ], [ %i2019, %bb2048 ]
  %i2086 = phi i32 [ %i2139, %bb2265 ], [ %i2020, %bb2048 ]
  %i2087 = phi i32 [ %i2140, %bb2265 ], [ %i2021, %bb2048 ]
  %i2088 = phi i32 [ %i2141, %bb2265 ], [ %i2022, %bb2048 ]
  %i2089 = phi i32 [ %i2142, %bb2265 ], [ %i2023, %bb2048 ]
  %i2090 = phi i32 [ %i2143, %bb2265 ], [ %i2024, %bb2048 ]
  %i2091 = phi ptr [ %i2144, %bb2265 ], [ %i2025, %bb2048 ]
  %i2092 = phi ptr [ %i2145, %bb2265 ], [ %i2026, %bb2048 ]
  %i2093 = phi ptr [ %i2146, %bb2265 ], [ %i2027, %bb2048 ]
  %i2094 = phi i32 [ %i2147, %bb2265 ], [ %i2053, %bb2048 ]
  %i2095 = phi i32 [ %i2148, %bb2265 ], [ %i2029, %bb2048 ]
  %i2096 = phi i32 [ %i2149, %bb2265 ], [ %i2030, %bb2048 ]
  %i2097 = phi i32 [ %i2150, %bb2265 ], [ %i2031, %bb2048 ]
  %i2098 = phi i32 [ %i2151, %bb2265 ], [ %i2032, %bb2048 ]
  %i2099 = phi i32 [ %i2152, %bb2265 ], [ %i2033, %bb2048 ]
  %i2100 = phi i32 [ %i2270, %bb2265 ], [ 0, %bb2048 ]
  %i2101 = icmp slt i32 %i2100, %i2097
  br i1 %i2101, label %bb2076.bb2102_crit_edge, label %bb2271

bb2076.bb2102_crit_edge:                          ; preds = %bb2076
  br label %bb2102

bb2102:                                           ; preds = %bb2076.bb2102_crit_edge, %bb2234
  %i2103 = phi i32 [ %i2197, %bb2234 ], [ %i2077, %bb2076.bb2102_crit_edge ]
  %i2104 = phi i32 [ %i2198, %bb2234 ], [ %i2078, %bb2076.bb2102_crit_edge ]
  %i2105 = phi i32 [ %i2199, %bb2234 ], [ %i2079, %bb2076.bb2102_crit_edge ]
  %i2106 = phi i32 [ %i2200, %bb2234 ], [ %i2080, %bb2076.bb2102_crit_edge ]
  %i2107 = phi i32 [ %i2201, %bb2234 ], [ %i2081, %bb2076.bb2102_crit_edge ]
  %i2108 = phi i32 [ %i2202, %bb2234 ], [ %i2082, %bb2076.bb2102_crit_edge ]
  %i2109 = phi i32 [ %i2203, %bb2234 ], [ %i2083, %bb2076.bb2102_crit_edge ]
  %i2110 = phi i32 [ %i2204, %bb2234 ], [ %i2084, %bb2076.bb2102_crit_edge ]
  %i2111 = phi i32 [ %i2205, %bb2234 ], [ %i2085, %bb2076.bb2102_crit_edge ]
  %i2112 = phi i32 [ %i2206, %bb2234 ], [ %i2086, %bb2076.bb2102_crit_edge ]
  %i2113 = phi i32 [ %i2207, %bb2234 ], [ %i2087, %bb2076.bb2102_crit_edge ]
  %i2114 = phi i32 [ %i2208, %bb2234 ], [ %i2088, %bb2076.bb2102_crit_edge ]
  %i2115 = phi i32 [ %i2209, %bb2234 ], [ %i2089, %bb2076.bb2102_crit_edge ]
  %i2116 = phi i32 [ %i2210, %bb2234 ], [ %i2090, %bb2076.bb2102_crit_edge ]
  %i2117 = phi ptr [ %i2211, %bb2234 ], [ %i2091, %bb2076.bb2102_crit_edge ]
  %i2118 = phi ptr [ %i2212, %bb2234 ], [ %i2092, %bb2076.bb2102_crit_edge ]
  %i2119 = phi ptr [ %i2213, %bb2234 ], [ %i2093, %bb2076.bb2102_crit_edge ]
  %i2120 = phi i32 [ %i2242, %bb2234 ], [ %i2094, %bb2076.bb2102_crit_edge ]
  %i2121 = phi i32 [ %i2216, %bb2234 ], [ %i2095, %bb2076.bb2102_crit_edge ]
  %i2122 = phi i32 [ %i2217, %bb2234 ], [ %i2096, %bb2076.bb2102_crit_edge ]
  %i2123 = phi i32 [ %i2218, %bb2234 ], [ %i2097, %bb2076.bb2102_crit_edge ]
  %i2124 = phi i32 [ %i2219, %bb2234 ], [ %i2098, %bb2076.bb2102_crit_edge ]
  %i2125 = phi i32 [ %i2220, %bb2234 ], [ %i2099, %bb2076.bb2102_crit_edge ]
  %i2126 = phi i32 [ %i2221, %bb2234 ], [ %i2100, %bb2076.bb2102_crit_edge ]
  %i2127 = add i32 %i2120, -21
  %i2128 = icmp ult i32 %i2127, -20
  br i1 %i2128, label %bb2102.bb4390_crit_edge, label %bb2102.bb2129_crit_edge

bb2102.bb2129_crit_edge:                          ; preds = %bb2102
  br label %bb2129

bb2102.bb4390_crit_edge:                          ; preds = %bb2102
  br label %bb4390

bb2129:                                           ; preds = %bb2102.bb2129_crit_edge, %bb10.bb2129_crit_edge
  %i2130 = phi i32 [ %i2103, %bb2102.bb2129_crit_edge ], [ %i23, %bb10.bb2129_crit_edge ]
  %i2131 = phi i32 [ %i2104, %bb2102.bb2129_crit_edge ], [ %i25, %bb10.bb2129_crit_edge ]
  %i2132 = phi i32 [ %i2105, %bb2102.bb2129_crit_edge ], [ %i27, %bb10.bb2129_crit_edge ]
  %i2133 = phi i32 [ %i2106, %bb2102.bb2129_crit_edge ], [ %i29, %bb10.bb2129_crit_edge ]
  %i2134 = phi i32 [ %i2107, %bb2102.bb2129_crit_edge ], [ %i31, %bb10.bb2129_crit_edge ]
  %i2135 = phi i32 [ %i2108, %bb2102.bb2129_crit_edge ], [ %i33, %bb10.bb2129_crit_edge ]
  %i2136 = phi i32 [ %i2109, %bb2102.bb2129_crit_edge ], [ %i35, %bb10.bb2129_crit_edge ]
  %i2137 = phi i32 [ %i2110, %bb2102.bb2129_crit_edge ], [ %i37, %bb10.bb2129_crit_edge ]
  %i2138 = phi i32 [ %i2111, %bb2102.bb2129_crit_edge ], [ %i41, %bb10.bb2129_crit_edge ]
  %i2139 = phi i32 [ %i2112, %bb2102.bb2129_crit_edge ], [ %i43, %bb10.bb2129_crit_edge ]
  %i2140 = phi i32 [ %i2113, %bb2102.bb2129_crit_edge ], [ %i45, %bb10.bb2129_crit_edge ]
  %i2141 = phi i32 [ %i2114, %bb2102.bb2129_crit_edge ], [ %i47, %bb10.bb2129_crit_edge ]
  %i2142 = phi i32 [ %i2115, %bb2102.bb2129_crit_edge ], [ %i49, %bb10.bb2129_crit_edge ]
  %i2143 = phi i32 [ %i2116, %bb2102.bb2129_crit_edge ], [ %i51, %bb10.bb2129_crit_edge ]
  %i2144 = phi ptr [ %i2117, %bb2102.bb2129_crit_edge ], [ %i53, %bb10.bb2129_crit_edge ]
  %i2145 = phi ptr [ %i2118, %bb2102.bb2129_crit_edge ], [ %i55, %bb10.bb2129_crit_edge ]
  %i2146 = phi ptr [ %i2119, %bb2102.bb2129_crit_edge ], [ %i57, %bb10.bb2129_crit_edge ]
  %i2147 = phi i32 [ %i2120, %bb2102.bb2129_crit_edge ], [ %i39, %bb10.bb2129_crit_edge ]
  %i2148 = phi i32 [ %i2121, %bb2102.bb2129_crit_edge ], [ %i21, %bb10.bb2129_crit_edge ]
  %i2149 = phi i32 [ %i2122, %bb2102.bb2129_crit_edge ], [ %i19, %bb10.bb2129_crit_edge ]
  %i2150 = phi i32 [ %i2123, %bb2102.bb2129_crit_edge ], [ %i17, %bb10.bb2129_crit_edge ]
  %i2151 = phi i32 [ %i2124, %bb2102.bb2129_crit_edge ], [ %i15, %bb10.bb2129_crit_edge ]
  %i2152 = phi i32 [ %i2125, %bb2102.bb2129_crit_edge ], [ %i13, %bb10.bb2129_crit_edge ]
  %i2153 = phi i32 [ %i2126, %bb2102.bb2129_crit_edge ], [ %i11, %bb10.bb2129_crit_edge ]
  store i32 34, ptr %i2, align 8, !tbaa !153
  %i2154 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i2155 = load i32, ptr %i2154, align 4, !tbaa !154
  %i2156 = icmp sgt i32 %i2155, 0
  br i1 %i2156, label %bb2157, label %bb2160

bb2157:                                           ; preds = %bb2129
  %i2158 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i2159 = load i32, ptr %i2158, align 8, !tbaa !155
  br label %bb2167

bb2160:                                           ; preds = %bb2129
  %i2161 = load ptr, ptr %arg, align 8, !tbaa !151
  %i2162 = getelementptr inbounds %struct.bz_stream, ptr %i2161, i64 0, i32 1
  %i2163 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i2164 = getelementptr inbounds %struct.bz_stream, ptr %i2161, i64 0, i32 2
  %i2165 = getelementptr inbounds %struct.bz_stream, ptr %i2161, i64 0, i32 3
  %i2166 = load i32, ptr %i2162, align 8, !tbaa !141
  br label %bb2174

bb2167.loopexit:                                  ; preds = %bb2194
  br label %bb2167

bb2167:                                           ; preds = %bb2167.loopexit, %bb2157
  %i2168 = phi i32 [ %i2159, %bb2157 ], [ %i2184, %bb2167.loopexit ]
  %i2169 = phi i32 [ %i2155, %bb2157 ], [ %i2185, %bb2167.loopexit ]
  %i2170 = add nsw i32 %i2169, -1
  store i32 %i2170, ptr %i2154, align 4, !tbaa !154
  %i2171 = shl nuw i32 1, %i2170
  %i2172 = and i32 %i2168, %i2171
  %i2173 = icmp eq i32 %i2172, 0
  br i1 %i2173, label %bb2265, label %bb2167.bb2196_crit_edge

bb2167.bb2196_crit_edge:                          ; preds = %bb2167
  br label %bb2196

bb2174:                                           ; preds = %bb2194.bb2174_crit_edge, %bb2160
  %i2175 = phi i32 [ %i2166, %bb2160 ], [ %i2187, %bb2194.bb2174_crit_edge ]
  %i2176 = phi i32 [ %i2155, %bb2160 ], [ %i2185, %bb2194.bb2174_crit_edge ]
  %i2177 = icmp eq i32 %i2175, 0
  br i1 %i2177, label %bb4390.loopexit14, label %bb2178

bb2178:                                           ; preds = %bb2174
  %i2179 = load i32, ptr %i2163, align 8, !tbaa !155
  %i2180 = shl i32 %i2179, 8
  %i2181 = load ptr, ptr %i2161, align 8, !tbaa !147
  %i2182 = load i8, ptr %i2181, align 1, !tbaa !21
  %i2183 = zext i8 %i2182 to i32
  %i2184 = or disjoint i32 %i2180, %i2183
  store i32 %i2184, ptr %i2163, align 8, !tbaa !155
  %i2185 = add nsw i32 %i2176, 8
  store i32 %i2185, ptr %i2154, align 4, !tbaa !154
  %i2186 = getelementptr inbounds i8, ptr %i2181, i64 1
  store ptr %i2186, ptr %i2161, align 8, !tbaa !147
  %i2187 = add i32 %i2175, -1
  store i32 %i2187, ptr %i2162, align 8, !tbaa !141
  %i2188 = load i32, ptr %i2164, align 4, !tbaa !131
  %i2189 = add i32 %i2188, 1
  store i32 %i2189, ptr %i2164, align 4, !tbaa !131
  %i2190 = icmp eq i32 %i2189, 0
  br i1 %i2190, label %bb2191, label %bb2178.bb2194_crit_edge

bb2178.bb2194_crit_edge:                          ; preds = %bb2178
  br label %bb2194

bb2191:                                           ; preds = %bb2178
  %i2192 = load i32, ptr %i2165, align 8, !tbaa !132
  %i2193 = add i32 %i2192, 1
  store i32 %i2193, ptr %i2165, align 8, !tbaa !132
  br label %bb2194

bb2194:                                           ; preds = %bb2178.bb2194_crit_edge, %bb2191
  %i2195 = icmp sgt i32 %i2176, -8
  br i1 %i2195, label %bb2167.loopexit, label %bb2194.bb2174_crit_edge

bb2194.bb2174_crit_edge:                          ; preds = %bb2194
  br label %bb2174

bb2196:                                           ; preds = %bb2167.bb2196_crit_edge, %bb85
  %i2197 = phi i32 [ %i23, %bb85 ], [ %i2130, %bb2167.bb2196_crit_edge ]
  %i2198 = phi i32 [ %i25, %bb85 ], [ %i2131, %bb2167.bb2196_crit_edge ]
  %i2199 = phi i32 [ %i27, %bb85 ], [ %i2132, %bb2167.bb2196_crit_edge ]
  %i2200 = phi i32 [ %i29, %bb85 ], [ %i2133, %bb2167.bb2196_crit_edge ]
  %i2201 = phi i32 [ %i31, %bb85 ], [ %i2134, %bb2167.bb2196_crit_edge ]
  %i2202 = phi i32 [ %i33, %bb85 ], [ %i2135, %bb2167.bb2196_crit_edge ]
  %i2203 = phi i32 [ %i35, %bb85 ], [ %i2136, %bb2167.bb2196_crit_edge ]
  %i2204 = phi i32 [ %i37, %bb85 ], [ %i2137, %bb2167.bb2196_crit_edge ]
  %i2205 = phi i32 [ %i41, %bb85 ], [ %i2138, %bb2167.bb2196_crit_edge ]
  %i2206 = phi i32 [ %i43, %bb85 ], [ %i2139, %bb2167.bb2196_crit_edge ]
  %i2207 = phi i32 [ %i45, %bb85 ], [ %i2140, %bb2167.bb2196_crit_edge ]
  %i2208 = phi i32 [ %i47, %bb85 ], [ %i2141, %bb2167.bb2196_crit_edge ]
  %i2209 = phi i32 [ %i49, %bb85 ], [ %i2142, %bb2167.bb2196_crit_edge ]
  %i2210 = phi i32 [ %i51, %bb85 ], [ %i2143, %bb2167.bb2196_crit_edge ]
  %i2211 = phi ptr [ %i53, %bb85 ], [ %i2144, %bb2167.bb2196_crit_edge ]
  %i2212 = phi ptr [ %i55, %bb85 ], [ %i2145, %bb2167.bb2196_crit_edge ]
  %i2213 = phi ptr [ %i57, %bb85 ], [ %i2146, %bb2167.bb2196_crit_edge ]
  %i2214 = phi i32 [ %i87, %bb85 ], [ %i2170, %bb2167.bb2196_crit_edge ]
  %i2215 = phi i32 [ %i39, %bb85 ], [ %i2147, %bb2167.bb2196_crit_edge ]
  %i2216 = phi i32 [ %i21, %bb85 ], [ %i2148, %bb2167.bb2196_crit_edge ]
  %i2217 = phi i32 [ %i19, %bb85 ], [ %i2149, %bb2167.bb2196_crit_edge ]
  %i2218 = phi i32 [ %i17, %bb85 ], [ %i2150, %bb2167.bb2196_crit_edge ]
  %i2219 = phi i32 [ %i15, %bb85 ], [ %i2151, %bb2167.bb2196_crit_edge ]
  %i2220 = phi i32 [ %i13, %bb85 ], [ %i2152, %bb2167.bb2196_crit_edge ]
  %i2221 = phi i32 [ %i11, %bb85 ], [ %i2153, %bb2167.bb2196_crit_edge ]
  store i32 35, ptr %i2, align 8, !tbaa !153
  %i2222 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i2223 = icmp sgt i32 %i2214, 0
  br i1 %i2223, label %bb2224, label %bb2227

bb2224:                                           ; preds = %bb2196
  %i2225 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i2226 = load i32, ptr %i2225, align 8, !tbaa !155
  br label %bb2234

bb2227:                                           ; preds = %bb2196
  %i2228 = load ptr, ptr %arg, align 8, !tbaa !151
  %i2229 = getelementptr inbounds %struct.bz_stream, ptr %i2228, i64 0, i32 1
  %i2230 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i2231 = getelementptr inbounds %struct.bz_stream, ptr %i2228, i64 0, i32 2
  %i2232 = getelementptr inbounds %struct.bz_stream, ptr %i2228, i64 0, i32 3
  %i2233 = load i32, ptr %i2229, align 8, !tbaa !141
  br label %bb2243

bb2234.loopexit:                                  ; preds = %bb2263
  br label %bb2234

bb2234:                                           ; preds = %bb2234.loopexit, %bb2224
  %i2235 = phi i32 [ %i2226, %bb2224 ], [ %i2253, %bb2234.loopexit ]
  %i2236 = phi i32 [ %i2214, %bb2224 ], [ %i2254, %bb2234.loopexit ]
  %i2237 = add nsw i32 %i2236, -1
  store i32 %i2237, ptr %i2222, align 4, !tbaa !154
  %i2238 = shl nuw i32 1, %i2237
  %i2239 = and i32 %i2235, %i2238
  %i2240 = icmp eq i32 %i2239, 0
  %i2241 = select i1 %i2240, i32 1, i32 -1
  %i2242 = add nsw i32 %i2241, %i2215
  br label %bb2102

bb2243:                                           ; preds = %bb2263.bb2243_crit_edge, %bb2227
  %i2244 = phi i32 [ %i2233, %bb2227 ], [ %i2256, %bb2263.bb2243_crit_edge ]
  %i2245 = phi i32 [ %i2214, %bb2227 ], [ %i2254, %bb2263.bb2243_crit_edge ]
  %i2246 = icmp eq i32 %i2244, 0
  br i1 %i2246, label %bb4390.loopexit13, label %bb2247

bb2247:                                           ; preds = %bb2243
  %i2248 = load i32, ptr %i2230, align 8, !tbaa !155
  %i2249 = shl i32 %i2248, 8
  %i2250 = load ptr, ptr %i2228, align 8, !tbaa !147
  %i2251 = load i8, ptr %i2250, align 1, !tbaa !21
  %i2252 = zext i8 %i2251 to i32
  %i2253 = or disjoint i32 %i2249, %i2252
  store i32 %i2253, ptr %i2230, align 8, !tbaa !155
  %i2254 = add nsw i32 %i2245, 8
  store i32 %i2254, ptr %i2222, align 4, !tbaa !154
  %i2255 = getelementptr inbounds i8, ptr %i2250, i64 1
  store ptr %i2255, ptr %i2228, align 8, !tbaa !147
  %i2256 = add i32 %i2244, -1
  store i32 %i2256, ptr %i2229, align 8, !tbaa !141
  %i2257 = load i32, ptr %i2231, align 4, !tbaa !131
  %i2258 = add i32 %i2257, 1
  store i32 %i2258, ptr %i2231, align 4, !tbaa !131
  %i2259 = icmp eq i32 %i2258, 0
  br i1 %i2259, label %bb2260, label %bb2247.bb2263_crit_edge

bb2247.bb2263_crit_edge:                          ; preds = %bb2247
  br label %bb2263

bb2260:                                           ; preds = %bb2247
  %i2261 = load i32, ptr %i2232, align 8, !tbaa !132
  %i2262 = add i32 %i2261, 1
  store i32 %i2262, ptr %i2232, align 8, !tbaa !132
  br label %bb2263

bb2263:                                           ; preds = %bb2247.bb2263_crit_edge, %bb2260
  %i2264 = icmp sgt i32 %i2245, -8
  br i1 %i2264, label %bb2234.loopexit, label %bb2263.bb2243_crit_edge

bb2263.bb2243_crit_edge:                          ; preds = %bb2263
  br label %bb2243

bb2265:                                           ; preds = %bb2167
  %i2266 = trunc i32 %i2147 to i8
  %i2267 = sext i32 %i2151 to i64
  %i2268 = sext i32 %i2153 to i64
  %i2269 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 35, i64 %i2267, i64 %i2268
  store i8 %i2266, ptr %i2269, align 1, !tbaa !21
  %i2270 = add nsw i32 %i2153, 1
  br label %bb2076, !llvm.loop !266

bb2271:                                           ; preds = %bb2076
  %i2272 = add nsw i32 %i2098, 1
  br label %bb1974, !llvm.loop !267

bb2273:                                           ; preds = %bb2307.bb2273_crit_edge, %bb2002
  %i2274 = phi i64 [ 0, %bb2002 ], [ %i2315, %bb2307.bb2273_crit_edge ]
  br i1 %i2003, label %bb2275, label %bb2273.bb2307_crit_edge

bb2273.bb2307_crit_edge:                          ; preds = %bb2273
  br label %bb2307

bb2275:                                           ; preds = %bb2273
  br i1 %i2007, label %bb2275.bb2295_crit_edge, label %bb2276.preheader

bb2275.bb2295_crit_edge:                          ; preds = %bb2275
  br label %bb2295

bb2276.preheader:                                 ; preds = %bb2275
  br label %bb2276

bb2276:                                           ; preds = %bb2276.bb2276_crit_edge, %bb2276.preheader
  %i2277 = phi i64 [ %i2292, %bb2276.bb2276_crit_edge ], [ 0, %bb2276.preheader ]
  %i2278 = phi i32 [ %i2291, %bb2276.bb2276_crit_edge ], [ 32, %bb2276.preheader ]
  %i2279 = phi i32 [ %i2290, %bb2276.bb2276_crit_edge ], [ 0, %bb2276.preheader ]
  %i2280 = phi i64 [ %i2293, %bb2276.bb2276_crit_edge ], [ 0, %bb2276.preheader ]
  %i2281 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 35, i64 %i2274, i64 %i2277
  %i2282 = load i8, ptr %i2281, align 1, !tbaa !21
  %i2283 = zext i8 %i2282 to i32
  %i2284 = tail call i32 @llvm.smax.i32(i32 %i2279, i32 %i2283)
  %i2285 = tail call i32 @llvm.smin.i32(i32 %i2278, i32 %i2283)
  %i2286 = or disjoint i64 %i2277, 1
  %i2287 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 35, i64 %i2274, i64 %i2286
  %i2288 = load i8, ptr %i2287, align 1, !tbaa !21
  %i2289 = zext i8 %i2288 to i32
  %i2290 = tail call i32 @llvm.smax.i32(i32 %i2284, i32 %i2289)
  %i2291 = tail call i32 @llvm.smin.i32(i32 %i2285, i32 %i2289)
  %i2292 = add nuw nsw i64 %i2277, 2
  %i2293 = add i64 %i2280, 2
  %i2294 = icmp eq i64 %i2293, %i2008
  br i1 %i2294, label %bb2295.loopexit, label %bb2276.bb2276_crit_edge, !llvm.loop !268

bb2276.bb2276_crit_edge:                          ; preds = %bb2276
  br label %bb2276

bb2295.loopexit:                                  ; preds = %bb2276
  br label %bb2295

bb2295:                                           ; preds = %bb2275.bb2295_crit_edge, %bb2295.loopexit
  %i2296 = phi i32 [ undef, %bb2275.bb2295_crit_edge ], [ %i2290, %bb2295.loopexit ]
  %i2297 = phi i32 [ undef, %bb2275.bb2295_crit_edge ], [ %i2291, %bb2295.loopexit ]
  %i2298 = phi i64 [ 0, %bb2275.bb2295_crit_edge ], [ %i2292, %bb2295.loopexit ]
  %i2299 = phi i32 [ 32, %bb2275.bb2295_crit_edge ], [ %i2291, %bb2295.loopexit ]
  %i2300 = phi i32 [ 0, %bb2275.bb2295_crit_edge ], [ %i2290, %bb2295.loopexit ]
  br i1 %i2009, label %bb2295.bb2307_crit_edge, label %bb2301

bb2295.bb2307_crit_edge:                          ; preds = %bb2295
  br label %bb2307

bb2301:                                           ; preds = %bb2295
  %i2302 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 35, i64 %i2274, i64 %i2298
  %i2303 = load i8, ptr %i2302, align 1, !tbaa !21
  %i2304 = zext i8 %i2303 to i32
  %i2305 = tail call i32 @llvm.smax.i32(i32 %i2300, i32 %i2304)
  %i2306 = tail call i32 @llvm.smin.i32(i32 %i2299, i32 %i2304)
  br label %bb2307

bb2307:                                           ; preds = %bb2295.bb2307_crit_edge, %bb2273.bb2307_crit_edge, %bb2301
  %i2308 = phi i32 [ 0, %bb2273.bb2307_crit_edge ], [ %i2296, %bb2295.bb2307_crit_edge ], [ %i2305, %bb2301 ]
  %i2309 = phi i32 [ 32, %bb2273.bb2307_crit_edge ], [ %i2297, %bb2295.bb2307_crit_edge ], [ %i2306, %bb2301 ]
  %i2310 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 36, i64 %i2274
  %i2311 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 37, i64 %i2274
  %i2312 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 38, i64 %i2274
  %i2313 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 35, i64 %i2274
  tail call void @BZ2_hbCreateDecodeTables(ptr noundef nonnull %i2310, ptr noundef nonnull %i2311, ptr noundef nonnull %i2312, ptr noundef nonnull %i2313, i32 noundef %i2309, i32 noundef %i2308, i32 noundef %i1995) #31
  %i2314 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 39, i64 %i2274
  store i32 %i2309, ptr %i2314, align 4, !tbaa !19
  %i2315 = add nuw nsw i64 %i2274, 1
  %i2316 = icmp eq i64 %i2315, %i2004
  br i1 %i2316, label %bb2317.loopexit, label %bb2307.bb2273_crit_edge, !llvm.loop !269

bb2307.bb2273_crit_edge:                          ; preds = %bb2307
  br label %bb2273

bb2317.loopexit:                                  ; preds = %bb2307
  br label %bb2317

bb2317:                                           ; preds = %bb2000.bb2317_crit_edge, %bb2317.loopexit
  %i2318 = phi i32 [ 0, %bb2000.bb2317_crit_edge ], [ %i1994, %bb2317.loopexit ]
  %i2319 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 27
  %i2320 = load i32, ptr %i2319, align 8, !tbaa !260
  %i2321 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 9
  %i2322 = load i32, ptr %i2321, align 8, !tbaa !255
  %i2323 = getelementptr i8, ptr %arg, i64 68
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1024) %i2323, i8 0, i64 1024, i1 false), !tbaa !19
  %i2324 = mul nsw i32 %i2322, 100000
  br label %bb2325

bb2325:                                           ; preds = %bb2325.bb2325_crit_edge, %bb2317
  %i2326 = phi i64 [ 15, %bb2317 ], [ %i2394, %bb2325.bb2325_crit_edge ]
  %i2327 = phi i64 [ 4095, %bb2317 ], [ %i2392, %bb2325.bb2325_crit_edge ]
  %i2328 = shl nsw i64 %i2326, 4
  %i2329 = trunc i64 %i2328 to i8
  %i2330 = or disjoint i8 %i2329, 15
  %i2331 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2327
  store i8 %i2330, ptr %i2331, align 1, !tbaa !21
  %i2332 = add nsw i64 %i2327, -1
  %i2333 = trunc i64 %i2328 to i8
  %i2334 = or disjoint i8 %i2333, 14
  %i2335 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2332
  store i8 %i2334, ptr %i2335, align 1, !tbaa !21
  %i2336 = add nsw i64 %i2327, -2
  %i2337 = trunc i64 %i2328 to i8
  %i2338 = or disjoint i8 %i2337, 13
  %i2339 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2336
  store i8 %i2338, ptr %i2339, align 1, !tbaa !21
  %i2340 = add nsw i64 %i2327, -3
  %i2341 = trunc i64 %i2328 to i8
  %i2342 = or disjoint i8 %i2341, 12
  %i2343 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2340
  store i8 %i2342, ptr %i2343, align 1, !tbaa !21
  %i2344 = add nsw i64 %i2327, -4
  %i2345 = trunc i64 %i2328 to i8
  %i2346 = or disjoint i8 %i2345, 11
  %i2347 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2344
  store i8 %i2346, ptr %i2347, align 1, !tbaa !21
  %i2348 = add nsw i64 %i2327, -5
  %i2349 = trunc i64 %i2328 to i8
  %i2350 = or disjoint i8 %i2349, 10
  %i2351 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2348
  store i8 %i2350, ptr %i2351, align 1, !tbaa !21
  %i2352 = add nsw i64 %i2327, -6
  %i2353 = trunc i64 %i2328 to i8
  %i2354 = or disjoint i8 %i2353, 9
  %i2355 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2352
  store i8 %i2354, ptr %i2355, align 1, !tbaa !21
  %i2356 = add nsw i64 %i2327, -7
  %i2357 = trunc i64 %i2328 to i8
  %i2358 = or disjoint i8 %i2357, 8
  %i2359 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2356
  store i8 %i2358, ptr %i2359, align 1, !tbaa !21
  %i2360 = add nsw i64 %i2327, -8
  %i2361 = trunc i64 %i2328 to i8
  %i2362 = or disjoint i8 %i2361, 7
  %i2363 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2360
  store i8 %i2362, ptr %i2363, align 1, !tbaa !21
  %i2364 = add nsw i64 %i2327, -9
  %i2365 = trunc i64 %i2328 to i8
  %i2366 = or disjoint i8 %i2365, 6
  %i2367 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2364
  store i8 %i2366, ptr %i2367, align 1, !tbaa !21
  %i2368 = add nsw i64 %i2327, -10
  %i2369 = trunc i64 %i2328 to i8
  %i2370 = or disjoint i8 %i2369, 5
  %i2371 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2368
  store i8 %i2370, ptr %i2371, align 1, !tbaa !21
  %i2372 = add nsw i64 %i2327, -11
  %i2373 = trunc i64 %i2328 to i8
  %i2374 = or disjoint i8 %i2373, 4
  %i2375 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2372
  store i8 %i2374, ptr %i2375, align 1, !tbaa !21
  %i2376 = add nsw i64 %i2327, -12
  %i2377 = trunc i64 %i2328 to i8
  %i2378 = or disjoint i8 %i2377, 3
  %i2379 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2376
  store i8 %i2378, ptr %i2379, align 1, !tbaa !21
  %i2380 = add nsw i64 %i2327, -13
  %i2381 = trunc i64 %i2328 to i8
  %i2382 = or disjoint i8 %i2381, 2
  %i2383 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2380
  store i8 %i2382, ptr %i2383, align 1, !tbaa !21
  %i2384 = add nsw i64 %i2327, -14
  %i2385 = trunc i64 %i2328 to i8
  %i2386 = or disjoint i8 %i2385, 1
  %i2387 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2384
  store i8 %i2386, ptr %i2387, align 1, !tbaa !21
  %i2388 = add nsw i64 %i2327, -15
  %i2389 = trunc i64 %i2328 to i8
  %i2390 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2388
  store i8 %i2389, ptr %i2390, align 1, !tbaa !21
  %i2391 = trunc i64 %i2388 to i32
  %i2392 = add nsw i64 %i2327, -16
  %i2393 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 32, i64 %i2326
  store i32 %i2391, ptr %i2393, align 4, !tbaa !19
  %i2394 = add nsw i64 %i2326, -1
  %i2395 = icmp eq i64 %i2326, 0
  br i1 %i2395, label %bb2396, label %bb2325.bb2325_crit_edge, !llvm.loop !270

bb2325.bb2325_crit_edge:                          ; preds = %bb2325
  br label %bb2325

bb2396:                                           ; preds = %bb2325
  %i2397 = add nsw i32 %i2320, 1
  %i2398 = icmp slt i32 %i1993, 1
  br i1 %i2398, label %bb2396.bb4390_crit_edge, label %bb2399

bb2396.bb4390_crit_edge:                          ; preds = %bb2396
  br label %bb4390

bb2399:                                           ; preds = %bb2396
  %i2400 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 33
  %i2401 = load i8, ptr %i2400, align 1, !tbaa !21
  %i2402 = zext i8 %i2401 to i64
  %i2403 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 37, i64 %i2402
  %i2404 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 38, i64 %i2402
  %i2405 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 36, i64 %i2402
  %i2406 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 39, i64 %i2402
  %i2407 = load i32, ptr %i2406, align 4, !tbaa !19
  %i2408 = zext i8 %i2401 to i32
  br label %bb2409

bb2409:                                           ; preds = %bb10.bb2409_crit_edge, %bb2399
  %i2410 = phi i32 [ %i29, %bb10.bb2409_crit_edge ], [ %i1978, %bb2399 ]
  %i2411 = phi i32 [ %i35, %bb10.bb2409_crit_edge ], [ %i1981, %bb2399 ]
  %i2412 = phi i32 [ %i37, %bb10.bb2409_crit_edge ], [ %i1982, %bb2399 ]
  %i2413 = phi i32 [ %i41, %bb10.bb2409_crit_edge ], [ %i1983, %bb2399 ]
  %i2414 = phi i32 [ %i45, %bb10.bb2409_crit_edge ], [ %i1985, %bb2399 ]
  %i2415 = phi i32 [ %i47, %bb10.bb2409_crit_edge ], [ %i1986, %bb2399 ]
  %i2416 = phi ptr [ %i57, %bb10.bb2409_crit_edge ], [ %i2404, %bb2399 ]
  %i2417 = phi ptr [ %i55, %bb10.bb2409_crit_edge ], [ %i2403, %bb2399 ]
  %i2418 = phi ptr [ %i53, %bb10.bb2409_crit_edge ], [ %i2405, %bb2399 ]
  %i2419 = phi i32 [ %i51, %bb10.bb2409_crit_edge ], [ %i2407, %bb2399 ]
  %i2420 = phi i32 [ %i49, %bb10.bb2409_crit_edge ], [ %i2408, %bb2399 ]
  %i2421 = phi i32 [ %i43, %bb10.bb2409_crit_edge ], [ %i2407, %bb2399 ]
  %i2422 = phi i32 [ %i39, %bb10.bb2409_crit_edge ], [ %i1992, %bb2399 ]
  %i2423 = phi i32 [ %i33, %bb10.bb2409_crit_edge ], [ 0, %bb2399 ]
  %i2424 = phi i32 [ %i31, %bb10.bb2409_crit_edge ], [ %i2324, %bb2399 ]
  %i2425 = phi i32 [ %i27, %bb10.bb2409_crit_edge ], [ 49, %bb2399 ]
  %i2426 = phi i32 [ %i25, %bb10.bb2409_crit_edge ], [ 0, %bb2399 ]
  %i2427 = phi i32 [ %i23, %bb10.bb2409_crit_edge ], [ %i2397, %bb2399 ]
  %i2428 = phi i32 [ %i21, %bb10.bb2409_crit_edge ], [ %i1993, %bb2399 ]
  %i2429 = phi i32 [ %i19, %bb10.bb2409_crit_edge ], [ %i1994, %bb2399 ]
  %i2430 = phi i32 [ %i17, %bb10.bb2409_crit_edge ], [ %i1995, %bb2399 ]
  %i2431 = phi i32 [ %i15, %bb10.bb2409_crit_edge ], [ %i2318, %bb2399 ]
  %i2432 = phi i32 [ %i13, %bb10.bb2409_crit_edge ], [ %i1997, %bb2399 ]
  %i2433 = phi i32 [ %i11, %bb10.bb2409_crit_edge ], [ 256, %bb2399 ]
  store i32 36, ptr %i2, align 8, !tbaa !153
  %i2434 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i2435 = load i32, ptr %i2434, align 4, !tbaa !154
  %i2436 = icmp slt i32 %i2435, %i2421
  br i1 %i2436, label %bb2440, label %bb2437

bb2437:                                           ; preds = %bb2409
  %i2438 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i2439 = load i32, ptr %i2438, align 8, !tbaa !155
  br label %bb2447

bb2440:                                           ; preds = %bb2409
  %i2441 = load ptr, ptr %arg, align 8, !tbaa !151
  %i2442 = getelementptr inbounds %struct.bz_stream, ptr %i2441, i64 0, i32 1
  %i2443 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i2444 = getelementptr inbounds %struct.bz_stream, ptr %i2441, i64 0, i32 2
  %i2445 = getelementptr inbounds %struct.bz_stream, ptr %i2441, i64 0, i32 3
  %i2446 = load i32, ptr %i2442, align 8, !tbaa !141
  br label %bb2455

bb2447.loopexit:                                  ; preds = %bb2475
  br label %bb2447

bb2447:                                           ; preds = %bb2447.loopexit, %bb2437
  %i2448 = phi i32 [ %i2439, %bb2437 ], [ %i2465, %bb2447.loopexit ]
  %i2449 = phi i32 [ %i2435, %bb2437 ], [ %i2466, %bb2447.loopexit ]
  %i2450 = sub nsw i32 %i2449, %i2421
  %i2451 = lshr i32 %i2448, %i2450
  %i2452 = shl nsw i32 -1, %i2421
  %i2453 = xor i32 %i2452, -1
  %i2454 = and i32 %i2451, %i2453
  store i32 %i2450, ptr %i2434, align 4, !tbaa !154
  br label %bb2477

bb2455:                                           ; preds = %bb2475.bb2455_crit_edge, %bb2440
  %i2456 = phi i32 [ %i2446, %bb2440 ], [ %i2468, %bb2475.bb2455_crit_edge ]
  %i2457 = phi i32 [ %i2435, %bb2440 ], [ %i2466, %bb2475.bb2455_crit_edge ]
  %i2458 = icmp eq i32 %i2456, 0
  br i1 %i2458, label %bb4390.loopexit23, label %bb2459

bb2459:                                           ; preds = %bb2455
  %i2460 = load i32, ptr %i2443, align 8, !tbaa !155
  %i2461 = shl i32 %i2460, 8
  %i2462 = load ptr, ptr %i2441, align 8, !tbaa !147
  %i2463 = load i8, ptr %i2462, align 1, !tbaa !21
  %i2464 = zext i8 %i2463 to i32
  %i2465 = or disjoint i32 %i2461, %i2464
  store i32 %i2465, ptr %i2443, align 8, !tbaa !155
  %i2466 = add nsw i32 %i2457, 8
  store i32 %i2466, ptr %i2434, align 4, !tbaa !154
  %i2467 = getelementptr inbounds i8, ptr %i2462, i64 1
  store ptr %i2467, ptr %i2441, align 8, !tbaa !147
  %i2468 = add i32 %i2456, -1
  store i32 %i2468, ptr %i2442, align 8, !tbaa !141
  %i2469 = load i32, ptr %i2444, align 4, !tbaa !131
  %i2470 = add i32 %i2469, 1
  store i32 %i2470, ptr %i2444, align 4, !tbaa !131
  %i2471 = icmp eq i32 %i2470, 0
  br i1 %i2471, label %bb2472, label %bb2459.bb2475_crit_edge

bb2459.bb2475_crit_edge:                          ; preds = %bb2459
  br label %bb2475

bb2472:                                           ; preds = %bb2459
  %i2473 = load i32, ptr %i2445, align 8, !tbaa !132
  %i2474 = add i32 %i2473, 1
  store i32 %i2474, ptr %i2445, align 8, !tbaa !132
  br label %bb2475

bb2475:                                           ; preds = %bb2459.bb2475_crit_edge, %bb2472
  %i2476 = icmp slt i32 %i2466, %i2421
  br i1 %i2476, label %bb2475.bb2455_crit_edge, label %bb2447.loopexit

bb2475.bb2455_crit_edge:                          ; preds = %bb2475
  br label %bb2455

bb2477:                                           ; preds = %bb2549, %bb2447
  %i2478 = phi i32 [ %i2512, %bb2549 ], [ %i2410, %bb2447 ]
  %i2479 = phi i32 [ %i2513, %bb2549 ], [ %i2411, %bb2447 ]
  %i2480 = phi i32 [ %i2514, %bb2549 ], [ %i2412, %bb2447 ]
  %i2481 = phi i32 [ %i2515, %bb2549 ], [ %i2413, %bb2447 ]
  %i2482 = phi i32 [ %i2552, %bb2549 ], [ %i2450, %bb2447 ]
  %i2483 = phi ptr [ %i2517, %bb2549 ], [ %i2416, %bb2447 ]
  %i2484 = phi ptr [ %i2518, %bb2549 ], [ %i2417, %bb2447 ]
  %i2485 = phi ptr [ %i2519, %bb2549 ], [ %i2418, %bb2447 ]
  %i2486 = phi i32 [ %i2520, %bb2549 ], [ %i2419, %bb2447 ]
  %i2487 = phi i32 [ %i2521, %bb2549 ], [ %i2420, %bb2447 ]
  %i2488 = phi i32 [ %i2554, %bb2549 ], [ %i2415, %bb2447 ]
  %i2489 = phi i32 [ %i2556, %bb2549 ], [ %i2454, %bb2447 ]
  %i2490 = phi i32 [ %i2524, %bb2549 ], [ %i2421, %bb2447 ]
  %i2491 = phi i32 [ %i2525, %bb2549 ], [ %i2422, %bb2447 ]
  %i2492 = phi i32 [ %i2526, %bb2549 ], [ %i2423, %bb2447 ]
  %i2493 = phi i32 [ %i2527, %bb2549 ], [ %i2424, %bb2447 ]
  %i2494 = phi i32 [ %i2528, %bb2549 ], [ %i2425, %bb2447 ]
  %i2495 = phi i32 [ %i2529, %bb2549 ], [ %i2426, %bb2447 ]
  %i2496 = phi i32 [ %i2530, %bb2549 ], [ %i2427, %bb2447 ]
  %i2497 = phi i32 [ %i2531, %bb2549 ], [ %i2428, %bb2447 ]
  %i2498 = phi i32 [ %i2532, %bb2549 ], [ %i2429, %bb2447 ]
  %i2499 = phi i32 [ %i2533, %bb2549 ], [ %i2430, %bb2447 ]
  %i2500 = phi i32 [ %i2534, %bb2549 ], [ %i2431, %bb2447 ]
  %i2501 = phi i32 [ %i2535, %bb2549 ], [ %i2432, %bb2447 ]
  %i2502 = phi i32 [ %i2536, %bb2549 ], [ %i2433, %bb2447 ]
  %i2503 = icmp sgt i32 %i2490, 20
  br i1 %i2503, label %bb2477.bb4390_crit_edge, label %bb2504

bb2477.bb4390_crit_edge:                          ; preds = %bb2477
  br label %bb4390

bb2504:                                           ; preds = %bb2477
  %i2505 = sext i32 %i2490 to i64
  %i2506 = getelementptr inbounds i32, ptr %i2485, i64 %i2505
  %i2507 = load i32, ptr %i2506, align 4, !tbaa !19
  %i2508 = icmp sgt i32 %i2489, %i2507
  br i1 %i2508, label %bb2509, label %bb2579

bb2509:                                           ; preds = %bb2504
  %i2510 = add nsw i32 %i2490, 1
  br label %bb2511

bb2511:                                           ; preds = %bb2509, %bb88
  %i2512 = phi i32 [ %i29, %bb88 ], [ %i2478, %bb2509 ]
  %i2513 = phi i32 [ %i35, %bb88 ], [ %i2479, %bb2509 ]
  %i2514 = phi i32 [ %i37, %bb88 ], [ %i2480, %bb2509 ]
  %i2515 = phi i32 [ %i41, %bb88 ], [ %i2481, %bb2509 ]
  %i2516 = phi i32 [ %i90, %bb88 ], [ %i2482, %bb2509 ]
  %i2517 = phi ptr [ %i57, %bb88 ], [ %i2483, %bb2509 ]
  %i2518 = phi ptr [ %i55, %bb88 ], [ %i2484, %bb2509 ]
  %i2519 = phi ptr [ %i53, %bb88 ], [ %i2485, %bb2509 ]
  %i2520 = phi i32 [ %i51, %bb88 ], [ %i2486, %bb2509 ]
  %i2521 = phi i32 [ %i49, %bb88 ], [ %i2487, %bb2509 ]
  %i2522 = phi i32 [ %i47, %bb88 ], [ %i2488, %bb2509 ]
  %i2523 = phi i32 [ %i45, %bb88 ], [ %i2489, %bb2509 ]
  %i2524 = phi i32 [ %i43, %bb88 ], [ %i2510, %bb2509 ]
  %i2525 = phi i32 [ %i39, %bb88 ], [ %i2491, %bb2509 ]
  %i2526 = phi i32 [ %i33, %bb88 ], [ %i2492, %bb2509 ]
  %i2527 = phi i32 [ %i31, %bb88 ], [ %i2493, %bb2509 ]
  %i2528 = phi i32 [ %i27, %bb88 ], [ %i2494, %bb2509 ]
  %i2529 = phi i32 [ %i25, %bb88 ], [ %i2495, %bb2509 ]
  %i2530 = phi i32 [ %i23, %bb88 ], [ %i2496, %bb2509 ]
  %i2531 = phi i32 [ %i21, %bb88 ], [ %i2497, %bb2509 ]
  %i2532 = phi i32 [ %i19, %bb88 ], [ %i2498, %bb2509 ]
  %i2533 = phi i32 [ %i17, %bb88 ], [ %i2499, %bb2509 ]
  %i2534 = phi i32 [ %i15, %bb88 ], [ %i2500, %bb2509 ]
  %i2535 = phi i32 [ %i13, %bb88 ], [ %i2501, %bb2509 ]
  %i2536 = phi i32 [ %i11, %bb88 ], [ %i2502, %bb2509 ]
  store i32 37, ptr %i2, align 8, !tbaa !153
  %i2537 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i2538 = icmp sgt i32 %i2516, 0
  br i1 %i2538, label %bb2539, label %bb2542

bb2539:                                           ; preds = %bb2511
  %i2540 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i2541 = load i32, ptr %i2540, align 8, !tbaa !155
  br label %bb2549

bb2542:                                           ; preds = %bb2511
  %i2543 = load ptr, ptr %arg, align 8, !tbaa !151
  %i2544 = getelementptr inbounds %struct.bz_stream, ptr %i2543, i64 0, i32 1
  %i2545 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i2546 = getelementptr inbounds %struct.bz_stream, ptr %i2543, i64 0, i32 2
  %i2547 = getelementptr inbounds %struct.bz_stream, ptr %i2543, i64 0, i32 3
  %i2548 = load i32, ptr %i2544, align 8, !tbaa !141
  br label %bb2557

bb2549.loopexit:                                  ; preds = %bb2577
  br label %bb2549

bb2549:                                           ; preds = %bb2549.loopexit, %bb2539
  %i2550 = phi i32 [ %i2541, %bb2539 ], [ %i2567, %bb2549.loopexit ]
  %i2551 = phi i32 [ %i2516, %bb2539 ], [ %i2568, %bb2549.loopexit ]
  %i2552 = add nsw i32 %i2551, -1
  %i2553 = lshr i32 %i2550, %i2552
  %i2554 = and i32 %i2553, 1
  store i32 %i2552, ptr %i2537, align 4, !tbaa !154
  %i2555 = shl i32 %i2523, 1
  %i2556 = or disjoint i32 %i2554, %i2555
  br label %bb2477

bb2557:                                           ; preds = %bb2577.bb2557_crit_edge, %bb2542
  %i2558 = phi i32 [ %i2548, %bb2542 ], [ %i2570, %bb2577.bb2557_crit_edge ]
  %i2559 = phi i32 [ %i2516, %bb2542 ], [ %i2568, %bb2577.bb2557_crit_edge ]
  %i2560 = icmp eq i32 %i2558, 0
  br i1 %i2560, label %bb4390.loopexit16, label %bb2561

bb2561:                                           ; preds = %bb2557
  %i2562 = load i32, ptr %i2545, align 8, !tbaa !155
  %i2563 = shl i32 %i2562, 8
  %i2564 = load ptr, ptr %i2543, align 8, !tbaa !147
  %i2565 = load i8, ptr %i2564, align 1, !tbaa !21
  %i2566 = zext i8 %i2565 to i32
  %i2567 = or disjoint i32 %i2563, %i2566
  store i32 %i2567, ptr %i2545, align 8, !tbaa !155
  %i2568 = add nsw i32 %i2559, 8
  store i32 %i2568, ptr %i2537, align 4, !tbaa !154
  %i2569 = getelementptr inbounds i8, ptr %i2564, i64 1
  store ptr %i2569, ptr %i2543, align 8, !tbaa !147
  %i2570 = add i32 %i2558, -1
  store i32 %i2570, ptr %i2544, align 8, !tbaa !141
  %i2571 = load i32, ptr %i2546, align 4, !tbaa !131
  %i2572 = add i32 %i2571, 1
  store i32 %i2572, ptr %i2546, align 4, !tbaa !131
  %i2573 = icmp eq i32 %i2572, 0
  br i1 %i2573, label %bb2574, label %bb2561.bb2577_crit_edge

bb2561.bb2577_crit_edge:                          ; preds = %bb2561
  br label %bb2577

bb2574:                                           ; preds = %bb2561
  %i2575 = load i32, ptr %i2547, align 8, !tbaa !132
  %i2576 = add i32 %i2575, 1
  store i32 %i2576, ptr %i2547, align 8, !tbaa !132
  br label %bb2577

bb2577:                                           ; preds = %bb2561.bb2577_crit_edge, %bb2574
  %i2578 = icmp sgt i32 %i2559, -8
  br i1 %i2578, label %bb2549.loopexit, label %bb2577.bb2557_crit_edge

bb2577.bb2557_crit_edge:                          ; preds = %bb2577
  br label %bb2557

bb2579:                                           ; preds = %bb2504
  %i2580 = getelementptr inbounds i32, ptr %i2484, i64 %i2505
  %i2581 = load i32, ptr %i2580, align 4, !tbaa !19
  %i2582 = sub nsw i32 %i2489, %i2581
  %i2583 = icmp ugt i32 %i2582, 257
  br i1 %i2583, label %bb2579.bb4390_crit_edge, label %bb2584

bb2579.bb4390_crit_edge:                          ; preds = %bb2579
  br label %bb4390

bb2584:                                           ; preds = %bb2579
  %i2585 = zext nneg i32 %i2582 to i64
  %i2586 = getelementptr inbounds i32, ptr %i2483, i64 %i2585
  %i2587 = load i32, ptr %i2586, align 4, !tbaa !19
  br label %bb2588

bb2588:                                           ; preds = %bb2874.bb2588_crit_edge, %bb2867.bb2588_crit_edge, %bb3383, %bb2903, %bb2901, %bb2584
  %i2589 = phi i32 [ %i3277, %bb3383 ], [ %i2481, %bb2584 ], [ %i2738, %bb2903 ], [ %i2738, %bb2901 ], [ %i2738, %bb2867.bb2588_crit_edge ], [ %i2738, %bb2874.bb2588_crit_edge ]
  %i2590 = phi ptr [ %i3279, %bb3383 ], [ %i2483, %bb2584 ], [ %i2740, %bb2903 ], [ %i2740, %bb2901 ], [ %i2740, %bb2867.bb2588_crit_edge ], [ %i2740, %bb2874.bb2588_crit_edge ]
  %i2591 = phi ptr [ %i3280, %bb3383 ], [ %i2484, %bb2584 ], [ %i2741, %bb2903 ], [ %i2741, %bb2901 ], [ %i2741, %bb2867.bb2588_crit_edge ], [ %i2741, %bb2874.bb2588_crit_edge ]
  %i2592 = phi ptr [ %i3281, %bb3383 ], [ %i2485, %bb2584 ], [ %i2742, %bb2903 ], [ %i2742, %bb2901 ], [ %i2742, %bb2867.bb2588_crit_edge ], [ %i2742, %bb2874.bb2588_crit_edge ]
  %i2593 = phi i32 [ %i3282, %bb3383 ], [ %i2486, %bb2584 ], [ %i2743, %bb2903 ], [ %i2743, %bb2901 ], [ %i2743, %bb2867.bb2588_crit_edge ], [ %i2743, %bb2874.bb2588_crit_edge ]
  %i2594 = phi i32 [ %i3283, %bb3383 ], [ %i2487, %bb2584 ], [ %i2744, %bb2903 ], [ %i2744, %bb2901 ], [ %i2744, %bb2867.bb2588_crit_edge ], [ %i2744, %bb2874.bb2588_crit_edge ]
  %i2595 = phi i32 [ %i3284, %bb3383 ], [ %i2488, %bb2584 ], [ %i2745, %bb2903 ], [ %i2745, %bb2901 ], [ %i2745, %bb2867.bb2588_crit_edge ], [ %i2745, %bb2874.bb2588_crit_edge ]
  %i2596 = phi i32 [ %i3285, %bb3383 ], [ %i2489, %bb2584 ], [ %i2746, %bb2903 ], [ %i2746, %bb2901 ], [ %i2746, %bb2867.bb2588_crit_edge ], [ %i2746, %bb2874.bb2588_crit_edge ]
  %i2597 = phi i32 [ %i3286, %bb3383 ], [ %i2490, %bb2584 ], [ %i2747, %bb2903 ], [ %i2747, %bb2901 ], [ %i2747, %bb2867.bb2588_crit_edge ], [ %i2747, %bb2874.bb2588_crit_edge ]
  %i2598 = phi i32 [ %i3287, %bb3383 ], [ %i2491, %bb2584 ], [ %i2748, %bb2903 ], [ %i2748, %bb2901 ], [ %i2748, %bb2867.bb2588_crit_edge ], [ %i2748, %bb2874.bb2588_crit_edge ]
  %i2599 = phi i32 [ %i3288, %bb3383 ], [ %i2480, %bb2584 ], [ %i2749, %bb2903 ], [ %i2749, %bb2901 ], [ %i2749, %bb2867.bb2588_crit_edge ], [ %i2749, %bb2874.bb2588_crit_edge ]
  %i2600 = phi i32 [ %i3289, %bb3383 ], [ %i2479, %bb2584 ], [ %i2889, %bb2903 ], [ %i2899, %bb2901 ], [ %i2850, %bb2867.bb2588_crit_edge ], [ %i2850, %bb2874.bb2588_crit_edge ]
  %i2601 = phi i32 [ %i3290, %bb3383 ], [ %i2492, %bb2584 ], [ %i2904, %bb2903 ], [ %i2902, %bb2901 ], [ %i2751, %bb2867.bb2588_crit_edge ], [ %i2751, %bb2874.bb2588_crit_edge ]
  %i2602 = phi i32 [ %i3291, %bb3383 ], [ %i2493, %bb2584 ], [ %i2752, %bb2903 ], [ %i2752, %bb2901 ], [ %i2752, %bb2867.bb2588_crit_edge ], [ %i2752, %bb2874.bb2588_crit_edge ]
  %i2603 = phi i32 [ %i3386, %bb3383 ], [ %i2587, %bb2584 ], [ %i2847, %bb2903 ], [ %i2847, %bb2901 ], [ %i2847, %bb2867.bb2588_crit_edge ], [ %i2847, %bb2874.bb2588_crit_edge ]
  %i2604 = phi i32 [ %i3293, %bb3383 ], [ %i2494, %bb2584 ], [ %i2754, %bb2903 ], [ %i2754, %bb2901 ], [ %i2754, %bb2867.bb2588_crit_edge ], [ %i2754, %bb2874.bb2588_crit_edge ]
  %i2605 = phi i32 [ %i3294, %bb3383 ], [ %i2495, %bb2584 ], [ %i2755, %bb2903 ], [ %i2755, %bb2901 ], [ %i2755, %bb2867.bb2588_crit_edge ], [ %i2755, %bb2874.bb2588_crit_edge ]
  %i2606 = phi i32 [ %i3295, %bb3383 ], [ %i2496, %bb2584 ], [ %i2756, %bb2903 ], [ %i2756, %bb2901 ], [ %i2756, %bb2867.bb2588_crit_edge ], [ %i2756, %bb2874.bb2588_crit_edge ]
  %i2607 = phi i32 [ %i3296, %bb3383 ], [ %i2497, %bb2584 ], [ %i2757, %bb2903 ], [ %i2757, %bb2901 ], [ %i2757, %bb2867.bb2588_crit_edge ], [ %i2757, %bb2874.bb2588_crit_edge ]
  %i2608 = phi i32 [ %i3297, %bb3383 ], [ %i2498, %bb2584 ], [ %i2758, %bb2903 ], [ %i2758, %bb2901 ], [ %i2758, %bb2867.bb2588_crit_edge ], [ %i2758, %bb2874.bb2588_crit_edge ]
  %i2609 = phi i32 [ %i3298, %bb3383 ], [ %i2499, %bb2584 ], [ %i2759, %bb2903 ], [ %i2759, %bb2901 ], [ %i2759, %bb2867.bb2588_crit_edge ], [ %i2759, %bb2874.bb2588_crit_edge ]
  %i2610 = phi i32 [ %i3299, %bb3383 ], [ %i2500, %bb2584 ], [ %i2760, %bb2903 ], [ %i2760, %bb2901 ], [ %i2760, %bb2867.bb2588_crit_edge ], [ %i2760, %bb2874.bb2588_crit_edge ]
  %i2611 = phi i32 [ %i3300, %bb3383 ], [ %i2501, %bb2584 ], [ %i2761, %bb2903 ], [ %i2761, %bb2901 ], [ %i2761, %bb2867.bb2588_crit_edge ], [ %i2761, %bb2874.bb2588_crit_edge ]
  %i2612 = phi i32 [ %i3301, %bb3383 ], [ %i2502, %bb2584 ], [ %i2762, %bb2903 ], [ %i2762, %bb2901 ], [ %i2762, %bb2867.bb2588_crit_edge ], [ %i2762, %bb2874.bb2588_crit_edge ]
  %i2613 = icmp eq i32 %i2603, %i2606
  br i1 %i2613, label %bb3387, label %bb2614

bb2614:                                           ; preds = %bb2588
  %i2615 = icmp ult i32 %i2603, 2
  br i1 %i2615, label %bb2614.bb2616_crit_edge, label %bb2905

bb2614.bb2616_crit_edge:                          ; preds = %bb2614
  br label %bb2616

bb2616:                                           ; preds = %bb2844.bb2616_crit_edge, %bb2614.bb2616_crit_edge
  %i2617 = phi i32 [ %i2738, %bb2844.bb2616_crit_edge ], [ %i2589, %bb2614.bb2616_crit_edge ]
  %i2618 = phi ptr [ %i2740, %bb2844.bb2616_crit_edge ], [ %i2590, %bb2614.bb2616_crit_edge ]
  %i2619 = phi ptr [ %i2741, %bb2844.bb2616_crit_edge ], [ %i2591, %bb2614.bb2616_crit_edge ]
  %i2620 = phi ptr [ %i2742, %bb2844.bb2616_crit_edge ], [ %i2592, %bb2614.bb2616_crit_edge ]
  %i2621 = phi i32 [ %i2743, %bb2844.bb2616_crit_edge ], [ %i2593, %bb2614.bb2616_crit_edge ]
  %i2622 = phi i32 [ %i2744, %bb2844.bb2616_crit_edge ], [ %i2594, %bb2614.bb2616_crit_edge ]
  %i2623 = phi i32 [ %i2745, %bb2844.bb2616_crit_edge ], [ %i2595, %bb2614.bb2616_crit_edge ]
  %i2624 = phi i32 [ %i2746, %bb2844.bb2616_crit_edge ], [ %i2596, %bb2614.bb2616_crit_edge ]
  %i2625 = phi i32 [ %i2747, %bb2844.bb2616_crit_edge ], [ %i2597, %bb2614.bb2616_crit_edge ]
  %i2626 = phi i32 [ %i2748, %bb2844.bb2616_crit_edge ], [ %i2598, %bb2614.bb2616_crit_edge ]
  %i2627 = phi i32 [ %i2749, %bb2844.bb2616_crit_edge ], [ 1, %bb2614.bb2616_crit_edge ]
  %i2628 = phi i32 [ %i2750, %bb2844.bb2616_crit_edge ], [ -1, %bb2614.bb2616_crit_edge ]
  %i2629 = phi i32 [ %i2751, %bb2844.bb2616_crit_edge ], [ %i2601, %bb2614.bb2616_crit_edge ]
  %i2630 = phi i32 [ %i2752, %bb2844.bb2616_crit_edge ], [ %i2602, %bb2614.bb2616_crit_edge ]
  %i2631 = phi i32 [ %i2847, %bb2844.bb2616_crit_edge ], [ %i2603, %bb2614.bb2616_crit_edge ]
  %i2632 = phi i32 [ %i2754, %bb2844.bb2616_crit_edge ], [ %i2604, %bb2614.bb2616_crit_edge ]
  %i2633 = phi i32 [ %i2755, %bb2844.bb2616_crit_edge ], [ %i2605, %bb2614.bb2616_crit_edge ]
  %i2634 = phi i32 [ %i2756, %bb2844.bb2616_crit_edge ], [ %i2606, %bb2614.bb2616_crit_edge ]
  %i2635 = phi i32 [ %i2757, %bb2844.bb2616_crit_edge ], [ %i2607, %bb2614.bb2616_crit_edge ]
  %i2636 = phi i32 [ %i2758, %bb2844.bb2616_crit_edge ], [ %i2608, %bb2614.bb2616_crit_edge ]
  %i2637 = phi i32 [ %i2759, %bb2844.bb2616_crit_edge ], [ %i2609, %bb2614.bb2616_crit_edge ]
  %i2638 = phi i32 [ %i2760, %bb2844.bb2616_crit_edge ], [ %i2610, %bb2614.bb2616_crit_edge ]
  %i2639 = phi i32 [ %i2761, %bb2844.bb2616_crit_edge ], [ %i2611, %bb2614.bb2616_crit_edge ]
  %i2640 = phi i32 [ %i2762, %bb2844.bb2616_crit_edge ], [ %i2612, %bb2614.bb2616_crit_edge ]
  %i2641 = icmp eq i32 %i2631, 0
  %i2642 = shl nsw i32 %i2627, 1
  %i2643 = select i1 %i2641, i32 %i2627, i32 %i2642
  %i2644 = add nsw i32 %i2643, %i2628
  %i2645 = icmp eq i32 %i2632, 0
  br i1 %i2645, label %bb2646, label %bb2616.bb2660_crit_edge

bb2616.bb2660_crit_edge:                          ; preds = %bb2616
  br label %bb2660

bb2646:                                           ; preds = %bb2616
  %i2647 = add nsw i32 %i2633, 1
  %i2648 = icmp slt i32 %i2647, %i2635
  br i1 %i2648, label %bb2649, label %bb2646.bb4390_crit_edge

bb2646.bb4390_crit_edge:                          ; preds = %bb2646
  br label %bb4390

bb2649:                                           ; preds = %bb2646
  %i2650 = sext i32 %i2647 to i64
  %i2651 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 33, i64 %i2650
  %i2652 = load i8, ptr %i2651, align 1, !tbaa !21
  %i2653 = zext i8 %i2652 to i32
  %i2654 = zext i8 %i2652 to i64
  %i2655 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 39, i64 %i2654
  %i2656 = load i32, ptr %i2655, align 4, !tbaa !19
  %i2657 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 36, i64 %i2654
  %i2658 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 38, i64 %i2654
  %i2659 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 37, i64 %i2654
  br label %bb2660

bb2660:                                           ; preds = %bb2616.bb2660_crit_edge, %bb2649
  %i2661 = phi ptr [ %i2658, %bb2649 ], [ %i2618, %bb2616.bb2660_crit_edge ]
  %i2662 = phi ptr [ %i2659, %bb2649 ], [ %i2619, %bb2616.bb2660_crit_edge ]
  %i2663 = phi ptr [ %i2657, %bb2649 ], [ %i2620, %bb2616.bb2660_crit_edge ]
  %i2664 = phi i32 [ %i2656, %bb2649 ], [ %i2621, %bb2616.bb2660_crit_edge ]
  %i2665 = phi i32 [ %i2653, %bb2649 ], [ %i2622, %bb2616.bb2660_crit_edge ]
  %i2666 = phi i32 [ 50, %bb2649 ], [ %i2632, %bb2616.bb2660_crit_edge ]
  %i2667 = phi i32 [ %i2647, %bb2649 ], [ %i2633, %bb2616.bb2660_crit_edge ]
  %i2668 = add nsw i32 %i2666, -1
  br label %bb2669

bb2669:                                           ; preds = %bb10.bb2669_crit_edge, %bb2660
  %i2670 = phi i32 [ %i2617, %bb2660 ], [ %i41, %bb10.bb2669_crit_edge ]
  %i2671 = phi ptr [ %i2661, %bb2660 ], [ %i57, %bb10.bb2669_crit_edge ]
  %i2672 = phi ptr [ %i2662, %bb2660 ], [ %i55, %bb10.bb2669_crit_edge ]
  %i2673 = phi ptr [ %i2663, %bb2660 ], [ %i53, %bb10.bb2669_crit_edge ]
  %i2674 = phi i32 [ %i2664, %bb2660 ], [ %i51, %bb10.bb2669_crit_edge ]
  %i2675 = phi i32 [ %i2665, %bb2660 ], [ %i49, %bb10.bb2669_crit_edge ]
  %i2676 = phi i32 [ %i2623, %bb2660 ], [ %i47, %bb10.bb2669_crit_edge ]
  %i2677 = phi i32 [ %i2624, %bb2660 ], [ %i45, %bb10.bb2669_crit_edge ]
  %i2678 = phi i32 [ %i2664, %bb2660 ], [ %i43, %bb10.bb2669_crit_edge ]
  %i2679 = phi i32 [ %i2626, %bb2660 ], [ %i39, %bb10.bb2669_crit_edge ]
  %i2680 = phi i32 [ %i2642, %bb2660 ], [ %i37, %bb10.bb2669_crit_edge ]
  %i2681 = phi i32 [ %i2644, %bb2660 ], [ %i35, %bb10.bb2669_crit_edge ]
  %i2682 = phi i32 [ %i2629, %bb2660 ], [ %i33, %bb10.bb2669_crit_edge ]
  %i2683 = phi i32 [ %i2630, %bb2660 ], [ %i31, %bb10.bb2669_crit_edge ]
  %i2684 = phi i32 [ %i2631, %bb2660 ], [ %i29, %bb10.bb2669_crit_edge ]
  %i2685 = phi i32 [ %i2668, %bb2660 ], [ %i27, %bb10.bb2669_crit_edge ]
  %i2686 = phi i32 [ %i2667, %bb2660 ], [ %i25, %bb10.bb2669_crit_edge ]
  %i2687 = phi i32 [ %i2634, %bb2660 ], [ %i23, %bb10.bb2669_crit_edge ]
  %i2688 = phi i32 [ %i2635, %bb2660 ], [ %i21, %bb10.bb2669_crit_edge ]
  %i2689 = phi i32 [ %i2636, %bb2660 ], [ %i19, %bb10.bb2669_crit_edge ]
  %i2690 = phi i32 [ %i2637, %bb2660 ], [ %i17, %bb10.bb2669_crit_edge ]
  %i2691 = phi i32 [ %i2638, %bb2660 ], [ %i15, %bb10.bb2669_crit_edge ]
  %i2692 = phi i32 [ %i2639, %bb2660 ], [ %i13, %bb10.bb2669_crit_edge ]
  %i2693 = phi i32 [ %i2640, %bb2660 ], [ %i11, %bb10.bb2669_crit_edge ]
  store i32 38, ptr %i2, align 8, !tbaa !153
  %i2694 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i2695 = load i32, ptr %i2694, align 4, !tbaa !154
  %i2696 = icmp slt i32 %i2695, %i2678
  br i1 %i2696, label %bb2700, label %bb2697

bb2697:                                           ; preds = %bb2669
  %i2698 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i2699 = load i32, ptr %i2698, align 8, !tbaa !155
  br label %bb2707

bb2700:                                           ; preds = %bb2669
  %i2701 = load ptr, ptr %arg, align 8, !tbaa !151
  %i2702 = getelementptr inbounds %struct.bz_stream, ptr %i2701, i64 0, i32 1
  %i2703 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i2704 = getelementptr inbounds %struct.bz_stream, ptr %i2701, i64 0, i32 2
  %i2705 = getelementptr inbounds %struct.bz_stream, ptr %i2701, i64 0, i32 3
  %i2706 = load i32, ptr %i2702, align 8, !tbaa !141
  br label %bb2715

bb2707.loopexit:                                  ; preds = %bb2735
  br label %bb2707

bb2707:                                           ; preds = %bb2707.loopexit, %bb2697
  %i2708 = phi i32 [ %i2699, %bb2697 ], [ %i2725, %bb2707.loopexit ]
  %i2709 = phi i32 [ %i2695, %bb2697 ], [ %i2726, %bb2707.loopexit ]
  %i2710 = sub nsw i32 %i2709, %i2678
  %i2711 = lshr i32 %i2708, %i2710
  %i2712 = shl nsw i32 -1, %i2678
  %i2713 = xor i32 %i2712, -1
  %i2714 = and i32 %i2711, %i2713
  store i32 %i2710, ptr %i2694, align 4, !tbaa !154
  br label %bb2737

bb2715:                                           ; preds = %bb2735.bb2715_crit_edge, %bb2700
  %i2716 = phi i32 [ %i2706, %bb2700 ], [ %i2728, %bb2735.bb2715_crit_edge ]
  %i2717 = phi i32 [ %i2695, %bb2700 ], [ %i2726, %bb2735.bb2715_crit_edge ]
  %i2718 = icmp eq i32 %i2716, 0
  br i1 %i2718, label %bb4390.loopexit20, label %bb2719

bb2719:                                           ; preds = %bb2715
  %i2720 = load i32, ptr %i2703, align 8, !tbaa !155
  %i2721 = shl i32 %i2720, 8
  %i2722 = load ptr, ptr %i2701, align 8, !tbaa !147
  %i2723 = load i8, ptr %i2722, align 1, !tbaa !21
  %i2724 = zext i8 %i2723 to i32
  %i2725 = or disjoint i32 %i2721, %i2724
  store i32 %i2725, ptr %i2703, align 8, !tbaa !155
  %i2726 = add nsw i32 %i2717, 8
  store i32 %i2726, ptr %i2694, align 4, !tbaa !154
  %i2727 = getelementptr inbounds i8, ptr %i2722, i64 1
  store ptr %i2727, ptr %i2701, align 8, !tbaa !147
  %i2728 = add i32 %i2716, -1
  store i32 %i2728, ptr %i2702, align 8, !tbaa !141
  %i2729 = load i32, ptr %i2704, align 4, !tbaa !131
  %i2730 = add i32 %i2729, 1
  store i32 %i2730, ptr %i2704, align 4, !tbaa !131
  %i2731 = icmp eq i32 %i2730, 0
  br i1 %i2731, label %bb2732, label %bb2719.bb2735_crit_edge

bb2719.bb2735_crit_edge:                          ; preds = %bb2719
  br label %bb2735

bb2732:                                           ; preds = %bb2719
  %i2733 = load i32, ptr %i2705, align 8, !tbaa !132
  %i2734 = add i32 %i2733, 1
  store i32 %i2734, ptr %i2705, align 8, !tbaa !132
  br label %bb2735

bb2735:                                           ; preds = %bb2719.bb2735_crit_edge, %bb2732
  %i2736 = icmp slt i32 %i2726, %i2678
  br i1 %i2736, label %bb2735.bb2715_crit_edge, label %bb2707.loopexit

bb2735.bb2715_crit_edge:                          ; preds = %bb2735
  br label %bb2715

bb2737:                                           ; preds = %bb2809, %bb2707
  %i2738 = phi i32 [ %i2670, %bb2707 ], [ %i2772, %bb2809 ]
  %i2739 = phi i32 [ %i2710, %bb2707 ], [ %i2812, %bb2809 ]
  %i2740 = phi ptr [ %i2671, %bb2707 ], [ %i2774, %bb2809 ]
  %i2741 = phi ptr [ %i2672, %bb2707 ], [ %i2775, %bb2809 ]
  %i2742 = phi ptr [ %i2673, %bb2707 ], [ %i2776, %bb2809 ]
  %i2743 = phi i32 [ %i2674, %bb2707 ], [ %i2777, %bb2809 ]
  %i2744 = phi i32 [ %i2675, %bb2707 ], [ %i2778, %bb2809 ]
  %i2745 = phi i32 [ %i2676, %bb2707 ], [ %i2814, %bb2809 ]
  %i2746 = phi i32 [ %i2714, %bb2707 ], [ %i2816, %bb2809 ]
  %i2747 = phi i32 [ %i2678, %bb2707 ], [ %i2781, %bb2809 ]
  %i2748 = phi i32 [ %i2679, %bb2707 ], [ %i2782, %bb2809 ]
  %i2749 = phi i32 [ %i2680, %bb2707 ], [ %i2783, %bb2809 ]
  %i2750 = phi i32 [ %i2681, %bb2707 ], [ %i2784, %bb2809 ]
  %i2751 = phi i32 [ %i2682, %bb2707 ], [ %i2785, %bb2809 ]
  %i2752 = phi i32 [ %i2683, %bb2707 ], [ %i2786, %bb2809 ]
  %i2753 = phi i32 [ %i2684, %bb2707 ], [ %i2787, %bb2809 ]
  %i2754 = phi i32 [ %i2685, %bb2707 ], [ %i2788, %bb2809 ]
  %i2755 = phi i32 [ %i2686, %bb2707 ], [ %i2789, %bb2809 ]
  %i2756 = phi i32 [ %i2687, %bb2707 ], [ %i2790, %bb2809 ]
  %i2757 = phi i32 [ %i2688, %bb2707 ], [ %i2791, %bb2809 ]
  %i2758 = phi i32 [ %i2689, %bb2707 ], [ %i2792, %bb2809 ]
  %i2759 = phi i32 [ %i2690, %bb2707 ], [ %i2793, %bb2809 ]
  %i2760 = phi i32 [ %i2691, %bb2707 ], [ %i2794, %bb2809 ]
  %i2761 = phi i32 [ %i2692, %bb2707 ], [ %i2795, %bb2809 ]
  %i2762 = phi i32 [ %i2693, %bb2707 ], [ %i2796, %bb2809 ]
  %i2763 = icmp sgt i32 %i2747, 20
  br i1 %i2763, label %bb2737.bb4390_crit_edge, label %bb2764

bb2737.bb4390_crit_edge:                          ; preds = %bb2737
  br label %bb4390

bb2764:                                           ; preds = %bb2737
  %i2765 = sext i32 %i2747 to i64
  %i2766 = getelementptr inbounds i32, ptr %i2742, i64 %i2765
  %i2767 = load i32, ptr %i2766, align 4, !tbaa !19
  %i2768 = icmp sgt i32 %i2746, %i2767
  br i1 %i2768, label %bb2769, label %bb2839

bb2769:                                           ; preds = %bb2764
  %i2770 = add nsw i32 %i2747, 1
  br label %bb2771

bb2771:                                           ; preds = %bb2769, %bb91
  %i2772 = phi i32 [ %i2738, %bb2769 ], [ %i41, %bb91 ]
  %i2773 = phi i32 [ %i2739, %bb2769 ], [ %i93, %bb91 ]
  %i2774 = phi ptr [ %i2740, %bb2769 ], [ %i57, %bb91 ]
  %i2775 = phi ptr [ %i2741, %bb2769 ], [ %i55, %bb91 ]
  %i2776 = phi ptr [ %i2742, %bb2769 ], [ %i53, %bb91 ]
  %i2777 = phi i32 [ %i2743, %bb2769 ], [ %i51, %bb91 ]
  %i2778 = phi i32 [ %i2744, %bb2769 ], [ %i49, %bb91 ]
  %i2779 = phi i32 [ %i2745, %bb2769 ], [ %i47, %bb91 ]
  %i2780 = phi i32 [ %i2746, %bb2769 ], [ %i45, %bb91 ]
  %i2781 = phi i32 [ %i2770, %bb2769 ], [ %i43, %bb91 ]
  %i2782 = phi i32 [ %i2748, %bb2769 ], [ %i39, %bb91 ]
  %i2783 = phi i32 [ %i2749, %bb2769 ], [ %i37, %bb91 ]
  %i2784 = phi i32 [ %i2750, %bb2769 ], [ %i35, %bb91 ]
  %i2785 = phi i32 [ %i2751, %bb2769 ], [ %i33, %bb91 ]
  %i2786 = phi i32 [ %i2752, %bb2769 ], [ %i31, %bb91 ]
  %i2787 = phi i32 [ %i2753, %bb2769 ], [ %i29, %bb91 ]
  %i2788 = phi i32 [ %i2754, %bb2769 ], [ %i27, %bb91 ]
  %i2789 = phi i32 [ %i2755, %bb2769 ], [ %i25, %bb91 ]
  %i2790 = phi i32 [ %i2756, %bb2769 ], [ %i23, %bb91 ]
  %i2791 = phi i32 [ %i2757, %bb2769 ], [ %i21, %bb91 ]
  %i2792 = phi i32 [ %i2758, %bb2769 ], [ %i19, %bb91 ]
  %i2793 = phi i32 [ %i2759, %bb2769 ], [ %i17, %bb91 ]
  %i2794 = phi i32 [ %i2760, %bb2769 ], [ %i15, %bb91 ]
  %i2795 = phi i32 [ %i2761, %bb2769 ], [ %i13, %bb91 ]
  %i2796 = phi i32 [ %i2762, %bb2769 ], [ %i11, %bb91 ]
  store i32 39, ptr %i2, align 8, !tbaa !153
  %i2797 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i2798 = icmp sgt i32 %i2773, 0
  br i1 %i2798, label %bb2799, label %bb2802

bb2799:                                           ; preds = %bb2771
  %i2800 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i2801 = load i32, ptr %i2800, align 8, !tbaa !155
  br label %bb2809

bb2802:                                           ; preds = %bb2771
  %i2803 = load ptr, ptr %arg, align 8, !tbaa !151
  %i2804 = getelementptr inbounds %struct.bz_stream, ptr %i2803, i64 0, i32 1
  %i2805 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i2806 = getelementptr inbounds %struct.bz_stream, ptr %i2803, i64 0, i32 2
  %i2807 = getelementptr inbounds %struct.bz_stream, ptr %i2803, i64 0, i32 3
  %i2808 = load i32, ptr %i2804, align 8, !tbaa !141
  br label %bb2817

bb2809.loopexit:                                  ; preds = %bb2837
  br label %bb2809

bb2809:                                           ; preds = %bb2809.loopexit, %bb2799
  %i2810 = phi i32 [ %i2801, %bb2799 ], [ %i2827, %bb2809.loopexit ]
  %i2811 = phi i32 [ %i2773, %bb2799 ], [ %i2828, %bb2809.loopexit ]
  %i2812 = add nsw i32 %i2811, -1
  %i2813 = lshr i32 %i2810, %i2812
  %i2814 = and i32 %i2813, 1
  store i32 %i2812, ptr %i2797, align 4, !tbaa !154
  %i2815 = shl i32 %i2780, 1
  %i2816 = or disjoint i32 %i2814, %i2815
  br label %bb2737

bb2817:                                           ; preds = %bb2837.bb2817_crit_edge, %bb2802
  %i2818 = phi i32 [ %i2808, %bb2802 ], [ %i2830, %bb2837.bb2817_crit_edge ]
  %i2819 = phi i32 [ %i2773, %bb2802 ], [ %i2828, %bb2837.bb2817_crit_edge ]
  %i2820 = icmp eq i32 %i2818, 0
  br i1 %i2820, label %bb4390.loopexit17, label %bb2821

bb2821:                                           ; preds = %bb2817
  %i2822 = load i32, ptr %i2805, align 8, !tbaa !155
  %i2823 = shl i32 %i2822, 8
  %i2824 = load ptr, ptr %i2803, align 8, !tbaa !147
  %i2825 = load i8, ptr %i2824, align 1, !tbaa !21
  %i2826 = zext i8 %i2825 to i32
  %i2827 = or disjoint i32 %i2823, %i2826
  store i32 %i2827, ptr %i2805, align 8, !tbaa !155
  %i2828 = add nsw i32 %i2819, 8
  store i32 %i2828, ptr %i2797, align 4, !tbaa !154
  %i2829 = getelementptr inbounds i8, ptr %i2824, i64 1
  store ptr %i2829, ptr %i2803, align 8, !tbaa !147
  %i2830 = add i32 %i2818, -1
  store i32 %i2830, ptr %i2804, align 8, !tbaa !141
  %i2831 = load i32, ptr %i2806, align 4, !tbaa !131
  %i2832 = add i32 %i2831, 1
  store i32 %i2832, ptr %i2806, align 4, !tbaa !131
  %i2833 = icmp eq i32 %i2832, 0
  br i1 %i2833, label %bb2834, label %bb2821.bb2837_crit_edge

bb2821.bb2837_crit_edge:                          ; preds = %bb2821
  br label %bb2837

bb2834:                                           ; preds = %bb2821
  %i2835 = load i32, ptr %i2807, align 8, !tbaa !132
  %i2836 = add i32 %i2835, 1
  store i32 %i2836, ptr %i2807, align 8, !tbaa !132
  br label %bb2837

bb2837:                                           ; preds = %bb2821.bb2837_crit_edge, %bb2834
  %i2838 = icmp sgt i32 %i2819, -8
  br i1 %i2838, label %bb2809.loopexit, label %bb2837.bb2817_crit_edge

bb2837.bb2817_crit_edge:                          ; preds = %bb2837
  br label %bb2817

bb2839:                                           ; preds = %bb2764
  %i2840 = getelementptr inbounds i32, ptr %i2741, i64 %i2765
  %i2841 = load i32, ptr %i2840, align 4, !tbaa !19
  %i2842 = sub nsw i32 %i2746, %i2841
  %i2843 = icmp ugt i32 %i2842, 257
  br i1 %i2843, label %bb2839.bb4390_crit_edge, label %bb2844

bb2839.bb4390_crit_edge:                          ; preds = %bb2839
  br label %bb4390

bb2844:                                           ; preds = %bb2839
  %i2845 = zext nneg i32 %i2842 to i64
  %i2846 = getelementptr inbounds i32, ptr %i2740, i64 %i2845
  %i2847 = load i32, ptr %i2846, align 4, !tbaa !19
  %i2848 = icmp ult i32 %i2847, 2
  br i1 %i2848, label %bb2844.bb2616_crit_edge, label %bb2849, !llvm.loop !271

bb2844.bb2616_crit_edge:                          ; preds = %bb2844
  br label %bb2616

bb2849:                                           ; preds = %bb2844
  %i2850 = add nsw i32 %i2750, 1
  %i2851 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 32
  %i2852 = load i32, ptr %i2851, align 4, !tbaa !19
  %i2853 = sext i32 %i2852 to i64
  %i2854 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2853
  %i2855 = load i8, ptr %i2854, align 1, !tbaa !21
  %i2856 = zext i8 %i2855 to i64
  %i2857 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 30, i64 %i2856
  %i2858 = load i8, ptr %i2857, align 1, !tbaa !21
  %i2859 = zext i8 %i2858 to i64
  %i2860 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 16, i64 %i2859
  %i2861 = load i32, ptr %i2860, align 4, !tbaa !19
  %i2862 = add nsw i32 %i2861, %i2850
  store i32 %i2862, ptr %i2860, align 4, !tbaa !19
  %i2863 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 10
  %i2864 = load i8, ptr %i2863, align 4, !tbaa !157
  %i2865 = icmp eq i8 %i2864, 0
  %i2866 = icmp sgt i32 %i2750, -1
  br i1 %i2865, label %bb2874, label %bb2867

bb2867:                                           ; preds = %bb2849
  br i1 %i2866, label %bb2868, label %bb2867.bb2588_crit_edge

bb2867.bb2588_crit_edge:                          ; preds = %bb2867
  br label %bb2588

bb2868:                                           ; preds = %bb2867
  %i2869 = zext i8 %i2858 to i16
  %i2870 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 21
  %i2871 = sext i32 %i2751 to i64
  %i2872 = tail call i32 @llvm.smax.i32(i32 %i2751, i32 %i2752)
  %i2873 = sext i32 %i2872 to i64
  br label %bb2881

bb2874:                                           ; preds = %bb2849
  br i1 %i2866, label %bb2875, label %bb2874.bb2588_crit_edge

bb2874.bb2588_crit_edge:                          ; preds = %bb2874
  br label %bb2588

bb2875:                                           ; preds = %bb2874
  %i2876 = zext i8 %i2858 to i32
  %i2877 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 20
  %i2878 = sext i32 %i2751 to i64
  %i2879 = tail call i32 @llvm.smax.i32(i32 %i2751, i32 %i2752)
  %i2880 = sext i32 %i2879 to i64
  br label %bb2891

bb2881:                                           ; preds = %bb2885.bb2881_crit_edge, %bb2868
  %i2882 = phi i64 [ %i2871, %bb2868 ], [ %i2888, %bb2885.bb2881_crit_edge ]
  %i2883 = phi i32 [ %i2850, %bb2868 ], [ %i2889, %bb2885.bb2881_crit_edge ]
  %i2884 = icmp eq i64 %i2882, %i2873
  br i1 %i2884, label %bb4390.loopexit19, label %bb2885

bb2885:                                           ; preds = %bb2881
  %i2886 = load ptr, ptr %i2870, align 8, !tbaa !169
  %i2887 = getelementptr inbounds i16, ptr %i2886, i64 %i2882
  store i16 %i2869, ptr %i2887, align 2, !tbaa !22
  %i2888 = add nsw i64 %i2882, 1
  %i2889 = add nsw i32 %i2883, -1
  %i2890 = icmp sgt i32 %i2883, 1
  br i1 %i2890, label %bb2885.bb2881_crit_edge, label %bb2903, !llvm.loop !272

bb2885.bb2881_crit_edge:                          ; preds = %bb2885
  br label %bb2881

bb2891:                                           ; preds = %bb2895.bb2891_crit_edge, %bb2875
  %i2892 = phi i64 [ %i2878, %bb2875 ], [ %i2898, %bb2895.bb2891_crit_edge ]
  %i2893 = phi i32 [ %i2850, %bb2875 ], [ %i2899, %bb2895.bb2891_crit_edge ]
  %i2894 = icmp eq i64 %i2892, %i2880
  br i1 %i2894, label %bb4390.loopexit18, label %bb2895

bb2895:                                           ; preds = %bb2891
  %i2896 = load ptr, ptr %i2877, align 8, !tbaa !173
  %i2897 = getelementptr inbounds i32, ptr %i2896, i64 %i2892
  store i32 %i2876, ptr %i2897, align 4, !tbaa !19
  %i2898 = add nsw i64 %i2892, 1
  %i2899 = add nsw i32 %i2893, -1
  %i2900 = icmp sgt i32 %i2893, 1
  br i1 %i2900, label %bb2895.bb2891_crit_edge, label %bb2901, !llvm.loop !273

bb2895.bb2891_crit_edge:                          ; preds = %bb2895
  br label %bb2891

bb2901:                                           ; preds = %bb2895
  %i2902 = trunc i64 %i2898 to i32
  br label %bb2588

bb2903:                                           ; preds = %bb2885
  %i2904 = trunc i64 %i2888 to i32
  br label %bb2588

bb2905:                                           ; preds = %bb2614
  %i2906 = icmp slt i32 %i2601, %i2602
  br i1 %i2906, label %bb2907, label %bb2905.bb4390_crit_edge

bb2905.bb4390_crit_edge:                          ; preds = %bb2905
  br label %bb4390

bb2907:                                           ; preds = %bb2905
  %i2908 = add i32 %i2603, -1
  %i2909 = icmp ult i32 %i2603, 17
  br i1 %i2909, label %bb2910, label %bb2989

bb2910:                                           ; preds = %bb2907
  %i2911 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 32
  %i2912 = load i32, ptr %i2911, align 4, !tbaa !19
  %i2913 = add i32 %i2912, %i2908
  %i2914 = zext i32 %i2913 to i64
  %i2915 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2914
  %i2916 = load i8, ptr %i2915, align 1, !tbaa !21
  %i2917 = icmp ugt i32 %i2908, 3
  br i1 %i2917, label %bb2918, label %bb2910.bb2922_crit_edge

bb2910.bb2922_crit_edge:                          ; preds = %bb2910
  br label %bb2922

bb2918:                                           ; preds = %bb2910
  %i2919 = zext nneg i32 %i2908 to i64
  br label %bb2939

bb2920:                                           ; preds = %bb2939
  %i2921 = icmp eq i32 %i2962, 0
  br i1 %i2921, label %bb2920.bb2986_crit_edge, label %bb2920.bb2922_crit_edge

bb2920.bb2922_crit_edge:                          ; preds = %bb2920
  br label %bb2922

bb2920.bb2986_crit_edge:                          ; preds = %bb2920
  br label %bb2986

bb2922:                                           ; preds = %bb2920.bb2922_crit_edge, %bb2910.bb2922_crit_edge
  %i2923 = phi i32 [ %i2962, %bb2920.bb2922_crit_edge ], [ %i2908, %bb2910.bb2922_crit_edge ]
  %i2924 = zext nneg i32 %i2923 to i64
  %i2925 = and i32 %i2923, 1
  %i2926 = icmp eq i32 %i2925, 0
  br i1 %i2926, label %bb2922.bb2936_crit_edge, label %bb2927

bb2922.bb2936_crit_edge:                          ; preds = %bb2922
  br label %bb2936

bb2927:                                           ; preds = %bb2922
  %i2928 = add i32 %i2912, %i2923
  %i2929 = add i32 %i2928, -1
  %i2930 = zext i32 %i2929 to i64
  %i2931 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2930
  %i2932 = load i8, ptr %i2931, align 1, !tbaa !21
  %i2933 = zext i32 %i2928 to i64
  %i2934 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2933
  store i8 %i2932, ptr %i2934, align 1, !tbaa !21
  %i2935 = add nsw i64 %i2924, -1
  br label %bb2936

bb2936:                                           ; preds = %bb2922.bb2936_crit_edge, %bb2927
  %i2937 = phi i64 [ %i2924, %bb2922.bb2936_crit_edge ], [ %i2935, %bb2927 ]
  %i2938 = icmp eq i32 %i2923, 1
  br i1 %i2938, label %bb2936.bb2986_crit_edge, label %bb2964.preheader

bb2936.bb2986_crit_edge:                          ; preds = %bb2936
  br label %bb2986

bb2964.preheader:                                 ; preds = %bb2936
  br label %bb2964

bb2939:                                           ; preds = %bb2939.bb2939_crit_edge, %bb2918
  %i2940 = phi i64 [ %i2919, %bb2918 ], [ %i2961, %bb2939.bb2939_crit_edge ]
  %i2941 = trunc i64 %i2940 to i32
  %i2942 = add i32 %i2912, %i2941
  %i2943 = add nsw i32 %i2942, -1
  %i2944 = sext i32 %i2943 to i64
  %i2945 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2944
  %i2946 = load i8, ptr %i2945, align 1, !tbaa !21
  %i2947 = sext i32 %i2942 to i64
  %i2948 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2947
  store i8 %i2946, ptr %i2948, align 1, !tbaa !21
  %i2949 = add nsw i32 %i2942, -2
  %i2950 = sext i32 %i2949 to i64
  %i2951 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2950
  %i2952 = load i8, ptr %i2951, align 1, !tbaa !21
  store i8 %i2952, ptr %i2945, align 1, !tbaa !21
  %i2953 = add nsw i32 %i2942, -3
  %i2954 = sext i32 %i2953 to i64
  %i2955 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2954
  %i2956 = load i8, ptr %i2955, align 1, !tbaa !21
  store i8 %i2956, ptr %i2951, align 1, !tbaa !21
  %i2957 = add nsw i32 %i2942, -4
  %i2958 = sext i32 %i2957 to i64
  %i2959 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2958
  %i2960 = load i8, ptr %i2959, align 1, !tbaa !21
  store i8 %i2960, ptr %i2955, align 1, !tbaa !21
  %i2961 = add i64 %i2940, -4
  %i2962 = trunc i64 %i2961 to i32
  %i2963 = icmp ugt i32 %i2962, 3
  br i1 %i2963, label %bb2939.bb2939_crit_edge, label %bb2920, !llvm.loop !274

bb2939.bb2939_crit_edge:                          ; preds = %bb2939
  br label %bb2939

bb2964:                                           ; preds = %bb2964.bb2964_crit_edge, %bb2964.preheader
  %i2965 = phi i64 [ %i2983, %bb2964.bb2964_crit_edge ], [ %i2937, %bb2964.preheader ]
  %i2966 = trunc i64 %i2965 to i32
  %i2967 = add i32 %i2912, %i2966
  %i2968 = add i32 %i2967, -1
  %i2969 = zext i32 %i2968 to i64
  %i2970 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2969
  %i2971 = load i8, ptr %i2970, align 1, !tbaa !21
  %i2972 = zext i32 %i2967 to i64
  %i2973 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2972
  store i8 %i2971, ptr %i2973, align 1, !tbaa !21
  %i2974 = trunc i64 %i2965 to i32
  %i2975 = add i32 %i2974, -1
  %i2976 = add i32 %i2912, %i2975
  %i2977 = add i32 %i2976, -1
  %i2978 = zext i32 %i2977 to i64
  %i2979 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2978
  %i2980 = load i8, ptr %i2979, align 1, !tbaa !21
  %i2981 = zext i32 %i2976 to i64
  %i2982 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2981
  store i8 %i2980, ptr %i2982, align 1, !tbaa !21
  %i2983 = add nsw i64 %i2965, -2
  %i2984 = and i64 %i2983, 4294967295
  %i2985 = icmp eq i64 %i2984, 0
  br i1 %i2985, label %bb2986.loopexit, label %bb2964.bb2964_crit_edge, !llvm.loop !275

bb2964.bb2964_crit_edge:                          ; preds = %bb2964
  br label %bb2964

bb2986.loopexit:                                  ; preds = %bb2964
  br label %bb2986

bb2986:                                           ; preds = %bb2936.bb2986_crit_edge, %bb2920.bb2986_crit_edge, %bb2986.loopexit
  %i2987 = sext i32 %i2912 to i64
  %i2988 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2987
  store i8 %i2916, ptr %i2988, align 1, !tbaa !21
  br label %bb3159

bb2989:                                           ; preds = %bb2907
  %i2990 = lshr i32 %i2908, 4
  %i2991 = and i32 %i2908, 15
  %i2992 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 32
  %i2993 = zext nneg i32 %i2990 to i64
  %i2994 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 32, i64 %i2993
  %i2995 = load i32, ptr %i2994, align 4, !tbaa !19
  %i2996 = add nsw i32 %i2995, %i2991
  %i2997 = sext i32 %i2996 to i64
  %i2998 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i2997
  %i2999 = load i8, ptr %i2998, align 1, !tbaa !21
  %i3000 = icmp eq i32 %i2991, 0
  br i1 %i3000, label %bb2989.bb3016_crit_edge, label %bb3001

bb2989.bb3016_crit_edge:                          ; preds = %bb2989
  br label %bb3016

bb3001:                                           ; preds = %bb2989
  %i3002 = sext i32 %i2995 to i64
  %i3003 = add i32 %i2603, 15
  %i3004 = and i32 %i3003, 15
  %i3005 = zext nneg i32 %i3004 to i64
  %i3006 = add nsw i64 %i3002, %i3005
  br label %bb3007

bb3007:                                           ; preds = %bb3007.bb3007_crit_edge, %bb3001
  %i3008 = phi i64 [ %i3006, %bb3001 ], [ %i3009, %bb3007.bb3007_crit_edge ]
  %i3009 = add nsw i64 %i3008, -1
  %i3010 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3009
  %i3011 = load i8, ptr %i3010, align 1, !tbaa !21
  %i3012 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3008
  store i8 %i3011, ptr %i3012, align 1, !tbaa !21
  %i3013 = load i32, ptr %i2994, align 4, !tbaa !19
  %i3014 = sext i32 %i3013 to i64
  %i3015 = icmp sgt i64 %i3009, %i3014
  br i1 %i3015, label %bb3007.bb3007_crit_edge, label %bb3016.loopexit, !llvm.loop !276

bb3007.bb3007_crit_edge:                          ; preds = %bb3007
  br label %bb3007

bb3016.loopexit:                                  ; preds = %bb3007
  br label %bb3016

bb3016:                                           ; preds = %bb2989.bb3016_crit_edge, %bb3016.loopexit
  %i3017 = phi i32 [ %i2995, %bb2989.bb3016_crit_edge ], [ %i3013, %bb3016.loopexit ]
  %i3018 = add nsw i32 %i3017, 1
  store i32 %i3018, ptr %i2994, align 4, !tbaa !19
  br label %bb3019

bb3019:                                           ; preds = %bb3019.bb3019_crit_edge, %bb3016
  %i3020 = phi i64 [ %i2993, %bb3016 ], [ %i3024, %bb3019.bb3019_crit_edge ]
  %i3021 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 32, i64 %i3020
  %i3022 = load i32, ptr %i3021, align 4, !tbaa !19
  %i3023 = add nsw i32 %i3022, -1
  store i32 %i3023, ptr %i3021, align 4, !tbaa !19
  %i3024 = add nsw i64 %i3020, -1
  %i3025 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 32, i64 %i3024
  %i3026 = load i32, ptr %i3025, align 4, !tbaa !19
  %i3027 = add nsw i32 %i3026, 15
  %i3028 = sext i32 %i3027 to i64
  %i3029 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3028
  %i3030 = load i8, ptr %i3029, align 1, !tbaa !21
  %i3031 = sext i32 %i3023 to i64
  %i3032 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3031
  store i8 %i3030, ptr %i3032, align 1, !tbaa !21
  %i3033 = icmp sgt i64 %i3020, 1
  br i1 %i3033, label %bb3019.bb3019_crit_edge, label %bb3034, !llvm.loop !277

bb3019.bb3019_crit_edge:                          ; preds = %bb3019
  br label %bb3019

bb3034:                                           ; preds = %bb3019
  %i3035 = load i32, ptr %i2992, align 4, !tbaa !19
  %i3036 = add nsw i32 %i3035, -1
  store i32 %i3036, ptr %i2992, align 4, !tbaa !19
  %i3037 = sext i32 %i3036 to i64
  %i3038 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3037
  store i8 %i2999, ptr %i3038, align 1, !tbaa !21
  %i3039 = load i32, ptr %i2992, align 4, !tbaa !19
  %i3040 = icmp eq i32 %i3039, 0
  br i1 %i3040, label %bb3041.preheader, label %bb3034.bb3159_crit_edge

bb3034.bb3159_crit_edge:                          ; preds = %bb3034
  br label %bb3159

bb3041.preheader:                                 ; preds = %bb3034
  br label %bb3041

bb3041:                                           ; preds = %bb3041.bb3041_crit_edge, %bb3041.preheader
  %i3042 = phi i64 [ %i3157, %bb3041.bb3041_crit_edge ], [ 15, %bb3041.preheader ]
  %i3043 = phi i64 [ %i3156, %bb3041.bb3041_crit_edge ], [ 4095, %bb3041.preheader ]
  %i3044 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 32, i64 %i3042
  %i3045 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3046 = add nsw i32 %i3045, 15
  %i3047 = sext i32 %i3046 to i64
  %i3048 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3047
  %i3049 = load i8, ptr %i3048, align 1, !tbaa !21
  %i3050 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3043
  store i8 %i3049, ptr %i3050, align 1, !tbaa !21
  %i3051 = add nsw i64 %i3043, -1
  %i3052 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3053 = add nsw i32 %i3052, 14
  %i3054 = sext i32 %i3053 to i64
  %i3055 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3054
  %i3056 = load i8, ptr %i3055, align 1, !tbaa !21
  %i3057 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3051
  store i8 %i3056, ptr %i3057, align 1, !tbaa !21
  %i3058 = add nsw i64 %i3043, -2
  %i3059 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3060 = add nsw i32 %i3059, 13
  %i3061 = sext i32 %i3060 to i64
  %i3062 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3061
  %i3063 = load i8, ptr %i3062, align 1, !tbaa !21
  %i3064 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3058
  store i8 %i3063, ptr %i3064, align 1, !tbaa !21
  %i3065 = add nsw i64 %i3043, -3
  %i3066 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3067 = add nsw i32 %i3066, 12
  %i3068 = sext i32 %i3067 to i64
  %i3069 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3068
  %i3070 = load i8, ptr %i3069, align 1, !tbaa !21
  %i3071 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3065
  store i8 %i3070, ptr %i3071, align 1, !tbaa !21
  %i3072 = add nsw i64 %i3043, -4
  %i3073 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3074 = add nsw i32 %i3073, 11
  %i3075 = sext i32 %i3074 to i64
  %i3076 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3075
  %i3077 = load i8, ptr %i3076, align 1, !tbaa !21
  %i3078 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3072
  store i8 %i3077, ptr %i3078, align 1, !tbaa !21
  %i3079 = add nsw i64 %i3043, -5
  %i3080 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3081 = add nsw i32 %i3080, 10
  %i3082 = sext i32 %i3081 to i64
  %i3083 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3082
  %i3084 = load i8, ptr %i3083, align 1, !tbaa !21
  %i3085 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3079
  store i8 %i3084, ptr %i3085, align 1, !tbaa !21
  %i3086 = add nsw i64 %i3043, -6
  %i3087 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3088 = add nsw i32 %i3087, 9
  %i3089 = sext i32 %i3088 to i64
  %i3090 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3089
  %i3091 = load i8, ptr %i3090, align 1, !tbaa !21
  %i3092 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3086
  store i8 %i3091, ptr %i3092, align 1, !tbaa !21
  %i3093 = add nsw i64 %i3043, -7
  %i3094 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3095 = add nsw i32 %i3094, 8
  %i3096 = sext i32 %i3095 to i64
  %i3097 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3096
  %i3098 = load i8, ptr %i3097, align 1, !tbaa !21
  %i3099 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3093
  store i8 %i3098, ptr %i3099, align 1, !tbaa !21
  %i3100 = add nsw i64 %i3043, -8
  %i3101 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3102 = add nsw i32 %i3101, 7
  %i3103 = sext i32 %i3102 to i64
  %i3104 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3103
  %i3105 = load i8, ptr %i3104, align 1, !tbaa !21
  %i3106 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3100
  store i8 %i3105, ptr %i3106, align 1, !tbaa !21
  %i3107 = add nsw i64 %i3043, -9
  %i3108 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3109 = add nsw i32 %i3108, 6
  %i3110 = sext i32 %i3109 to i64
  %i3111 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3110
  %i3112 = load i8, ptr %i3111, align 1, !tbaa !21
  %i3113 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3107
  store i8 %i3112, ptr %i3113, align 1, !tbaa !21
  %i3114 = add nsw i64 %i3043, -10
  %i3115 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3116 = add nsw i32 %i3115, 5
  %i3117 = sext i32 %i3116 to i64
  %i3118 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3117
  %i3119 = load i8, ptr %i3118, align 1, !tbaa !21
  %i3120 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3114
  store i8 %i3119, ptr %i3120, align 1, !tbaa !21
  %i3121 = add nsw i64 %i3043, -11
  %i3122 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3123 = add nsw i32 %i3122, 4
  %i3124 = sext i32 %i3123 to i64
  %i3125 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3124
  %i3126 = load i8, ptr %i3125, align 1, !tbaa !21
  %i3127 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3121
  store i8 %i3126, ptr %i3127, align 1, !tbaa !21
  %i3128 = add nsw i64 %i3043, -12
  %i3129 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3130 = add nsw i32 %i3129, 3
  %i3131 = sext i32 %i3130 to i64
  %i3132 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3131
  %i3133 = load i8, ptr %i3132, align 1, !tbaa !21
  %i3134 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3128
  store i8 %i3133, ptr %i3134, align 1, !tbaa !21
  %i3135 = add nsw i64 %i3043, -13
  %i3136 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3137 = add nsw i32 %i3136, 2
  %i3138 = sext i32 %i3137 to i64
  %i3139 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3138
  %i3140 = load i8, ptr %i3139, align 1, !tbaa !21
  %i3141 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3135
  store i8 %i3140, ptr %i3141, align 1, !tbaa !21
  %i3142 = add nsw i64 %i3043, -14
  %i3143 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3144 = add nsw i32 %i3143, 1
  %i3145 = sext i32 %i3144 to i64
  %i3146 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3145
  %i3147 = load i8, ptr %i3146, align 1, !tbaa !21
  %i3148 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3142
  store i8 %i3147, ptr %i3148, align 1, !tbaa !21
  %i3149 = add nsw i64 %i3043, -15
  %i3150 = load i32, ptr %i3044, align 4, !tbaa !19
  %i3151 = sext i32 %i3150 to i64
  %i3152 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3151
  %i3153 = load i8, ptr %i3152, align 1, !tbaa !21
  %i3154 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 31, i64 %i3149
  store i8 %i3153, ptr %i3154, align 1, !tbaa !21
  %i3155 = trunc i64 %i3149 to i32
  %i3156 = add nsw i64 %i3043, -16
  store i32 %i3155, ptr %i3044, align 4, !tbaa !19
  %i3157 = add nsw i64 %i3042, -1
  %i3158 = icmp eq i64 %i3042, 0
  br i1 %i3158, label %bb3159.loopexit, label %bb3041.bb3041_crit_edge, !llvm.loop !278

bb3041.bb3041_crit_edge:                          ; preds = %bb3041
  br label %bb3041

bb3159.loopexit:                                  ; preds = %bb3041
  br label %bb3159

bb3159:                                           ; preds = %bb3034.bb3159_crit_edge, %bb3159.loopexit, %bb2986
  %i3160 = phi i8 [ %i2916, %bb2986 ], [ %i2999, %bb3034.bb3159_crit_edge ], [ %i2999, %bb3159.loopexit ]
  %i3161 = zext i8 %i3160 to i64
  %i3162 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 30, i64 %i3161
  %i3163 = load i8, ptr %i3162, align 1, !tbaa !21
  %i3164 = zext i8 %i3163 to i64
  %i3165 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 16, i64 %i3164
  %i3166 = load i32, ptr %i3165, align 4, !tbaa !19
  %i3167 = add nsw i32 %i3166, 1
  store i32 %i3167, ptr %i3165, align 4, !tbaa !19
  %i3168 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 10
  %i3169 = load i8, ptr %i3168, align 4, !tbaa !157
  %i3170 = icmp eq i8 %i3169, 0
  %i3171 = sext i32 %i2601 to i64
  br i1 %i3170, label %bb3177, label %bb3172

bb3172:                                           ; preds = %bb3159
  %i3173 = zext i8 %i3163 to i16
  %i3174 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 21
  %i3175 = load ptr, ptr %i3174, align 8, !tbaa !169
  %i3176 = getelementptr inbounds i16, ptr %i3175, i64 %i3171
  store i16 %i3173, ptr %i3176, align 2, !tbaa !22
  br label %bb3182

bb3177:                                           ; preds = %bb3159
  %i3178 = zext i8 %i3163 to i32
  %i3179 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 20
  %i3180 = load ptr, ptr %i3179, align 8, !tbaa !173
  %i3181 = getelementptr inbounds i32, ptr %i3180, i64 %i3171
  store i32 %i3178, ptr %i3181, align 4, !tbaa !19
  br label %bb3182

bb3182:                                           ; preds = %bb3177, %bb3172
  %i3183 = add nsw i32 %i2601, 1
  %i3184 = icmp eq i32 %i2604, 0
  br i1 %i3184, label %bb3185, label %bb3182.bb3199_crit_edge

bb3182.bb3199_crit_edge:                          ; preds = %bb3182
  br label %bb3199

bb3185:                                           ; preds = %bb3182
  %i3186 = add nsw i32 %i2605, 1
  %i3187 = icmp slt i32 %i3186, %i2607
  br i1 %i3187, label %bb3188, label %bb3185.bb4390_crit_edge

bb3185.bb4390_crit_edge:                          ; preds = %bb3185
  br label %bb4390

bb3188:                                           ; preds = %bb3185
  %i3189 = sext i32 %i3186 to i64
  %i3190 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 33, i64 %i3189
  %i3191 = load i8, ptr %i3190, align 1, !tbaa !21
  %i3192 = zext i8 %i3191 to i32
  %i3193 = zext i8 %i3191 to i64
  %i3194 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 39, i64 %i3193
  %i3195 = load i32, ptr %i3194, align 4, !tbaa !19
  %i3196 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 36, i64 %i3193
  %i3197 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 38, i64 %i3193
  %i3198 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 37, i64 %i3193
  br label %bb3199

bb3199:                                           ; preds = %bb3182.bb3199_crit_edge, %bb3188
  %i3200 = phi ptr [ %i3197, %bb3188 ], [ %i2590, %bb3182.bb3199_crit_edge ]
  %i3201 = phi ptr [ %i3198, %bb3188 ], [ %i2591, %bb3182.bb3199_crit_edge ]
  %i3202 = phi ptr [ %i3196, %bb3188 ], [ %i2592, %bb3182.bb3199_crit_edge ]
  %i3203 = phi i32 [ %i3195, %bb3188 ], [ %i2593, %bb3182.bb3199_crit_edge ]
  %i3204 = phi i32 [ %i3192, %bb3188 ], [ %i2594, %bb3182.bb3199_crit_edge ]
  %i3205 = phi i32 [ 50, %bb3188 ], [ %i2604, %bb3182.bb3199_crit_edge ]
  %i3206 = phi i32 [ %i3186, %bb3188 ], [ %i2605, %bb3182.bb3199_crit_edge ]
  %i3207 = add nsw i32 %i3205, -1
  br label %bb3208

bb3208:                                           ; preds = %bb10.bb3208_crit_edge, %bb3199
  %i3209 = phi i32 [ %i2589, %bb3199 ], [ %i41, %bb10.bb3208_crit_edge ]
  %i3210 = phi ptr [ %i3200, %bb3199 ], [ %i57, %bb10.bb3208_crit_edge ]
  %i3211 = phi ptr [ %i3201, %bb3199 ], [ %i55, %bb10.bb3208_crit_edge ]
  %i3212 = phi ptr [ %i3202, %bb3199 ], [ %i53, %bb10.bb3208_crit_edge ]
  %i3213 = phi i32 [ %i3203, %bb3199 ], [ %i51, %bb10.bb3208_crit_edge ]
  %i3214 = phi i32 [ %i3204, %bb3199 ], [ %i49, %bb10.bb3208_crit_edge ]
  %i3215 = phi i32 [ %i2595, %bb3199 ], [ %i47, %bb10.bb3208_crit_edge ]
  %i3216 = phi i32 [ %i2596, %bb3199 ], [ %i45, %bb10.bb3208_crit_edge ]
  %i3217 = phi i32 [ %i3203, %bb3199 ], [ %i43, %bb10.bb3208_crit_edge ]
  %i3218 = phi i32 [ %i2598, %bb3199 ], [ %i39, %bb10.bb3208_crit_edge ]
  %i3219 = phi i32 [ %i2599, %bb3199 ], [ %i37, %bb10.bb3208_crit_edge ]
  %i3220 = phi i32 [ %i2600, %bb3199 ], [ %i35, %bb10.bb3208_crit_edge ]
  %i3221 = phi i32 [ %i3183, %bb3199 ], [ %i33, %bb10.bb3208_crit_edge ]
  %i3222 = phi i32 [ %i2602, %bb3199 ], [ %i31, %bb10.bb3208_crit_edge ]
  %i3223 = phi i32 [ %i2603, %bb3199 ], [ %i29, %bb10.bb3208_crit_edge ]
  %i3224 = phi i32 [ %i3207, %bb3199 ], [ %i27, %bb10.bb3208_crit_edge ]
  %i3225 = phi i32 [ %i3206, %bb3199 ], [ %i25, %bb10.bb3208_crit_edge ]
  %i3226 = phi i32 [ %i2606, %bb3199 ], [ %i23, %bb10.bb3208_crit_edge ]
  %i3227 = phi i32 [ %i2607, %bb3199 ], [ %i21, %bb10.bb3208_crit_edge ]
  %i3228 = phi i32 [ %i2608, %bb3199 ], [ %i19, %bb10.bb3208_crit_edge ]
  %i3229 = phi i32 [ %i2609, %bb3199 ], [ %i17, %bb10.bb3208_crit_edge ]
  %i3230 = phi i32 [ %i2610, %bb3199 ], [ %i15, %bb10.bb3208_crit_edge ]
  %i3231 = phi i32 [ %i2611, %bb3199 ], [ %i13, %bb10.bb3208_crit_edge ]
  %i3232 = phi i32 [ %i2612, %bb3199 ], [ %i11, %bb10.bb3208_crit_edge ]
  store i32 40, ptr %i2, align 8, !tbaa !153
  %i3233 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i3234 = load i32, ptr %i3233, align 4, !tbaa !154
  %i3235 = icmp slt i32 %i3234, %i3217
  br i1 %i3235, label %bb3239, label %bb3236

bb3236:                                           ; preds = %bb3208
  %i3237 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i3238 = load i32, ptr %i3237, align 8, !tbaa !155
  br label %bb3246

bb3239:                                           ; preds = %bb3208
  %i3240 = load ptr, ptr %arg, align 8, !tbaa !151
  %i3241 = getelementptr inbounds %struct.bz_stream, ptr %i3240, i64 0, i32 1
  %i3242 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i3243 = getelementptr inbounds %struct.bz_stream, ptr %i3240, i64 0, i32 2
  %i3244 = getelementptr inbounds %struct.bz_stream, ptr %i3240, i64 0, i32 3
  %i3245 = load i32, ptr %i3241, align 8, !tbaa !141
  br label %bb3254

bb3246.loopexit:                                  ; preds = %bb3274
  br label %bb3246

bb3246:                                           ; preds = %bb3246.loopexit, %bb3236
  %i3247 = phi i32 [ %i3238, %bb3236 ], [ %i3264, %bb3246.loopexit ]
  %i3248 = phi i32 [ %i3234, %bb3236 ], [ %i3265, %bb3246.loopexit ]
  %i3249 = sub nsw i32 %i3248, %i3217
  %i3250 = lshr i32 %i3247, %i3249
  %i3251 = shl nsw i32 -1, %i3217
  %i3252 = xor i32 %i3251, -1
  %i3253 = and i32 %i3250, %i3252
  store i32 %i3249, ptr %i3233, align 4, !tbaa !154
  br label %bb3276

bb3254:                                           ; preds = %bb3274.bb3254_crit_edge, %bb3239
  %i3255 = phi i32 [ %i3245, %bb3239 ], [ %i3267, %bb3274.bb3254_crit_edge ]
  %i3256 = phi i32 [ %i3234, %bb3239 ], [ %i3265, %bb3274.bb3254_crit_edge ]
  %i3257 = icmp eq i32 %i3255, 0
  br i1 %i3257, label %bb4390.loopexit22, label %bb3258

bb3258:                                           ; preds = %bb3254
  %i3259 = load i32, ptr %i3242, align 8, !tbaa !155
  %i3260 = shl i32 %i3259, 8
  %i3261 = load ptr, ptr %i3240, align 8, !tbaa !147
  %i3262 = load i8, ptr %i3261, align 1, !tbaa !21
  %i3263 = zext i8 %i3262 to i32
  %i3264 = or disjoint i32 %i3260, %i3263
  store i32 %i3264, ptr %i3242, align 8, !tbaa !155
  %i3265 = add nsw i32 %i3256, 8
  store i32 %i3265, ptr %i3233, align 4, !tbaa !154
  %i3266 = getelementptr inbounds i8, ptr %i3261, i64 1
  store ptr %i3266, ptr %i3240, align 8, !tbaa !147
  %i3267 = add i32 %i3255, -1
  store i32 %i3267, ptr %i3241, align 8, !tbaa !141
  %i3268 = load i32, ptr %i3243, align 4, !tbaa !131
  %i3269 = add i32 %i3268, 1
  store i32 %i3269, ptr %i3243, align 4, !tbaa !131
  %i3270 = icmp eq i32 %i3269, 0
  br i1 %i3270, label %bb3271, label %bb3258.bb3274_crit_edge

bb3258.bb3274_crit_edge:                          ; preds = %bb3258
  br label %bb3274

bb3271:                                           ; preds = %bb3258
  %i3272 = load i32, ptr %i3244, align 8, !tbaa !132
  %i3273 = add i32 %i3272, 1
  store i32 %i3273, ptr %i3244, align 8, !tbaa !132
  br label %bb3274

bb3274:                                           ; preds = %bb3258.bb3274_crit_edge, %bb3271
  %i3275 = icmp slt i32 %i3265, %i3217
  br i1 %i3275, label %bb3274.bb3254_crit_edge, label %bb3246.loopexit

bb3274.bb3254_crit_edge:                          ; preds = %bb3274
  br label %bb3254

bb3276:                                           ; preds = %bb3348, %bb3246
  %i3277 = phi i32 [ %i3311, %bb3348 ], [ %i3209, %bb3246 ]
  %i3278 = phi i32 [ %i3351, %bb3348 ], [ %i3249, %bb3246 ]
  %i3279 = phi ptr [ %i3313, %bb3348 ], [ %i3210, %bb3246 ]
  %i3280 = phi ptr [ %i3314, %bb3348 ], [ %i3211, %bb3246 ]
  %i3281 = phi ptr [ %i3315, %bb3348 ], [ %i3212, %bb3246 ]
  %i3282 = phi i32 [ %i3316, %bb3348 ], [ %i3213, %bb3246 ]
  %i3283 = phi i32 [ %i3317, %bb3348 ], [ %i3214, %bb3246 ]
  %i3284 = phi i32 [ %i3353, %bb3348 ], [ %i3215, %bb3246 ]
  %i3285 = phi i32 [ %i3355, %bb3348 ], [ %i3253, %bb3246 ]
  %i3286 = phi i32 [ %i3320, %bb3348 ], [ %i3217, %bb3246 ]
  %i3287 = phi i32 [ %i3321, %bb3348 ], [ %i3218, %bb3246 ]
  %i3288 = phi i32 [ %i3322, %bb3348 ], [ %i3219, %bb3246 ]
  %i3289 = phi i32 [ %i3323, %bb3348 ], [ %i3220, %bb3246 ]
  %i3290 = phi i32 [ %i3324, %bb3348 ], [ %i3221, %bb3246 ]
  %i3291 = phi i32 [ %i3325, %bb3348 ], [ %i3222, %bb3246 ]
  %i3292 = phi i32 [ %i3326, %bb3348 ], [ %i3223, %bb3246 ]
  %i3293 = phi i32 [ %i3327, %bb3348 ], [ %i3224, %bb3246 ]
  %i3294 = phi i32 [ %i3328, %bb3348 ], [ %i3225, %bb3246 ]
  %i3295 = phi i32 [ %i3329, %bb3348 ], [ %i3226, %bb3246 ]
  %i3296 = phi i32 [ %i3330, %bb3348 ], [ %i3227, %bb3246 ]
  %i3297 = phi i32 [ %i3331, %bb3348 ], [ %i3228, %bb3246 ]
  %i3298 = phi i32 [ %i3332, %bb3348 ], [ %i3229, %bb3246 ]
  %i3299 = phi i32 [ %i3333, %bb3348 ], [ %i3230, %bb3246 ]
  %i3300 = phi i32 [ %i3334, %bb3348 ], [ %i3231, %bb3246 ]
  %i3301 = phi i32 [ %i3335, %bb3348 ], [ %i3232, %bb3246 ]
  %i3302 = icmp sgt i32 %i3286, 20
  br i1 %i3302, label %bb3276.bb4390_crit_edge, label %bb3303

bb3276.bb4390_crit_edge:                          ; preds = %bb3276
  br label %bb4390

bb3303:                                           ; preds = %bb3276
  %i3304 = sext i32 %i3286 to i64
  %i3305 = getelementptr inbounds i32, ptr %i3281, i64 %i3304
  %i3306 = load i32, ptr %i3305, align 4, !tbaa !19
  %i3307 = icmp sgt i32 %i3285, %i3306
  br i1 %i3307, label %bb3308, label %bb3378

bb3308:                                           ; preds = %bb3303
  %i3309 = add nsw i32 %i3286, 1
  br label %bb3310

bb3310:                                           ; preds = %bb3308, %bb94
  %i3311 = phi i32 [ %i41, %bb94 ], [ %i3277, %bb3308 ]
  %i3312 = phi i32 [ %i96, %bb94 ], [ %i3278, %bb3308 ]
  %i3313 = phi ptr [ %i57, %bb94 ], [ %i3279, %bb3308 ]
  %i3314 = phi ptr [ %i55, %bb94 ], [ %i3280, %bb3308 ]
  %i3315 = phi ptr [ %i53, %bb94 ], [ %i3281, %bb3308 ]
  %i3316 = phi i32 [ %i51, %bb94 ], [ %i3282, %bb3308 ]
  %i3317 = phi i32 [ %i49, %bb94 ], [ %i3283, %bb3308 ]
  %i3318 = phi i32 [ %i47, %bb94 ], [ %i3284, %bb3308 ]
  %i3319 = phi i32 [ %i45, %bb94 ], [ %i3285, %bb3308 ]
  %i3320 = phi i32 [ %i43, %bb94 ], [ %i3309, %bb3308 ]
  %i3321 = phi i32 [ %i39, %bb94 ], [ %i3287, %bb3308 ]
  %i3322 = phi i32 [ %i37, %bb94 ], [ %i3288, %bb3308 ]
  %i3323 = phi i32 [ %i35, %bb94 ], [ %i3289, %bb3308 ]
  %i3324 = phi i32 [ %i33, %bb94 ], [ %i3290, %bb3308 ]
  %i3325 = phi i32 [ %i31, %bb94 ], [ %i3291, %bb3308 ]
  %i3326 = phi i32 [ %i29, %bb94 ], [ %i3292, %bb3308 ]
  %i3327 = phi i32 [ %i27, %bb94 ], [ %i3293, %bb3308 ]
  %i3328 = phi i32 [ %i25, %bb94 ], [ %i3294, %bb3308 ]
  %i3329 = phi i32 [ %i23, %bb94 ], [ %i3295, %bb3308 ]
  %i3330 = phi i32 [ %i21, %bb94 ], [ %i3296, %bb3308 ]
  %i3331 = phi i32 [ %i19, %bb94 ], [ %i3297, %bb3308 ]
  %i3332 = phi i32 [ %i17, %bb94 ], [ %i3298, %bb3308 ]
  %i3333 = phi i32 [ %i15, %bb94 ], [ %i3299, %bb3308 ]
  %i3334 = phi i32 [ %i13, %bb94 ], [ %i3300, %bb3308 ]
  %i3335 = phi i32 [ %i11, %bb94 ], [ %i3301, %bb3308 ]
  store i32 41, ptr %i2, align 8, !tbaa !153
  %i3336 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i3337 = icmp sgt i32 %i3312, 0
  br i1 %i3337, label %bb3338, label %bb3341

bb3338:                                           ; preds = %bb3310
  %i3339 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i3340 = load i32, ptr %i3339, align 8, !tbaa !155
  br label %bb3348

bb3341:                                           ; preds = %bb3310
  %i3342 = load ptr, ptr %arg, align 8, !tbaa !151
  %i3343 = getelementptr inbounds %struct.bz_stream, ptr %i3342, i64 0, i32 1
  %i3344 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i3345 = getelementptr inbounds %struct.bz_stream, ptr %i3342, i64 0, i32 2
  %i3346 = getelementptr inbounds %struct.bz_stream, ptr %i3342, i64 0, i32 3
  %i3347 = load i32, ptr %i3343, align 8, !tbaa !141
  br label %bb3356

bb3348.loopexit:                                  ; preds = %bb3376
  br label %bb3348

bb3348:                                           ; preds = %bb3348.loopexit, %bb3338
  %i3349 = phi i32 [ %i3340, %bb3338 ], [ %i3366, %bb3348.loopexit ]
  %i3350 = phi i32 [ %i3312, %bb3338 ], [ %i3367, %bb3348.loopexit ]
  %i3351 = add nsw i32 %i3350, -1
  %i3352 = lshr i32 %i3349, %i3351
  %i3353 = and i32 %i3352, 1
  store i32 %i3351, ptr %i3336, align 4, !tbaa !154
  %i3354 = shl i32 %i3319, 1
  %i3355 = or disjoint i32 %i3353, %i3354
  br label %bb3276

bb3356:                                           ; preds = %bb3376.bb3356_crit_edge, %bb3341
  %i3357 = phi i32 [ %i3347, %bb3341 ], [ %i3369, %bb3376.bb3356_crit_edge ]
  %i3358 = phi i32 [ %i3312, %bb3341 ], [ %i3367, %bb3376.bb3356_crit_edge ]
  %i3359 = icmp eq i32 %i3357, 0
  br i1 %i3359, label %bb4390.loopexit21, label %bb3360

bb3360:                                           ; preds = %bb3356
  %i3361 = load i32, ptr %i3344, align 8, !tbaa !155
  %i3362 = shl i32 %i3361, 8
  %i3363 = load ptr, ptr %i3342, align 8, !tbaa !147
  %i3364 = load i8, ptr %i3363, align 1, !tbaa !21
  %i3365 = zext i8 %i3364 to i32
  %i3366 = or disjoint i32 %i3362, %i3365
  store i32 %i3366, ptr %i3344, align 8, !tbaa !155
  %i3367 = add nsw i32 %i3358, 8
  store i32 %i3367, ptr %i3336, align 4, !tbaa !154
  %i3368 = getelementptr inbounds i8, ptr %i3363, i64 1
  store ptr %i3368, ptr %i3342, align 8, !tbaa !147
  %i3369 = add i32 %i3357, -1
  store i32 %i3369, ptr %i3343, align 8, !tbaa !141
  %i3370 = load i32, ptr %i3345, align 4, !tbaa !131
  %i3371 = add i32 %i3370, 1
  store i32 %i3371, ptr %i3345, align 4, !tbaa !131
  %i3372 = icmp eq i32 %i3371, 0
  br i1 %i3372, label %bb3373, label %bb3360.bb3376_crit_edge

bb3360.bb3376_crit_edge:                          ; preds = %bb3360
  br label %bb3376

bb3373:                                           ; preds = %bb3360
  %i3374 = load i32, ptr %i3346, align 8, !tbaa !132
  %i3375 = add i32 %i3374, 1
  store i32 %i3375, ptr %i3346, align 8, !tbaa !132
  br label %bb3376

bb3376:                                           ; preds = %bb3360.bb3376_crit_edge, %bb3373
  %i3377 = icmp sgt i32 %i3358, -8
  br i1 %i3377, label %bb3348.loopexit, label %bb3376.bb3356_crit_edge

bb3376.bb3356_crit_edge:                          ; preds = %bb3376
  br label %bb3356

bb3378:                                           ; preds = %bb3303
  %i3379 = getelementptr inbounds i32, ptr %i3280, i64 %i3304
  %i3380 = load i32, ptr %i3379, align 4, !tbaa !19
  %i3381 = sub nsw i32 %i3285, %i3380
  %i3382 = icmp ugt i32 %i3381, 257
  br i1 %i3382, label %bb3378.bb4390_crit_edge, label %bb3383

bb3378.bb4390_crit_edge:                          ; preds = %bb3378
  br label %bb4390

bb3383:                                           ; preds = %bb3378
  %i3384 = zext nneg i32 %i3381 to i64
  %i3385 = getelementptr inbounds i32, ptr %i3279, i64 %i3384
  %i3386 = load i32, ptr %i3385, align 4, !tbaa !19
  br label %bb2588

bb3387:                                           ; preds = %bb2588
  %i3388 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 13
  %i3389 = load i32, ptr %i3388, align 8, !tbaa !256
  %i3390 = icmp sgt i32 %i3389, -1
  %i3391 = icmp slt i32 %i3389, %i2601
  %i3392 = select i1 %i3390, i1 %i3391, i1 false
  br i1 %i3392, label %bb3393, label %bb3387.bb4390_crit_edge

bb3387.bb4390_crit_edge:                          ; preds = %bb3387
  br label %bb4390

bb3393:                                           ; preds = %bb3387
  %i3394 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18
  store i32 0, ptr %i3394, align 8, !tbaa !19
  br label %bb3395

bb3395:                                           ; preds = %bb3395.bb3395_crit_edge, %bb3393
  %i3396 = phi i64 [ 1, %bb3393 ], [ %i3415, %bb3395.bb3395_crit_edge ]
  %i3397 = add nsw i64 %i3396, -1
  %i3398 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 16, i64 %i3397
  %i3399 = load i32, ptr %i3398, align 4, !tbaa !19
  %i3400 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3396
  store i32 %i3399, ptr %i3400, align 4, !tbaa !19
  %i3401 = add nuw nsw i64 %i3396, 1
  %i3402 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 16, i64 %i3396
  %i3403 = load i32, ptr %i3402, align 4, !tbaa !19
  %i3404 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3401
  store i32 %i3403, ptr %i3404, align 4, !tbaa !19
  %i3405 = add nuw nsw i64 %i3396, 2
  %i3406 = add nuw nsw i64 %i3396, 1
  %i3407 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 16, i64 %i3406
  %i3408 = load i32, ptr %i3407, align 4, !tbaa !19
  %i3409 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3405
  store i32 %i3408, ptr %i3409, align 4, !tbaa !19
  %i3410 = add nuw nsw i64 %i3396, 3
  %i3411 = add nuw nsw i64 %i3396, 2
  %i3412 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 16, i64 %i3411
  %i3413 = load i32, ptr %i3412, align 4, !tbaa !19
  %i3414 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3410
  store i32 %i3413, ptr %i3414, align 4, !tbaa !19
  %i3415 = add nuw nsw i64 %i3396, 4
  %i3416 = icmp eq i64 %i3415, 257
  br i1 %i3416, label %bb3417.preheader, label %bb3395.bb3395_crit_edge, !llvm.loop !279

bb3395.bb3395_crit_edge:                          ; preds = %bb3395
  br label %bb3395

bb3417.preheader:                                 ; preds = %bb3395
  br label %bb3417

bb3417:                                           ; preds = %bb3417.bb3417_crit_edge, %bb3417.preheader
  %i3418 = phi i32 [ %i3434, %bb3417.bb3417_crit_edge ], [ 0, %bb3417.preheader ]
  %i3419 = phi i64 [ %i3435, %bb3417.bb3417_crit_edge ], [ 1, %bb3417.preheader ]
  %i3420 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3419
  %i3421 = load i32, ptr %i3420, align 4, !tbaa !19
  %i3422 = add nsw i32 %i3421, %i3418
  store i32 %i3422, ptr %i3420, align 4, !tbaa !19
  %i3423 = add nuw nsw i64 %i3419, 1
  %i3424 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3423
  %i3425 = load i32, ptr %i3424, align 4, !tbaa !19
  %i3426 = add nsw i32 %i3425, %i3422
  store i32 %i3426, ptr %i3424, align 4, !tbaa !19
  %i3427 = add nuw nsw i64 %i3419, 2
  %i3428 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3427
  %i3429 = load i32, ptr %i3428, align 4, !tbaa !19
  %i3430 = add nsw i32 %i3429, %i3426
  store i32 %i3430, ptr %i3428, align 4, !tbaa !19
  %i3431 = add nuw nsw i64 %i3419, 3
  %i3432 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3431
  %i3433 = load i32, ptr %i3432, align 4, !tbaa !19
  %i3434 = add nsw i32 %i3433, %i3430
  store i32 %i3434, ptr %i3432, align 4, !tbaa !19
  %i3435 = add nuw nsw i64 %i3419, 4
  %i3436 = icmp eq i64 %i3435, 257
  br i1 %i3436, label %bb3437.preheader, label %bb3417.bb3417_crit_edge, !llvm.loop !280

bb3417.bb3417_crit_edge:                          ; preds = %bb3417
  br label %bb3417

bb3437.preheader:                                 ; preds = %bb3417
  br label %bb3437

bb3437:                                           ; preds = %bb3437.preheader, %bb3467
  %i3438 = phi i64 [ %i3468, %bb3467 ], [ 0, %bb3437.preheader ]
  %i3439 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3438
  %i3440 = load i32, ptr %i3439, align 4, !tbaa !19
  %i3441 = icmp slt i32 %i3440, 0
  %i3442 = icmp sgt i32 %i3440, %i2601
  %i3443 = select i1 %i3441, i1 true, i1 %i3442
  br i1 %i3443, label %bb3437.bb4387_crit_edge, label %bb3444

bb3437.bb4387_crit_edge:                          ; preds = %bb3437
  br label %bb4387

bb3444:                                           ; preds = %bb3437
  %i3445 = or disjoint i64 %i3438, 1
  %i3446 = icmp eq i64 %i3445, 257
  br i1 %i3446, label %bb3469, label %bb3447, !llvm.loop !281

bb3447:                                           ; preds = %bb3444
  %i3448 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3445
  %i3449 = load i32, ptr %i3448, align 4, !tbaa !19
  %i3450 = icmp slt i32 %i3449, 0
  %i3451 = icmp sgt i32 %i3449, %i2601
  %i3452 = select i1 %i3450, i1 true, i1 %i3451
  br i1 %i3452, label %bb3447.bb4387split_crit_edge, label %bb3453

bb3447.bb4387split_crit_edge:                     ; preds = %bb3447
  br label %bb4387split

bb3453:                                           ; preds = %bb3447
  %i3454 = or disjoint i64 %i3438, 2
  %i3455 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3454
  %i3456 = load i32, ptr %i3455, align 4, !tbaa !19
  %i3457 = icmp slt i32 %i3456, 0
  %i3458 = icmp sgt i32 %i3456, %i2601
  %i3459 = select i1 %i3457, i1 true, i1 %i3458
  br i1 %i3459, label %bb3453.bb4387splitsplit_crit_edge, label %bb3460

bb3453.bb4387splitsplit_crit_edge:                ; preds = %bb3453
  br label %bb4387splitsplit

bb3460:                                           ; preds = %bb3453
  %i3461 = or disjoint i64 %i3438, 3
  %i3462 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3461
  %i3463 = load i32, ptr %i3462, align 4, !tbaa !19
  %i3464 = icmp slt i32 %i3463, 0
  %i3465 = icmp sgt i32 %i3463, %i2601
  %i3466 = select i1 %i3464, i1 true, i1 %i3465
  br i1 %i3466, label %bb4387splitsplitsplit, label %bb3467

bb3467:                                           ; preds = %bb3460
  %i3468 = add nuw nsw i64 %i3438, 4
  br label %bb3437

bb3469:                                           ; preds = %bb3444
  %i3470 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 3
  store i32 0, ptr %i3470, align 8, !tbaa !162
  %i3471 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 2
  store i8 0, ptr %i3471, align 4, !tbaa !163
  %i3472 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 25
  store i32 -1, ptr %i3472, align 8, !tbaa !164
  store i32 2, ptr %i2, align 8, !tbaa !153
  %i3473 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 12
  %i3474 = load i32, ptr %i3473, align 4, !tbaa !159
  %i3475 = icmp sgt i32 %i3474, 1
  br i1 %i3475, label %bb3476, label %bb3469.bb3479_crit_edge

bb3469.bb3479_crit_edge:                          ; preds = %bb3469
  br label %bb3479

bb3476:                                           ; preds = %bb3469
  %i3477 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i3478 = tail call i64 @fwrite(ptr nonnull @.str.1.120, i64 6, i64 1, ptr %i3477) #32
  br label %bb3479

bb3479:                                           ; preds = %bb3469.bb3479_crit_edge, %bb3476
  %i3480 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 10
  %i3481 = load i8, ptr %i3480, align 4, !tbaa !157
  %i3482 = icmp eq i8 %i3481, 0
  br i1 %i3482, label %bb3483, label %bb3499.preheader

bb3499.preheader:                                 ; preds = %bb3479
  br label %bb3499

bb3483:                                           ; preds = %bb3479
  %i3484 = icmp sgt i32 %i2601, 0
  %i3485 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 20
  %i3486 = load ptr, ptr %i3485, align 8, !tbaa !173
  br i1 %i3484, label %bb3487, label %bb3483.bb3736_crit_edge

bb3483.bb3736_crit_edge:                          ; preds = %bb3483
  br label %bb3736

bb3487:                                           ; preds = %bb3483
  %i3488 = zext nneg i32 %i2601 to i64
  %i3489 = and i64 %i3488, 1
  %i3490 = icmp eq i32 %i2601, 1
  br i1 %i3490, label %bb3487.bb3718_crit_edge, label %bb3491

bb3487.bb3718_crit_edge:                          ; preds = %bb3487
  br label %bb3718

bb3491:                                           ; preds = %bb3487
  %i3492 = and i64 %i3488, 2147483646
  br label %bb3683

bb3493:                                           ; preds = %bb3499
  %i3494 = icmp sgt i32 %i2601, 0
  br i1 %i3494, label %bb3495, label %bb3493.bb3553_crit_edge

bb3493.bb3553_crit_edge:                          ; preds = %bb3493
  br label %bb3553

bb3495:                                           ; preds = %bb3493
  %i3496 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 21
  %i3497 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 22
  %i3498 = zext nneg i32 %i2601 to i64
  br label %bb3519

bb3499:                                           ; preds = %bb3499.preheader, %bb3506
  %i3500 = phi i64 [ %i3518, %bb3506 ], [ 0, %bb3499.preheader ]
  %i3501 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3500
  %i3502 = load i32, ptr %i3501, align 4, !tbaa !19
  %i3503 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 19, i64 %i3500
  store i32 %i3502, ptr %i3503, align 4, !tbaa !19
  %i3504 = or disjoint i64 %i3500, 1
  %i3505 = icmp eq i64 %i3504, 257
  br i1 %i3505, label %bb3493, label %bb3506, !llvm.loop !282

bb3506:                                           ; preds = %bb3499
  %i3507 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3504
  %i3508 = load i32, ptr %i3507, align 4, !tbaa !19
  %i3509 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 19, i64 %i3504
  store i32 %i3508, ptr %i3509, align 4, !tbaa !19
  %i3510 = or disjoint i64 %i3500, 2
  %i3511 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3510
  %i3512 = load i32, ptr %i3511, align 4, !tbaa !19
  %i3513 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 19, i64 %i3510
  store i32 %i3512, ptr %i3513, align 4, !tbaa !19
  %i3514 = or disjoint i64 %i3500, 3
  %i3515 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3514
  %i3516 = load i32, ptr %i3515, align 4, !tbaa !19
  %i3517 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 19, i64 %i3514
  store i32 %i3516, ptr %i3517, align 4, !tbaa !19
  %i3518 = add nuw nsw i64 %i3500, 4
  br label %bb3499

bb3519:                                           ; preds = %bb3547.bb3519_crit_edge, %bb3495
  %i3520 = phi i64 [ 0, %bb3495 ], [ %i3551, %bb3547.bb3519_crit_edge ]
  %i3521 = load ptr, ptr %i3496, align 8, !tbaa !169
  %i3522 = getelementptr inbounds i16, ptr %i3521, i64 %i3520
  %i3523 = load i16, ptr %i3522, align 2, !tbaa !22
  %i3524 = and i16 %i3523, 255
  %i3525 = zext nneg i16 %i3524 to i64
  %i3526 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 19, i64 %i3525
  %i3527 = load i32, ptr %i3526, align 4, !tbaa !19
  %i3528 = trunc i32 %i3527 to i16
  store i16 %i3528, ptr %i3522, align 2, !tbaa !22
  %i3529 = and i64 %i3520, 1
  %i3530 = icmp eq i64 %i3529, 0
  %i3531 = load ptr, ptr %i3497, align 8, !tbaa !170
  %i3532 = lshr i64 %i3520, 1
  %i3533 = and i64 %i3532, 2147483647
  %i3534 = getelementptr inbounds i8, ptr %i3531, i64 %i3533
  %i3535 = load i8, ptr %i3534, align 1, !tbaa !21
  br i1 %i3530, label %bb3536, label %bb3541

bb3536:                                           ; preds = %bb3519
  %i3537 = and i8 %i3535, -16
  %i3538 = lshr i32 %i3527, 16
  %i3539 = trunc i32 %i3538 to i8
  %i3540 = or i8 %i3537, %i3539
  br label %bb3547

bb3541:                                           ; preds = %bb3519
  %i3542 = and i8 %i3535, 15
  %i3543 = lshr i32 %i3527, 12
  %i3544 = trunc i32 %i3543 to i8
  %i3545 = and i8 %i3544, -16
  %i3546 = or disjoint i8 %i3542, %i3545
  br label %bb3547

bb3547:                                           ; preds = %bb3541, %bb3536
  %i3548 = phi i8 [ %i3546, %bb3541 ], [ %i3540, %bb3536 ]
  store i8 %i3548, ptr %i3534, align 1, !tbaa !21
  %i3549 = load i32, ptr %i3526, align 4, !tbaa !19
  %i3550 = add nsw i32 %i3549, 1
  store i32 %i3550, ptr %i3526, align 4, !tbaa !19
  %i3551 = add nuw nsw i64 %i3520, 1
  %i3552 = icmp eq i64 %i3551, %i3498
  br i1 %i3552, label %bb3553.loopexit, label %bb3547.bb3519_crit_edge, !llvm.loop !283

bb3547.bb3519_crit_edge:                          ; preds = %bb3547
  br label %bb3519

bb3553.loopexit:                                  ; preds = %bb3547
  br label %bb3553

bb3553:                                           ; preds = %bb3493.bb3553_crit_edge, %bb3553.loopexit
  %i3554 = load i32, ptr %i3388, align 8, !tbaa !256
  %i3555 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 21
  %i3556 = load ptr, ptr %i3555, align 8, !tbaa !169
  %i3557 = sext i32 %i3554 to i64
  %i3558 = getelementptr inbounds i16, ptr %i3556, i64 %i3557
  %i3559 = load i16, ptr %i3558, align 2, !tbaa !22
  %i3560 = zext i16 %i3559 to i32
  %i3561 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 22
  %i3562 = load ptr, ptr %i3561, align 8, !tbaa !170
  %i3563 = ashr i32 %i3554, 1
  %i3564 = sext i32 %i3563 to i64
  %i3565 = getelementptr inbounds i8, ptr %i3562, i64 %i3564
  %i3566 = load i8, ptr %i3565, align 1, !tbaa !21
  %i3567 = zext i8 %i3566 to i32
  %i3568 = shl i32 %i3554, 2
  %i3569 = and i32 %i3568, 4
  %i3570 = lshr i32 %i3567, %i3569
  %i3571 = shl nuw nsw i32 %i3570, 16
  %i3572 = and i32 %i3571, 983040
  %i3573 = or disjoint i32 %i3572, %i3560
  br label %bb3574

bb3574:                                           ; preds = %bb3609.bb3574_crit_edge, %bb3553
  %i3575 = phi i32 [ %i3573, %bb3553 ], [ %i3593, %bb3609.bb3574_crit_edge ]
  %i3576 = phi i32 [ %i3554, %bb3553 ], [ %i3575, %bb3609.bb3574_crit_edge ]
  %i3577 = load ptr, ptr %i3555, align 8, !tbaa !169
  %i3578 = zext nneg i32 %i3575 to i64
  %i3579 = getelementptr inbounds i16, ptr %i3577, i64 %i3578
  %i3580 = load i16, ptr %i3579, align 2, !tbaa !22
  %i3581 = zext i16 %i3580 to i32
  %i3582 = load ptr, ptr %i3561, align 8, !tbaa !170
  %i3583 = lshr i32 %i3575, 1
  %i3584 = zext nneg i32 %i3583 to i64
  %i3585 = getelementptr inbounds i8, ptr %i3582, i64 %i3584
  %i3586 = load i8, ptr %i3585, align 1, !tbaa !21
  %i3587 = zext i8 %i3586 to i32
  %i3588 = shl nuw nsw i32 %i3575, 2
  %i3589 = and i32 %i3588, 4
  %i3590 = lshr i32 %i3587, %i3589
  %i3591 = shl nuw nsw i32 %i3590, 16
  %i3592 = and i32 %i3591, 983040
  %i3593 = or disjoint i32 %i3592, %i3581
  %i3594 = trunc i32 %i3576 to i16
  store i16 %i3594, ptr %i3579, align 2, !tbaa !22
  %i3595 = and i32 %i3575, 1
  %i3596 = icmp eq i32 %i3595, 0
  %i3597 = load i8, ptr %i3585, align 1, !tbaa !21
  br i1 %i3596, label %bb3598, label %bb3603

bb3598:                                           ; preds = %bb3574
  %i3599 = and i8 %i3597, -16
  %i3600 = lshr i32 %i3576, 16
  %i3601 = trunc i32 %i3600 to i8
  %i3602 = or i8 %i3599, %i3601
  br label %bb3609

bb3603:                                           ; preds = %bb3574
  %i3604 = and i8 %i3597, 15
  %i3605 = lshr i32 %i3576, 12
  %i3606 = trunc i32 %i3605 to i8
  %i3607 = and i8 %i3606, -16
  %i3608 = or disjoint i8 %i3604, %i3607
  br label %bb3609

bb3609:                                           ; preds = %bb3603, %bb3598
  %i3610 = phi i8 [ %i3608, %bb3603 ], [ %i3602, %bb3598 ]
  store i8 %i3610, ptr %i3585, align 1, !tbaa !21
  %i3611 = load i32, ptr %i3388, align 8, !tbaa !256
  %i3612 = icmp eq i32 %i3575, %i3611
  br i1 %i3612, label %bb3613, label %bb3609.bb3574_crit_edge, !llvm.loop !284

bb3609.bb3574_crit_edge:                          ; preds = %bb3609
  br label %bb3574

bb3613:                                           ; preds = %bb3609
  %i3614 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 14
  store i32 %i3575, ptr %i3614, align 4, !tbaa !168
  %i3615 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 17
  store i32 0, ptr %i3615, align 4, !tbaa !165
  %i3616 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 4
  %i3617 = load i8, ptr %i3616, align 4, !tbaa !161
  %i3618 = icmp eq i8 %i3617, 0
  br i1 %i3618, label %bb3660, label %bb3619

bb3619:                                           ; preds = %bb3613
  %i3620 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 5
  store i32 0, ptr %i3620, align 8, !tbaa !171
  %i3621 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 6
  store i32 0, ptr %i3621, align 4, !tbaa !172
  %i3622 = tail call i32 @BZ2_indexIntoF(i32 noundef %i3575, ptr noundef nonnull %i3394) #31
  %i3623 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 15
  store i32 %i3622, ptr %i3623, align 8, !tbaa !167
  %i3624 = load ptr, ptr %i3555, align 8, !tbaa !169
  %i3625 = load i32, ptr %i3614, align 4, !tbaa !168
  %i3626 = zext i32 %i3625 to i64
  %i3627 = getelementptr inbounds i16, ptr %i3624, i64 %i3626
  %i3628 = load i16, ptr %i3627, align 2, !tbaa !22
  %i3629 = zext i16 %i3628 to i32
  %i3630 = load ptr, ptr %i3561, align 8, !tbaa !170
  %i3631 = lshr i32 %i3625, 1
  %i3632 = zext nneg i32 %i3631 to i64
  %i3633 = getelementptr inbounds i8, ptr %i3630, i64 %i3632
  %i3634 = load i8, ptr %i3633, align 1, !tbaa !21
  %i3635 = zext i8 %i3634 to i32
  %i3636 = shl i32 %i3625, 2
  %i3637 = and i32 %i3636, 4
  %i3638 = lshr i32 %i3635, %i3637
  %i3639 = shl nuw nsw i32 %i3638, 16
  %i3640 = and i32 %i3639, 983040
  %i3641 = or disjoint i32 %i3640, %i3629
  store i32 %i3641, ptr %i3614, align 4, !tbaa !168
  %i3642 = load i32, ptr %i3615, align 4, !tbaa !165
  %i3643 = add nsw i32 %i3642, 1
  store i32 %i3643, ptr %i3615, align 4, !tbaa !165
  %i3644 = load i32, ptr %i3620, align 8, !tbaa !171
  %i3645 = icmp eq i32 %i3644, 0
  br i1 %i3645, label %bb3646, label %bb3619.bb3654_crit_edge

bb3619.bb3654_crit_edge:                          ; preds = %bb3619
  br label %bb3654

bb3646:                                           ; preds = %bb3619
  %i3647 = load i32, ptr %i3621, align 4, !tbaa !172
  %i3648 = sext i32 %i3647 to i64
  %i3649 = getelementptr inbounds [512 x i32], ptr @BZ2_rNums, i64 0, i64 %i3648
  %i3650 = load i32, ptr %i3649, align 4, !tbaa !19
  %i3651 = add nsw i32 %i3647, 1
  %i3652 = icmp eq i32 %i3651, 512
  %i3653 = select i1 %i3652, i32 0, i32 %i3651
  store i32 %i3653, ptr %i3621, align 4
  br label %bb3654

bb3654:                                           ; preds = %bb3619.bb3654_crit_edge, %bb3646
  %i3655 = phi i32 [ %i3650, %bb3646 ], [ %i3644, %bb3619.bb3654_crit_edge ]
  %i3656 = add nsw i32 %i3655, -1
  store i32 %i3656, ptr %i3620, align 8, !tbaa !171
  %i3657 = icmp eq i32 %i3656, 1
  %i3658 = zext i1 %i3657 to i32
  %i3659 = xor i32 %i3622, %i3658
  store i32 %i3659, ptr %i3623, align 8, !tbaa !167
  br label %bb4390

bb3660:                                           ; preds = %bb3613
  %i3661 = tail call i32 @BZ2_indexIntoF(i32 noundef %i3575, ptr noundef nonnull %i3394) #31
  %i3662 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 15
  store i32 %i3661, ptr %i3662, align 8, !tbaa !167
  %i3663 = load ptr, ptr %i3555, align 8, !tbaa !169
  %i3664 = load i32, ptr %i3614, align 4, !tbaa !168
  %i3665 = zext i32 %i3664 to i64
  %i3666 = getelementptr inbounds i16, ptr %i3663, i64 %i3665
  %i3667 = load i16, ptr %i3666, align 2, !tbaa !22
  %i3668 = zext i16 %i3667 to i32
  %i3669 = load ptr, ptr %i3561, align 8, !tbaa !170
  %i3670 = lshr i32 %i3664, 1
  %i3671 = zext nneg i32 %i3670 to i64
  %i3672 = getelementptr inbounds i8, ptr %i3669, i64 %i3671
  %i3673 = load i8, ptr %i3672, align 1, !tbaa !21
  %i3674 = zext i8 %i3673 to i32
  %i3675 = shl i32 %i3664, 2
  %i3676 = and i32 %i3675, 4
  %i3677 = lshr i32 %i3674, %i3676
  %i3678 = shl nuw nsw i32 %i3677, 16
  %i3679 = and i32 %i3678, 983040
  %i3680 = or disjoint i32 %i3679, %i3668
  store i32 %i3680, ptr %i3614, align 4, !tbaa !168
  %i3681 = load i32, ptr %i3615, align 4, !tbaa !165
  %i3682 = add nsw i32 %i3681, 1
  store i32 %i3682, ptr %i3615, align 4, !tbaa !165
  br label %bb4390

bb3683:                                           ; preds = %bb3683.bb3683_crit_edge, %bb3491
  %i3684 = phi i64 [ 0, %bb3491 ], [ %i3715, %bb3683.bb3683_crit_edge ]
  %i3685 = phi i64 [ 0, %bb3491 ], [ %i3716, %bb3683.bb3683_crit_edge ]
  %i3686 = getelementptr inbounds i32, ptr %i3486, i64 %i3684
  %i3687 = load i32, ptr %i3686, align 4, !tbaa !19
  %i3688 = trunc i64 %i3684 to i32
  %i3689 = shl i32 %i3688, 8
  %i3690 = and i32 %i3687, 255
  %i3691 = zext nneg i32 %i3690 to i64
  %i3692 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3691
  %i3693 = load i32, ptr %i3692, align 4, !tbaa !19
  %i3694 = sext i32 %i3693 to i64
  %i3695 = getelementptr inbounds i32, ptr %i3486, i64 %i3694
  %i3696 = load i32, ptr %i3695, align 4, !tbaa !19
  %i3697 = or i32 %i3696, %i3689
  store i32 %i3697, ptr %i3695, align 4, !tbaa !19
  %i3698 = load i32, ptr %i3692, align 4, !tbaa !19
  %i3699 = add nsw i32 %i3698, 1
  store i32 %i3699, ptr %i3692, align 4, !tbaa !19
  %i3700 = or disjoint i64 %i3684, 1
  %i3701 = getelementptr inbounds i32, ptr %i3486, i64 %i3700
  %i3702 = load i32, ptr %i3701, align 4, !tbaa !19
  %i3703 = trunc i64 %i3700 to i32
  %i3704 = shl i32 %i3703, 8
  %i3705 = and i32 %i3702, 255
  %i3706 = zext nneg i32 %i3705 to i64
  %i3707 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3706
  %i3708 = load i32, ptr %i3707, align 4, !tbaa !19
  %i3709 = sext i32 %i3708 to i64
  %i3710 = getelementptr inbounds i32, ptr %i3486, i64 %i3709
  %i3711 = load i32, ptr %i3710, align 4, !tbaa !19
  %i3712 = or i32 %i3711, %i3704
  store i32 %i3712, ptr %i3710, align 4, !tbaa !19
  %i3713 = load i32, ptr %i3707, align 4, !tbaa !19
  %i3714 = add nsw i32 %i3713, 1
  store i32 %i3714, ptr %i3707, align 4, !tbaa !19
  %i3715 = add nuw nsw i64 %i3684, 2
  %i3716 = add i64 %i3685, 2
  %i3717 = icmp eq i64 %i3716, %i3492
  br i1 %i3717, label %bb3718.loopexit, label %bb3683.bb3683_crit_edge, !llvm.loop !285

bb3683.bb3683_crit_edge:                          ; preds = %bb3683
  br label %bb3683

bb3718.loopexit:                                  ; preds = %bb3683
  br label %bb3718

bb3718:                                           ; preds = %bb3487.bb3718_crit_edge, %bb3718.loopexit
  %i3719 = phi i64 [ 0, %bb3487.bb3718_crit_edge ], [ %i3715, %bb3718.loopexit ]
  %i3720 = icmp eq i64 %i3489, 0
  br i1 %i3720, label %bb3718.bb3736_crit_edge, label %bb3721

bb3718.bb3736_crit_edge:                          ; preds = %bb3718
  br label %bb3736

bb3721:                                           ; preds = %bb3718
  %i3722 = getelementptr inbounds i32, ptr %i3486, i64 %i3719
  %i3723 = load i32, ptr %i3722, align 4, !tbaa !19
  %i3724 = trunc i64 %i3719 to i32
  %i3725 = shl i32 %i3724, 8
  %i3726 = and i32 %i3723, 255
  %i3727 = zext nneg i32 %i3726 to i64
  %i3728 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 18, i64 %i3727
  %i3729 = load i32, ptr %i3728, align 4, !tbaa !19
  %i3730 = sext i32 %i3729 to i64
  %i3731 = getelementptr inbounds i32, ptr %i3486, i64 %i3730
  %i3732 = load i32, ptr %i3731, align 4, !tbaa !19
  %i3733 = or i32 %i3732, %i3725
  store i32 %i3733, ptr %i3731, align 4, !tbaa !19
  %i3734 = load i32, ptr %i3728, align 4, !tbaa !19
  %i3735 = add nsw i32 %i3734, 1
  store i32 %i3735, ptr %i3728, align 4, !tbaa !19
  br label %bb3736

bb3736:                                           ; preds = %bb3718.bb3736_crit_edge, %bb3483.bb3736_crit_edge, %bb3721
  %i3737 = phi i32 [ 0, %bb3483.bb3736_crit_edge ], [ %i2601, %bb3718.bb3736_crit_edge ], [ %i2601, %bb3721 ]
  %i3738 = load i32, ptr %i3388, align 8, !tbaa !256
  %i3739 = sext i32 %i3738 to i64
  %i3740 = getelementptr inbounds i32, ptr %i3486, i64 %i3739
  %i3741 = load i32, ptr %i3740, align 4, !tbaa !19
  %i3742 = lshr i32 %i3741, 8
  %i3743 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 14
  store i32 %i3742, ptr %i3743, align 4, !tbaa !168
  %i3744 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 17
  store i32 0, ptr %i3744, align 4, !tbaa !165
  %i3745 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 4
  %i3746 = load i8, ptr %i3745, align 4, !tbaa !161
  %i3747 = icmp eq i8 %i3746, 0
  br i1 %i3747, label %bb3762, label %bb3748

bb3748:                                           ; preds = %bb3736
  %i3749 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 5
  store i32 0, ptr %i3749, align 8, !tbaa !171
  %i3750 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 6
  store i32 0, ptr %i3750, align 4, !tbaa !172
  %i3751 = zext nneg i32 %i3742 to i64
  %i3752 = getelementptr inbounds i32, ptr %i3486, i64 %i3751
  %i3753 = load i32, ptr %i3752, align 4, !tbaa !19
  %i3754 = and i32 %i3753, 255
  %i3755 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 15
  %i3756 = lshr i32 %i3753, 8
  store i32 %i3756, ptr %i3743, align 4, !tbaa !168
  store i32 1, ptr %i3744, align 4, !tbaa !165
  %i3757 = load i32, ptr @BZ2_rNums, align 16, !tbaa !19
  store i32 1, ptr %i3750, align 4
  %i3758 = add nsw i32 %i3757, -1
  store i32 %i3758, ptr %i3749, align 8, !tbaa !171
  %i3759 = icmp eq i32 %i3758, 1
  %i3760 = zext i1 %i3759 to i32
  %i3761 = xor i32 %i3754, %i3760
  store i32 %i3761, ptr %i3755, align 8, !tbaa !167
  br label %bb4390

bb3762:                                           ; preds = %bb3736
  %i3763 = zext nneg i32 %i3742 to i64
  %i3764 = getelementptr inbounds i32, ptr %i3486, i64 %i3763
  %i3765 = load i32, ptr %i3764, align 4, !tbaa !19
  %i3766 = and i32 %i3765, 255
  %i3767 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 15
  store i32 %i3766, ptr %i3767, align 8, !tbaa !167
  %i3768 = lshr i32 %i3765, 8
  store i32 %i3768, ptr %i3743, align 4, !tbaa !168
  store i32 1, ptr %i3744, align 4, !tbaa !165
  br label %bb4390

bb3769:                                           ; preds = %bb450.bb3769_crit_edge, %bb82
  %i3770 = phi i32 [ %i11, %bb82 ], [ %i413, %bb450.bb3769_crit_edge ]
  %i3771 = phi i32 [ %i13, %bb82 ], [ %i414, %bb450.bb3769_crit_edge ]
  %i3772 = phi i32 [ %i15, %bb82 ], [ %i415, %bb450.bb3769_crit_edge ]
  %i3773 = phi i32 [ %i17, %bb82 ], [ %i416, %bb450.bb3769_crit_edge ]
  %i3774 = phi i32 [ %i19, %bb82 ], [ %i417, %bb450.bb3769_crit_edge ]
  %i3775 = phi i32 [ %i21, %bb82 ], [ %i418, %bb450.bb3769_crit_edge ]
  %i3776 = phi i32 [ %i23, %bb82 ], [ %i419, %bb450.bb3769_crit_edge ]
  %i3777 = phi i32 [ %i25, %bb82 ], [ %i420, %bb450.bb3769_crit_edge ]
  %i3778 = phi i32 [ %i27, %bb82 ], [ %i421, %bb450.bb3769_crit_edge ]
  %i3779 = phi i32 [ %i29, %bb82 ], [ %i422, %bb450.bb3769_crit_edge ]
  %i3780 = phi i32 [ %i31, %bb82 ], [ %i423, %bb450.bb3769_crit_edge ]
  %i3781 = phi i32 [ %i33, %bb82 ], [ %i424, %bb450.bb3769_crit_edge ]
  %i3782 = phi i32 [ %i35, %bb82 ], [ %i425, %bb450.bb3769_crit_edge ]
  %i3783 = phi i32 [ %i37, %bb82 ], [ %i426, %bb450.bb3769_crit_edge ]
  %i3784 = phi i32 [ %i39, %bb82 ], [ %i427, %bb450.bb3769_crit_edge ]
  %i3785 = phi i32 [ %i41, %bb82 ], [ %i428, %bb450.bb3769_crit_edge ]
  %i3786 = phi i32 [ %i43, %bb82 ], [ %i429, %bb450.bb3769_crit_edge ]
  %i3787 = phi i32 [ %i45, %bb82 ], [ %i430, %bb450.bb3769_crit_edge ]
  %i3788 = phi i32 [ %i47, %bb82 ], [ %i431, %bb450.bb3769_crit_edge ]
  %i3789 = phi i32 [ %i49, %bb82 ], [ %i432, %bb450.bb3769_crit_edge ]
  %i3790 = phi i32 [ %i51, %bb82 ], [ %i433, %bb450.bb3769_crit_edge ]
  %i3791 = phi ptr [ %i53, %bb82 ], [ %i434, %bb450.bb3769_crit_edge ]
  %i3792 = phi ptr [ %i55, %bb82 ], [ %i435, %bb450.bb3769_crit_edge ]
  %i3793 = phi ptr [ %i57, %bb82 ], [ %i436, %bb450.bb3769_crit_edge ]
  %i3794 = phi i32 [ %i84, %bb82 ], [ %i453, %bb450.bb3769_crit_edge ]
  store i32 42, ptr %i2, align 8, !tbaa !153
  %i3795 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i3796 = icmp sgt i32 %i3794, 7
  br i1 %i3796, label %bb3797, label %bb3800

bb3797:                                           ; preds = %bb3769
  %i3798 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i3799 = load i32, ptr %i3798, align 8, !tbaa !155
  br label %bb3807

bb3800:                                           ; preds = %bb3769
  %i3801 = load ptr, ptr %arg, align 8, !tbaa !151
  %i3802 = getelementptr inbounds %struct.bz_stream, ptr %i3801, i64 0, i32 1
  %i3803 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i3804 = getelementptr inbounds %struct.bz_stream, ptr %i3801, i64 0, i32 2
  %i3805 = getelementptr inbounds %struct.bz_stream, ptr %i3801, i64 0, i32 3
  %i3806 = load i32, ptr %i3802, align 8, !tbaa !141
  br label %bb3814

bb3807.loopexit:                                  ; preds = %bb3834
  br label %bb3807

bb3807:                                           ; preds = %bb3807.loopexit, %bb3797
  %i3808 = phi i32 [ %i3799, %bb3797 ], [ %i3824, %bb3807.loopexit ]
  %i3809 = phi i32 [ %i3794, %bb3797 ], [ %i3825, %bb3807.loopexit ]
  %i3810 = add nsw i32 %i3809, -8
  %i3811 = lshr i32 %i3808, %i3810
  store i32 %i3810, ptr %i3795, align 4, !tbaa !154
  %i3812 = and i32 %i3811, 255
  %i3813 = icmp eq i32 %i3812, 114
  br i1 %i3813, label %bb3807.bb3836_crit_edge, label %bb3807.bb4390_crit_edge

bb3807.bb4390_crit_edge:                          ; preds = %bb3807
  br label %bb4390

bb3807.bb3836_crit_edge:                          ; preds = %bb3807
  br label %bb3836

bb3814:                                           ; preds = %bb3834.bb3814_crit_edge, %bb3800
  %i3815 = phi i32 [ %i3806, %bb3800 ], [ %i3827, %bb3834.bb3814_crit_edge ]
  %i3816 = phi i32 [ %i3794, %bb3800 ], [ %i3825, %bb3834.bb3814_crit_edge ]
  %i3817 = icmp eq i32 %i3815, 0
  br i1 %i3817, label %bb4390.loopexit8, label %bb3818

bb3818:                                           ; preds = %bb3814
  %i3819 = load i32, ptr %i3803, align 8, !tbaa !155
  %i3820 = shl i32 %i3819, 8
  %i3821 = load ptr, ptr %i3801, align 8, !tbaa !147
  %i3822 = load i8, ptr %i3821, align 1, !tbaa !21
  %i3823 = zext i8 %i3822 to i32
  %i3824 = or disjoint i32 %i3820, %i3823
  store i32 %i3824, ptr %i3803, align 8, !tbaa !155
  %i3825 = add nsw i32 %i3816, 8
  store i32 %i3825, ptr %i3795, align 4, !tbaa !154
  %i3826 = getelementptr inbounds i8, ptr %i3821, i64 1
  store ptr %i3826, ptr %i3801, align 8, !tbaa !147
  %i3827 = add i32 %i3815, -1
  store i32 %i3827, ptr %i3802, align 8, !tbaa !141
  %i3828 = load i32, ptr %i3804, align 4, !tbaa !131
  %i3829 = add i32 %i3828, 1
  store i32 %i3829, ptr %i3804, align 4, !tbaa !131
  %i3830 = icmp eq i32 %i3829, 0
  br i1 %i3830, label %bb3831, label %bb3818.bb3834_crit_edge

bb3818.bb3834_crit_edge:                          ; preds = %bb3818
  br label %bb3834

bb3831:                                           ; preds = %bb3818
  %i3832 = load i32, ptr %i3805, align 8, !tbaa !132
  %i3833 = add i32 %i3832, 1
  store i32 %i3833, ptr %i3805, align 8, !tbaa !132
  br label %bb3834

bb3834:                                           ; preds = %bb3818.bb3834_crit_edge, %bb3831
  %i3835 = icmp sgt i32 %i3816, -1
  br i1 %i3835, label %bb3807.loopexit, label %bb3834.bb3814_crit_edge

bb3834.bb3814_crit_edge:                          ; preds = %bb3834
  br label %bb3814

bb3836:                                           ; preds = %bb3807.bb3836_crit_edge, %bb79
  %i3837 = phi i32 [ %i11, %bb79 ], [ %i3770, %bb3807.bb3836_crit_edge ]
  %i3838 = phi i32 [ %i13, %bb79 ], [ %i3771, %bb3807.bb3836_crit_edge ]
  %i3839 = phi i32 [ %i15, %bb79 ], [ %i3772, %bb3807.bb3836_crit_edge ]
  %i3840 = phi i32 [ %i17, %bb79 ], [ %i3773, %bb3807.bb3836_crit_edge ]
  %i3841 = phi i32 [ %i19, %bb79 ], [ %i3774, %bb3807.bb3836_crit_edge ]
  %i3842 = phi i32 [ %i21, %bb79 ], [ %i3775, %bb3807.bb3836_crit_edge ]
  %i3843 = phi i32 [ %i23, %bb79 ], [ %i3776, %bb3807.bb3836_crit_edge ]
  %i3844 = phi i32 [ %i25, %bb79 ], [ %i3777, %bb3807.bb3836_crit_edge ]
  %i3845 = phi i32 [ %i27, %bb79 ], [ %i3778, %bb3807.bb3836_crit_edge ]
  %i3846 = phi i32 [ %i29, %bb79 ], [ %i3779, %bb3807.bb3836_crit_edge ]
  %i3847 = phi i32 [ %i31, %bb79 ], [ %i3780, %bb3807.bb3836_crit_edge ]
  %i3848 = phi i32 [ %i33, %bb79 ], [ %i3781, %bb3807.bb3836_crit_edge ]
  %i3849 = phi i32 [ %i35, %bb79 ], [ %i3782, %bb3807.bb3836_crit_edge ]
  %i3850 = phi i32 [ %i37, %bb79 ], [ %i3783, %bb3807.bb3836_crit_edge ]
  %i3851 = phi i32 [ %i39, %bb79 ], [ %i3784, %bb3807.bb3836_crit_edge ]
  %i3852 = phi i32 [ %i41, %bb79 ], [ %i3785, %bb3807.bb3836_crit_edge ]
  %i3853 = phi i32 [ %i43, %bb79 ], [ %i3786, %bb3807.bb3836_crit_edge ]
  %i3854 = phi i32 [ %i45, %bb79 ], [ %i3787, %bb3807.bb3836_crit_edge ]
  %i3855 = phi i32 [ %i47, %bb79 ], [ %i3788, %bb3807.bb3836_crit_edge ]
  %i3856 = phi i32 [ %i49, %bb79 ], [ %i3789, %bb3807.bb3836_crit_edge ]
  %i3857 = phi i32 [ %i51, %bb79 ], [ %i3790, %bb3807.bb3836_crit_edge ]
  %i3858 = phi ptr [ %i53, %bb79 ], [ %i3791, %bb3807.bb3836_crit_edge ]
  %i3859 = phi ptr [ %i55, %bb79 ], [ %i3792, %bb3807.bb3836_crit_edge ]
  %i3860 = phi ptr [ %i57, %bb79 ], [ %i3793, %bb3807.bb3836_crit_edge ]
  %i3861 = phi i32 [ %i81, %bb79 ], [ %i3810, %bb3807.bb3836_crit_edge ]
  store i32 43, ptr %i2, align 8, !tbaa !153
  %i3862 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i3863 = icmp sgt i32 %i3861, 7
  br i1 %i3863, label %bb3864, label %bb3867

bb3864:                                           ; preds = %bb3836
  %i3865 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i3866 = load i32, ptr %i3865, align 8, !tbaa !155
  br label %bb3874

bb3867:                                           ; preds = %bb3836
  %i3868 = load ptr, ptr %arg, align 8, !tbaa !151
  %i3869 = getelementptr inbounds %struct.bz_stream, ptr %i3868, i64 0, i32 1
  %i3870 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i3871 = getelementptr inbounds %struct.bz_stream, ptr %i3868, i64 0, i32 2
  %i3872 = getelementptr inbounds %struct.bz_stream, ptr %i3868, i64 0, i32 3
  %i3873 = load i32, ptr %i3869, align 8, !tbaa !141
  br label %bb3881

bb3874.loopexit:                                  ; preds = %bb3901
  br label %bb3874

bb3874:                                           ; preds = %bb3874.loopexit, %bb3864
  %i3875 = phi i32 [ %i3866, %bb3864 ], [ %i3891, %bb3874.loopexit ]
  %i3876 = phi i32 [ %i3861, %bb3864 ], [ %i3892, %bb3874.loopexit ]
  %i3877 = add nsw i32 %i3876, -8
  %i3878 = lshr i32 %i3875, %i3877
  store i32 %i3877, ptr %i3862, align 4, !tbaa !154
  %i3879 = and i32 %i3878, 255
  %i3880 = icmp eq i32 %i3879, 69
  br i1 %i3880, label %bb3874.bb3903_crit_edge, label %bb3874.bb4390_crit_edge

bb3874.bb4390_crit_edge:                          ; preds = %bb3874
  br label %bb4390

bb3874.bb3903_crit_edge:                          ; preds = %bb3874
  br label %bb3903

bb3881:                                           ; preds = %bb3901.bb3881_crit_edge, %bb3867
  %i3882 = phi i32 [ %i3873, %bb3867 ], [ %i3894, %bb3901.bb3881_crit_edge ]
  %i3883 = phi i32 [ %i3861, %bb3867 ], [ %i3892, %bb3901.bb3881_crit_edge ]
  %i3884 = icmp eq i32 %i3882, 0
  br i1 %i3884, label %bb4390.loopexit7, label %bb3885

bb3885:                                           ; preds = %bb3881
  %i3886 = load i32, ptr %i3870, align 8, !tbaa !155
  %i3887 = shl i32 %i3886, 8
  %i3888 = load ptr, ptr %i3868, align 8, !tbaa !147
  %i3889 = load i8, ptr %i3888, align 1, !tbaa !21
  %i3890 = zext i8 %i3889 to i32
  %i3891 = or disjoint i32 %i3887, %i3890
  store i32 %i3891, ptr %i3870, align 8, !tbaa !155
  %i3892 = add nsw i32 %i3883, 8
  store i32 %i3892, ptr %i3862, align 4, !tbaa !154
  %i3893 = getelementptr inbounds i8, ptr %i3888, i64 1
  store ptr %i3893, ptr %i3868, align 8, !tbaa !147
  %i3894 = add i32 %i3882, -1
  store i32 %i3894, ptr %i3869, align 8, !tbaa !141
  %i3895 = load i32, ptr %i3871, align 4, !tbaa !131
  %i3896 = add i32 %i3895, 1
  store i32 %i3896, ptr %i3871, align 4, !tbaa !131
  %i3897 = icmp eq i32 %i3896, 0
  br i1 %i3897, label %bb3898, label %bb3885.bb3901_crit_edge

bb3885.bb3901_crit_edge:                          ; preds = %bb3885
  br label %bb3901

bb3898:                                           ; preds = %bb3885
  %i3899 = load i32, ptr %i3872, align 8, !tbaa !132
  %i3900 = add i32 %i3899, 1
  store i32 %i3900, ptr %i3872, align 8, !tbaa !132
  br label %bb3901

bb3901:                                           ; preds = %bb3885.bb3901_crit_edge, %bb3898
  %i3902 = icmp sgt i32 %i3883, -1
  br i1 %i3902, label %bb3874.loopexit, label %bb3901.bb3881_crit_edge

bb3901.bb3881_crit_edge:                          ; preds = %bb3901
  br label %bb3881

bb3903:                                           ; preds = %bb3874.bb3903_crit_edge, %bb76
  %i3904 = phi i32 [ %i11, %bb76 ], [ %i3837, %bb3874.bb3903_crit_edge ]
  %i3905 = phi i32 [ %i13, %bb76 ], [ %i3838, %bb3874.bb3903_crit_edge ]
  %i3906 = phi i32 [ %i15, %bb76 ], [ %i3839, %bb3874.bb3903_crit_edge ]
  %i3907 = phi i32 [ %i17, %bb76 ], [ %i3840, %bb3874.bb3903_crit_edge ]
  %i3908 = phi i32 [ %i19, %bb76 ], [ %i3841, %bb3874.bb3903_crit_edge ]
  %i3909 = phi i32 [ %i21, %bb76 ], [ %i3842, %bb3874.bb3903_crit_edge ]
  %i3910 = phi i32 [ %i23, %bb76 ], [ %i3843, %bb3874.bb3903_crit_edge ]
  %i3911 = phi i32 [ %i25, %bb76 ], [ %i3844, %bb3874.bb3903_crit_edge ]
  %i3912 = phi i32 [ %i27, %bb76 ], [ %i3845, %bb3874.bb3903_crit_edge ]
  %i3913 = phi i32 [ %i29, %bb76 ], [ %i3846, %bb3874.bb3903_crit_edge ]
  %i3914 = phi i32 [ %i31, %bb76 ], [ %i3847, %bb3874.bb3903_crit_edge ]
  %i3915 = phi i32 [ %i33, %bb76 ], [ %i3848, %bb3874.bb3903_crit_edge ]
  %i3916 = phi i32 [ %i35, %bb76 ], [ %i3849, %bb3874.bb3903_crit_edge ]
  %i3917 = phi i32 [ %i37, %bb76 ], [ %i3850, %bb3874.bb3903_crit_edge ]
  %i3918 = phi i32 [ %i39, %bb76 ], [ %i3851, %bb3874.bb3903_crit_edge ]
  %i3919 = phi i32 [ %i41, %bb76 ], [ %i3852, %bb3874.bb3903_crit_edge ]
  %i3920 = phi i32 [ %i43, %bb76 ], [ %i3853, %bb3874.bb3903_crit_edge ]
  %i3921 = phi i32 [ %i45, %bb76 ], [ %i3854, %bb3874.bb3903_crit_edge ]
  %i3922 = phi i32 [ %i47, %bb76 ], [ %i3855, %bb3874.bb3903_crit_edge ]
  %i3923 = phi i32 [ %i49, %bb76 ], [ %i3856, %bb3874.bb3903_crit_edge ]
  %i3924 = phi i32 [ %i51, %bb76 ], [ %i3857, %bb3874.bb3903_crit_edge ]
  %i3925 = phi ptr [ %i53, %bb76 ], [ %i3858, %bb3874.bb3903_crit_edge ]
  %i3926 = phi ptr [ %i55, %bb76 ], [ %i3859, %bb3874.bb3903_crit_edge ]
  %i3927 = phi ptr [ %i57, %bb76 ], [ %i3860, %bb3874.bb3903_crit_edge ]
  %i3928 = phi i32 [ %i78, %bb76 ], [ %i3877, %bb3874.bb3903_crit_edge ]
  store i32 44, ptr %i2, align 8, !tbaa !153
  %i3929 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i3930 = icmp sgt i32 %i3928, 7
  br i1 %i3930, label %bb3931, label %bb3934

bb3931:                                           ; preds = %bb3903
  %i3932 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i3933 = load i32, ptr %i3932, align 8, !tbaa !155
  br label %bb3941

bb3934:                                           ; preds = %bb3903
  %i3935 = load ptr, ptr %arg, align 8, !tbaa !151
  %i3936 = getelementptr inbounds %struct.bz_stream, ptr %i3935, i64 0, i32 1
  %i3937 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i3938 = getelementptr inbounds %struct.bz_stream, ptr %i3935, i64 0, i32 2
  %i3939 = getelementptr inbounds %struct.bz_stream, ptr %i3935, i64 0, i32 3
  %i3940 = load i32, ptr %i3936, align 8, !tbaa !141
  br label %bb3948

bb3941.loopexit:                                  ; preds = %bb3968
  br label %bb3941

bb3941:                                           ; preds = %bb3941.loopexit, %bb3931
  %i3942 = phi i32 [ %i3933, %bb3931 ], [ %i3958, %bb3941.loopexit ]
  %i3943 = phi i32 [ %i3928, %bb3931 ], [ %i3959, %bb3941.loopexit ]
  %i3944 = add nsw i32 %i3943, -8
  %i3945 = lshr i32 %i3942, %i3944
  store i32 %i3944, ptr %i3929, align 4, !tbaa !154
  %i3946 = and i32 %i3945, 255
  %i3947 = icmp eq i32 %i3946, 56
  br i1 %i3947, label %bb3941.bb3970_crit_edge, label %bb3941.bb4390_crit_edge

bb3941.bb4390_crit_edge:                          ; preds = %bb3941
  br label %bb4390

bb3941.bb3970_crit_edge:                          ; preds = %bb3941
  br label %bb3970

bb3948:                                           ; preds = %bb3968.bb3948_crit_edge, %bb3934
  %i3949 = phi i32 [ %i3940, %bb3934 ], [ %i3961, %bb3968.bb3948_crit_edge ]
  %i3950 = phi i32 [ %i3928, %bb3934 ], [ %i3959, %bb3968.bb3948_crit_edge ]
  %i3951 = icmp eq i32 %i3949, 0
  br i1 %i3951, label %bb4390.loopexit6, label %bb3952

bb3952:                                           ; preds = %bb3948
  %i3953 = load i32, ptr %i3937, align 8, !tbaa !155
  %i3954 = shl i32 %i3953, 8
  %i3955 = load ptr, ptr %i3935, align 8, !tbaa !147
  %i3956 = load i8, ptr %i3955, align 1, !tbaa !21
  %i3957 = zext i8 %i3956 to i32
  %i3958 = or disjoint i32 %i3954, %i3957
  store i32 %i3958, ptr %i3937, align 8, !tbaa !155
  %i3959 = add nsw i32 %i3950, 8
  store i32 %i3959, ptr %i3929, align 4, !tbaa !154
  %i3960 = getelementptr inbounds i8, ptr %i3955, i64 1
  store ptr %i3960, ptr %i3935, align 8, !tbaa !147
  %i3961 = add i32 %i3949, -1
  store i32 %i3961, ptr %i3936, align 8, !tbaa !141
  %i3962 = load i32, ptr %i3938, align 4, !tbaa !131
  %i3963 = add i32 %i3962, 1
  store i32 %i3963, ptr %i3938, align 4, !tbaa !131
  %i3964 = icmp eq i32 %i3963, 0
  br i1 %i3964, label %bb3965, label %bb3952.bb3968_crit_edge

bb3952.bb3968_crit_edge:                          ; preds = %bb3952
  br label %bb3968

bb3965:                                           ; preds = %bb3952
  %i3966 = load i32, ptr %i3939, align 8, !tbaa !132
  %i3967 = add i32 %i3966, 1
  store i32 %i3967, ptr %i3939, align 8, !tbaa !132
  br label %bb3968

bb3968:                                           ; preds = %bb3952.bb3968_crit_edge, %bb3965
  %i3969 = icmp sgt i32 %i3950, -1
  br i1 %i3969, label %bb3941.loopexit, label %bb3968.bb3948_crit_edge

bb3968.bb3948_crit_edge:                          ; preds = %bb3968
  br label %bb3948

bb3970:                                           ; preds = %bb3941.bb3970_crit_edge, %bb73
  %i3971 = phi i32 [ %i11, %bb73 ], [ %i3904, %bb3941.bb3970_crit_edge ]
  %i3972 = phi i32 [ %i13, %bb73 ], [ %i3905, %bb3941.bb3970_crit_edge ]
  %i3973 = phi i32 [ %i15, %bb73 ], [ %i3906, %bb3941.bb3970_crit_edge ]
  %i3974 = phi i32 [ %i17, %bb73 ], [ %i3907, %bb3941.bb3970_crit_edge ]
  %i3975 = phi i32 [ %i19, %bb73 ], [ %i3908, %bb3941.bb3970_crit_edge ]
  %i3976 = phi i32 [ %i21, %bb73 ], [ %i3909, %bb3941.bb3970_crit_edge ]
  %i3977 = phi i32 [ %i23, %bb73 ], [ %i3910, %bb3941.bb3970_crit_edge ]
  %i3978 = phi i32 [ %i25, %bb73 ], [ %i3911, %bb3941.bb3970_crit_edge ]
  %i3979 = phi i32 [ %i27, %bb73 ], [ %i3912, %bb3941.bb3970_crit_edge ]
  %i3980 = phi i32 [ %i29, %bb73 ], [ %i3913, %bb3941.bb3970_crit_edge ]
  %i3981 = phi i32 [ %i31, %bb73 ], [ %i3914, %bb3941.bb3970_crit_edge ]
  %i3982 = phi i32 [ %i33, %bb73 ], [ %i3915, %bb3941.bb3970_crit_edge ]
  %i3983 = phi i32 [ %i35, %bb73 ], [ %i3916, %bb3941.bb3970_crit_edge ]
  %i3984 = phi i32 [ %i37, %bb73 ], [ %i3917, %bb3941.bb3970_crit_edge ]
  %i3985 = phi i32 [ %i39, %bb73 ], [ %i3918, %bb3941.bb3970_crit_edge ]
  %i3986 = phi i32 [ %i41, %bb73 ], [ %i3919, %bb3941.bb3970_crit_edge ]
  %i3987 = phi i32 [ %i43, %bb73 ], [ %i3920, %bb3941.bb3970_crit_edge ]
  %i3988 = phi i32 [ %i45, %bb73 ], [ %i3921, %bb3941.bb3970_crit_edge ]
  %i3989 = phi i32 [ %i47, %bb73 ], [ %i3922, %bb3941.bb3970_crit_edge ]
  %i3990 = phi i32 [ %i49, %bb73 ], [ %i3923, %bb3941.bb3970_crit_edge ]
  %i3991 = phi i32 [ %i51, %bb73 ], [ %i3924, %bb3941.bb3970_crit_edge ]
  %i3992 = phi ptr [ %i53, %bb73 ], [ %i3925, %bb3941.bb3970_crit_edge ]
  %i3993 = phi ptr [ %i55, %bb73 ], [ %i3926, %bb3941.bb3970_crit_edge ]
  %i3994 = phi ptr [ %i57, %bb73 ], [ %i3927, %bb3941.bb3970_crit_edge ]
  %i3995 = phi i32 [ %i75, %bb73 ], [ %i3944, %bb3941.bb3970_crit_edge ]
  store i32 45, ptr %i2, align 8, !tbaa !153
  %i3996 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i3997 = icmp sgt i32 %i3995, 7
  br i1 %i3997, label %bb3998, label %bb4001

bb3998:                                           ; preds = %bb3970
  %i3999 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i4000 = load i32, ptr %i3999, align 8, !tbaa !155
  br label %bb4008

bb4001:                                           ; preds = %bb3970
  %i4002 = load ptr, ptr %arg, align 8, !tbaa !151
  %i4003 = getelementptr inbounds %struct.bz_stream, ptr %i4002, i64 0, i32 1
  %i4004 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i4005 = getelementptr inbounds %struct.bz_stream, ptr %i4002, i64 0, i32 2
  %i4006 = getelementptr inbounds %struct.bz_stream, ptr %i4002, i64 0, i32 3
  %i4007 = load i32, ptr %i4003, align 8, !tbaa !141
  br label %bb4015

bb4008.loopexit:                                  ; preds = %bb4035
  br label %bb4008

bb4008:                                           ; preds = %bb4008.loopexit, %bb3998
  %i4009 = phi i32 [ %i4000, %bb3998 ], [ %i4025, %bb4008.loopexit ]
  %i4010 = phi i32 [ %i3995, %bb3998 ], [ %i4026, %bb4008.loopexit ]
  %i4011 = add nsw i32 %i4010, -8
  %i4012 = lshr i32 %i4009, %i4011
  store i32 %i4011, ptr %i3996, align 4, !tbaa !154
  %i4013 = and i32 %i4012, 255
  %i4014 = icmp eq i32 %i4013, 80
  br i1 %i4014, label %bb4008.bb4037_crit_edge, label %bb4008.bb4390_crit_edge

bb4008.bb4390_crit_edge:                          ; preds = %bb4008
  br label %bb4390

bb4008.bb4037_crit_edge:                          ; preds = %bb4008
  br label %bb4037

bb4015:                                           ; preds = %bb4035.bb4015_crit_edge, %bb4001
  %i4016 = phi i32 [ %i4007, %bb4001 ], [ %i4028, %bb4035.bb4015_crit_edge ]
  %i4017 = phi i32 [ %i3995, %bb4001 ], [ %i4026, %bb4035.bb4015_crit_edge ]
  %i4018 = icmp eq i32 %i4016, 0
  br i1 %i4018, label %bb4390.loopexit5, label %bb4019

bb4019:                                           ; preds = %bb4015
  %i4020 = load i32, ptr %i4004, align 8, !tbaa !155
  %i4021 = shl i32 %i4020, 8
  %i4022 = load ptr, ptr %i4002, align 8, !tbaa !147
  %i4023 = load i8, ptr %i4022, align 1, !tbaa !21
  %i4024 = zext i8 %i4023 to i32
  %i4025 = or disjoint i32 %i4021, %i4024
  store i32 %i4025, ptr %i4004, align 8, !tbaa !155
  %i4026 = add nsw i32 %i4017, 8
  store i32 %i4026, ptr %i3996, align 4, !tbaa !154
  %i4027 = getelementptr inbounds i8, ptr %i4022, i64 1
  store ptr %i4027, ptr %i4002, align 8, !tbaa !147
  %i4028 = add i32 %i4016, -1
  store i32 %i4028, ptr %i4003, align 8, !tbaa !141
  %i4029 = load i32, ptr %i4005, align 4, !tbaa !131
  %i4030 = add i32 %i4029, 1
  store i32 %i4030, ptr %i4005, align 4, !tbaa !131
  %i4031 = icmp eq i32 %i4030, 0
  br i1 %i4031, label %bb4032, label %bb4019.bb4035_crit_edge

bb4019.bb4035_crit_edge:                          ; preds = %bb4019
  br label %bb4035

bb4032:                                           ; preds = %bb4019
  %i4033 = load i32, ptr %i4006, align 8, !tbaa !132
  %i4034 = add i32 %i4033, 1
  store i32 %i4034, ptr %i4006, align 8, !tbaa !132
  br label %bb4035

bb4035:                                           ; preds = %bb4019.bb4035_crit_edge, %bb4032
  %i4036 = icmp sgt i32 %i4017, -1
  br i1 %i4036, label %bb4008.loopexit, label %bb4035.bb4015_crit_edge

bb4035.bb4015_crit_edge:                          ; preds = %bb4035
  br label %bb4015

bb4037:                                           ; preds = %bb4008.bb4037_crit_edge, %bb70
  %i4038 = phi i32 [ %i11, %bb70 ], [ %i3971, %bb4008.bb4037_crit_edge ]
  %i4039 = phi i32 [ %i13, %bb70 ], [ %i3972, %bb4008.bb4037_crit_edge ]
  %i4040 = phi i32 [ %i15, %bb70 ], [ %i3973, %bb4008.bb4037_crit_edge ]
  %i4041 = phi i32 [ %i17, %bb70 ], [ %i3974, %bb4008.bb4037_crit_edge ]
  %i4042 = phi i32 [ %i19, %bb70 ], [ %i3975, %bb4008.bb4037_crit_edge ]
  %i4043 = phi i32 [ %i21, %bb70 ], [ %i3976, %bb4008.bb4037_crit_edge ]
  %i4044 = phi i32 [ %i23, %bb70 ], [ %i3977, %bb4008.bb4037_crit_edge ]
  %i4045 = phi i32 [ %i25, %bb70 ], [ %i3978, %bb4008.bb4037_crit_edge ]
  %i4046 = phi i32 [ %i27, %bb70 ], [ %i3979, %bb4008.bb4037_crit_edge ]
  %i4047 = phi i32 [ %i29, %bb70 ], [ %i3980, %bb4008.bb4037_crit_edge ]
  %i4048 = phi i32 [ %i31, %bb70 ], [ %i3981, %bb4008.bb4037_crit_edge ]
  %i4049 = phi i32 [ %i33, %bb70 ], [ %i3982, %bb4008.bb4037_crit_edge ]
  %i4050 = phi i32 [ %i35, %bb70 ], [ %i3983, %bb4008.bb4037_crit_edge ]
  %i4051 = phi i32 [ %i37, %bb70 ], [ %i3984, %bb4008.bb4037_crit_edge ]
  %i4052 = phi i32 [ %i39, %bb70 ], [ %i3985, %bb4008.bb4037_crit_edge ]
  %i4053 = phi i32 [ %i41, %bb70 ], [ %i3986, %bb4008.bb4037_crit_edge ]
  %i4054 = phi i32 [ %i43, %bb70 ], [ %i3987, %bb4008.bb4037_crit_edge ]
  %i4055 = phi i32 [ %i45, %bb70 ], [ %i3988, %bb4008.bb4037_crit_edge ]
  %i4056 = phi i32 [ %i47, %bb70 ], [ %i3989, %bb4008.bb4037_crit_edge ]
  %i4057 = phi i32 [ %i49, %bb70 ], [ %i3990, %bb4008.bb4037_crit_edge ]
  %i4058 = phi i32 [ %i51, %bb70 ], [ %i3991, %bb4008.bb4037_crit_edge ]
  %i4059 = phi ptr [ %i53, %bb70 ], [ %i3992, %bb4008.bb4037_crit_edge ]
  %i4060 = phi ptr [ %i55, %bb70 ], [ %i3993, %bb4008.bb4037_crit_edge ]
  %i4061 = phi ptr [ %i57, %bb70 ], [ %i3994, %bb4008.bb4037_crit_edge ]
  %i4062 = phi i32 [ %i72, %bb70 ], [ %i4011, %bb4008.bb4037_crit_edge ]
  store i32 46, ptr %i2, align 8, !tbaa !153
  %i4063 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i4064 = icmp sgt i32 %i4062, 7
  br i1 %i4064, label %bb4065, label %bb4069

bb4065:                                           ; preds = %bb4037
  %i4066 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i4067 = load i32, ptr %i4066, align 8, !tbaa !155
  %i4068 = add nsw i32 %i4062, -8
  br label %bb4076

bb4069:                                           ; preds = %bb4037
  %i4070 = load ptr, ptr %arg, align 8, !tbaa !151
  %i4071 = getelementptr inbounds %struct.bz_stream, ptr %i4070, i64 0, i32 1
  %i4072 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i4073 = getelementptr inbounds %struct.bz_stream, ptr %i4070, i64 0, i32 2
  %i4074 = getelementptr inbounds %struct.bz_stream, ptr %i4070, i64 0, i32 3
  %i4075 = load i32, ptr %i4071, align 8, !tbaa !141
  br label %bb4082

bb4076.loopexit:                                  ; preds = %bb4102
  br label %bb4076

bb4076:                                           ; preds = %bb4076.loopexit, %bb4065
  %i4077 = phi i32 [ %i4067, %bb4065 ], [ %i4092, %bb4076.loopexit ]
  %i4078 = phi i32 [ %i4068, %bb4065 ], [ %i4084, %bb4076.loopexit ]
  %i4079 = lshr i32 %i4077, %i4078
  store i32 %i4078, ptr %i4063, align 4, !tbaa !154
  %i4080 = and i32 %i4079, 255
  %i4081 = icmp eq i32 %i4080, 144
  br i1 %i4081, label %bb4104, label %bb4076.bb4390_crit_edge

bb4076.bb4390_crit_edge:                          ; preds = %bb4076
  br label %bb4390

bb4082:                                           ; preds = %bb4102.bb4082_crit_edge, %bb4069
  %i4083 = phi i32 [ %i4075, %bb4069 ], [ %i4095, %bb4102.bb4082_crit_edge ]
  %i4084 = phi i32 [ %i4062, %bb4069 ], [ %i4093, %bb4102.bb4082_crit_edge ]
  %i4085 = icmp eq i32 %i4083, 0
  br i1 %i4085, label %bb4390.loopexit4, label %bb4086

bb4086:                                           ; preds = %bb4082
  %i4087 = load i32, ptr %i4072, align 8, !tbaa !155
  %i4088 = shl i32 %i4087, 8
  %i4089 = load ptr, ptr %i4070, align 8, !tbaa !147
  %i4090 = load i8, ptr %i4089, align 1, !tbaa !21
  %i4091 = zext i8 %i4090 to i32
  %i4092 = or disjoint i32 %i4088, %i4091
  store i32 %i4092, ptr %i4072, align 8, !tbaa !155
  %i4093 = add nsw i32 %i4084, 8
  store i32 %i4093, ptr %i4063, align 4, !tbaa !154
  %i4094 = getelementptr inbounds i8, ptr %i4089, i64 1
  store ptr %i4094, ptr %i4070, align 8, !tbaa !147
  %i4095 = add i32 %i4083, -1
  store i32 %i4095, ptr %i4071, align 8, !tbaa !141
  %i4096 = load i32, ptr %i4073, align 4, !tbaa !131
  %i4097 = add i32 %i4096, 1
  store i32 %i4097, ptr %i4073, align 4, !tbaa !131
  %i4098 = icmp eq i32 %i4097, 0
  br i1 %i4098, label %bb4099, label %bb4086.bb4102_crit_edge

bb4086.bb4102_crit_edge:                          ; preds = %bb4086
  br label %bb4102

bb4099:                                           ; preds = %bb4086
  %i4100 = load i32, ptr %i4074, align 8, !tbaa !132
  %i4101 = add i32 %i4100, 1
  store i32 %i4101, ptr %i4074, align 8, !tbaa !132
  br label %bb4102

bb4102:                                           ; preds = %bb4086.bb4102_crit_edge, %bb4099
  %i4103 = icmp sgt i32 %i4084, -1
  br i1 %i4103, label %bb4076.loopexit, label %bb4102.bb4082_crit_edge

bb4102.bb4082_crit_edge:                          ; preds = %bb4102
  br label %bb4082

bb4104:                                           ; preds = %bb4076
  %i4105 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 24
  store i32 0, ptr %i4105, align 4, !tbaa !175
  br label %bb4106

bb4106:                                           ; preds = %bb4104, %bb67
  %i4107 = phi i32 [ %i11, %bb67 ], [ %i4038, %bb4104 ]
  %i4108 = phi i32 [ %i13, %bb67 ], [ %i4039, %bb4104 ]
  %i4109 = phi i32 [ %i15, %bb67 ], [ %i4040, %bb4104 ]
  %i4110 = phi i32 [ %i17, %bb67 ], [ %i4041, %bb4104 ]
  %i4111 = phi i32 [ %i19, %bb67 ], [ %i4042, %bb4104 ]
  %i4112 = phi i32 [ %i21, %bb67 ], [ %i4043, %bb4104 ]
  %i4113 = phi i32 [ %i23, %bb67 ], [ %i4044, %bb4104 ]
  %i4114 = phi i32 [ %i25, %bb67 ], [ %i4045, %bb4104 ]
  %i4115 = phi i32 [ %i27, %bb67 ], [ %i4046, %bb4104 ]
  %i4116 = phi i32 [ %i29, %bb67 ], [ %i4047, %bb4104 ]
  %i4117 = phi i32 [ %i31, %bb67 ], [ %i4048, %bb4104 ]
  %i4118 = phi i32 [ %i33, %bb67 ], [ %i4049, %bb4104 ]
  %i4119 = phi i32 [ %i35, %bb67 ], [ %i4050, %bb4104 ]
  %i4120 = phi i32 [ %i37, %bb67 ], [ %i4051, %bb4104 ]
  %i4121 = phi i32 [ %i39, %bb67 ], [ %i4052, %bb4104 ]
  %i4122 = phi i32 [ %i41, %bb67 ], [ %i4053, %bb4104 ]
  %i4123 = phi i32 [ %i43, %bb67 ], [ %i4054, %bb4104 ]
  %i4124 = phi i32 [ %i45, %bb67 ], [ %i4055, %bb4104 ]
  %i4125 = phi i32 [ %i47, %bb67 ], [ %i4056, %bb4104 ]
  %i4126 = phi i32 [ %i49, %bb67 ], [ %i4057, %bb4104 ]
  %i4127 = phi i32 [ %i51, %bb67 ], [ %i4058, %bb4104 ]
  %i4128 = phi ptr [ %i53, %bb67 ], [ %i4059, %bb4104 ]
  %i4129 = phi ptr [ %i55, %bb67 ], [ %i4060, %bb4104 ]
  %i4130 = phi ptr [ %i57, %bb67 ], [ %i4061, %bb4104 ]
  %i4131 = phi i32 [ %i69, %bb67 ], [ %i4078, %bb4104 ]
  store i32 47, ptr %i2, align 8, !tbaa !153
  %i4132 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i4133 = icmp sgt i32 %i4131, 7
  br i1 %i4133, label %bb4134, label %bb4138

bb4134:                                           ; preds = %bb4106
  %i4135 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i4136 = load i32, ptr %i4135, align 8, !tbaa !155
  %i4137 = add nsw i32 %i4131, -8
  br label %bb4145

bb4138:                                           ; preds = %bb4106
  %i4139 = load ptr, ptr %arg, align 8, !tbaa !151
  %i4140 = getelementptr inbounds %struct.bz_stream, ptr %i4139, i64 0, i32 1
  %i4141 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i4142 = getelementptr inbounds %struct.bz_stream, ptr %i4139, i64 0, i32 2
  %i4143 = getelementptr inbounds %struct.bz_stream, ptr %i4139, i64 0, i32 3
  %i4144 = load i32, ptr %i4140, align 8, !tbaa !141
  br label %bb4154

bb4145.loopexit:                                  ; preds = %bb4174
  br label %bb4145

bb4145:                                           ; preds = %bb4145.loopexit, %bb4134
  %i4146 = phi i32 [ %i4136, %bb4134 ], [ %i4164, %bb4145.loopexit ]
  %i4147 = phi i32 [ %i4137, %bb4134 ], [ %i4156, %bb4145.loopexit ]
  %i4148 = lshr i32 %i4146, %i4147
  store i32 %i4147, ptr %i4132, align 4, !tbaa !154
  %i4149 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 24
  %i4150 = load i32, ptr %i4149, align 4, !tbaa !175
  %i4151 = shl i32 %i4150, 8
  %i4152 = and i32 %i4148, 255
  %i4153 = or disjoint i32 %i4151, %i4152
  store i32 %i4153, ptr %i4149, align 4, !tbaa !175
  br label %bb4176

bb4154:                                           ; preds = %bb4174.bb4154_crit_edge, %bb4138
  %i4155 = phi i32 [ %i4144, %bb4138 ], [ %i4167, %bb4174.bb4154_crit_edge ]
  %i4156 = phi i32 [ %i4131, %bb4138 ], [ %i4165, %bb4174.bb4154_crit_edge ]
  %i4157 = icmp eq i32 %i4155, 0
  br i1 %i4157, label %bb4390.loopexit3, label %bb4158

bb4158:                                           ; preds = %bb4154
  %i4159 = load i32, ptr %i4141, align 8, !tbaa !155
  %i4160 = shl i32 %i4159, 8
  %i4161 = load ptr, ptr %i4139, align 8, !tbaa !147
  %i4162 = load i8, ptr %i4161, align 1, !tbaa !21
  %i4163 = zext i8 %i4162 to i32
  %i4164 = or disjoint i32 %i4160, %i4163
  store i32 %i4164, ptr %i4141, align 8, !tbaa !155
  %i4165 = add nsw i32 %i4156, 8
  store i32 %i4165, ptr %i4132, align 4, !tbaa !154
  %i4166 = getelementptr inbounds i8, ptr %i4161, i64 1
  store ptr %i4166, ptr %i4139, align 8, !tbaa !147
  %i4167 = add i32 %i4155, -1
  store i32 %i4167, ptr %i4140, align 8, !tbaa !141
  %i4168 = load i32, ptr %i4142, align 4, !tbaa !131
  %i4169 = add i32 %i4168, 1
  store i32 %i4169, ptr %i4142, align 4, !tbaa !131
  %i4170 = icmp eq i32 %i4169, 0
  br i1 %i4170, label %bb4171, label %bb4158.bb4174_crit_edge

bb4158.bb4174_crit_edge:                          ; preds = %bb4158
  br label %bb4174

bb4171:                                           ; preds = %bb4158
  %i4172 = load i32, ptr %i4143, align 8, !tbaa !132
  %i4173 = add i32 %i4172, 1
  store i32 %i4173, ptr %i4143, align 8, !tbaa !132
  br label %bb4174

bb4174:                                           ; preds = %bb4158.bb4174_crit_edge, %bb4171
  %i4175 = icmp sgt i32 %i4156, -1
  br i1 %i4175, label %bb4145.loopexit, label %bb4174.bb4154_crit_edge

bb4174.bb4154_crit_edge:                          ; preds = %bb4174
  br label %bb4154

bb4176:                                           ; preds = %bb4145, %bb64
  %i4177 = phi i32 [ %i11, %bb64 ], [ %i4107, %bb4145 ]
  %i4178 = phi i32 [ %i13, %bb64 ], [ %i4108, %bb4145 ]
  %i4179 = phi i32 [ %i15, %bb64 ], [ %i4109, %bb4145 ]
  %i4180 = phi i32 [ %i17, %bb64 ], [ %i4110, %bb4145 ]
  %i4181 = phi i32 [ %i19, %bb64 ], [ %i4111, %bb4145 ]
  %i4182 = phi i32 [ %i21, %bb64 ], [ %i4112, %bb4145 ]
  %i4183 = phi i32 [ %i23, %bb64 ], [ %i4113, %bb4145 ]
  %i4184 = phi i32 [ %i25, %bb64 ], [ %i4114, %bb4145 ]
  %i4185 = phi i32 [ %i27, %bb64 ], [ %i4115, %bb4145 ]
  %i4186 = phi i32 [ %i29, %bb64 ], [ %i4116, %bb4145 ]
  %i4187 = phi i32 [ %i31, %bb64 ], [ %i4117, %bb4145 ]
  %i4188 = phi i32 [ %i33, %bb64 ], [ %i4118, %bb4145 ]
  %i4189 = phi i32 [ %i35, %bb64 ], [ %i4119, %bb4145 ]
  %i4190 = phi i32 [ %i37, %bb64 ], [ %i4120, %bb4145 ]
  %i4191 = phi i32 [ %i39, %bb64 ], [ %i4121, %bb4145 ]
  %i4192 = phi i32 [ %i41, %bb64 ], [ %i4122, %bb4145 ]
  %i4193 = phi i32 [ %i43, %bb64 ], [ %i4123, %bb4145 ]
  %i4194 = phi i32 [ %i45, %bb64 ], [ %i4124, %bb4145 ]
  %i4195 = phi i32 [ %i47, %bb64 ], [ %i4125, %bb4145 ]
  %i4196 = phi i32 [ %i49, %bb64 ], [ %i4126, %bb4145 ]
  %i4197 = phi i32 [ %i51, %bb64 ], [ %i4127, %bb4145 ]
  %i4198 = phi ptr [ %i53, %bb64 ], [ %i4128, %bb4145 ]
  %i4199 = phi ptr [ %i55, %bb64 ], [ %i4129, %bb4145 ]
  %i4200 = phi ptr [ %i57, %bb64 ], [ %i4130, %bb4145 ]
  %i4201 = phi i32 [ %i66, %bb64 ], [ %i4147, %bb4145 ]
  store i32 48, ptr %i2, align 8, !tbaa !153
  %i4202 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i4203 = icmp sgt i32 %i4201, 7
  br i1 %i4203, label %bb4204, label %bb4208

bb4204:                                           ; preds = %bb4176
  %i4205 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i4206 = load i32, ptr %i4205, align 8, !tbaa !155
  %i4207 = add nsw i32 %i4201, -8
  br label %bb4215

bb4208:                                           ; preds = %bb4176
  %i4209 = load ptr, ptr %arg, align 8, !tbaa !151
  %i4210 = getelementptr inbounds %struct.bz_stream, ptr %i4209, i64 0, i32 1
  %i4211 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i4212 = getelementptr inbounds %struct.bz_stream, ptr %i4209, i64 0, i32 2
  %i4213 = getelementptr inbounds %struct.bz_stream, ptr %i4209, i64 0, i32 3
  %i4214 = load i32, ptr %i4210, align 8, !tbaa !141
  br label %bb4224

bb4215.loopexit:                                  ; preds = %bb4244
  br label %bb4215

bb4215:                                           ; preds = %bb4215.loopexit, %bb4204
  %i4216 = phi i32 [ %i4206, %bb4204 ], [ %i4234, %bb4215.loopexit ]
  %i4217 = phi i32 [ %i4207, %bb4204 ], [ %i4226, %bb4215.loopexit ]
  %i4218 = lshr i32 %i4216, %i4217
  store i32 %i4217, ptr %i4202, align 4, !tbaa !154
  %i4219 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 24
  %i4220 = load i32, ptr %i4219, align 4, !tbaa !175
  %i4221 = shl i32 %i4220, 8
  %i4222 = and i32 %i4218, 255
  %i4223 = or disjoint i32 %i4221, %i4222
  store i32 %i4223, ptr %i4219, align 4, !tbaa !175
  br label %bb4246

bb4224:                                           ; preds = %bb4244.bb4224_crit_edge, %bb4208
  %i4225 = phi i32 [ %i4214, %bb4208 ], [ %i4237, %bb4244.bb4224_crit_edge ]
  %i4226 = phi i32 [ %i4201, %bb4208 ], [ %i4235, %bb4244.bb4224_crit_edge ]
  %i4227 = icmp eq i32 %i4225, 0
  br i1 %i4227, label %bb4390.loopexit2, label %bb4228

bb4228:                                           ; preds = %bb4224
  %i4229 = load i32, ptr %i4211, align 8, !tbaa !155
  %i4230 = shl i32 %i4229, 8
  %i4231 = load ptr, ptr %i4209, align 8, !tbaa !147
  %i4232 = load i8, ptr %i4231, align 1, !tbaa !21
  %i4233 = zext i8 %i4232 to i32
  %i4234 = or disjoint i32 %i4230, %i4233
  store i32 %i4234, ptr %i4211, align 8, !tbaa !155
  %i4235 = add nsw i32 %i4226, 8
  store i32 %i4235, ptr %i4202, align 4, !tbaa !154
  %i4236 = getelementptr inbounds i8, ptr %i4231, i64 1
  store ptr %i4236, ptr %i4209, align 8, !tbaa !147
  %i4237 = add i32 %i4225, -1
  store i32 %i4237, ptr %i4210, align 8, !tbaa !141
  %i4238 = load i32, ptr %i4212, align 4, !tbaa !131
  %i4239 = add i32 %i4238, 1
  store i32 %i4239, ptr %i4212, align 4, !tbaa !131
  %i4240 = icmp eq i32 %i4239, 0
  br i1 %i4240, label %bb4241, label %bb4228.bb4244_crit_edge

bb4228.bb4244_crit_edge:                          ; preds = %bb4228
  br label %bb4244

bb4241:                                           ; preds = %bb4228
  %i4242 = load i32, ptr %i4213, align 8, !tbaa !132
  %i4243 = add i32 %i4242, 1
  store i32 %i4243, ptr %i4213, align 8, !tbaa !132
  br label %bb4244

bb4244:                                           ; preds = %bb4228.bb4244_crit_edge, %bb4241
  %i4245 = icmp sgt i32 %i4226, -1
  br i1 %i4245, label %bb4215.loopexit, label %bb4244.bb4224_crit_edge

bb4244.bb4224_crit_edge:                          ; preds = %bb4244
  br label %bb4224

bb4246:                                           ; preds = %bb4215, %bb61
  %i4247 = phi i32 [ %i11, %bb61 ], [ %i4177, %bb4215 ]
  %i4248 = phi i32 [ %i13, %bb61 ], [ %i4178, %bb4215 ]
  %i4249 = phi i32 [ %i15, %bb61 ], [ %i4179, %bb4215 ]
  %i4250 = phi i32 [ %i17, %bb61 ], [ %i4180, %bb4215 ]
  %i4251 = phi i32 [ %i19, %bb61 ], [ %i4181, %bb4215 ]
  %i4252 = phi i32 [ %i21, %bb61 ], [ %i4182, %bb4215 ]
  %i4253 = phi i32 [ %i23, %bb61 ], [ %i4183, %bb4215 ]
  %i4254 = phi i32 [ %i25, %bb61 ], [ %i4184, %bb4215 ]
  %i4255 = phi i32 [ %i27, %bb61 ], [ %i4185, %bb4215 ]
  %i4256 = phi i32 [ %i29, %bb61 ], [ %i4186, %bb4215 ]
  %i4257 = phi i32 [ %i31, %bb61 ], [ %i4187, %bb4215 ]
  %i4258 = phi i32 [ %i33, %bb61 ], [ %i4188, %bb4215 ]
  %i4259 = phi i32 [ %i35, %bb61 ], [ %i4189, %bb4215 ]
  %i4260 = phi i32 [ %i37, %bb61 ], [ %i4190, %bb4215 ]
  %i4261 = phi i32 [ %i39, %bb61 ], [ %i4191, %bb4215 ]
  %i4262 = phi i32 [ %i41, %bb61 ], [ %i4192, %bb4215 ]
  %i4263 = phi i32 [ %i43, %bb61 ], [ %i4193, %bb4215 ]
  %i4264 = phi i32 [ %i45, %bb61 ], [ %i4194, %bb4215 ]
  %i4265 = phi i32 [ %i47, %bb61 ], [ %i4195, %bb4215 ]
  %i4266 = phi i32 [ %i49, %bb61 ], [ %i4196, %bb4215 ]
  %i4267 = phi i32 [ %i51, %bb61 ], [ %i4197, %bb4215 ]
  %i4268 = phi ptr [ %i53, %bb61 ], [ %i4198, %bb4215 ]
  %i4269 = phi ptr [ %i55, %bb61 ], [ %i4199, %bb4215 ]
  %i4270 = phi ptr [ %i57, %bb61 ], [ %i4200, %bb4215 ]
  %i4271 = phi i32 [ %i63, %bb61 ], [ %i4217, %bb4215 ]
  store i32 49, ptr %i2, align 8, !tbaa !153
  %i4272 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i4273 = icmp sgt i32 %i4271, 7
  br i1 %i4273, label %bb4274, label %bb4278

bb4274:                                           ; preds = %bb4246
  %i4275 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i4276 = load i32, ptr %i4275, align 8, !tbaa !155
  %i4277 = add nsw i32 %i4271, -8
  br label %bb4285

bb4278:                                           ; preds = %bb4246
  %i4279 = load ptr, ptr %arg, align 8, !tbaa !151
  %i4280 = getelementptr inbounds %struct.bz_stream, ptr %i4279, i64 0, i32 1
  %i4281 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i4282 = getelementptr inbounds %struct.bz_stream, ptr %i4279, i64 0, i32 2
  %i4283 = getelementptr inbounds %struct.bz_stream, ptr %i4279, i64 0, i32 3
  %i4284 = load i32, ptr %i4280, align 8, !tbaa !141
  br label %bb4294

bb4285.loopexit:                                  ; preds = %bb4314
  br label %bb4285

bb4285:                                           ; preds = %bb4285.loopexit, %bb4274
  %i4286 = phi i32 [ %i4276, %bb4274 ], [ %i4304, %bb4285.loopexit ]
  %i4287 = phi i32 [ %i4277, %bb4274 ], [ %i4296, %bb4285.loopexit ]
  %i4288 = lshr i32 %i4286, %i4287
  store i32 %i4287, ptr %i4272, align 4, !tbaa !154
  %i4289 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 24
  %i4290 = load i32, ptr %i4289, align 4, !tbaa !175
  %i4291 = shl i32 %i4290, 8
  %i4292 = and i32 %i4288, 255
  %i4293 = or disjoint i32 %i4291, %i4292
  store i32 %i4293, ptr %i4289, align 4, !tbaa !175
  br label %bb4316

bb4294:                                           ; preds = %bb4314.bb4294_crit_edge, %bb4278
  %i4295 = phi i32 [ %i4284, %bb4278 ], [ %i4307, %bb4314.bb4294_crit_edge ]
  %i4296 = phi i32 [ %i4271, %bb4278 ], [ %i4305, %bb4314.bb4294_crit_edge ]
  %i4297 = icmp eq i32 %i4295, 0
  br i1 %i4297, label %bb4390.loopexit1, label %bb4298

bb4298:                                           ; preds = %bb4294
  %i4299 = load i32, ptr %i4281, align 8, !tbaa !155
  %i4300 = shl i32 %i4299, 8
  %i4301 = load ptr, ptr %i4279, align 8, !tbaa !147
  %i4302 = load i8, ptr %i4301, align 1, !tbaa !21
  %i4303 = zext i8 %i4302 to i32
  %i4304 = or disjoint i32 %i4300, %i4303
  store i32 %i4304, ptr %i4281, align 8, !tbaa !155
  %i4305 = add nsw i32 %i4296, 8
  store i32 %i4305, ptr %i4272, align 4, !tbaa !154
  %i4306 = getelementptr inbounds i8, ptr %i4301, i64 1
  store ptr %i4306, ptr %i4279, align 8, !tbaa !147
  %i4307 = add i32 %i4295, -1
  store i32 %i4307, ptr %i4280, align 8, !tbaa !141
  %i4308 = load i32, ptr %i4282, align 4, !tbaa !131
  %i4309 = add i32 %i4308, 1
  store i32 %i4309, ptr %i4282, align 4, !tbaa !131
  %i4310 = icmp eq i32 %i4309, 0
  br i1 %i4310, label %bb4311, label %bb4298.bb4314_crit_edge

bb4298.bb4314_crit_edge:                          ; preds = %bb4298
  br label %bb4314

bb4311:                                           ; preds = %bb4298
  %i4312 = load i32, ptr %i4283, align 8, !tbaa !132
  %i4313 = add i32 %i4312, 1
  store i32 %i4313, ptr %i4283, align 8, !tbaa !132
  br label %bb4314

bb4314:                                           ; preds = %bb4298.bb4314_crit_edge, %bb4311
  %i4315 = icmp sgt i32 %i4296, -1
  br i1 %i4315, label %bb4285.loopexit, label %bb4314.bb4294_crit_edge

bb4314.bb4294_crit_edge:                          ; preds = %bb4314
  br label %bb4294

bb4316:                                           ; preds = %bb4285, %bb58
  %i4317 = phi i32 [ %i11, %bb58 ], [ %i4247, %bb4285 ]
  %i4318 = phi i32 [ %i13, %bb58 ], [ %i4248, %bb4285 ]
  %i4319 = phi i32 [ %i15, %bb58 ], [ %i4249, %bb4285 ]
  %i4320 = phi i32 [ %i17, %bb58 ], [ %i4250, %bb4285 ]
  %i4321 = phi i32 [ %i19, %bb58 ], [ %i4251, %bb4285 ]
  %i4322 = phi i32 [ %i21, %bb58 ], [ %i4252, %bb4285 ]
  %i4323 = phi i32 [ %i23, %bb58 ], [ %i4253, %bb4285 ]
  %i4324 = phi i32 [ %i25, %bb58 ], [ %i4254, %bb4285 ]
  %i4325 = phi i32 [ %i27, %bb58 ], [ %i4255, %bb4285 ]
  %i4326 = phi i32 [ %i29, %bb58 ], [ %i4256, %bb4285 ]
  %i4327 = phi i32 [ %i31, %bb58 ], [ %i4257, %bb4285 ]
  %i4328 = phi i32 [ %i33, %bb58 ], [ %i4258, %bb4285 ]
  %i4329 = phi i32 [ %i35, %bb58 ], [ %i4259, %bb4285 ]
  %i4330 = phi i32 [ %i37, %bb58 ], [ %i4260, %bb4285 ]
  %i4331 = phi i32 [ %i39, %bb58 ], [ %i4261, %bb4285 ]
  %i4332 = phi i32 [ %i41, %bb58 ], [ %i4262, %bb4285 ]
  %i4333 = phi i32 [ %i43, %bb58 ], [ %i4263, %bb4285 ]
  %i4334 = phi i32 [ %i45, %bb58 ], [ %i4264, %bb4285 ]
  %i4335 = phi i32 [ %i47, %bb58 ], [ %i4265, %bb4285 ]
  %i4336 = phi i32 [ %i49, %bb58 ], [ %i4266, %bb4285 ]
  %i4337 = phi i32 [ %i51, %bb58 ], [ %i4267, %bb4285 ]
  %i4338 = phi ptr [ %i53, %bb58 ], [ %i4268, %bb4285 ]
  %i4339 = phi ptr [ %i55, %bb58 ], [ %i4269, %bb4285 ]
  %i4340 = phi ptr [ %i57, %bb58 ], [ %i4270, %bb4285 ]
  %i4341 = phi i32 [ %i60, %bb58 ], [ %i4287, %bb4285 ]
  store i32 50, ptr %i2, align 8, !tbaa !153
  %i4342 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 8
  %i4343 = icmp sgt i32 %i4341, 7
  br i1 %i4343, label %bb4344, label %bb4348

bb4344:                                           ; preds = %bb4316
  %i4345 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i4346 = load i32, ptr %i4345, align 8, !tbaa !155
  %i4347 = add nsw i32 %i4341, -8
  br label %bb4355

bb4348:                                           ; preds = %bb4316
  %i4349 = load ptr, ptr %arg, align 8, !tbaa !151
  %i4350 = getelementptr inbounds %struct.bz_stream, ptr %i4349, i64 0, i32 1
  %i4351 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 7
  %i4352 = getelementptr inbounds %struct.bz_stream, ptr %i4349, i64 0, i32 2
  %i4353 = getelementptr inbounds %struct.bz_stream, ptr %i4349, i64 0, i32 3
  %i4354 = load i32, ptr %i4350, align 8, !tbaa !141
  br label %bb4364

bb4355.loopexit:                                  ; preds = %bb4384
  br label %bb4355

bb4355:                                           ; preds = %bb4355.loopexit, %bb4344
  %i4356 = phi i32 [ %i4346, %bb4344 ], [ %i4374, %bb4355.loopexit ]
  %i4357 = phi i32 [ %i4347, %bb4344 ], [ %i4366, %bb4355.loopexit ]
  %i4358 = lshr i32 %i4356, %i4357
  store i32 %i4357, ptr %i4342, align 4, !tbaa !154
  %i4359 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 24
  %i4360 = load i32, ptr %i4359, align 4, !tbaa !175
  %i4361 = shl i32 %i4360, 8
  %i4362 = and i32 %i4358, 255
  %i4363 = or disjoint i32 %i4361, %i4362
  store i32 %i4363, ptr %i4359, align 4, !tbaa !175
  store i32 1, ptr %i2, align 8, !tbaa !153
  br label %bb4390

bb4364:                                           ; preds = %bb4384.bb4364_crit_edge, %bb4348
  %i4365 = phi i32 [ %i4354, %bb4348 ], [ %i4377, %bb4384.bb4364_crit_edge ]
  %i4366 = phi i32 [ %i4341, %bb4348 ], [ %i4375, %bb4384.bb4364_crit_edge ]
  %i4367 = icmp eq i32 %i4365, 0
  br i1 %i4367, label %bb4390.loopexit, label %bb4368

bb4368:                                           ; preds = %bb4364
  %i4369 = load i32, ptr %i4351, align 8, !tbaa !155
  %i4370 = shl i32 %i4369, 8
  %i4371 = load ptr, ptr %i4349, align 8, !tbaa !147
  %i4372 = load i8, ptr %i4371, align 1, !tbaa !21
  %i4373 = zext i8 %i4372 to i32
  %i4374 = or disjoint i32 %i4370, %i4373
  store i32 %i4374, ptr %i4351, align 8, !tbaa !155
  %i4375 = add nsw i32 %i4366, 8
  store i32 %i4375, ptr %i4342, align 4, !tbaa !154
  %i4376 = getelementptr inbounds i8, ptr %i4371, i64 1
  store ptr %i4376, ptr %i4349, align 8, !tbaa !147
  %i4377 = add i32 %i4365, -1
  store i32 %i4377, ptr %i4350, align 8, !tbaa !141
  %i4378 = load i32, ptr %i4352, align 4, !tbaa !131
  %i4379 = add i32 %i4378, 1
  store i32 %i4379, ptr %i4352, align 4, !tbaa !131
  %i4380 = icmp eq i32 %i4379, 0
  br i1 %i4380, label %bb4381, label %bb4368.bb4384_crit_edge

bb4368.bb4384_crit_edge:                          ; preds = %bb4368
  br label %bb4384

bb4381:                                           ; preds = %bb4368
  %i4382 = load i32, ptr %i4353, align 8, !tbaa !132
  %i4383 = add i32 %i4382, 1
  store i32 %i4383, ptr %i4353, align 8, !tbaa !132
  br label %bb4384

bb4384:                                           ; preds = %bb4368.bb4384_crit_edge, %bb4381
  %i4385 = icmp sgt i32 %i4366, -1
  br i1 %i4385, label %bb4355.loopexit, label %bb4384.bb4364_crit_edge

bb4384.bb4364_crit_edge:                          ; preds = %bb4384
  br label %bb4364

bb4386:                                           ; preds = %bb10
  tail call void @BZ2_bz__AssertH__fail(i32 noundef 4001) #31
  tail call void @BZ2_bz__AssertH__fail(i32 noundef 4002) #31
  br label %bb4390

bb4387splitsplitsplit:                            ; preds = %bb3460
  br label %bb4387splitsplit

bb4387splitsplit:                                 ; preds = %bb4387splitsplitsplit, %bb3453.bb4387splitsplit_crit_edge
  %i4388.ph.ph = phi i64 [ %i3454, %bb3453.bb4387splitsplit_crit_edge ], [ %i3461, %bb4387splitsplitsplit ]
  br label %bb4387split

bb4387split:                                      ; preds = %bb4387splitsplit, %bb3447.bb4387split_crit_edge
  %i4388.ph = phi i64 [ %i3445, %bb3447.bb4387split_crit_edge ], [ %i4388.ph.ph, %bb4387splitsplit ]
  br label %bb4387

bb4387:                                           ; preds = %bb4387split, %bb3437.bb4387_crit_edge
  %i4388 = phi i64 [ %i3438, %bb3437.bb4387_crit_edge ], [ %i4388.ph, %bb4387split ]
  %i4389 = trunc i64 %i4388 to i32
  br label %bb4390

bb4390.loopexit:                                  ; preds = %bb4364
  br label %bb4390

bb4390.loopexit1:                                 ; preds = %bb4294
  br label %bb4390

bb4390.loopexit2:                                 ; preds = %bb4224
  br label %bb4390

bb4390.loopexit3:                                 ; preds = %bb4154
  br label %bb4390

bb4390.loopexit4:                                 ; preds = %bb4082
  br label %bb4390

bb4390.loopexit5:                                 ; preds = %bb4015
  br label %bb4390

bb4390.loopexit6:                                 ; preds = %bb3948
  br label %bb4390

bb4390.loopexit7:                                 ; preds = %bb3881
  br label %bb4390

bb4390.loopexit8:                                 ; preds = %bb3814
  br label %bb4390

bb4390.loopexit9:                                 ; preds = %bb1468
  br label %bb4390

bb4390.loopexit10:                                ; preds = %bb1592
  br label %bb4390

bb4390.loopexit11:                                ; preds = %bb1888
  br label %bb4390

bb4390.loopexit12:                                ; preds = %bb1910
  br label %bb4390

bb4390.loopexit13:                                ; preds = %bb2243
  br label %bb4390

bb4390.loopexit14:                                ; preds = %bb2174
  br label %bb4390

bb4390.loopexit15:                                ; preds = %bb2054
  br label %bb4390

bb4390.loopexit16:                                ; preds = %bb2557
  br label %bb4390

bb4390.loopexit17:                                ; preds = %bb2817
  br label %bb4390

bb4390.loopexit18:                                ; preds = %bb2891
  br label %bb4390

bb4390.loopexit19:                                ; preds = %bb2881
  br label %bb4390

bb4390.loopexit20:                                ; preds = %bb2715
  br label %bb4390

bb4390.loopexit21:                                ; preds = %bb3356
  br label %bb4390

bb4390.loopexit22:                                ; preds = %bb3254
  br label %bb4390

bb4390.loopexit23:                                ; preds = %bb2455
  br label %bb4390

bb4390.loopexit24:                                ; preds = %bb1792
  br label %bb4390

bb4390.loopexit25:                                ; preds = %bb1725
  br label %bb4390

bb4390.loopexit26:                                ; preds = %bb1363
  br label %bb4390

bb4390.loopexit27:                                ; preds = %bb1292
  br label %bb4390

bb4390.loopexit28:                                ; preds = %bb1222
  br label %bb4390

bb4390.loopexit29:                                ; preds = %bb1152
  br label %bb4390

bb4390.loopexit30:                                ; preds = %bb1083
  br label %bb4390

bb4390.loopexit31:                                ; preds = %bb1013
  br label %bb4390

bb4390.loopexit32:                                ; preds = %bb943
  br label %bb4390

bb4390.loopexit33:                                ; preds = %bb873
  br label %bb4390

bb4390.loopexit34:                                ; preds = %bb791
  br label %bb4390

bb4390.loopexit35:                                ; preds = %bb724
  br label %bb4390

bb4390.loopexit36:                                ; preds = %bb657
  br label %bb4390

bb4390.loopexit37:                                ; preds = %bb590
  br label %bb4390

bb4390.loopexit38:                                ; preds = %bb523
  br label %bb4390

bb4390.loopexit39:                                ; preds = %bb456
  br label %bb4390

bb4390.loopexit40:                                ; preds = %bb361
  br label %bb4390

bb4390.loopexit41:                                ; preds = %bb293
  br label %bb4390

bb4390.loopexit42:                                ; preds = %bb227
  br label %bb4390

bb4390.loopexit43:                                ; preds = %bb161
  br label %bb4390

bb4390:                                           ; preds = %bb4076.bb4390_crit_edge, %bb4008.bb4390_crit_edge, %bb3941.bb4390_crit_edge, %bb3874.bb4390_crit_edge, %bb3807.bb4390_crit_edge, %bb3387.bb4390_crit_edge, %bb3378.bb4390_crit_edge, %bb3276.bb4390_crit_edge, %bb3185.bb4390_crit_edge, %bb2905.bb4390_crit_edge, %bb2839.bb4390_crit_edge, %bb2737.bb4390_crit_edge, %bb2646.bb4390_crit_edge, %bb2579.bb4390_crit_edge, %bb2477.bb4390_crit_edge, %bb2396.bb4390_crit_edge, %bb2102.bb4390_crit_edge, %bb1785.bb4390_crit_edge, %bb1719.bb4390_crit_edge45, %bb1719.bb4390_crit_edge44, %bb1719.bb4390_crit_edge, %bb1677.bb4390_crit_edge, %bb1385.bb4390_crit_edge, %bb1352.bb4390_crit_edge, %bb784.bb4390_crit_edge, %bb717.bb4390_crit_edge, %bb650.bb4390_crit_edge, %bb583.bb4390_crit_edge, %bb516.bb4390_crit_edge, %bb450.bb4390_crit_edge, %bb407.bb4390_crit_edge, %bb392.bb4390_crit_edge, %bb352.bb4390_crit_edge, %bb286.bb4390_crit_edge, %bb220.bb4390_crit_edge, %bb154.bb4390_crit_edge, %bb4390.loopexit43, %bb4390.loopexit42, %bb4390.loopexit41, %bb4390.loopexit40, %bb4390.loopexit39, %bb4390.loopexit38, %bb4390.loopexit37, %bb4390.loopexit36, %bb4390.loopexit35, %bb4390.loopexit34, %bb4390.loopexit33, %bb4390.loopexit32, %bb4390.loopexit31, %bb4390.loopexit30, %bb4390.loopexit29, %bb4390.loopexit28, %bb4390.loopexit27, %bb4390.loopexit26, %bb4390.loopexit25, %bb4390.loopexit24, %bb4390.loopexit23, %bb4390.loopexit22, %bb4390.loopexit21, %bb4390.loopexit20, %bb4390.loopexit19, %bb4390.loopexit18, %bb4390.loopexit17, %bb4390.loopexit16, %bb4390.loopexit15, %bb4390.loopexit14, %bb4390.loopexit13, %bb4390.loopexit12, %bb4390.loopexit11, %bb4390.loopexit10, %bb4390.loopexit9, %bb4390.loopexit8, %bb4390.loopexit7, %bb4390.loopexit6, %bb4390.loopexit5, %bb4390.loopexit4, %bb4390.loopexit3, %bb4390.loopexit2, %bb4390.loopexit1, %bb4390.loopexit, %bb4387, %bb4386, %bb4355, %bb3762, %bb3748, %bb3660, %bb3654
  %i4391 = phi i32 [ %i41, %bb4386 ], [ %i4332, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i199, %bb220.bb4390_crit_edge ], [ %i265, %bb286.bb4390_crit_edge ], [ %i331, %bb352.bb4390_crit_edge ], [ %i331, %bb392.bb4390_crit_edge ], [ %i331, %bb407.bb4390_crit_edge ], [ %i428, %bb450.bb4390_crit_edge ], [ %i494, %bb516.bb4390_crit_edge ], [ %i561, %bb583.bb4390_crit_edge ], [ %i628, %bb650.bb4390_crit_edge ], [ %i695, %bb717.bb4390_crit_edge ], [ %i762, %bb784.bb4390_crit_edge ], [ %i1330, %bb1352.bb4390_crit_edge ], [ %i1330, %bb1385.bb4390_crit_edge ], [ %i1504, %bb1677.bb4390_crit_edge ], [ %i1694, %bb1719.bb4390_crit_edge ], [ %i1694, %bb1719.bb4390_crit_edge44 ], [ %i1694, %bb1719.bb4390_crit_edge45 ], [ %i1759, %bb1785.bb4390_crit_edge ], [ %i2111, %bb2102.bb4390_crit_edge ], [ %i1983, %bb2396.bb4390_crit_edge ], [ %i2481, %bb2477.bb4390_crit_edge ], [ %i2481, %bb2579.bb4390_crit_edge ], [ %i2617, %bb2646.bb4390_crit_edge ], [ %i2738, %bb2737.bb4390_crit_edge ], [ %i2738, %bb2839.bb4390_crit_edge ], [ %i2589, %bb2905.bb4390_crit_edge ], [ %i2589, %bb3185.bb4390_crit_edge ], [ %i3277, %bb3276.bb4390_crit_edge ], [ %i3277, %bb3378.bb4390_crit_edge ], [ %i2589, %bb3387.bb4390_crit_edge ], [ %i2589, %bb3748 ], [ %i2589, %bb3762 ], [ %i2589, %bb3654 ], [ %i2589, %bb3660 ], [ %i3785, %bb3807.bb4390_crit_edge ], [ %i3852, %bb3874.bb4390_crit_edge ], [ %i3919, %bb3941.bb4390_crit_edge ], [ %i3986, %bb4008.bb4390_crit_edge ], [ %i4053, %bb4076.bb4390_crit_edge ], [ %i2589, %bb4387 ], [ %i4332, %bb4390.loopexit ], [ %i4262, %bb4390.loopexit1 ], [ %i4192, %bb4390.loopexit2 ], [ %i4122, %bb4390.loopexit3 ], [ %i4053, %bb4390.loopexit4 ], [ %i3986, %bb4390.loopexit5 ], [ %i3919, %bb4390.loopexit6 ], [ %i3852, %bb4390.loopexit7 ], [ %i3785, %bb4390.loopexit8 ], [ %i1434, %bb4390.loopexit9 ], [ %i1561, %bb4390.loopexit10 ], [ %i1851, %bb4390.loopexit11 ], [ %i1851, %bb4390.loopexit12 ], [ %i2205, %bb4390.loopexit13 ], [ %i2138, %bb4390.loopexit14 ], [ %i2019, %bb4390.loopexit15 ], [ %i2515, %bb4390.loopexit16 ], [ %i2772, %bb4390.loopexit17 ], [ %i2738, %bb4390.loopexit18 ], [ %i2738, %bb4390.loopexit19 ], [ %i2670, %bb4390.loopexit20 ], [ %i3311, %bb4390.loopexit21 ], [ %i3209, %bb4390.loopexit22 ], [ %i2413, %bb4390.loopexit23 ], [ %i1759, %bb4390.loopexit24 ], [ %i1694, %bb4390.loopexit25 ], [ %i1330, %bb4390.loopexit26 ], [ %i1260, %bb4390.loopexit27 ], [ %i1190, %bb4390.loopexit28 ], [ %i1121, %bb4390.loopexit29 ], [ %i1051, %bb4390.loopexit30 ], [ %i981, %bb4390.loopexit31 ], [ %i911, %bb4390.loopexit32 ], [ %i841, %bb4390.loopexit33 ], [ %i762, %bb4390.loopexit34 ], [ %i695, %bb4390.loopexit35 ], [ %i628, %bb4390.loopexit36 ], [ %i561, %bb4390.loopexit37 ], [ %i494, %bb4390.loopexit38 ], [ %i428, %bb4390.loopexit39 ], [ %i331, %bb4390.loopexit40 ], [ %i265, %bb4390.loopexit41 ], [ %i199, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4392 = phi ptr [ %i57, %bb4386 ], [ %i4340, %bb4355 ], [ null, %bb154.bb4390_crit_edge ], [ %i207, %bb220.bb4390_crit_edge ], [ %i273, %bb286.bb4390_crit_edge ], [ %i339, %bb352.bb4390_crit_edge ], [ %i339, %bb392.bb4390_crit_edge ], [ %i339, %bb407.bb4390_crit_edge ], [ %i436, %bb450.bb4390_crit_edge ], [ %i502, %bb516.bb4390_crit_edge ], [ %i569, %bb583.bb4390_crit_edge ], [ %i636, %bb650.bb4390_crit_edge ], [ %i703, %bb717.bb4390_crit_edge ], [ %i770, %bb784.bb4390_crit_edge ], [ %i1338, %bb1352.bb4390_crit_edge ], [ %i1338, %bb1385.bb4390_crit_edge ], [ %i1512, %bb1677.bb4390_crit_edge ], [ %i1702, %bb1719.bb4390_crit_edge ], [ %i1702, %bb1719.bb4390_crit_edge44 ], [ %i1702, %bb1719.bb4390_crit_edge45 ], [ %i1767, %bb1785.bb4390_crit_edge ], [ %i2119, %bb2102.bb4390_crit_edge ], [ %i1991, %bb2396.bb4390_crit_edge ], [ %i2483, %bb2477.bb4390_crit_edge ], [ %i2483, %bb2579.bb4390_crit_edge ], [ %i2618, %bb2646.bb4390_crit_edge ], [ %i2740, %bb2737.bb4390_crit_edge ], [ %i2740, %bb2839.bb4390_crit_edge ], [ %i2590, %bb2905.bb4390_crit_edge ], [ %i2590, %bb3185.bb4390_crit_edge ], [ %i3279, %bb3276.bb4390_crit_edge ], [ %i3279, %bb3378.bb4390_crit_edge ], [ %i2590, %bb3387.bb4390_crit_edge ], [ %i2590, %bb3748 ], [ %i2590, %bb3762 ], [ %i2590, %bb3654 ], [ %i2590, %bb3660 ], [ %i3793, %bb3807.bb4390_crit_edge ], [ %i3860, %bb3874.bb4390_crit_edge ], [ %i3927, %bb3941.bb4390_crit_edge ], [ %i3994, %bb4008.bb4390_crit_edge ], [ %i4061, %bb4076.bb4390_crit_edge ], [ %i2590, %bb4387 ], [ %i4340, %bb4390.loopexit ], [ %i4270, %bb4390.loopexit1 ], [ %i4200, %bb4390.loopexit2 ], [ %i4130, %bb4390.loopexit3 ], [ %i4061, %bb4390.loopexit4 ], [ %i3994, %bb4390.loopexit5 ], [ %i3927, %bb4390.loopexit6 ], [ %i3860, %bb4390.loopexit7 ], [ %i3793, %bb4390.loopexit8 ], [ %i1442, %bb4390.loopexit9 ], [ %i1569, %bb4390.loopexit10 ], [ %i1859, %bb4390.loopexit11 ], [ %i1859, %bb4390.loopexit12 ], [ %i2213, %bb4390.loopexit13 ], [ %i2146, %bb4390.loopexit14 ], [ %i2027, %bb4390.loopexit15 ], [ %i2517, %bb4390.loopexit16 ], [ %i2774, %bb4390.loopexit17 ], [ %i2740, %bb4390.loopexit18 ], [ %i2740, %bb4390.loopexit19 ], [ %i2671, %bb4390.loopexit20 ], [ %i3313, %bb4390.loopexit21 ], [ %i3210, %bb4390.loopexit22 ], [ %i2416, %bb4390.loopexit23 ], [ %i1767, %bb4390.loopexit24 ], [ %i1702, %bb4390.loopexit25 ], [ %i1338, %bb4390.loopexit26 ], [ %i1268, %bb4390.loopexit27 ], [ %i1198, %bb4390.loopexit28 ], [ %i1129, %bb4390.loopexit29 ], [ %i1059, %bb4390.loopexit30 ], [ %i989, %bb4390.loopexit31 ], [ %i919, %bb4390.loopexit32 ], [ %i849, %bb4390.loopexit33 ], [ %i770, %bb4390.loopexit34 ], [ %i703, %bb4390.loopexit35 ], [ %i636, %bb4390.loopexit36 ], [ %i569, %bb4390.loopexit37 ], [ %i502, %bb4390.loopexit38 ], [ %i436, %bb4390.loopexit39 ], [ %i339, %bb4390.loopexit40 ], [ %i273, %bb4390.loopexit41 ], [ %i207, %bb4390.loopexit42 ], [ null, %bb4390.loopexit43 ]
  %i4393 = phi ptr [ %i55, %bb4386 ], [ %i4339, %bb4355 ], [ null, %bb154.bb4390_crit_edge ], [ %i206, %bb220.bb4390_crit_edge ], [ %i272, %bb286.bb4390_crit_edge ], [ %i338, %bb352.bb4390_crit_edge ], [ %i338, %bb392.bb4390_crit_edge ], [ %i338, %bb407.bb4390_crit_edge ], [ %i435, %bb450.bb4390_crit_edge ], [ %i501, %bb516.bb4390_crit_edge ], [ %i568, %bb583.bb4390_crit_edge ], [ %i635, %bb650.bb4390_crit_edge ], [ %i702, %bb717.bb4390_crit_edge ], [ %i769, %bb784.bb4390_crit_edge ], [ %i1337, %bb1352.bb4390_crit_edge ], [ %i1337, %bb1385.bb4390_crit_edge ], [ %i1511, %bb1677.bb4390_crit_edge ], [ %i1701, %bb1719.bb4390_crit_edge ], [ %i1701, %bb1719.bb4390_crit_edge44 ], [ %i1701, %bb1719.bb4390_crit_edge45 ], [ %i1766, %bb1785.bb4390_crit_edge ], [ %i2118, %bb2102.bb4390_crit_edge ], [ %i1990, %bb2396.bb4390_crit_edge ], [ %i2484, %bb2477.bb4390_crit_edge ], [ %i2484, %bb2579.bb4390_crit_edge ], [ %i2619, %bb2646.bb4390_crit_edge ], [ %i2741, %bb2737.bb4390_crit_edge ], [ %i2741, %bb2839.bb4390_crit_edge ], [ %i2591, %bb2905.bb4390_crit_edge ], [ %i2591, %bb3185.bb4390_crit_edge ], [ %i3280, %bb3276.bb4390_crit_edge ], [ %i3280, %bb3378.bb4390_crit_edge ], [ %i2591, %bb3387.bb4390_crit_edge ], [ %i2591, %bb3748 ], [ %i2591, %bb3762 ], [ %i2591, %bb3654 ], [ %i2591, %bb3660 ], [ %i3792, %bb3807.bb4390_crit_edge ], [ %i3859, %bb3874.bb4390_crit_edge ], [ %i3926, %bb3941.bb4390_crit_edge ], [ %i3993, %bb4008.bb4390_crit_edge ], [ %i4060, %bb4076.bb4390_crit_edge ], [ %i2591, %bb4387 ], [ %i4339, %bb4390.loopexit ], [ %i4269, %bb4390.loopexit1 ], [ %i4199, %bb4390.loopexit2 ], [ %i4129, %bb4390.loopexit3 ], [ %i4060, %bb4390.loopexit4 ], [ %i3993, %bb4390.loopexit5 ], [ %i3926, %bb4390.loopexit6 ], [ %i3859, %bb4390.loopexit7 ], [ %i3792, %bb4390.loopexit8 ], [ %i1441, %bb4390.loopexit9 ], [ %i1568, %bb4390.loopexit10 ], [ %i1858, %bb4390.loopexit11 ], [ %i1858, %bb4390.loopexit12 ], [ %i2212, %bb4390.loopexit13 ], [ %i2145, %bb4390.loopexit14 ], [ %i2026, %bb4390.loopexit15 ], [ %i2518, %bb4390.loopexit16 ], [ %i2775, %bb4390.loopexit17 ], [ %i2741, %bb4390.loopexit18 ], [ %i2741, %bb4390.loopexit19 ], [ %i2672, %bb4390.loopexit20 ], [ %i3314, %bb4390.loopexit21 ], [ %i3211, %bb4390.loopexit22 ], [ %i2417, %bb4390.loopexit23 ], [ %i1766, %bb4390.loopexit24 ], [ %i1701, %bb4390.loopexit25 ], [ %i1337, %bb4390.loopexit26 ], [ %i1267, %bb4390.loopexit27 ], [ %i1197, %bb4390.loopexit28 ], [ %i1128, %bb4390.loopexit29 ], [ %i1058, %bb4390.loopexit30 ], [ %i988, %bb4390.loopexit31 ], [ %i918, %bb4390.loopexit32 ], [ %i848, %bb4390.loopexit33 ], [ %i769, %bb4390.loopexit34 ], [ %i702, %bb4390.loopexit35 ], [ %i635, %bb4390.loopexit36 ], [ %i568, %bb4390.loopexit37 ], [ %i501, %bb4390.loopexit38 ], [ %i435, %bb4390.loopexit39 ], [ %i338, %bb4390.loopexit40 ], [ %i272, %bb4390.loopexit41 ], [ %i206, %bb4390.loopexit42 ], [ null, %bb4390.loopexit43 ]
  %i4394 = phi ptr [ %i53, %bb4386 ], [ %i4338, %bb4355 ], [ null, %bb154.bb4390_crit_edge ], [ %i205, %bb220.bb4390_crit_edge ], [ %i271, %bb286.bb4390_crit_edge ], [ %i337, %bb352.bb4390_crit_edge ], [ %i337, %bb392.bb4390_crit_edge ], [ %i337, %bb407.bb4390_crit_edge ], [ %i434, %bb450.bb4390_crit_edge ], [ %i500, %bb516.bb4390_crit_edge ], [ %i567, %bb583.bb4390_crit_edge ], [ %i634, %bb650.bb4390_crit_edge ], [ %i701, %bb717.bb4390_crit_edge ], [ %i768, %bb784.bb4390_crit_edge ], [ %i1336, %bb1352.bb4390_crit_edge ], [ %i1336, %bb1385.bb4390_crit_edge ], [ %i1510, %bb1677.bb4390_crit_edge ], [ %i1700, %bb1719.bb4390_crit_edge ], [ %i1700, %bb1719.bb4390_crit_edge44 ], [ %i1700, %bb1719.bb4390_crit_edge45 ], [ %i1765, %bb1785.bb4390_crit_edge ], [ %i2117, %bb2102.bb4390_crit_edge ], [ %i1989, %bb2396.bb4390_crit_edge ], [ %i2485, %bb2477.bb4390_crit_edge ], [ %i2485, %bb2579.bb4390_crit_edge ], [ %i2620, %bb2646.bb4390_crit_edge ], [ %i2742, %bb2737.bb4390_crit_edge ], [ %i2742, %bb2839.bb4390_crit_edge ], [ %i2592, %bb2905.bb4390_crit_edge ], [ %i2592, %bb3185.bb4390_crit_edge ], [ %i3281, %bb3276.bb4390_crit_edge ], [ %i3281, %bb3378.bb4390_crit_edge ], [ %i2592, %bb3387.bb4390_crit_edge ], [ %i2592, %bb3748 ], [ %i2592, %bb3762 ], [ %i2592, %bb3654 ], [ %i2592, %bb3660 ], [ %i3791, %bb3807.bb4390_crit_edge ], [ %i3858, %bb3874.bb4390_crit_edge ], [ %i3925, %bb3941.bb4390_crit_edge ], [ %i3992, %bb4008.bb4390_crit_edge ], [ %i4059, %bb4076.bb4390_crit_edge ], [ %i2592, %bb4387 ], [ %i4338, %bb4390.loopexit ], [ %i4268, %bb4390.loopexit1 ], [ %i4198, %bb4390.loopexit2 ], [ %i4128, %bb4390.loopexit3 ], [ %i4059, %bb4390.loopexit4 ], [ %i3992, %bb4390.loopexit5 ], [ %i3925, %bb4390.loopexit6 ], [ %i3858, %bb4390.loopexit7 ], [ %i3791, %bb4390.loopexit8 ], [ %i1440, %bb4390.loopexit9 ], [ %i1567, %bb4390.loopexit10 ], [ %i1857, %bb4390.loopexit11 ], [ %i1857, %bb4390.loopexit12 ], [ %i2211, %bb4390.loopexit13 ], [ %i2144, %bb4390.loopexit14 ], [ %i2025, %bb4390.loopexit15 ], [ %i2519, %bb4390.loopexit16 ], [ %i2776, %bb4390.loopexit17 ], [ %i2742, %bb4390.loopexit18 ], [ %i2742, %bb4390.loopexit19 ], [ %i2673, %bb4390.loopexit20 ], [ %i3315, %bb4390.loopexit21 ], [ %i3212, %bb4390.loopexit22 ], [ %i2418, %bb4390.loopexit23 ], [ %i1765, %bb4390.loopexit24 ], [ %i1700, %bb4390.loopexit25 ], [ %i1336, %bb4390.loopexit26 ], [ %i1266, %bb4390.loopexit27 ], [ %i1196, %bb4390.loopexit28 ], [ %i1127, %bb4390.loopexit29 ], [ %i1057, %bb4390.loopexit30 ], [ %i987, %bb4390.loopexit31 ], [ %i917, %bb4390.loopexit32 ], [ %i847, %bb4390.loopexit33 ], [ %i768, %bb4390.loopexit34 ], [ %i701, %bb4390.loopexit35 ], [ %i634, %bb4390.loopexit36 ], [ %i567, %bb4390.loopexit37 ], [ %i500, %bb4390.loopexit38 ], [ %i434, %bb4390.loopexit39 ], [ %i337, %bb4390.loopexit40 ], [ %i271, %bb4390.loopexit41 ], [ %i205, %bb4390.loopexit42 ], [ null, %bb4390.loopexit43 ]
  %i4395 = phi i32 [ %i51, %bb4386 ], [ %i4337, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i204, %bb220.bb4390_crit_edge ], [ %i270, %bb286.bb4390_crit_edge ], [ %i336, %bb352.bb4390_crit_edge ], [ %i336, %bb392.bb4390_crit_edge ], [ %i336, %bb407.bb4390_crit_edge ], [ %i433, %bb450.bb4390_crit_edge ], [ %i499, %bb516.bb4390_crit_edge ], [ %i566, %bb583.bb4390_crit_edge ], [ %i633, %bb650.bb4390_crit_edge ], [ %i700, %bb717.bb4390_crit_edge ], [ %i767, %bb784.bb4390_crit_edge ], [ %i1335, %bb1352.bb4390_crit_edge ], [ %i1335, %bb1385.bb4390_crit_edge ], [ %i1509, %bb1677.bb4390_crit_edge ], [ %i1699, %bb1719.bb4390_crit_edge ], [ %i1699, %bb1719.bb4390_crit_edge44 ], [ %i1699, %bb1719.bb4390_crit_edge45 ], [ %i1764, %bb1785.bb4390_crit_edge ], [ %i2116, %bb2102.bb4390_crit_edge ], [ %i1988, %bb2396.bb4390_crit_edge ], [ %i2486, %bb2477.bb4390_crit_edge ], [ %i2486, %bb2579.bb4390_crit_edge ], [ %i2621, %bb2646.bb4390_crit_edge ], [ %i2743, %bb2737.bb4390_crit_edge ], [ %i2743, %bb2839.bb4390_crit_edge ], [ %i2593, %bb2905.bb4390_crit_edge ], [ %i2593, %bb3185.bb4390_crit_edge ], [ %i3282, %bb3276.bb4390_crit_edge ], [ %i3282, %bb3378.bb4390_crit_edge ], [ %i2593, %bb3387.bb4390_crit_edge ], [ %i2593, %bb3748 ], [ %i2593, %bb3762 ], [ %i2593, %bb3654 ], [ %i2593, %bb3660 ], [ %i3790, %bb3807.bb4390_crit_edge ], [ %i3857, %bb3874.bb4390_crit_edge ], [ %i3924, %bb3941.bb4390_crit_edge ], [ %i3991, %bb4008.bb4390_crit_edge ], [ %i4058, %bb4076.bb4390_crit_edge ], [ %i2593, %bb4387 ], [ %i4337, %bb4390.loopexit ], [ %i4267, %bb4390.loopexit1 ], [ %i4197, %bb4390.loopexit2 ], [ %i4127, %bb4390.loopexit3 ], [ %i4058, %bb4390.loopexit4 ], [ %i3991, %bb4390.loopexit5 ], [ %i3924, %bb4390.loopexit6 ], [ %i3857, %bb4390.loopexit7 ], [ %i3790, %bb4390.loopexit8 ], [ %i1439, %bb4390.loopexit9 ], [ %i1566, %bb4390.loopexit10 ], [ %i1856, %bb4390.loopexit11 ], [ %i1856, %bb4390.loopexit12 ], [ %i2210, %bb4390.loopexit13 ], [ %i2143, %bb4390.loopexit14 ], [ %i2024, %bb4390.loopexit15 ], [ %i2520, %bb4390.loopexit16 ], [ %i2777, %bb4390.loopexit17 ], [ %i2743, %bb4390.loopexit18 ], [ %i2743, %bb4390.loopexit19 ], [ %i2674, %bb4390.loopexit20 ], [ %i3316, %bb4390.loopexit21 ], [ %i3213, %bb4390.loopexit22 ], [ %i2419, %bb4390.loopexit23 ], [ %i1764, %bb4390.loopexit24 ], [ %i1699, %bb4390.loopexit25 ], [ %i1335, %bb4390.loopexit26 ], [ %i1265, %bb4390.loopexit27 ], [ %i1195, %bb4390.loopexit28 ], [ %i1126, %bb4390.loopexit29 ], [ %i1056, %bb4390.loopexit30 ], [ %i986, %bb4390.loopexit31 ], [ %i916, %bb4390.loopexit32 ], [ %i846, %bb4390.loopexit33 ], [ %i767, %bb4390.loopexit34 ], [ %i700, %bb4390.loopexit35 ], [ %i633, %bb4390.loopexit36 ], [ %i566, %bb4390.loopexit37 ], [ %i499, %bb4390.loopexit38 ], [ %i433, %bb4390.loopexit39 ], [ %i336, %bb4390.loopexit40 ], [ %i270, %bb4390.loopexit41 ], [ %i204, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4396 = phi i32 [ %i49, %bb4386 ], [ %i4336, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i203, %bb220.bb4390_crit_edge ], [ %i269, %bb286.bb4390_crit_edge ], [ %i335, %bb352.bb4390_crit_edge ], [ %i335, %bb392.bb4390_crit_edge ], [ %i335, %bb407.bb4390_crit_edge ], [ %i432, %bb450.bb4390_crit_edge ], [ %i498, %bb516.bb4390_crit_edge ], [ %i565, %bb583.bb4390_crit_edge ], [ %i632, %bb650.bb4390_crit_edge ], [ %i699, %bb717.bb4390_crit_edge ], [ %i766, %bb784.bb4390_crit_edge ], [ %i1334, %bb1352.bb4390_crit_edge ], [ %i1334, %bb1385.bb4390_crit_edge ], [ %i1508, %bb1677.bb4390_crit_edge ], [ %i1698, %bb1719.bb4390_crit_edge ], [ %i1698, %bb1719.bb4390_crit_edge44 ], [ %i1698, %bb1719.bb4390_crit_edge45 ], [ %i1763, %bb1785.bb4390_crit_edge ], [ %i2115, %bb2102.bb4390_crit_edge ], [ %i1987, %bb2396.bb4390_crit_edge ], [ %i2487, %bb2477.bb4390_crit_edge ], [ %i2487, %bb2579.bb4390_crit_edge ], [ %i2622, %bb2646.bb4390_crit_edge ], [ %i2744, %bb2737.bb4390_crit_edge ], [ %i2744, %bb2839.bb4390_crit_edge ], [ %i2594, %bb2905.bb4390_crit_edge ], [ %i2594, %bb3185.bb4390_crit_edge ], [ %i3283, %bb3276.bb4390_crit_edge ], [ %i3283, %bb3378.bb4390_crit_edge ], [ %i2594, %bb3387.bb4390_crit_edge ], [ %i2594, %bb3748 ], [ %i2594, %bb3762 ], [ %i2594, %bb3654 ], [ %i2594, %bb3660 ], [ %i3789, %bb3807.bb4390_crit_edge ], [ %i3856, %bb3874.bb4390_crit_edge ], [ %i3923, %bb3941.bb4390_crit_edge ], [ %i3990, %bb4008.bb4390_crit_edge ], [ %i4057, %bb4076.bb4390_crit_edge ], [ %i2594, %bb4387 ], [ %i4336, %bb4390.loopexit ], [ %i4266, %bb4390.loopexit1 ], [ %i4196, %bb4390.loopexit2 ], [ %i4126, %bb4390.loopexit3 ], [ %i4057, %bb4390.loopexit4 ], [ %i3990, %bb4390.loopexit5 ], [ %i3923, %bb4390.loopexit6 ], [ %i3856, %bb4390.loopexit7 ], [ %i3789, %bb4390.loopexit8 ], [ %i1438, %bb4390.loopexit9 ], [ %i1565, %bb4390.loopexit10 ], [ %i1855, %bb4390.loopexit11 ], [ %i1855, %bb4390.loopexit12 ], [ %i2209, %bb4390.loopexit13 ], [ %i2142, %bb4390.loopexit14 ], [ %i2023, %bb4390.loopexit15 ], [ %i2521, %bb4390.loopexit16 ], [ %i2778, %bb4390.loopexit17 ], [ %i2744, %bb4390.loopexit18 ], [ %i2744, %bb4390.loopexit19 ], [ %i2675, %bb4390.loopexit20 ], [ %i3317, %bb4390.loopexit21 ], [ %i3214, %bb4390.loopexit22 ], [ %i2420, %bb4390.loopexit23 ], [ %i1763, %bb4390.loopexit24 ], [ %i1698, %bb4390.loopexit25 ], [ %i1334, %bb4390.loopexit26 ], [ %i1264, %bb4390.loopexit27 ], [ %i1194, %bb4390.loopexit28 ], [ %i1125, %bb4390.loopexit29 ], [ %i1055, %bb4390.loopexit30 ], [ %i985, %bb4390.loopexit31 ], [ %i915, %bb4390.loopexit32 ], [ %i845, %bb4390.loopexit33 ], [ %i766, %bb4390.loopexit34 ], [ %i699, %bb4390.loopexit35 ], [ %i632, %bb4390.loopexit36 ], [ %i565, %bb4390.loopexit37 ], [ %i498, %bb4390.loopexit38 ], [ %i432, %bb4390.loopexit39 ], [ %i335, %bb4390.loopexit40 ], [ %i269, %bb4390.loopexit41 ], [ %i203, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4397 = phi i32 [ %i47, %bb4386 ], [ %i4335, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i202, %bb220.bb4390_crit_edge ], [ %i268, %bb286.bb4390_crit_edge ], [ %i334, %bb352.bb4390_crit_edge ], [ %i334, %bb392.bb4390_crit_edge ], [ %i334, %bb407.bb4390_crit_edge ], [ %i431, %bb450.bb4390_crit_edge ], [ %i497, %bb516.bb4390_crit_edge ], [ %i564, %bb583.bb4390_crit_edge ], [ %i631, %bb650.bb4390_crit_edge ], [ %i698, %bb717.bb4390_crit_edge ], [ %i765, %bb784.bb4390_crit_edge ], [ %i1333, %bb1352.bb4390_crit_edge ], [ %i1333, %bb1385.bb4390_crit_edge ], [ %i1507, %bb1677.bb4390_crit_edge ], [ %i1697, %bb1719.bb4390_crit_edge ], [ %i1697, %bb1719.bb4390_crit_edge44 ], [ %i1697, %bb1719.bb4390_crit_edge45 ], [ %i1762, %bb1785.bb4390_crit_edge ], [ %i2114, %bb2102.bb4390_crit_edge ], [ %i1986, %bb2396.bb4390_crit_edge ], [ %i2488, %bb2477.bb4390_crit_edge ], [ %i2488, %bb2579.bb4390_crit_edge ], [ %i2623, %bb2646.bb4390_crit_edge ], [ %i2745, %bb2737.bb4390_crit_edge ], [ %i2745, %bb2839.bb4390_crit_edge ], [ %i2595, %bb2905.bb4390_crit_edge ], [ %i2595, %bb3185.bb4390_crit_edge ], [ %i3284, %bb3276.bb4390_crit_edge ], [ %i3284, %bb3378.bb4390_crit_edge ], [ %i2595, %bb3387.bb4390_crit_edge ], [ %i2595, %bb3748 ], [ %i2595, %bb3762 ], [ %i2595, %bb3654 ], [ %i2595, %bb3660 ], [ %i3788, %bb3807.bb4390_crit_edge ], [ %i3855, %bb3874.bb4390_crit_edge ], [ %i3922, %bb3941.bb4390_crit_edge ], [ %i3989, %bb4008.bb4390_crit_edge ], [ %i4056, %bb4076.bb4390_crit_edge ], [ %i2595, %bb4387 ], [ %i4335, %bb4390.loopexit ], [ %i4265, %bb4390.loopexit1 ], [ %i4195, %bb4390.loopexit2 ], [ %i4125, %bb4390.loopexit3 ], [ %i4056, %bb4390.loopexit4 ], [ %i3989, %bb4390.loopexit5 ], [ %i3922, %bb4390.loopexit6 ], [ %i3855, %bb4390.loopexit7 ], [ %i3788, %bb4390.loopexit8 ], [ %i1437, %bb4390.loopexit9 ], [ %i1564, %bb4390.loopexit10 ], [ %i1854, %bb4390.loopexit11 ], [ %i1854, %bb4390.loopexit12 ], [ %i2208, %bb4390.loopexit13 ], [ %i2141, %bb4390.loopexit14 ], [ %i2022, %bb4390.loopexit15 ], [ %i2522, %bb4390.loopexit16 ], [ %i2779, %bb4390.loopexit17 ], [ %i2745, %bb4390.loopexit18 ], [ %i2745, %bb4390.loopexit19 ], [ %i2676, %bb4390.loopexit20 ], [ %i3318, %bb4390.loopexit21 ], [ %i3215, %bb4390.loopexit22 ], [ %i2415, %bb4390.loopexit23 ], [ %i1762, %bb4390.loopexit24 ], [ %i1697, %bb4390.loopexit25 ], [ %i1333, %bb4390.loopexit26 ], [ %i1263, %bb4390.loopexit27 ], [ %i1193, %bb4390.loopexit28 ], [ %i1124, %bb4390.loopexit29 ], [ %i1054, %bb4390.loopexit30 ], [ %i984, %bb4390.loopexit31 ], [ %i914, %bb4390.loopexit32 ], [ %i844, %bb4390.loopexit33 ], [ %i765, %bb4390.loopexit34 ], [ %i698, %bb4390.loopexit35 ], [ %i631, %bb4390.loopexit36 ], [ %i564, %bb4390.loopexit37 ], [ %i497, %bb4390.loopexit38 ], [ %i431, %bb4390.loopexit39 ], [ %i334, %bb4390.loopexit40 ], [ %i268, %bb4390.loopexit41 ], [ %i202, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4398 = phi i32 [ %i45, %bb4386 ], [ %i4334, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i201, %bb220.bb4390_crit_edge ], [ %i267, %bb286.bb4390_crit_edge ], [ %i333, %bb352.bb4390_crit_edge ], [ %i333, %bb392.bb4390_crit_edge ], [ %i333, %bb407.bb4390_crit_edge ], [ %i430, %bb450.bb4390_crit_edge ], [ %i496, %bb516.bb4390_crit_edge ], [ %i563, %bb583.bb4390_crit_edge ], [ %i630, %bb650.bb4390_crit_edge ], [ %i697, %bb717.bb4390_crit_edge ], [ %i764, %bb784.bb4390_crit_edge ], [ %i1332, %bb1352.bb4390_crit_edge ], [ %i1332, %bb1385.bb4390_crit_edge ], [ %i1506, %bb1677.bb4390_crit_edge ], [ %i1696, %bb1719.bb4390_crit_edge ], [ %i1696, %bb1719.bb4390_crit_edge44 ], [ %i1696, %bb1719.bb4390_crit_edge45 ], [ %i1761, %bb1785.bb4390_crit_edge ], [ %i2113, %bb2102.bb4390_crit_edge ], [ %i1985, %bb2396.bb4390_crit_edge ], [ %i2489, %bb2477.bb4390_crit_edge ], [ %i2489, %bb2579.bb4390_crit_edge ], [ %i2624, %bb2646.bb4390_crit_edge ], [ %i2746, %bb2737.bb4390_crit_edge ], [ %i2746, %bb2839.bb4390_crit_edge ], [ %i2596, %bb2905.bb4390_crit_edge ], [ %i2596, %bb3185.bb4390_crit_edge ], [ %i3285, %bb3276.bb4390_crit_edge ], [ %i3285, %bb3378.bb4390_crit_edge ], [ %i2596, %bb3387.bb4390_crit_edge ], [ %i2596, %bb3748 ], [ %i2596, %bb3762 ], [ %i2596, %bb3654 ], [ %i2596, %bb3660 ], [ %i3787, %bb3807.bb4390_crit_edge ], [ %i3854, %bb3874.bb4390_crit_edge ], [ %i3921, %bb3941.bb4390_crit_edge ], [ %i3988, %bb4008.bb4390_crit_edge ], [ %i4055, %bb4076.bb4390_crit_edge ], [ %i2596, %bb4387 ], [ %i4334, %bb4390.loopexit ], [ %i4264, %bb4390.loopexit1 ], [ %i4194, %bb4390.loopexit2 ], [ %i4124, %bb4390.loopexit3 ], [ %i4055, %bb4390.loopexit4 ], [ %i3988, %bb4390.loopexit5 ], [ %i3921, %bb4390.loopexit6 ], [ %i3854, %bb4390.loopexit7 ], [ %i3787, %bb4390.loopexit8 ], [ %i1436, %bb4390.loopexit9 ], [ %i1563, %bb4390.loopexit10 ], [ %i1853, %bb4390.loopexit11 ], [ %i1853, %bb4390.loopexit12 ], [ %i2207, %bb4390.loopexit13 ], [ %i2140, %bb4390.loopexit14 ], [ %i2021, %bb4390.loopexit15 ], [ %i2523, %bb4390.loopexit16 ], [ %i2780, %bb4390.loopexit17 ], [ %i2746, %bb4390.loopexit18 ], [ %i2746, %bb4390.loopexit19 ], [ %i2677, %bb4390.loopexit20 ], [ %i3319, %bb4390.loopexit21 ], [ %i3216, %bb4390.loopexit22 ], [ %i2414, %bb4390.loopexit23 ], [ %i1761, %bb4390.loopexit24 ], [ %i1696, %bb4390.loopexit25 ], [ %i1332, %bb4390.loopexit26 ], [ %i1262, %bb4390.loopexit27 ], [ %i1192, %bb4390.loopexit28 ], [ %i1123, %bb4390.loopexit29 ], [ %i1053, %bb4390.loopexit30 ], [ %i983, %bb4390.loopexit31 ], [ %i913, %bb4390.loopexit32 ], [ %i843, %bb4390.loopexit33 ], [ %i764, %bb4390.loopexit34 ], [ %i697, %bb4390.loopexit35 ], [ %i630, %bb4390.loopexit36 ], [ %i563, %bb4390.loopexit37 ], [ %i496, %bb4390.loopexit38 ], [ %i430, %bb4390.loopexit39 ], [ %i333, %bb4390.loopexit40 ], [ %i267, %bb4390.loopexit41 ], [ %i201, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4399 = phi i32 [ %i43, %bb4386 ], [ %i4333, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i200, %bb220.bb4390_crit_edge ], [ %i266, %bb286.bb4390_crit_edge ], [ %i332, %bb352.bb4390_crit_edge ], [ %i332, %bb392.bb4390_crit_edge ], [ %i332, %bb407.bb4390_crit_edge ], [ %i429, %bb450.bb4390_crit_edge ], [ %i495, %bb516.bb4390_crit_edge ], [ %i562, %bb583.bb4390_crit_edge ], [ %i629, %bb650.bb4390_crit_edge ], [ %i696, %bb717.bb4390_crit_edge ], [ %i763, %bb784.bb4390_crit_edge ], [ %i1331, %bb1352.bb4390_crit_edge ], [ %i1331, %bb1385.bb4390_crit_edge ], [ %i1505, %bb1677.bb4390_crit_edge ], [ %i1695, %bb1719.bb4390_crit_edge ], [ %i1695, %bb1719.bb4390_crit_edge44 ], [ %i1695, %bb1719.bb4390_crit_edge45 ], [ %i1760, %bb1785.bb4390_crit_edge ], [ %i2112, %bb2102.bb4390_crit_edge ], [ %i1984, %bb2396.bb4390_crit_edge ], [ %i2490, %bb2477.bb4390_crit_edge ], [ %i2490, %bb2579.bb4390_crit_edge ], [ %i2625, %bb2646.bb4390_crit_edge ], [ %i2747, %bb2737.bb4390_crit_edge ], [ %i2747, %bb2839.bb4390_crit_edge ], [ %i2597, %bb2905.bb4390_crit_edge ], [ %i2597, %bb3185.bb4390_crit_edge ], [ %i3286, %bb3276.bb4390_crit_edge ], [ %i3286, %bb3378.bb4390_crit_edge ], [ %i2597, %bb3387.bb4390_crit_edge ], [ %i2597, %bb3748 ], [ %i2597, %bb3762 ], [ %i2597, %bb3654 ], [ %i2597, %bb3660 ], [ %i3786, %bb3807.bb4390_crit_edge ], [ %i3853, %bb3874.bb4390_crit_edge ], [ %i3920, %bb3941.bb4390_crit_edge ], [ %i3987, %bb4008.bb4390_crit_edge ], [ %i4054, %bb4076.bb4390_crit_edge ], [ %i2597, %bb4387 ], [ %i4333, %bb4390.loopexit ], [ %i4263, %bb4390.loopexit1 ], [ %i4193, %bb4390.loopexit2 ], [ %i4123, %bb4390.loopexit3 ], [ %i4054, %bb4390.loopexit4 ], [ %i3987, %bb4390.loopexit5 ], [ %i3920, %bb4390.loopexit6 ], [ %i3853, %bb4390.loopexit7 ], [ %i3786, %bb4390.loopexit8 ], [ %i1435, %bb4390.loopexit9 ], [ %i1562, %bb4390.loopexit10 ], [ %i1852, %bb4390.loopexit11 ], [ %i1852, %bb4390.loopexit12 ], [ %i2206, %bb4390.loopexit13 ], [ %i2139, %bb4390.loopexit14 ], [ %i2020, %bb4390.loopexit15 ], [ %i2524, %bb4390.loopexit16 ], [ %i2781, %bb4390.loopexit17 ], [ %i2747, %bb4390.loopexit18 ], [ %i2747, %bb4390.loopexit19 ], [ %i2678, %bb4390.loopexit20 ], [ %i3320, %bb4390.loopexit21 ], [ %i3217, %bb4390.loopexit22 ], [ %i2421, %bb4390.loopexit23 ], [ %i1760, %bb4390.loopexit24 ], [ %i1695, %bb4390.loopexit25 ], [ %i1331, %bb4390.loopexit26 ], [ %i1261, %bb4390.loopexit27 ], [ %i1191, %bb4390.loopexit28 ], [ %i1122, %bb4390.loopexit29 ], [ %i1052, %bb4390.loopexit30 ], [ %i982, %bb4390.loopexit31 ], [ %i912, %bb4390.loopexit32 ], [ %i842, %bb4390.loopexit33 ], [ %i763, %bb4390.loopexit34 ], [ %i696, %bb4390.loopexit35 ], [ %i629, %bb4390.loopexit36 ], [ %i562, %bb4390.loopexit37 ], [ %i495, %bb4390.loopexit38 ], [ %i429, %bb4390.loopexit39 ], [ %i332, %bb4390.loopexit40 ], [ %i266, %bb4390.loopexit41 ], [ %i200, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4400 = phi i32 [ %i39, %bb4386 ], [ %i4331, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i198, %bb220.bb4390_crit_edge ], [ %i264, %bb286.bb4390_crit_edge ], [ %i330, %bb352.bb4390_crit_edge ], [ %i330, %bb392.bb4390_crit_edge ], [ %i330, %bb407.bb4390_crit_edge ], [ %i427, %bb450.bb4390_crit_edge ], [ %i493, %bb516.bb4390_crit_edge ], [ %i560, %bb583.bb4390_crit_edge ], [ %i627, %bb650.bb4390_crit_edge ], [ %i694, %bb717.bb4390_crit_edge ], [ %i761, %bb784.bb4390_crit_edge ], [ %i1329, %bb1352.bb4390_crit_edge ], [ %i1329, %bb1385.bb4390_crit_edge ], [ %i1503, %bb1677.bb4390_crit_edge ], [ %i1693, %bb1719.bb4390_crit_edge ], [ %i1693, %bb1719.bb4390_crit_edge44 ], [ %i1693, %bb1719.bb4390_crit_edge45 ], [ %i1758, %bb1785.bb4390_crit_edge ], [ %i2120, %bb2102.bb4390_crit_edge ], [ %i1992, %bb2396.bb4390_crit_edge ], [ %i2491, %bb2477.bb4390_crit_edge ], [ %i2491, %bb2579.bb4390_crit_edge ], [ %i2626, %bb2646.bb4390_crit_edge ], [ %i2748, %bb2737.bb4390_crit_edge ], [ %i2748, %bb2839.bb4390_crit_edge ], [ %i2598, %bb2905.bb4390_crit_edge ], [ %i2598, %bb3185.bb4390_crit_edge ], [ %i3287, %bb3276.bb4390_crit_edge ], [ %i3287, %bb3378.bb4390_crit_edge ], [ %i2598, %bb3387.bb4390_crit_edge ], [ %i2598, %bb3748 ], [ %i2598, %bb3762 ], [ %i2598, %bb3654 ], [ %i2598, %bb3660 ], [ %i3784, %bb3807.bb4390_crit_edge ], [ %i3851, %bb3874.bb4390_crit_edge ], [ %i3918, %bb3941.bb4390_crit_edge ], [ %i3985, %bb4008.bb4390_crit_edge ], [ %i4052, %bb4076.bb4390_crit_edge ], [ %i2598, %bb4387 ], [ %i4331, %bb4390.loopexit ], [ %i4261, %bb4390.loopexit1 ], [ %i4191, %bb4390.loopexit2 ], [ %i4121, %bb4390.loopexit3 ], [ %i4052, %bb4390.loopexit4 ], [ %i3985, %bb4390.loopexit5 ], [ %i3918, %bb4390.loopexit6 ], [ %i3851, %bb4390.loopexit7 ], [ %i3784, %bb4390.loopexit8 ], [ %i1433, %bb4390.loopexit9 ], [ %i1560, %bb4390.loopexit10 ], [ %i1850, %bb4390.loopexit11 ], [ %i1850, %bb4390.loopexit12 ], [ %i2215, %bb4390.loopexit13 ], [ %i2147, %bb4390.loopexit14 ], [ %i2028, %bb4390.loopexit15 ], [ %i2525, %bb4390.loopexit16 ], [ %i2782, %bb4390.loopexit17 ], [ %i2748, %bb4390.loopexit18 ], [ %i2748, %bb4390.loopexit19 ], [ %i2679, %bb4390.loopexit20 ], [ %i3321, %bb4390.loopexit21 ], [ %i3218, %bb4390.loopexit22 ], [ %i2422, %bb4390.loopexit23 ], [ %i1758, %bb4390.loopexit24 ], [ %i1693, %bb4390.loopexit25 ], [ %i1329, %bb4390.loopexit26 ], [ %i1259, %bb4390.loopexit27 ], [ %i1189, %bb4390.loopexit28 ], [ %i1120, %bb4390.loopexit29 ], [ %i1050, %bb4390.loopexit30 ], [ %i980, %bb4390.loopexit31 ], [ %i910, %bb4390.loopexit32 ], [ %i840, %bb4390.loopexit33 ], [ %i761, %bb4390.loopexit34 ], [ %i694, %bb4390.loopexit35 ], [ %i627, %bb4390.loopexit36 ], [ %i560, %bb4390.loopexit37 ], [ %i493, %bb4390.loopexit38 ], [ %i427, %bb4390.loopexit39 ], [ %i330, %bb4390.loopexit40 ], [ %i264, %bb4390.loopexit41 ], [ %i198, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4401 = phi i32 [ %i37, %bb4386 ], [ %i4330, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i197, %bb220.bb4390_crit_edge ], [ %i263, %bb286.bb4390_crit_edge ], [ %i329, %bb352.bb4390_crit_edge ], [ %i329, %bb392.bb4390_crit_edge ], [ %i329, %bb407.bb4390_crit_edge ], [ %i426, %bb450.bb4390_crit_edge ], [ %i492, %bb516.bb4390_crit_edge ], [ %i559, %bb583.bb4390_crit_edge ], [ %i626, %bb650.bb4390_crit_edge ], [ %i693, %bb717.bb4390_crit_edge ], [ %i760, %bb784.bb4390_crit_edge ], [ %i1328, %bb1352.bb4390_crit_edge ], [ %i1328, %bb1385.bb4390_crit_edge ], [ %i1502, %bb1677.bb4390_crit_edge ], [ %i1692, %bb1719.bb4390_crit_edge ], [ %i1692, %bb1719.bb4390_crit_edge44 ], [ %i1692, %bb1719.bb4390_crit_edge45 ], [ %i1757, %bb1785.bb4390_crit_edge ], [ %i2110, %bb2102.bb4390_crit_edge ], [ %i1982, %bb2396.bb4390_crit_edge ], [ %i2480, %bb2477.bb4390_crit_edge ], [ %i2480, %bb2579.bb4390_crit_edge ], [ %i2642, %bb2646.bb4390_crit_edge ], [ %i2749, %bb2737.bb4390_crit_edge ], [ %i2749, %bb2839.bb4390_crit_edge ], [ %i2599, %bb2905.bb4390_crit_edge ], [ %i2599, %bb3185.bb4390_crit_edge ], [ %i3288, %bb3276.bb4390_crit_edge ], [ %i3288, %bb3378.bb4390_crit_edge ], [ %i2599, %bb3387.bb4390_crit_edge ], [ %i2599, %bb3748 ], [ %i2599, %bb3762 ], [ %i2599, %bb3654 ], [ %i2599, %bb3660 ], [ %i3783, %bb3807.bb4390_crit_edge ], [ %i3850, %bb3874.bb4390_crit_edge ], [ %i3917, %bb3941.bb4390_crit_edge ], [ %i3984, %bb4008.bb4390_crit_edge ], [ %i4051, %bb4076.bb4390_crit_edge ], [ %i2599, %bb4387 ], [ %i4330, %bb4390.loopexit ], [ %i4260, %bb4390.loopexit1 ], [ %i4190, %bb4390.loopexit2 ], [ %i4120, %bb4390.loopexit3 ], [ %i4051, %bb4390.loopexit4 ], [ %i3984, %bb4390.loopexit5 ], [ %i3917, %bb4390.loopexit6 ], [ %i3850, %bb4390.loopexit7 ], [ %i3783, %bb4390.loopexit8 ], [ %i1432, %bb4390.loopexit9 ], [ %i1559, %bb4390.loopexit10 ], [ %i1849, %bb4390.loopexit11 ], [ %i1849, %bb4390.loopexit12 ], [ %i2204, %bb4390.loopexit13 ], [ %i2137, %bb4390.loopexit14 ], [ %i2018, %bb4390.loopexit15 ], [ %i2514, %bb4390.loopexit16 ], [ %i2783, %bb4390.loopexit17 ], [ %i2749, %bb4390.loopexit18 ], [ %i2749, %bb4390.loopexit19 ], [ %i2680, %bb4390.loopexit20 ], [ %i3322, %bb4390.loopexit21 ], [ %i3219, %bb4390.loopexit22 ], [ %i2412, %bb4390.loopexit23 ], [ %i1757, %bb4390.loopexit24 ], [ %i1692, %bb4390.loopexit25 ], [ %i1328, %bb4390.loopexit26 ], [ %i1258, %bb4390.loopexit27 ], [ %i1188, %bb4390.loopexit28 ], [ %i1119, %bb4390.loopexit29 ], [ %i1049, %bb4390.loopexit30 ], [ %i979, %bb4390.loopexit31 ], [ %i909, %bb4390.loopexit32 ], [ %i839, %bb4390.loopexit33 ], [ %i760, %bb4390.loopexit34 ], [ %i693, %bb4390.loopexit35 ], [ %i626, %bb4390.loopexit36 ], [ %i559, %bb4390.loopexit37 ], [ %i492, %bb4390.loopexit38 ], [ %i426, %bb4390.loopexit39 ], [ %i329, %bb4390.loopexit40 ], [ %i263, %bb4390.loopexit41 ], [ %i197, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4402 = phi i32 [ %i35, %bb4386 ], [ %i4329, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i196, %bb220.bb4390_crit_edge ], [ %i262, %bb286.bb4390_crit_edge ], [ %i328, %bb352.bb4390_crit_edge ], [ %i328, %bb392.bb4390_crit_edge ], [ %i328, %bb407.bb4390_crit_edge ], [ %i425, %bb450.bb4390_crit_edge ], [ %i491, %bb516.bb4390_crit_edge ], [ %i558, %bb583.bb4390_crit_edge ], [ %i625, %bb650.bb4390_crit_edge ], [ %i692, %bb717.bb4390_crit_edge ], [ %i759, %bb784.bb4390_crit_edge ], [ %i1327, %bb1352.bb4390_crit_edge ], [ %i1327, %bb1385.bb4390_crit_edge ], [ %i1501, %bb1677.bb4390_crit_edge ], [ %i1691, %bb1719.bb4390_crit_edge ], [ %i1691, %bb1719.bb4390_crit_edge44 ], [ %i1691, %bb1719.bb4390_crit_edge45 ], [ %i1756, %bb1785.bb4390_crit_edge ], [ %i2109, %bb2102.bb4390_crit_edge ], [ %i1981, %bb2396.bb4390_crit_edge ], [ %i2479, %bb2477.bb4390_crit_edge ], [ %i2479, %bb2579.bb4390_crit_edge ], [ %i2644, %bb2646.bb4390_crit_edge ], [ %i2750, %bb2737.bb4390_crit_edge ], [ %i2750, %bb2839.bb4390_crit_edge ], [ %i2600, %bb2905.bb4390_crit_edge ], [ %i2600, %bb3185.bb4390_crit_edge ], [ %i3289, %bb3276.bb4390_crit_edge ], [ %i3289, %bb3378.bb4390_crit_edge ], [ %i2600, %bb3387.bb4390_crit_edge ], [ %i2600, %bb3748 ], [ %i2600, %bb3762 ], [ %i2600, %bb3654 ], [ %i2600, %bb3660 ], [ %i3782, %bb3807.bb4390_crit_edge ], [ %i3849, %bb3874.bb4390_crit_edge ], [ %i3916, %bb3941.bb4390_crit_edge ], [ %i3983, %bb4008.bb4390_crit_edge ], [ %i4050, %bb4076.bb4390_crit_edge ], [ %i2600, %bb4387 ], [ %i4329, %bb4390.loopexit ], [ %i4259, %bb4390.loopexit1 ], [ %i4189, %bb4390.loopexit2 ], [ %i4119, %bb4390.loopexit3 ], [ %i4050, %bb4390.loopexit4 ], [ %i3983, %bb4390.loopexit5 ], [ %i3916, %bb4390.loopexit6 ], [ %i3849, %bb4390.loopexit7 ], [ %i3782, %bb4390.loopexit8 ], [ %i1431, %bb4390.loopexit9 ], [ %i1558, %bb4390.loopexit10 ], [ %i1848, %bb4390.loopexit11 ], [ %i1848, %bb4390.loopexit12 ], [ %i2203, %bb4390.loopexit13 ], [ %i2136, %bb4390.loopexit14 ], [ %i2017, %bb4390.loopexit15 ], [ %i2513, %bb4390.loopexit16 ], [ %i2784, %bb4390.loopexit17 ], [ %i2893, %bb4390.loopexit18 ], [ %i2883, %bb4390.loopexit19 ], [ %i2681, %bb4390.loopexit20 ], [ %i3323, %bb4390.loopexit21 ], [ %i3220, %bb4390.loopexit22 ], [ %i2411, %bb4390.loopexit23 ], [ %i1756, %bb4390.loopexit24 ], [ %i1691, %bb4390.loopexit25 ], [ %i1327, %bb4390.loopexit26 ], [ %i1257, %bb4390.loopexit27 ], [ %i1187, %bb4390.loopexit28 ], [ %i1118, %bb4390.loopexit29 ], [ %i1048, %bb4390.loopexit30 ], [ %i978, %bb4390.loopexit31 ], [ %i908, %bb4390.loopexit32 ], [ %i838, %bb4390.loopexit33 ], [ %i759, %bb4390.loopexit34 ], [ %i692, %bb4390.loopexit35 ], [ %i625, %bb4390.loopexit36 ], [ %i558, %bb4390.loopexit37 ], [ %i491, %bb4390.loopexit38 ], [ %i425, %bb4390.loopexit39 ], [ %i328, %bb4390.loopexit40 ], [ %i262, %bb4390.loopexit41 ], [ %i196, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4403 = phi i32 [ %i33, %bb4386 ], [ %i4328, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i195, %bb220.bb4390_crit_edge ], [ %i261, %bb286.bb4390_crit_edge ], [ %i327, %bb352.bb4390_crit_edge ], [ %i327, %bb392.bb4390_crit_edge ], [ %i327, %bb407.bb4390_crit_edge ], [ %i424, %bb450.bb4390_crit_edge ], [ %i490, %bb516.bb4390_crit_edge ], [ %i557, %bb583.bb4390_crit_edge ], [ %i624, %bb650.bb4390_crit_edge ], [ %i691, %bb717.bb4390_crit_edge ], [ %i758, %bb784.bb4390_crit_edge ], [ %i1326, %bb1352.bb4390_crit_edge ], [ %i1326, %bb1385.bb4390_crit_edge ], [ %i1500, %bb1677.bb4390_crit_edge ], [ %i1690, %bb1719.bb4390_crit_edge ], [ %i1690, %bb1719.bb4390_crit_edge44 ], [ %i1690, %bb1719.bb4390_crit_edge45 ], [ %i1755, %bb1785.bb4390_crit_edge ], [ %i2108, %bb2102.bb4390_crit_edge ], [ 0, %bb2396.bb4390_crit_edge ], [ %i2492, %bb2477.bb4390_crit_edge ], [ %i2492, %bb2579.bb4390_crit_edge ], [ %i2629, %bb2646.bb4390_crit_edge ], [ %i2751, %bb2737.bb4390_crit_edge ], [ %i2751, %bb2839.bb4390_crit_edge ], [ %i2601, %bb2905.bb4390_crit_edge ], [ %i3183, %bb3185.bb4390_crit_edge ], [ %i3290, %bb3276.bb4390_crit_edge ], [ %i3290, %bb3378.bb4390_crit_edge ], [ %i2601, %bb3387.bb4390_crit_edge ], [ %i2601, %bb3748 ], [ %i2601, %bb3762 ], [ %i2601, %bb3654 ], [ %i2601, %bb3660 ], [ %i3781, %bb3807.bb4390_crit_edge ], [ %i3848, %bb3874.bb4390_crit_edge ], [ %i3915, %bb3941.bb4390_crit_edge ], [ %i3982, %bb4008.bb4390_crit_edge ], [ %i4049, %bb4076.bb4390_crit_edge ], [ %i2601, %bb4387 ], [ %i4328, %bb4390.loopexit ], [ %i4258, %bb4390.loopexit1 ], [ %i4188, %bb4390.loopexit2 ], [ %i4118, %bb4390.loopexit3 ], [ %i4049, %bb4390.loopexit4 ], [ %i3982, %bb4390.loopexit5 ], [ %i3915, %bb4390.loopexit6 ], [ %i3848, %bb4390.loopexit7 ], [ %i3781, %bb4390.loopexit8 ], [ %i1430, %bb4390.loopexit9 ], [ %i1557, %bb4390.loopexit10 ], [ %i1847, %bb4390.loopexit11 ], [ %i1847, %bb4390.loopexit12 ], [ %i2202, %bb4390.loopexit13 ], [ %i2135, %bb4390.loopexit14 ], [ %i2016, %bb4390.loopexit15 ], [ %i2526, %bb4390.loopexit16 ], [ %i2785, %bb4390.loopexit17 ], [ %i2879, %bb4390.loopexit18 ], [ %i2872, %bb4390.loopexit19 ], [ %i2682, %bb4390.loopexit20 ], [ %i3324, %bb4390.loopexit21 ], [ %i3221, %bb4390.loopexit22 ], [ %i2423, %bb4390.loopexit23 ], [ %i1755, %bb4390.loopexit24 ], [ %i1690, %bb4390.loopexit25 ], [ %i1326, %bb4390.loopexit26 ], [ %i1256, %bb4390.loopexit27 ], [ %i1186, %bb4390.loopexit28 ], [ %i1117, %bb4390.loopexit29 ], [ %i1047, %bb4390.loopexit30 ], [ %i977, %bb4390.loopexit31 ], [ %i907, %bb4390.loopexit32 ], [ %i837, %bb4390.loopexit33 ], [ %i758, %bb4390.loopexit34 ], [ %i691, %bb4390.loopexit35 ], [ %i624, %bb4390.loopexit36 ], [ %i557, %bb4390.loopexit37 ], [ %i490, %bb4390.loopexit38 ], [ %i424, %bb4390.loopexit39 ], [ %i327, %bb4390.loopexit40 ], [ %i261, %bb4390.loopexit41 ], [ %i195, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4404 = phi i32 [ %i31, %bb4386 ], [ %i4327, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i194, %bb220.bb4390_crit_edge ], [ %i260, %bb286.bb4390_crit_edge ], [ %i326, %bb352.bb4390_crit_edge ], [ %i326, %bb392.bb4390_crit_edge ], [ %i326, %bb407.bb4390_crit_edge ], [ %i423, %bb450.bb4390_crit_edge ], [ %i489, %bb516.bb4390_crit_edge ], [ %i556, %bb583.bb4390_crit_edge ], [ %i623, %bb650.bb4390_crit_edge ], [ %i690, %bb717.bb4390_crit_edge ], [ %i757, %bb784.bb4390_crit_edge ], [ %i1325, %bb1352.bb4390_crit_edge ], [ %i1325, %bb1385.bb4390_crit_edge ], [ %i1499, %bb1677.bb4390_crit_edge ], [ %i1689, %bb1719.bb4390_crit_edge ], [ %i1689, %bb1719.bb4390_crit_edge44 ], [ %i1689, %bb1719.bb4390_crit_edge45 ], [ %i1754, %bb1785.bb4390_crit_edge ], [ %i2107, %bb2102.bb4390_crit_edge ], [ %i2324, %bb2396.bb4390_crit_edge ], [ %i2493, %bb2477.bb4390_crit_edge ], [ %i2493, %bb2579.bb4390_crit_edge ], [ %i2630, %bb2646.bb4390_crit_edge ], [ %i2752, %bb2737.bb4390_crit_edge ], [ %i2752, %bb2839.bb4390_crit_edge ], [ %i2602, %bb2905.bb4390_crit_edge ], [ %i2602, %bb3185.bb4390_crit_edge ], [ %i3291, %bb3276.bb4390_crit_edge ], [ %i3291, %bb3378.bb4390_crit_edge ], [ %i2602, %bb3387.bb4390_crit_edge ], [ %i2602, %bb3748 ], [ %i2602, %bb3762 ], [ %i2602, %bb3654 ], [ %i2602, %bb3660 ], [ %i3780, %bb3807.bb4390_crit_edge ], [ %i3847, %bb3874.bb4390_crit_edge ], [ %i3914, %bb3941.bb4390_crit_edge ], [ %i3981, %bb4008.bb4390_crit_edge ], [ %i4048, %bb4076.bb4390_crit_edge ], [ %i2602, %bb4387 ], [ %i4327, %bb4390.loopexit ], [ %i4257, %bb4390.loopexit1 ], [ %i4187, %bb4390.loopexit2 ], [ %i4117, %bb4390.loopexit3 ], [ %i4048, %bb4390.loopexit4 ], [ %i3981, %bb4390.loopexit5 ], [ %i3914, %bb4390.loopexit6 ], [ %i3847, %bb4390.loopexit7 ], [ %i3780, %bb4390.loopexit8 ], [ %i1429, %bb4390.loopexit9 ], [ %i1556, %bb4390.loopexit10 ], [ %i1846, %bb4390.loopexit11 ], [ %i1846, %bb4390.loopexit12 ], [ %i2201, %bb4390.loopexit13 ], [ %i2134, %bb4390.loopexit14 ], [ %i2015, %bb4390.loopexit15 ], [ %i2527, %bb4390.loopexit16 ], [ %i2786, %bb4390.loopexit17 ], [ %i2752, %bb4390.loopexit18 ], [ %i2752, %bb4390.loopexit19 ], [ %i2683, %bb4390.loopexit20 ], [ %i3325, %bb4390.loopexit21 ], [ %i3222, %bb4390.loopexit22 ], [ %i2424, %bb4390.loopexit23 ], [ %i1754, %bb4390.loopexit24 ], [ %i1689, %bb4390.loopexit25 ], [ %i1325, %bb4390.loopexit26 ], [ %i1255, %bb4390.loopexit27 ], [ %i1185, %bb4390.loopexit28 ], [ %i1116, %bb4390.loopexit29 ], [ %i1046, %bb4390.loopexit30 ], [ %i976, %bb4390.loopexit31 ], [ %i906, %bb4390.loopexit32 ], [ %i836, %bb4390.loopexit33 ], [ %i757, %bb4390.loopexit34 ], [ %i690, %bb4390.loopexit35 ], [ %i623, %bb4390.loopexit36 ], [ %i556, %bb4390.loopexit37 ], [ %i489, %bb4390.loopexit38 ], [ %i423, %bb4390.loopexit39 ], [ %i326, %bb4390.loopexit40 ], [ %i260, %bb4390.loopexit41 ], [ %i194, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4405 = phi i32 [ %i29, %bb4386 ], [ %i4326, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i193, %bb220.bb4390_crit_edge ], [ %i259, %bb286.bb4390_crit_edge ], [ %i325, %bb352.bb4390_crit_edge ], [ %i325, %bb392.bb4390_crit_edge ], [ %i325, %bb407.bb4390_crit_edge ], [ %i422, %bb450.bb4390_crit_edge ], [ %i488, %bb516.bb4390_crit_edge ], [ %i555, %bb583.bb4390_crit_edge ], [ %i622, %bb650.bb4390_crit_edge ], [ %i689, %bb717.bb4390_crit_edge ], [ %i756, %bb784.bb4390_crit_edge ], [ %i1324, %bb1352.bb4390_crit_edge ], [ %i1324, %bb1385.bb4390_crit_edge ], [ %i1498, %bb1677.bb4390_crit_edge ], [ %i1688, %bb1719.bb4390_crit_edge ], [ %i1688, %bb1719.bb4390_crit_edge44 ], [ %i1688, %bb1719.bb4390_crit_edge45 ], [ %i1753, %bb1785.bb4390_crit_edge ], [ %i2106, %bb2102.bb4390_crit_edge ], [ %i1978, %bb2396.bb4390_crit_edge ], [ %i2478, %bb2477.bb4390_crit_edge ], [ %i2478, %bb2579.bb4390_crit_edge ], [ %i2631, %bb2646.bb4390_crit_edge ], [ %i2753, %bb2737.bb4390_crit_edge ], [ %i2753, %bb2839.bb4390_crit_edge ], [ %i2603, %bb2905.bb4390_crit_edge ], [ %i2603, %bb3185.bb4390_crit_edge ], [ %i3292, %bb3276.bb4390_crit_edge ], [ %i3292, %bb3378.bb4390_crit_edge ], [ %i2603, %bb3387.bb4390_crit_edge ], [ %i2603, %bb3748 ], [ %i2603, %bb3762 ], [ %i2603, %bb3654 ], [ %i2603, %bb3660 ], [ %i3779, %bb3807.bb4390_crit_edge ], [ %i3846, %bb3874.bb4390_crit_edge ], [ %i3913, %bb3941.bb4390_crit_edge ], [ %i3980, %bb4008.bb4390_crit_edge ], [ %i4047, %bb4076.bb4390_crit_edge ], [ %i2603, %bb4387 ], [ %i4326, %bb4390.loopexit ], [ %i4256, %bb4390.loopexit1 ], [ %i4186, %bb4390.loopexit2 ], [ %i4116, %bb4390.loopexit3 ], [ %i4047, %bb4390.loopexit4 ], [ %i3980, %bb4390.loopexit5 ], [ %i3913, %bb4390.loopexit6 ], [ %i3846, %bb4390.loopexit7 ], [ %i3779, %bb4390.loopexit8 ], [ %i1428, %bb4390.loopexit9 ], [ %i1555, %bb4390.loopexit10 ], [ %i1845, %bb4390.loopexit11 ], [ %i1845, %bb4390.loopexit12 ], [ %i2200, %bb4390.loopexit13 ], [ %i2133, %bb4390.loopexit14 ], [ %i2014, %bb4390.loopexit15 ], [ %i2512, %bb4390.loopexit16 ], [ %i2787, %bb4390.loopexit17 ], [ %i2847, %bb4390.loopexit18 ], [ %i2847, %bb4390.loopexit19 ], [ %i2684, %bb4390.loopexit20 ], [ %i3326, %bb4390.loopexit21 ], [ %i3223, %bb4390.loopexit22 ], [ %i2410, %bb4390.loopexit23 ], [ %i1753, %bb4390.loopexit24 ], [ %i1688, %bb4390.loopexit25 ], [ %i1324, %bb4390.loopexit26 ], [ %i1254, %bb4390.loopexit27 ], [ %i1184, %bb4390.loopexit28 ], [ %i1115, %bb4390.loopexit29 ], [ %i1045, %bb4390.loopexit30 ], [ %i975, %bb4390.loopexit31 ], [ %i905, %bb4390.loopexit32 ], [ %i835, %bb4390.loopexit33 ], [ %i756, %bb4390.loopexit34 ], [ %i689, %bb4390.loopexit35 ], [ %i622, %bb4390.loopexit36 ], [ %i555, %bb4390.loopexit37 ], [ %i488, %bb4390.loopexit38 ], [ %i422, %bb4390.loopexit39 ], [ %i325, %bb4390.loopexit40 ], [ %i259, %bb4390.loopexit41 ], [ %i193, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4406 = phi i32 [ %i27, %bb4386 ], [ %i4325, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i192, %bb220.bb4390_crit_edge ], [ %i258, %bb286.bb4390_crit_edge ], [ %i324, %bb352.bb4390_crit_edge ], [ %i324, %bb392.bb4390_crit_edge ], [ %i324, %bb407.bb4390_crit_edge ], [ %i421, %bb450.bb4390_crit_edge ], [ %i487, %bb516.bb4390_crit_edge ], [ %i554, %bb583.bb4390_crit_edge ], [ %i621, %bb650.bb4390_crit_edge ], [ %i688, %bb717.bb4390_crit_edge ], [ %i755, %bb784.bb4390_crit_edge ], [ %i1323, %bb1352.bb4390_crit_edge ], [ %i1323, %bb1385.bb4390_crit_edge ], [ %i1497, %bb1677.bb4390_crit_edge ], [ %i1687, %bb1719.bb4390_crit_edge ], [ %i1687, %bb1719.bb4390_crit_edge44 ], [ %i1687, %bb1719.bb4390_crit_edge45 ], [ %i1752, %bb1785.bb4390_crit_edge ], [ %i2105, %bb2102.bb4390_crit_edge ], [ 0, %bb2396.bb4390_crit_edge ], [ %i2494, %bb2477.bb4390_crit_edge ], [ %i2494, %bb2579.bb4390_crit_edge ], [ 0, %bb2646.bb4390_crit_edge ], [ %i2754, %bb2737.bb4390_crit_edge ], [ %i2754, %bb2839.bb4390_crit_edge ], [ %i2604, %bb2905.bb4390_crit_edge ], [ 0, %bb3185.bb4390_crit_edge ], [ %i3293, %bb3276.bb4390_crit_edge ], [ %i3293, %bb3378.bb4390_crit_edge ], [ %i2604, %bb3387.bb4390_crit_edge ], [ %i2604, %bb3748 ], [ %i2604, %bb3762 ], [ %i2604, %bb3654 ], [ %i2604, %bb3660 ], [ %i3778, %bb3807.bb4390_crit_edge ], [ %i3845, %bb3874.bb4390_crit_edge ], [ %i3912, %bb3941.bb4390_crit_edge ], [ %i3979, %bb4008.bb4390_crit_edge ], [ %i4046, %bb4076.bb4390_crit_edge ], [ %i2604, %bb4387 ], [ %i4325, %bb4390.loopexit ], [ %i4255, %bb4390.loopexit1 ], [ %i4185, %bb4390.loopexit2 ], [ %i4115, %bb4390.loopexit3 ], [ %i4046, %bb4390.loopexit4 ], [ %i3979, %bb4390.loopexit5 ], [ %i3912, %bb4390.loopexit6 ], [ %i3845, %bb4390.loopexit7 ], [ %i3778, %bb4390.loopexit8 ], [ %i1427, %bb4390.loopexit9 ], [ %i1554, %bb4390.loopexit10 ], [ %i1844, %bb4390.loopexit11 ], [ %i1844, %bb4390.loopexit12 ], [ %i2199, %bb4390.loopexit13 ], [ %i2132, %bb4390.loopexit14 ], [ %i2013, %bb4390.loopexit15 ], [ %i2528, %bb4390.loopexit16 ], [ %i2788, %bb4390.loopexit17 ], [ %i2754, %bb4390.loopexit18 ], [ %i2754, %bb4390.loopexit19 ], [ %i2685, %bb4390.loopexit20 ], [ %i3327, %bb4390.loopexit21 ], [ %i3224, %bb4390.loopexit22 ], [ %i2425, %bb4390.loopexit23 ], [ %i1752, %bb4390.loopexit24 ], [ %i1687, %bb4390.loopexit25 ], [ %i1323, %bb4390.loopexit26 ], [ %i1253, %bb4390.loopexit27 ], [ %i1183, %bb4390.loopexit28 ], [ %i1114, %bb4390.loopexit29 ], [ %i1044, %bb4390.loopexit30 ], [ %i974, %bb4390.loopexit31 ], [ %i904, %bb4390.loopexit32 ], [ %i834, %bb4390.loopexit33 ], [ %i755, %bb4390.loopexit34 ], [ %i688, %bb4390.loopexit35 ], [ %i621, %bb4390.loopexit36 ], [ %i554, %bb4390.loopexit37 ], [ %i487, %bb4390.loopexit38 ], [ %i421, %bb4390.loopexit39 ], [ %i324, %bb4390.loopexit40 ], [ %i258, %bb4390.loopexit41 ], [ %i192, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4407 = phi i32 [ %i25, %bb4386 ], [ %i4324, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i191, %bb220.bb4390_crit_edge ], [ %i257, %bb286.bb4390_crit_edge ], [ %i323, %bb352.bb4390_crit_edge ], [ %i323, %bb392.bb4390_crit_edge ], [ %i323, %bb407.bb4390_crit_edge ], [ %i420, %bb450.bb4390_crit_edge ], [ %i486, %bb516.bb4390_crit_edge ], [ %i553, %bb583.bb4390_crit_edge ], [ %i620, %bb650.bb4390_crit_edge ], [ %i687, %bb717.bb4390_crit_edge ], [ %i754, %bb784.bb4390_crit_edge ], [ %i1322, %bb1352.bb4390_crit_edge ], [ %i1322, %bb1385.bb4390_crit_edge ], [ %i1496, %bb1677.bb4390_crit_edge ], [ %i1686, %bb1719.bb4390_crit_edge ], [ %i1686, %bb1719.bb4390_crit_edge44 ], [ %i1686, %bb1719.bb4390_crit_edge45 ], [ %i1751, %bb1785.bb4390_crit_edge ], [ %i2104, %bb2102.bb4390_crit_edge ], [ 0, %bb2396.bb4390_crit_edge ], [ %i2495, %bb2477.bb4390_crit_edge ], [ %i2495, %bb2579.bb4390_crit_edge ], [ %i2647, %bb2646.bb4390_crit_edge ], [ %i2755, %bb2737.bb4390_crit_edge ], [ %i2755, %bb2839.bb4390_crit_edge ], [ %i2605, %bb2905.bb4390_crit_edge ], [ %i3186, %bb3185.bb4390_crit_edge ], [ %i3294, %bb3276.bb4390_crit_edge ], [ %i3294, %bb3378.bb4390_crit_edge ], [ %i2605, %bb3387.bb4390_crit_edge ], [ %i2605, %bb3748 ], [ %i2605, %bb3762 ], [ %i2605, %bb3654 ], [ %i2605, %bb3660 ], [ %i3777, %bb3807.bb4390_crit_edge ], [ %i3844, %bb3874.bb4390_crit_edge ], [ %i3911, %bb3941.bb4390_crit_edge ], [ %i3978, %bb4008.bb4390_crit_edge ], [ %i4045, %bb4076.bb4390_crit_edge ], [ %i2605, %bb4387 ], [ %i4324, %bb4390.loopexit ], [ %i4254, %bb4390.loopexit1 ], [ %i4184, %bb4390.loopexit2 ], [ %i4114, %bb4390.loopexit3 ], [ %i4045, %bb4390.loopexit4 ], [ %i3978, %bb4390.loopexit5 ], [ %i3911, %bb4390.loopexit6 ], [ %i3844, %bb4390.loopexit7 ], [ %i3777, %bb4390.loopexit8 ], [ %i1426, %bb4390.loopexit9 ], [ %i1553, %bb4390.loopexit10 ], [ %i1843, %bb4390.loopexit11 ], [ %i1843, %bb4390.loopexit12 ], [ %i2198, %bb4390.loopexit13 ], [ %i2131, %bb4390.loopexit14 ], [ %i2012, %bb4390.loopexit15 ], [ %i2529, %bb4390.loopexit16 ], [ %i2789, %bb4390.loopexit17 ], [ %i2755, %bb4390.loopexit18 ], [ %i2755, %bb4390.loopexit19 ], [ %i2686, %bb4390.loopexit20 ], [ %i3328, %bb4390.loopexit21 ], [ %i3225, %bb4390.loopexit22 ], [ %i2426, %bb4390.loopexit23 ], [ %i1751, %bb4390.loopexit24 ], [ %i1686, %bb4390.loopexit25 ], [ %i1322, %bb4390.loopexit26 ], [ %i1252, %bb4390.loopexit27 ], [ %i1182, %bb4390.loopexit28 ], [ %i1113, %bb4390.loopexit29 ], [ %i1043, %bb4390.loopexit30 ], [ %i973, %bb4390.loopexit31 ], [ %i903, %bb4390.loopexit32 ], [ %i833, %bb4390.loopexit33 ], [ %i754, %bb4390.loopexit34 ], [ %i687, %bb4390.loopexit35 ], [ %i620, %bb4390.loopexit36 ], [ %i553, %bb4390.loopexit37 ], [ %i486, %bb4390.loopexit38 ], [ %i420, %bb4390.loopexit39 ], [ %i323, %bb4390.loopexit40 ], [ %i257, %bb4390.loopexit41 ], [ %i191, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4408 = phi i32 [ %i23, %bb4386 ], [ %i4323, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i190, %bb220.bb4390_crit_edge ], [ %i256, %bb286.bb4390_crit_edge ], [ %i322, %bb352.bb4390_crit_edge ], [ %i322, %bb392.bb4390_crit_edge ], [ %i322, %bb407.bb4390_crit_edge ], [ %i419, %bb450.bb4390_crit_edge ], [ %i485, %bb516.bb4390_crit_edge ], [ %i552, %bb583.bb4390_crit_edge ], [ %i619, %bb650.bb4390_crit_edge ], [ %i686, %bb717.bb4390_crit_edge ], [ %i753, %bb784.bb4390_crit_edge ], [ %i1321, %bb1352.bb4390_crit_edge ], [ %i1321, %bb1385.bb4390_crit_edge ], [ %i1495, %bb1677.bb4390_crit_edge ], [ %i1685, %bb1719.bb4390_crit_edge ], [ %i1685, %bb1719.bb4390_crit_edge44 ], [ %i1685, %bb1719.bb4390_crit_edge45 ], [ %i1750, %bb1785.bb4390_crit_edge ], [ %i2103, %bb2102.bb4390_crit_edge ], [ %i2397, %bb2396.bb4390_crit_edge ], [ %i2496, %bb2477.bb4390_crit_edge ], [ %i2496, %bb2579.bb4390_crit_edge ], [ %i2634, %bb2646.bb4390_crit_edge ], [ %i2756, %bb2737.bb4390_crit_edge ], [ %i2756, %bb2839.bb4390_crit_edge ], [ %i2606, %bb2905.bb4390_crit_edge ], [ %i2606, %bb3185.bb4390_crit_edge ], [ %i3295, %bb3276.bb4390_crit_edge ], [ %i3295, %bb3378.bb4390_crit_edge ], [ %i2603, %bb3387.bb4390_crit_edge ], [ %i2603, %bb3748 ], [ %i2603, %bb3762 ], [ %i2603, %bb3654 ], [ %i2603, %bb3660 ], [ %i3776, %bb3807.bb4390_crit_edge ], [ %i3843, %bb3874.bb4390_crit_edge ], [ %i3910, %bb3941.bb4390_crit_edge ], [ %i3977, %bb4008.bb4390_crit_edge ], [ %i4044, %bb4076.bb4390_crit_edge ], [ %i2603, %bb4387 ], [ %i4323, %bb4390.loopexit ], [ %i4253, %bb4390.loopexit1 ], [ %i4183, %bb4390.loopexit2 ], [ %i4113, %bb4390.loopexit3 ], [ %i4044, %bb4390.loopexit4 ], [ %i3977, %bb4390.loopexit5 ], [ %i3910, %bb4390.loopexit6 ], [ %i3843, %bb4390.loopexit7 ], [ %i3776, %bb4390.loopexit8 ], [ %i1425, %bb4390.loopexit9 ], [ %i1552, %bb4390.loopexit10 ], [ %i1842, %bb4390.loopexit11 ], [ %i1842, %bb4390.loopexit12 ], [ %i2197, %bb4390.loopexit13 ], [ %i2130, %bb4390.loopexit14 ], [ %i2011, %bb4390.loopexit15 ], [ %i2530, %bb4390.loopexit16 ], [ %i2790, %bb4390.loopexit17 ], [ %i2756, %bb4390.loopexit18 ], [ %i2756, %bb4390.loopexit19 ], [ %i2687, %bb4390.loopexit20 ], [ %i3329, %bb4390.loopexit21 ], [ %i3226, %bb4390.loopexit22 ], [ %i2427, %bb4390.loopexit23 ], [ %i1750, %bb4390.loopexit24 ], [ %i1685, %bb4390.loopexit25 ], [ %i1321, %bb4390.loopexit26 ], [ %i1251, %bb4390.loopexit27 ], [ %i1181, %bb4390.loopexit28 ], [ %i1112, %bb4390.loopexit29 ], [ %i1042, %bb4390.loopexit30 ], [ %i972, %bb4390.loopexit31 ], [ %i902, %bb4390.loopexit32 ], [ %i832, %bb4390.loopexit33 ], [ %i753, %bb4390.loopexit34 ], [ %i686, %bb4390.loopexit35 ], [ %i619, %bb4390.loopexit36 ], [ %i552, %bb4390.loopexit37 ], [ %i485, %bb4390.loopexit38 ], [ %i419, %bb4390.loopexit39 ], [ %i322, %bb4390.loopexit40 ], [ %i256, %bb4390.loopexit41 ], [ %i190, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4409 = phi i32 [ %i21, %bb4386 ], [ %i4322, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i189, %bb220.bb4390_crit_edge ], [ %i255, %bb286.bb4390_crit_edge ], [ %i321, %bb352.bb4390_crit_edge ], [ %i321, %bb392.bb4390_crit_edge ], [ %i321, %bb407.bb4390_crit_edge ], [ %i418, %bb450.bb4390_crit_edge ], [ %i484, %bb516.bb4390_crit_edge ], [ %i551, %bb583.bb4390_crit_edge ], [ %i618, %bb650.bb4390_crit_edge ], [ %i685, %bb717.bb4390_crit_edge ], [ %i752, %bb784.bb4390_crit_edge ], [ %i1320, %bb1352.bb4390_crit_edge ], [ %i1320, %bb1385.bb4390_crit_edge ], [ %i1494, %bb1677.bb4390_crit_edge ], [ %i1684, %bb1719.bb4390_crit_edge ], [ %i1684, %bb1719.bb4390_crit_edge44 ], [ %i1684, %bb1719.bb4390_crit_edge45 ], [ 0, %bb1785.bb4390_crit_edge ], [ %i2121, %bb2102.bb4390_crit_edge ], [ %i1993, %bb2396.bb4390_crit_edge ], [ %i2497, %bb2477.bb4390_crit_edge ], [ %i2497, %bb2579.bb4390_crit_edge ], [ %i2635, %bb2646.bb4390_crit_edge ], [ %i2757, %bb2737.bb4390_crit_edge ], [ %i2757, %bb2839.bb4390_crit_edge ], [ %i2607, %bb2905.bb4390_crit_edge ], [ %i2607, %bb3185.bb4390_crit_edge ], [ %i3296, %bb3276.bb4390_crit_edge ], [ %i3296, %bb3378.bb4390_crit_edge ], [ %i2607, %bb3387.bb4390_crit_edge ], [ %i2607, %bb3748 ], [ %i2607, %bb3762 ], [ %i2607, %bb3654 ], [ %i2607, %bb3660 ], [ %i3775, %bb3807.bb4390_crit_edge ], [ %i3842, %bb3874.bb4390_crit_edge ], [ %i3909, %bb3941.bb4390_crit_edge ], [ %i3976, %bb4008.bb4390_crit_edge ], [ %i4043, %bb4076.bb4390_crit_edge ], [ %i2607, %bb4387 ], [ %i4322, %bb4390.loopexit ], [ %i4252, %bb4390.loopexit1 ], [ %i4182, %bb4390.loopexit2 ], [ %i4112, %bb4390.loopexit3 ], [ %i4043, %bb4390.loopexit4 ], [ %i3976, %bb4390.loopexit5 ], [ %i3909, %bb4390.loopexit6 ], [ %i3842, %bb4390.loopexit7 ], [ %i3775, %bb4390.loopexit8 ], [ %i1424, %bb4390.loopexit9 ], [ %i1551, %bb4390.loopexit10 ], [ %i1860, %bb4390.loopexit11 ], [ %i1860, %bb4390.loopexit12 ], [ %i2216, %bb4390.loopexit13 ], [ %i2148, %bb4390.loopexit14 ], [ %i2029, %bb4390.loopexit15 ], [ %i2531, %bb4390.loopexit16 ], [ %i2791, %bb4390.loopexit17 ], [ %i2757, %bb4390.loopexit18 ], [ %i2757, %bb4390.loopexit19 ], [ %i2688, %bb4390.loopexit20 ], [ %i3330, %bb4390.loopexit21 ], [ %i3227, %bb4390.loopexit22 ], [ %i2428, %bb4390.loopexit23 ], [ %i1749, %bb4390.loopexit24 ], [ %i1684, %bb4390.loopexit25 ], [ %i1320, %bb4390.loopexit26 ], [ %i1250, %bb4390.loopexit27 ], [ %i1180, %bb4390.loopexit28 ], [ %i1111, %bb4390.loopexit29 ], [ %i1041, %bb4390.loopexit30 ], [ %i971, %bb4390.loopexit31 ], [ %i901, %bb4390.loopexit32 ], [ %i831, %bb4390.loopexit33 ], [ %i752, %bb4390.loopexit34 ], [ %i685, %bb4390.loopexit35 ], [ %i618, %bb4390.loopexit36 ], [ %i551, %bb4390.loopexit37 ], [ %i484, %bb4390.loopexit38 ], [ %i418, %bb4390.loopexit39 ], [ %i321, %bb4390.loopexit40 ], [ %i255, %bb4390.loopexit41 ], [ %i189, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4410 = phi i32 [ %i19, %bb4386 ], [ %i4321, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i188, %bb220.bb4390_crit_edge ], [ %i254, %bb286.bb4390_crit_edge ], [ %i320, %bb352.bb4390_crit_edge ], [ %i320, %bb392.bb4390_crit_edge ], [ %i320, %bb407.bb4390_crit_edge ], [ %i417, %bb450.bb4390_crit_edge ], [ %i483, %bb516.bb4390_crit_edge ], [ %i550, %bb583.bb4390_crit_edge ], [ %i617, %bb650.bb4390_crit_edge ], [ %i684, %bb717.bb4390_crit_edge ], [ %i751, %bb784.bb4390_crit_edge ], [ %i1319, %bb1352.bb4390_crit_edge ], [ %i1319, %bb1385.bb4390_crit_edge ], [ %i1493, %bb1677.bb4390_crit_edge ], [ %i1724, %bb1719.bb4390_crit_edge ], [ %i1724, %bb1719.bb4390_crit_edge44 ], [ %i1724, %bb1719.bb4390_crit_edge45 ], [ %i1769, %bb1785.bb4390_crit_edge ], [ %i2122, %bb2102.bb4390_crit_edge ], [ %i1994, %bb2396.bb4390_crit_edge ], [ %i2498, %bb2477.bb4390_crit_edge ], [ %i2498, %bb2579.bb4390_crit_edge ], [ %i2636, %bb2646.bb4390_crit_edge ], [ %i2758, %bb2737.bb4390_crit_edge ], [ %i2758, %bb2839.bb4390_crit_edge ], [ %i2608, %bb2905.bb4390_crit_edge ], [ %i2608, %bb3185.bb4390_crit_edge ], [ %i3297, %bb3276.bb4390_crit_edge ], [ %i3297, %bb3378.bb4390_crit_edge ], [ %i2608, %bb3387.bb4390_crit_edge ], [ %i2608, %bb3748 ], [ %i2608, %bb3762 ], [ %i2608, %bb3654 ], [ %i2608, %bb3660 ], [ %i3774, %bb3807.bb4390_crit_edge ], [ %i3841, %bb3874.bb4390_crit_edge ], [ %i3908, %bb3941.bb4390_crit_edge ], [ %i3975, %bb4008.bb4390_crit_edge ], [ %i4042, %bb4076.bb4390_crit_edge ], [ %i2608, %bb4387 ], [ %i4321, %bb4390.loopexit ], [ %i4251, %bb4390.loopexit1 ], [ %i4181, %bb4390.loopexit2 ], [ %i4111, %bb4390.loopexit3 ], [ %i4042, %bb4390.loopexit4 ], [ %i3975, %bb4390.loopexit5 ], [ %i3908, %bb4390.loopexit6 ], [ %i3841, %bb4390.loopexit7 ], [ %i3774, %bb4390.loopexit8 ], [ %i1423, %bb4390.loopexit9 ], [ %i1550, %bb4390.loopexit10 ], [ %i1861, %bb4390.loopexit11 ], [ %i1861, %bb4390.loopexit12 ], [ %i2217, %bb4390.loopexit13 ], [ %i2149, %bb4390.loopexit14 ], [ %i2030, %bb4390.loopexit15 ], [ %i2532, %bb4390.loopexit16 ], [ %i2792, %bb4390.loopexit17 ], [ %i2758, %bb4390.loopexit18 ], [ %i2758, %bb4390.loopexit19 ], [ %i2689, %bb4390.loopexit20 ], [ %i3331, %bb4390.loopexit21 ], [ %i3228, %bb4390.loopexit22 ], [ %i2429, %bb4390.loopexit23 ], [ %i1769, %bb4390.loopexit24 ], [ %i1683, %bb4390.loopexit25 ], [ %i1319, %bb4390.loopexit26 ], [ %i1249, %bb4390.loopexit27 ], [ %i1179, %bb4390.loopexit28 ], [ %i1110, %bb4390.loopexit29 ], [ %i1040, %bb4390.loopexit30 ], [ %i970, %bb4390.loopexit31 ], [ %i900, %bb4390.loopexit32 ], [ %i830, %bb4390.loopexit33 ], [ %i751, %bb4390.loopexit34 ], [ %i684, %bb4390.loopexit35 ], [ %i617, %bb4390.loopexit36 ], [ %i550, %bb4390.loopexit37 ], [ %i483, %bb4390.loopexit38 ], [ %i417, %bb4390.loopexit39 ], [ %i320, %bb4390.loopexit40 ], [ %i254, %bb4390.loopexit41 ], [ %i188, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4411 = phi i32 [ %i17, %bb4386 ], [ %i4320, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i187, %bb220.bb4390_crit_edge ], [ %i253, %bb286.bb4390_crit_edge ], [ %i319, %bb352.bb4390_crit_edge ], [ %i319, %bb392.bb4390_crit_edge ], [ %i319, %bb407.bb4390_crit_edge ], [ %i416, %bb450.bb4390_crit_edge ], [ %i482, %bb516.bb4390_crit_edge ], [ %i549, %bb583.bb4390_crit_edge ], [ %i616, %bb650.bb4390_crit_edge ], [ %i683, %bb717.bb4390_crit_edge ], [ %i750, %bb784.bb4390_crit_edge ], [ %i1318, %bb1352.bb4390_crit_edge ], [ %i1318, %bb1385.bb4390_crit_edge ], [ %i1492, %bb1677.bb4390_crit_edge ], [ %i1703, %bb1719.bb4390_crit_edge ], [ %i1703, %bb1719.bb4390_crit_edge44 ], [ %i1703, %bb1719.bb4390_crit_edge45 ], [ %i1770, %bb1785.bb4390_crit_edge ], [ %i2123, %bb2102.bb4390_crit_edge ], [ %i1995, %bb2396.bb4390_crit_edge ], [ %i2499, %bb2477.bb4390_crit_edge ], [ %i2499, %bb2579.bb4390_crit_edge ], [ %i2637, %bb2646.bb4390_crit_edge ], [ %i2759, %bb2737.bb4390_crit_edge ], [ %i2759, %bb2839.bb4390_crit_edge ], [ %i2609, %bb2905.bb4390_crit_edge ], [ %i2609, %bb3185.bb4390_crit_edge ], [ %i3298, %bb3276.bb4390_crit_edge ], [ %i3298, %bb3378.bb4390_crit_edge ], [ %i2609, %bb3387.bb4390_crit_edge ], [ %i2609, %bb3748 ], [ %i2609, %bb3762 ], [ %i2609, %bb3654 ], [ %i2609, %bb3660 ], [ %i3773, %bb3807.bb4390_crit_edge ], [ %i3840, %bb3874.bb4390_crit_edge ], [ %i3907, %bb3941.bb4390_crit_edge ], [ %i3974, %bb4008.bb4390_crit_edge ], [ %i4041, %bb4076.bb4390_crit_edge ], [ %i2609, %bb4387 ], [ %i4320, %bb4390.loopexit ], [ %i4250, %bb4390.loopexit1 ], [ %i4180, %bb4390.loopexit2 ], [ %i4110, %bb4390.loopexit3 ], [ %i4041, %bb4390.loopexit4 ], [ %i3974, %bb4390.loopexit5 ], [ %i3907, %bb4390.loopexit6 ], [ %i3840, %bb4390.loopexit7 ], [ %i3773, %bb4390.loopexit8 ], [ %i1422, %bb4390.loopexit9 ], [ %i1549, %bb4390.loopexit10 ], [ %i1862, %bb4390.loopexit11 ], [ %i1862, %bb4390.loopexit12 ], [ %i2218, %bb4390.loopexit13 ], [ %i2150, %bb4390.loopexit14 ], [ %i2031, %bb4390.loopexit15 ], [ %i2533, %bb4390.loopexit16 ], [ %i2793, %bb4390.loopexit17 ], [ %i2759, %bb4390.loopexit18 ], [ %i2759, %bb4390.loopexit19 ], [ %i2690, %bb4390.loopexit20 ], [ %i3332, %bb4390.loopexit21 ], [ %i3229, %bb4390.loopexit22 ], [ %i2430, %bb4390.loopexit23 ], [ %i1770, %bb4390.loopexit24 ], [ %i1703, %bb4390.loopexit25 ], [ %i1318, %bb4390.loopexit26 ], [ %i1248, %bb4390.loopexit27 ], [ %i1178, %bb4390.loopexit28 ], [ %i1109, %bb4390.loopexit29 ], [ %i1039, %bb4390.loopexit30 ], [ %i969, %bb4390.loopexit31 ], [ %i899, %bb4390.loopexit32 ], [ %i829, %bb4390.loopexit33 ], [ %i750, %bb4390.loopexit34 ], [ %i683, %bb4390.loopexit35 ], [ %i616, %bb4390.loopexit36 ], [ %i549, %bb4390.loopexit37 ], [ %i482, %bb4390.loopexit38 ], [ %i416, %bb4390.loopexit39 ], [ %i319, %bb4390.loopexit40 ], [ %i253, %bb4390.loopexit41 ], [ %i187, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4412 = phi i32 [ %i15, %bb4386 ], [ %i4319, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i186, %bb220.bb4390_crit_edge ], [ %i252, %bb286.bb4390_crit_edge ], [ %i318, %bb352.bb4390_crit_edge ], [ %i318, %bb392.bb4390_crit_edge ], [ %i318, %bb407.bb4390_crit_edge ], [ %i415, %bb450.bb4390_crit_edge ], [ %i481, %bb516.bb4390_crit_edge ], [ %i548, %bb583.bb4390_crit_edge ], [ %i615, %bb650.bb4390_crit_edge ], [ %i682, %bb717.bb4390_crit_edge ], [ %i749, %bb784.bb4390_crit_edge ], [ %i1317, %bb1352.bb4390_crit_edge ], [ %i1317, %bb1385.bb4390_crit_edge ], [ %i1491, %bb1677.bb4390_crit_edge ], [ %i1682, %bb1719.bb4390_crit_edge ], [ %i1682, %bb1719.bb4390_crit_edge44 ], [ %i1682, %bb1719.bb4390_crit_edge45 ], [ %i1748, %bb1785.bb4390_crit_edge ], [ %i2124, %bb2102.bb4390_crit_edge ], [ %i2318, %bb2396.bb4390_crit_edge ], [ %i2500, %bb2477.bb4390_crit_edge ], [ %i2500, %bb2579.bb4390_crit_edge ], [ %i2638, %bb2646.bb4390_crit_edge ], [ %i2760, %bb2737.bb4390_crit_edge ], [ %i2760, %bb2839.bb4390_crit_edge ], [ %i2610, %bb2905.bb4390_crit_edge ], [ %i2610, %bb3185.bb4390_crit_edge ], [ %i3299, %bb3276.bb4390_crit_edge ], [ %i3299, %bb3378.bb4390_crit_edge ], [ %i2610, %bb3387.bb4390_crit_edge ], [ %i2610, %bb3748 ], [ %i2610, %bb3762 ], [ %i2610, %bb3654 ], [ %i2610, %bb3660 ], [ %i3772, %bb3807.bb4390_crit_edge ], [ %i3839, %bb3874.bb4390_crit_edge ], [ %i3906, %bb3941.bb4390_crit_edge ], [ %i3973, %bb4008.bb4390_crit_edge ], [ %i4040, %bb4076.bb4390_crit_edge ], [ %i2610, %bb4387 ], [ %i4319, %bb4390.loopexit ], [ %i4249, %bb4390.loopexit1 ], [ %i4179, %bb4390.loopexit2 ], [ %i4109, %bb4390.loopexit3 ], [ %i4040, %bb4390.loopexit4 ], [ %i3973, %bb4390.loopexit5 ], [ %i3906, %bb4390.loopexit6 ], [ %i3839, %bb4390.loopexit7 ], [ %i3772, %bb4390.loopexit8 ], [ %i1421, %bb4390.loopexit9 ], [ %i1548, %bb4390.loopexit10 ], [ %i1841, %bb4390.loopexit11 ], [ %i1841, %bb4390.loopexit12 ], [ %i2219, %bb4390.loopexit13 ], [ %i2151, %bb4390.loopexit14 ], [ %i2032, %bb4390.loopexit15 ], [ %i2534, %bb4390.loopexit16 ], [ %i2794, %bb4390.loopexit17 ], [ %i2760, %bb4390.loopexit18 ], [ %i2760, %bb4390.loopexit19 ], [ %i2691, %bb4390.loopexit20 ], [ %i3333, %bb4390.loopexit21 ], [ %i3230, %bb4390.loopexit22 ], [ %i2431, %bb4390.loopexit23 ], [ %i1748, %bb4390.loopexit24 ], [ %i1682, %bb4390.loopexit25 ], [ %i1317, %bb4390.loopexit26 ], [ %i1247, %bb4390.loopexit27 ], [ %i1177, %bb4390.loopexit28 ], [ %i1108, %bb4390.loopexit29 ], [ %i1038, %bb4390.loopexit30 ], [ %i968, %bb4390.loopexit31 ], [ %i898, %bb4390.loopexit32 ], [ %i828, %bb4390.loopexit33 ], [ %i749, %bb4390.loopexit34 ], [ %i682, %bb4390.loopexit35 ], [ %i615, %bb4390.loopexit36 ], [ %i548, %bb4390.loopexit37 ], [ %i481, %bb4390.loopexit38 ], [ %i415, %bb4390.loopexit39 ], [ %i318, %bb4390.loopexit40 ], [ %i252, %bb4390.loopexit41 ], [ %i186, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4413 = phi i32 [ %i13, %bb4386 ], [ %i4318, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i185, %bb220.bb4390_crit_edge ], [ %i251, %bb286.bb4390_crit_edge ], [ %i317, %bb352.bb4390_crit_edge ], [ %i317, %bb392.bb4390_crit_edge ], [ %i317, %bb407.bb4390_crit_edge ], [ %i414, %bb450.bb4390_crit_edge ], [ %i480, %bb516.bb4390_crit_edge ], [ %i547, %bb583.bb4390_crit_edge ], [ %i614, %bb650.bb4390_crit_edge ], [ %i681, %bb717.bb4390_crit_edge ], [ %i748, %bb784.bb4390_crit_edge ], [ %i1316, %bb1352.bb4390_crit_edge ], [ %i1316, %bb1385.bb4390_crit_edge ], [ %i1513, %bb1677.bb4390_crit_edge ], [ %i1704, %bb1719.bb4390_crit_edge ], [ %i1704, %bb1719.bb4390_crit_edge44 ], [ %i1704, %bb1719.bb4390_crit_edge45 ], [ %i1771, %bb1785.bb4390_crit_edge ], [ %i2125, %bb2102.bb4390_crit_edge ], [ %i1997, %bb2396.bb4390_crit_edge ], [ %i2501, %bb2477.bb4390_crit_edge ], [ %i2501, %bb2579.bb4390_crit_edge ], [ %i2639, %bb2646.bb4390_crit_edge ], [ %i2761, %bb2737.bb4390_crit_edge ], [ %i2761, %bb2839.bb4390_crit_edge ], [ %i2611, %bb2905.bb4390_crit_edge ], [ %i2611, %bb3185.bb4390_crit_edge ], [ %i3300, %bb3276.bb4390_crit_edge ], [ %i3300, %bb3378.bb4390_crit_edge ], [ %i2611, %bb3387.bb4390_crit_edge ], [ %i2611, %bb3748 ], [ %i2611, %bb3762 ], [ %i3593, %bb3654 ], [ %i3593, %bb3660 ], [ %i3771, %bb3807.bb4390_crit_edge ], [ %i3838, %bb3874.bb4390_crit_edge ], [ %i3905, %bb3941.bb4390_crit_edge ], [ %i3972, %bb4008.bb4390_crit_edge ], [ %i4039, %bb4076.bb4390_crit_edge ], [ %i2611, %bb4387 ], [ %i4318, %bb4390.loopexit ], [ %i4248, %bb4390.loopexit1 ], [ %i4178, %bb4390.loopexit2 ], [ %i4108, %bb4390.loopexit3 ], [ %i4039, %bb4390.loopexit4 ], [ %i3972, %bb4390.loopexit5 ], [ %i3905, %bb4390.loopexit6 ], [ %i3838, %bb4390.loopexit7 ], [ %i3771, %bb4390.loopexit8 ], [ %i1420, %bb4390.loopexit9 ], [ %i1570, %bb4390.loopexit10 ], [ %i1871, %bb4390.loopexit11 ], [ %i1911, %bb4390.loopexit12 ], [ %i2220, %bb4390.loopexit13 ], [ %i2152, %bb4390.loopexit14 ], [ %i2033, %bb4390.loopexit15 ], [ %i2535, %bb4390.loopexit16 ], [ %i2795, %bb4390.loopexit17 ], [ %i2761, %bb4390.loopexit18 ], [ %i2761, %bb4390.loopexit19 ], [ %i2692, %bb4390.loopexit20 ], [ %i3334, %bb4390.loopexit21 ], [ %i3231, %bb4390.loopexit22 ], [ %i2432, %bb4390.loopexit23 ], [ %i1771, %bb4390.loopexit24 ], [ %i1704, %bb4390.loopexit25 ], [ %i1316, %bb4390.loopexit26 ], [ %i1246, %bb4390.loopexit27 ], [ %i1176, %bb4390.loopexit28 ], [ %i1107, %bb4390.loopexit29 ], [ %i1037, %bb4390.loopexit30 ], [ %i967, %bb4390.loopexit31 ], [ %i897, %bb4390.loopexit32 ], [ %i827, %bb4390.loopexit33 ], [ %i748, %bb4390.loopexit34 ], [ %i681, %bb4390.loopexit35 ], [ %i614, %bb4390.loopexit36 ], [ %i547, %bb4390.loopexit37 ], [ %i480, %bb4390.loopexit38 ], [ %i414, %bb4390.loopexit39 ], [ %i317, %bb4390.loopexit40 ], [ %i251, %bb4390.loopexit41 ], [ %i185, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4414 = phi i32 [ %i11, %bb4386 ], [ %i4317, %bb4355 ], [ 0, %bb154.bb4390_crit_edge ], [ %i184, %bb220.bb4390_crit_edge ], [ %i250, %bb286.bb4390_crit_edge ], [ %i316, %bb352.bb4390_crit_edge ], [ %i316, %bb392.bb4390_crit_edge ], [ %i316, %bb407.bb4390_crit_edge ], [ %i413, %bb450.bb4390_crit_edge ], [ %i479, %bb516.bb4390_crit_edge ], [ %i546, %bb583.bb4390_crit_edge ], [ %i613, %bb650.bb4390_crit_edge ], [ %i680, %bb717.bb4390_crit_edge ], [ %i747, %bb784.bb4390_crit_edge ], [ %i1315, %bb1352.bb4390_crit_edge ], [ %i1315, %bb1385.bb4390_crit_edge ], [ %i1514, %bb1677.bb4390_crit_edge ], [ %i1705, %bb1719.bb4390_crit_edge ], [ %i1705, %bb1719.bb4390_crit_edge44 ], [ %i1705, %bb1719.bb4390_crit_edge45 ], [ %i1772, %bb1785.bb4390_crit_edge ], [ %i2126, %bb2102.bb4390_crit_edge ], [ 256, %bb2396.bb4390_crit_edge ], [ %i2502, %bb2477.bb4390_crit_edge ], [ %i2502, %bb2579.bb4390_crit_edge ], [ %i2640, %bb2646.bb4390_crit_edge ], [ %i2762, %bb2737.bb4390_crit_edge ], [ %i2762, %bb2839.bb4390_crit_edge ], [ %i2612, %bb2905.bb4390_crit_edge ], [ %i2612, %bb3185.bb4390_crit_edge ], [ %i3301, %bb3276.bb4390_crit_edge ], [ %i3301, %bb3378.bb4390_crit_edge ], [ %i2612, %bb3387.bb4390_crit_edge ], [ %i3737, %bb3748 ], [ %i3737, %bb3762 ], [ %i3575, %bb3654 ], [ %i3575, %bb3660 ], [ %i3770, %bb3807.bb4390_crit_edge ], [ %i3837, %bb3874.bb4390_crit_edge ], [ %i3904, %bb3941.bb4390_crit_edge ], [ %i3971, %bb4008.bb4390_crit_edge ], [ %i4038, %bb4076.bb4390_crit_edge ], [ %i4389, %bb4387 ], [ %i4317, %bb4390.loopexit ], [ %i4247, %bb4390.loopexit1 ], [ %i4177, %bb4390.loopexit2 ], [ %i4107, %bb4390.loopexit3 ], [ %i4038, %bb4390.loopexit4 ], [ %i3971, %bb4390.loopexit5 ], [ %i3904, %bb4390.loopexit6 ], [ %i3837, %bb4390.loopexit7 ], [ %i3770, %bb4390.loopexit8 ], [ %i1443, %bb4390.loopexit9 ], [ %i1571, %bb4390.loopexit10 ], [ %i1864, %bb4390.loopexit11 ], [ %i1864, %bb4390.loopexit12 ], [ %i2221, %bb4390.loopexit13 ], [ %i2153, %bb4390.loopexit14 ], [ %i2034, %bb4390.loopexit15 ], [ %i2536, %bb4390.loopexit16 ], [ %i2796, %bb4390.loopexit17 ], [ %i2762, %bb4390.loopexit18 ], [ %i2762, %bb4390.loopexit19 ], [ %i2693, %bb4390.loopexit20 ], [ %i3335, %bb4390.loopexit21 ], [ %i3232, %bb4390.loopexit22 ], [ %i2433, %bb4390.loopexit23 ], [ %i1772, %bb4390.loopexit24 ], [ %i1705, %bb4390.loopexit25 ], [ %i1315, %bb4390.loopexit26 ], [ %i1245, %bb4390.loopexit27 ], [ %i1175, %bb4390.loopexit28 ], [ %i1106, %bb4390.loopexit29 ], [ %i1036, %bb4390.loopexit30 ], [ %i966, %bb4390.loopexit31 ], [ %i896, %bb4390.loopexit32 ], [ %i826, %bb4390.loopexit33 ], [ %i747, %bb4390.loopexit34 ], [ %i680, %bb4390.loopexit35 ], [ %i613, %bb4390.loopexit36 ], [ %i546, %bb4390.loopexit37 ], [ %i479, %bb4390.loopexit38 ], [ %i413, %bb4390.loopexit39 ], [ %i316, %bb4390.loopexit40 ], [ %i250, %bb4390.loopexit41 ], [ %i184, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4415 = phi i32 [ 0, %bb4386 ], [ 4, %bb4355 ], [ -5, %bb154.bb4390_crit_edge ], [ -5, %bb220.bb4390_crit_edge ], [ -5, %bb286.bb4390_crit_edge ], [ -5, %bb352.bb4390_crit_edge ], [ -3, %bb392.bb4390_crit_edge ], [ -3, %bb407.bb4390_crit_edge ], [ -4, %bb450.bb4390_crit_edge ], [ -4, %bb516.bb4390_crit_edge ], [ -4, %bb583.bb4390_crit_edge ], [ -4, %bb650.bb4390_crit_edge ], [ -4, %bb717.bb4390_crit_edge ], [ -4, %bb784.bb4390_crit_edge ], [ -4, %bb1352.bb4390_crit_edge ], [ -4, %bb1385.bb4390_crit_edge ], [ -4, %bb1677.bb4390_crit_edge ], [ -4, %bb1719.bb4390_crit_edge ], [ -4, %bb1719.bb4390_crit_edge44 ], [ -4, %bb1719.bb4390_crit_edge45 ], [ -4, %bb1785.bb4390_crit_edge ], [ -4, %bb2102.bb4390_crit_edge ], [ -4, %bb2396.bb4390_crit_edge ], [ -4, %bb2477.bb4390_crit_edge ], [ -4, %bb2579.bb4390_crit_edge ], [ -4, %bb2646.bb4390_crit_edge ], [ -4, %bb2737.bb4390_crit_edge ], [ -4, %bb2839.bb4390_crit_edge ], [ -4, %bb2905.bb4390_crit_edge ], [ -4, %bb3185.bb4390_crit_edge ], [ -4, %bb3276.bb4390_crit_edge ], [ -4, %bb3378.bb4390_crit_edge ], [ -4, %bb3387.bb4390_crit_edge ], [ 0, %bb3748 ], [ 0, %bb3762 ], [ 0, %bb3654 ], [ 0, %bb3660 ], [ -4, %bb3807.bb4390_crit_edge ], [ -4, %bb3874.bb4390_crit_edge ], [ -4, %bb3941.bb4390_crit_edge ], [ -4, %bb4008.bb4390_crit_edge ], [ -4, %bb4076.bb4390_crit_edge ], [ -4, %bb4387 ], [ 0, %bb4390.loopexit ], [ 0, %bb4390.loopexit1 ], [ 0, %bb4390.loopexit2 ], [ 0, %bb4390.loopexit3 ], [ 0, %bb4390.loopexit4 ], [ 0, %bb4390.loopexit5 ], [ 0, %bb4390.loopexit6 ], [ 0, %bb4390.loopexit7 ], [ 0, %bb4390.loopexit8 ], [ 0, %bb4390.loopexit9 ], [ 0, %bb4390.loopexit10 ], [ 0, %bb4390.loopexit11 ], [ -4, %bb4390.loopexit12 ], [ 0, %bb4390.loopexit13 ], [ 0, %bb4390.loopexit14 ], [ 0, %bb4390.loopexit15 ], [ 0, %bb4390.loopexit16 ], [ 0, %bb4390.loopexit17 ], [ -4, %bb4390.loopexit18 ], [ -4, %bb4390.loopexit19 ], [ 0, %bb4390.loopexit20 ], [ 0, %bb4390.loopexit21 ], [ 0, %bb4390.loopexit22 ], [ 0, %bb4390.loopexit23 ], [ 0, %bb4390.loopexit24 ], [ 0, %bb4390.loopexit25 ], [ 0, %bb4390.loopexit26 ], [ 0, %bb4390.loopexit27 ], [ 0, %bb4390.loopexit28 ], [ 0, %bb4390.loopexit29 ], [ 0, %bb4390.loopexit30 ], [ 0, %bb4390.loopexit31 ], [ 0, %bb4390.loopexit32 ], [ 0, %bb4390.loopexit33 ], [ 0, %bb4390.loopexit34 ], [ 0, %bb4390.loopexit35 ], [ 0, %bb4390.loopexit36 ], [ 0, %bb4390.loopexit37 ], [ 0, %bb4390.loopexit38 ], [ 0, %bb4390.loopexit39 ], [ 0, %bb4390.loopexit40 ], [ 0, %bb4390.loopexit41 ], [ 0, %bb4390.loopexit42 ], [ 0, %bb4390.loopexit43 ]
  %i4416 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 63
  %i4417 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 62
  %i4418 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 61
  %i4419 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 60
  %i4420 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 59
  %i4421 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 58
  %i4422 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 57
  %i4423 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 56
  %i4424 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 55
  %i4425 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 54
  %i4426 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 53
  %i4427 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 52
  %i4428 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 51
  %i4429 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 50
  %i4430 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 49
  %i4431 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 48
  %i4432 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 47
  %i4433 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 46
  %i4434 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 45
  %i4435 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 44
  %i4436 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 43
  %i4437 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 42
  %i4438 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 41
  %i4439 = getelementptr inbounds %struct.DState, ptr %arg, i64 0, i32 40
  store i32 %i4414, ptr %i4439, align 4, !tbaa !232
  store i32 %i4413, ptr %i4438, align 8, !tbaa !233
  store i32 %i4412, ptr %i4437, align 4, !tbaa !234
  store i32 %i4411, ptr %i4436, align 8, !tbaa !235
  store i32 %i4410, ptr %i4435, align 4, !tbaa !236
  store i32 %i4409, ptr %i4434, align 8, !tbaa !237
  store i32 %i4408, ptr %i4433, align 4, !tbaa !238
  store i32 %i4407, ptr %i4432, align 8, !tbaa !239
  store i32 %i4406, ptr %i4431, align 4, !tbaa !240
  store i32 %i4405, ptr %i4430, align 8, !tbaa !241
  store i32 %i4404, ptr %i4429, align 4, !tbaa !242
  store i32 %i4403, ptr %i4428, align 8, !tbaa !166
  store i32 %i4402, ptr %i4427, align 4, !tbaa !243
  store i32 %i4401, ptr %i4426, align 8, !tbaa !244
  store i32 %i4400, ptr %i4425, align 4, !tbaa !245
  store i32 %i4391, ptr %i4424, align 8, !tbaa !246
  store i32 %i4399, ptr %i4423, align 4, !tbaa !247
  store i32 %i4398, ptr %i4422, align 8, !tbaa !248
  store i32 %i4397, ptr %i4421, align 4, !tbaa !249
  store i32 %i4396, ptr %i4420, align 8, !tbaa !250
  store i32 %i4395, ptr %i4419, align 4, !tbaa !251
  store ptr %i4394, ptr %i4418, align 8, !tbaa !252
  store ptr %i4393, ptr %i4417, align 8, !tbaa !253
  store ptr %i4392, ptr %i4416, align 8, !tbaa !254
  ret i32 %i4415
}

; Function Attrs: nounwind uwtable
define dso_local void @BZ2_hbMakeCodeLengths(ptr nocapture noundef writeonly %arg, ptr nocapture noundef readonly %arg1, i32 noundef %arg2, i32 noundef %arg3) local_unnamed_addr #0 {
bb:
  %i = alloca [260 x i32], align 16
  %i4 = alloca [516 x i32], align 16
  %i5 = alloca [516 x i32], align 16
  call void @llvm.lifetime.start.p0(i64 1040, ptr nonnull %i) #31
  call void @llvm.lifetime.start.p0(i64 2064, ptr nonnull %i4) #31
  call void @llvm.lifetime.start.p0(i64 2064, ptr nonnull %i5) #31
  %i6 = icmp sgt i32 %arg2, 0
  %i7 = zext i32 %arg2 to i64
  br i1 %i6, label %bb8, label %bb.bb23_crit_edge

bb.bb23_crit_edge:                                ; preds = %bb
  br label %bb23

bb8:                                              ; preds = %bb
  %i9 = and i64 %i7, 1
  %i10 = icmp eq i32 %arg2, 1
  br i1 %i10, label %bb8.bb13_crit_edge, label %bb11

bb8.bb13_crit_edge:                               ; preds = %bb8
  br label %bb13

bb11:                                             ; preds = %bb8
  %i12 = and i64 %i7, 2147483646
  br label %bb46

bb13.loopexit:                                    ; preds = %bb46
  br label %bb13

bb13:                                             ; preds = %bb8.bb13_crit_edge, %bb13.loopexit
  %i14 = phi i64 [ 0, %bb8.bb13_crit_edge ], [ %i59, %bb13.loopexit ]
  %i15 = icmp eq i64 %i9, 0
  br i1 %i15, label %bb13.bb23_crit_edge, label %bb16

bb13.bb23_crit_edge:                              ; preds = %bb13
  br label %bb23

bb16:                                             ; preds = %bb13
  %i17 = getelementptr inbounds i32, ptr %arg1, i64 %i14
  %i18 = load i32, ptr %i17, align 4, !tbaa !19
  %i19 = tail call i32 @llvm.umax.i32(i32 %i18, i32 1)
  %i20 = shl i32 %i19, 8
  %i21 = add nuw nsw i64 %i14, 1
  %i22 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i21
  store i32 %i20, ptr %i22, align 4, !tbaa !19
  br label %bb23

bb23:                                             ; preds = %bb13.bb23_crit_edge, %bb.bb23_crit_edge, %bb16
  %i24 = icmp slt i32 %arg2, 1
  %i25 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 1
  %i26 = getelementptr i8, ptr %arg, i64 -1
  %i27 = getelementptr inbounds i8, ptr %i5, i64 4
  %i28 = shl nuw nsw i64 %i7, 2
  %i29 = sext i32 %arg2 to i64
  %i30 = icmp ult i32 %arg2, 260
  %i31 = icmp sgt i32 %arg2, 1
  %i32 = zext nneg i32 %arg2 to i64
  store i32 0, ptr %i, align 16, !tbaa !19
  store i32 0, ptr %i4, align 16, !tbaa !19
  store i32 -2, ptr %i5, align 16, !tbaa !19
  br i1 %i24, label %bb23.bb348_crit_edge, label %bb33

bb23.bb348_crit_edge:                             ; preds = %bb23
  br label %bb348

bb33:                                             ; preds = %bb23
  %i34 = add i32 %arg2, 1
  %i35 = zext i32 %i34 to i64
  %i36 = add nsw i64 %i35, -1
  %i37 = add nsw i64 %i35, -2
  %i38 = and i64 %i36, 1
  %i39 = icmp eq i64 %i37, 0
  %i40 = and i64 %i36, -2
  %i41 = icmp eq i64 %i38, 0
  %i42 = and i64 %i36, 1
  %i43 = icmp eq i64 %i37, 0
  %i44 = and i64 %i36, -2
  %i45 = icmp eq i64 %i42, 0
  br label %bb73

bb46:                                             ; preds = %bb46.bb46_crit_edge, %bb11
  %i47 = phi i64 [ 0, %bb11 ], [ %i59, %bb46.bb46_crit_edge ]
  %i48 = phi i64 [ 0, %bb11 ], [ %i61, %bb46.bb46_crit_edge ]
  %i49 = getelementptr inbounds i32, ptr %arg1, i64 %i47
  %i50 = load i32, ptr %i49, align 4, !tbaa !19
  %i51 = tail call i32 @llvm.umax.i32(i32 %i50, i32 1)
  %i52 = shl i32 %i51, 8
  %i53 = or disjoint i64 %i47, 1
  %i54 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i53
  store i32 %i52, ptr %i54, align 4, !tbaa !19
  %i55 = getelementptr inbounds i32, ptr %arg1, i64 %i53
  %i56 = load i32, ptr %i55, align 4, !tbaa !19
  %i57 = tail call i32 @llvm.umax.i32(i32 %i56, i32 1)
  %i58 = shl i32 %i57, 8
  %i59 = add nuw nsw i64 %i47, 2
  %i60 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i59
  store i32 %i58, ptr %i60, align 8, !tbaa !19
  %i61 = add i64 %i48, 2
  %i62 = icmp eq i64 %i61, %i12
  br i1 %i62, label %bb13.loopexit, label %bb46.bb46_crit_edge, !llvm.loop !286

bb46.bb46_crit_edge:                              ; preds = %bb46
  br label %bb46

bb63.loopexit:                                    ; preds = %bb328
  br label %bb63

bb63:                                             ; preds = %bb327.bb63_crit_edge, %bb63.loopexit
  %i64 = phi i64 [ 1, %bb327.bb63_crit_edge ], [ %i344, %bb63.loopexit ]
  br i1 %i45, label %bb63.bb72_crit_edge, label %bb65

bb63.bb72_crit_edge:                              ; preds = %bb63
  br label %bb72

bb65:                                             ; preds = %bb63
  %i66 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i64
  %i67 = load i32, ptr %i66, align 4, !tbaa !19
  %i68 = ashr i32 %i67, 8
  %i69 = sdiv i32 %i68, 2
  %i70 = shl nsw i32 %i69, 8
  %i71 = add nsw i32 %i70, 256
  store i32 %i71, ptr %i66, align 4, !tbaa !19
  br label %bb72

bb72:                                             ; preds = %bb63.bb72_crit_edge, %bb65
  store i32 0, ptr %i, align 16, !tbaa !19
  store i32 0, ptr %i4, align 16, !tbaa !19
  store i32 -2, ptr %i5, align 16, !tbaa !19
  br i1 %i24, label %bb72.bb348.loopexit_crit_edge, label %bb72.bb73_crit_edge

bb72.bb73_crit_edge:                              ; preds = %bb72
  br label %bb73

bb72.bb348.loopexit_crit_edge:                    ; preds = %bb72
  br label %bb348.loopexit

bb73:                                             ; preds = %bb72.bb73_crit_edge, %bb33
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %i27, i8 -1, i64 %i28, i1 false), !tbaa !19
  br label %bb74

bb74:                                             ; preds = %bb105.bb74_crit_edge, %bb73
  %i75 = phi i64 [ 1, %bb73 ], [ %i109, %bb105.bb74_crit_edge ]
  %i76 = phi i64 [ 0, %bb73 ], [ %i77, %bb105.bb74_crit_edge ]
  %i77 = add nuw nsw i64 %i76, 1
  %i78 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i77
  %i79 = trunc i64 %i75 to i32
  store i32 %i79, ptr %i78, align 4, !tbaa !19
  %i80 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i75
  %i81 = load i32, ptr %i80, align 4, !tbaa !19
  %i82 = trunc i64 %i77 to i32
  %i83 = lshr i32 %i82, 1
  %i84 = zext nneg i32 %i83 to i64
  %i85 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i84
  %i86 = load i32, ptr %i85, align 4, !tbaa !19
  %i87 = sext i32 %i86 to i64
  %i88 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i87
  %i89 = load i32, ptr %i88, align 4, !tbaa !19
  %i90 = icmp slt i32 %i81, %i89
  br i1 %i90, label %bb91.preheader, label %bb74.bb105_crit_edge

bb74.bb105_crit_edge:                             ; preds = %bb74
  br label %bb105

bb91.preheader:                                   ; preds = %bb74
  br label %bb91

bb91:                                             ; preds = %bb91.bb91_crit_edge, %bb91.preheader
  %i92 = phi i32 [ %i100, %bb91.bb91_crit_edge ], [ %i86, %bb91.preheader ]
  %i93 = phi i32 [ %i97, %bb91.bb91_crit_edge ], [ %i83, %bb91.preheader ]
  %i94 = phi i32 [ %i93, %bb91.bb91_crit_edge ], [ %i82, %bb91.preheader ]
  %i95 = zext nneg i32 %i94 to i64
  %i96 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i95
  store i32 %i92, ptr %i96, align 4, !tbaa !19
  %i97 = lshr i32 %i93, 1
  %i98 = zext nneg i32 %i97 to i64
  %i99 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i98
  %i100 = load i32, ptr %i99, align 4, !tbaa !19
  %i101 = sext i32 %i100 to i64
  %i102 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i101
  %i103 = load i32, ptr %i102, align 4, !tbaa !19
  %i104 = icmp slt i32 %i81, %i103
  br i1 %i104, label %bb91.bb91_crit_edge, label %bb105.loopexit, !llvm.loop !287

bb91.bb91_crit_edge:                              ; preds = %bb91
  br label %bb91

bb105.loopexit:                                   ; preds = %bb91
  br label %bb105

bb105:                                            ; preds = %bb74.bb105_crit_edge, %bb105.loopexit
  %i106 = phi i32 [ %i82, %bb74.bb105_crit_edge ], [ %i93, %bb105.loopexit ]
  %i107 = zext nneg i32 %i106 to i64
  %i108 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i107
  store i32 %i79, ptr %i108, align 4, !tbaa !19
  %i109 = add nuw nsw i64 %i75, 1
  %i110 = icmp eq i64 %i77, %i7
  br i1 %i110, label %bb111, label %bb105.bb74_crit_edge, !llvm.loop !288

bb105.bb74_crit_edge:                             ; preds = %bb105
  br label %bb74

bb111:                                            ; preds = %bb105
  br i1 %i30, label %bb111.bb113_crit_edge, label %bb112

bb111.bb113_crit_edge:                            ; preds = %bb111
  br label %bb113

bb112:                                            ; preds = %bb111
  tail call void @BZ2_bz__AssertH__fail(i32 noundef 2001) #31
  br label %bb113

bb113:                                            ; preds = %bb111.bb113_crit_edge, %bb112
  br i1 %i31, label %bb114.preheader, label %bb113.bb262_crit_edge

bb113.bb262_crit_edge:                            ; preds = %bb113
  br label %bb262

bb114.preheader:                                  ; preds = %bb113
  br label %bb114

bb114:                                            ; preds = %bb258.bb114_crit_edge, %bb114.preheader
  %i115 = phi i64 [ %i120, %bb258.bb114_crit_edge ], [ %i32, %bb114.preheader ]
  %i116 = phi i64 [ %i215, %bb258.bb114_crit_edge ], [ %i29, %bb114.preheader ]
  %i117 = load i32, ptr %i25, align 4, !tbaa !19
  %i118 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i115
  %i119 = load i32, ptr %i118, align 4, !tbaa !19
  store i32 %i119, ptr %i25, align 4, !tbaa !19
  %i120 = add nsw i64 %i115, -1
  %i121 = icmp ugt i64 %i115, 2
  br i1 %i121, label %bb122, label %bb114.bb162_crit_edge

bb114.bb162_crit_edge:                            ; preds = %bb114
  br label %bb162

bb122:                                            ; preds = %bb114
  %i123 = sext i32 %i119 to i64
  %i124 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i123
  %i125 = load i32, ptr %i124, align 4, !tbaa !19
  br label %bb126

bb126:                                            ; preds = %bb156.bb126_crit_edge, %bb122
  %i127 = phi i32 [ 2, %bb122 ], [ %i159, %bb156.bb126_crit_edge ]
  %i128 = phi i32 [ 1, %bb122 ], [ %i149, %bb156.bb126_crit_edge ]
  %i129 = sext i32 %i127 to i64
  %i130 = icmp sgt i64 %i120, %i129
  br i1 %i130, label %bb131, label %bb126.bb147_crit_edge

bb126.bb147_crit_edge:                            ; preds = %bb126
  br label %bb147

bb131:                                            ; preds = %bb126
  %i132 = or disjoint i32 %i127, 1
  %i133 = sext i32 %i132 to i64
  %i134 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i133
  %i135 = load i32, ptr %i134, align 4, !tbaa !19
  %i136 = sext i32 %i135 to i64
  %i137 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i136
  %i138 = load i32, ptr %i137, align 4, !tbaa !19
  %i139 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i129
  %i140 = load i32, ptr %i139, align 8, !tbaa !19
  %i141 = sext i32 %i140 to i64
  %i142 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i141
  %i143 = load i32, ptr %i142, align 4, !tbaa !19
  %i144 = icmp slt i32 %i138, %i143
  %i145 = select i1 %i144, i32 %i132, i32 %i127
  %i146 = sext i32 %i145 to i64
  br label %bb147

bb147:                                            ; preds = %bb126.bb147_crit_edge, %bb131
  %i148 = phi i64 [ %i146, %bb131 ], [ %i129, %bb126.bb147_crit_edge ]
  %i149 = phi i32 [ %i145, %bb131 ], [ %i127, %bb126.bb147_crit_edge ]
  %i150 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i148
  %i151 = load i32, ptr %i150, align 4, !tbaa !19
  %i152 = sext i32 %i151 to i64
  %i153 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i152
  %i154 = load i32, ptr %i153, align 4, !tbaa !19
  %i155 = icmp slt i32 %i125, %i154
  br i1 %i155, label %bb147.bb162.loopexit_crit_edge, label %bb156

bb147.bb162.loopexit_crit_edge:                   ; preds = %bb147
  br label %bb162.loopexit

bb156:                                            ; preds = %bb147
  %i157 = sext i32 %i128 to i64
  %i158 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i157
  store i32 %i151, ptr %i158, align 4, !tbaa !19
  %i159 = shl i32 %i149, 1
  %i160 = sext i32 %i159 to i64
  %i161 = icmp sgt i64 %i115, %i160
  br i1 %i161, label %bb156.bb126_crit_edge, label %bb162.loopexitsplit

bb156.bb126_crit_edge:                            ; preds = %bb156
  br label %bb126

bb162.loopexitsplit:                              ; preds = %bb156
  br label %bb162.loopexit

bb162.loopexit:                                   ; preds = %bb162.loopexitsplit, %bb147.bb162.loopexit_crit_edge
  %i163.ph = phi i32 [ %i128, %bb147.bb162.loopexit_crit_edge ], [ %i149, %bb162.loopexitsplit ]
  br label %bb162

bb162:                                            ; preds = %bb114.bb162_crit_edge, %bb162.loopexit
  %i163 = phi i32 [ 1, %bb114.bb162_crit_edge ], [ %i163.ph, %bb162.loopexit ]
  %i164 = sext i32 %i163 to i64
  %i165 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i164
  store i32 %i119, ptr %i165, align 4, !tbaa !19
  %i166 = load i32, ptr %i25, align 4, !tbaa !19
  %i167 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i120
  %i168 = load i32, ptr %i167, align 4, !tbaa !19
  store i32 %i168, ptr %i25, align 4, !tbaa !19
  %i169 = add nsw i64 %i115, -2
  %i170 = icmp slt i64 %i115, 4
  br i1 %i170, label %bb162.bb211_crit_edge, label %bb171

bb162.bb211_crit_edge:                            ; preds = %bb162
  br label %bb211

bb171:                                            ; preds = %bb162
  %i172 = sext i32 %i168 to i64
  %i173 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i172
  %i174 = load i32, ptr %i173, align 4, !tbaa !19
  br label %bb175

bb175:                                            ; preds = %bb205.bb175_crit_edge, %bb171
  %i176 = phi i32 [ 2, %bb171 ], [ %i208, %bb205.bb175_crit_edge ]
  %i177 = phi i32 [ 1, %bb171 ], [ %i198, %bb205.bb175_crit_edge ]
  %i178 = sext i32 %i176 to i64
  %i179 = icmp sgt i64 %i169, %i178
  br i1 %i179, label %bb180, label %bb175.bb196_crit_edge

bb175.bb196_crit_edge:                            ; preds = %bb175
  br label %bb196

bb180:                                            ; preds = %bb175
  %i181 = or disjoint i32 %i176, 1
  %i182 = sext i32 %i181 to i64
  %i183 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i182
  %i184 = load i32, ptr %i183, align 4, !tbaa !19
  %i185 = sext i32 %i184 to i64
  %i186 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i185
  %i187 = load i32, ptr %i186, align 4, !tbaa !19
  %i188 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i178
  %i189 = load i32, ptr %i188, align 8, !tbaa !19
  %i190 = sext i32 %i189 to i64
  %i191 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i190
  %i192 = load i32, ptr %i191, align 4, !tbaa !19
  %i193 = icmp slt i32 %i187, %i192
  %i194 = select i1 %i193, i32 %i181, i32 %i176
  %i195 = sext i32 %i194 to i64
  br label %bb196

bb196:                                            ; preds = %bb175.bb196_crit_edge, %bb180
  %i197 = phi i64 [ %i195, %bb180 ], [ %i178, %bb175.bb196_crit_edge ]
  %i198 = phi i32 [ %i194, %bb180 ], [ %i176, %bb175.bb196_crit_edge ]
  %i199 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i197
  %i200 = load i32, ptr %i199, align 4, !tbaa !19
  %i201 = sext i32 %i200 to i64
  %i202 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i201
  %i203 = load i32, ptr %i202, align 4, !tbaa !19
  %i204 = icmp slt i32 %i174, %i203
  br i1 %i204, label %bb196.bb211.loopexit_crit_edge, label %bb205

bb196.bb211.loopexit_crit_edge:                   ; preds = %bb196
  br label %bb211.loopexit

bb205:                                            ; preds = %bb196
  %i206 = sext i32 %i177 to i64
  %i207 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i206
  store i32 %i200, ptr %i207, align 4, !tbaa !19
  %i208 = shl i32 %i198, 1
  %i209 = sext i32 %i208 to i64
  %i210 = icmp slt i64 %i169, %i209
  br i1 %i210, label %bb211.loopexitsplit, label %bb205.bb175_crit_edge

bb205.bb175_crit_edge:                            ; preds = %bb205
  br label %bb175

bb211.loopexitsplit:                              ; preds = %bb205
  br label %bb211.loopexit

bb211.loopexit:                                   ; preds = %bb211.loopexitsplit, %bb196.bb211.loopexit_crit_edge
  %i212.ph = phi i32 [ %i177, %bb196.bb211.loopexit_crit_edge ], [ %i198, %bb211.loopexitsplit ]
  br label %bb211

bb211:                                            ; preds = %bb162.bb211_crit_edge, %bb211.loopexit
  %i212 = phi i32 [ 1, %bb162.bb211_crit_edge ], [ %i212.ph, %bb211.loopexit ]
  %i213 = sext i32 %i212 to i64
  %i214 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i213
  store i32 %i168, ptr %i214, align 4, !tbaa !19
  %i215 = add nuw nsw i64 %i116, 1
  %i216 = sext i32 %i166 to i64
  %i217 = getelementptr inbounds [516 x i32], ptr %i5, i64 0, i64 %i216
  %i218 = trunc i64 %i215 to i32
  store i32 %i218, ptr %i217, align 4, !tbaa !19
  %i219 = sext i32 %i117 to i64
  %i220 = getelementptr inbounds [516 x i32], ptr %i5, i64 0, i64 %i219
  store i32 %i218, ptr %i220, align 4, !tbaa !19
  %i221 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i219
  %i222 = load i32, ptr %i221, align 4, !tbaa !19
  %i223 = and i32 %i222, -256
  %i224 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i216
  %i225 = load i32, ptr %i224, align 4, !tbaa !19
  %i226 = and i32 %i225, -256
  %i227 = add i32 %i226, %i223
  %i228 = and i32 %i222, 255
  %i229 = and i32 %i225, 255
  %i230 = tail call i32 @llvm.umax.i32(i32 %i228, i32 %i229)
  %i231 = add nuw nsw i32 %i230, 1
  %i232 = or i32 %i231, %i227
  %i233 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i215
  store i32 %i232, ptr %i233, align 4, !tbaa !19
  %i234 = getelementptr inbounds [516 x i32], ptr %i5, i64 0, i64 %i215
  store i32 -1, ptr %i234, align 4, !tbaa !19
  store i32 %i218, ptr %i167, align 4, !tbaa !19
  %i235 = trunc i64 %i120 to i32
  %i236 = lshr i32 %i235, 1
  %i237 = zext nneg i32 %i236 to i64
  %i238 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i237
  %i239 = load i32, ptr %i238, align 4, !tbaa !19
  %i240 = sext i32 %i239 to i64
  %i241 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i240
  %i242 = load i32, ptr %i241, align 4, !tbaa !19
  %i243 = icmp slt i32 %i232, %i242
  br i1 %i243, label %bb244.preheader, label %bb211.bb258_crit_edge

bb211.bb258_crit_edge:                            ; preds = %bb211
  br label %bb258

bb244.preheader:                                  ; preds = %bb211
  br label %bb244

bb244:                                            ; preds = %bb244.bb244_crit_edge, %bb244.preheader
  %i245 = phi i32 [ %i253, %bb244.bb244_crit_edge ], [ %i239, %bb244.preheader ]
  %i246 = phi i32 [ %i250, %bb244.bb244_crit_edge ], [ %i236, %bb244.preheader ]
  %i247 = phi i32 [ %i246, %bb244.bb244_crit_edge ], [ %i235, %bb244.preheader ]
  %i248 = zext nneg i32 %i247 to i64
  %i249 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i248
  store i32 %i245, ptr %i249, align 4, !tbaa !19
  %i250 = lshr i32 %i246, 1
  %i251 = zext nneg i32 %i250 to i64
  %i252 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i251
  %i253 = load i32, ptr %i252, align 4, !tbaa !19
  %i254 = sext i32 %i253 to i64
  %i255 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i254
  %i256 = load i32, ptr %i255, align 4, !tbaa !19
  %i257 = icmp slt i32 %i232, %i256
  br i1 %i257, label %bb244.bb244_crit_edge, label %bb258.loopexit, !llvm.loop !289

bb244.bb244_crit_edge:                            ; preds = %bb244
  br label %bb244

bb258.loopexit:                                   ; preds = %bb244
  br label %bb258

bb258:                                            ; preds = %bb211.bb258_crit_edge, %bb258.loopexit
  %i259 = phi i32 [ %i235, %bb211.bb258_crit_edge ], [ %i246, %bb258.loopexit ]
  %i260 = zext nneg i32 %i259 to i64
  %i261 = getelementptr inbounds [260 x i32], ptr %i, i64 0, i64 %i260
  store i32 %i218, ptr %i261, align 4, !tbaa !19
  br i1 %i121, label %bb258.bb114_crit_edge, label %bb262.loopexit, !llvm.loop !290

bb258.bb114_crit_edge:                            ; preds = %bb258
  br label %bb114

bb262.loopexit:                                   ; preds = %bb258
  br label %bb262

bb262:                                            ; preds = %bb113.bb262_crit_edge, %bb262.loopexit
  %i263 = phi i32 [ %arg2, %bb113.bb262_crit_edge ], [ %i218, %bb262.loopexit ]
  %i264 = icmp slt i32 %i263, 516
  br i1 %i264, label %bb262.bb266_crit_edge, label %bb265

bb262.bb266_crit_edge:                            ; preds = %bb262
  br label %bb266

bb265:                                            ; preds = %bb262
  tail call void @BZ2_bz__AssertH__fail(i32 noundef 2002) #31
  br label %bb266

bb266:                                            ; preds = %bb262.bb266_crit_edge, %bb265
  br i1 %i24, label %bb266.bb348.loopexitsplit_crit_edge, label %bb267

bb266.bb348.loopexitsplit_crit_edge:              ; preds = %bb266
  br label %bb348.loopexitsplit

bb267:                                            ; preds = %bb266
  br i1 %i39, label %bb267.bb304_crit_edge, label %bb268.preheader

bb267.bb304_crit_edge:                            ; preds = %bb267
  br label %bb304

bb268.preheader:                                  ; preds = %bb267
  br label %bb268

bb268:                                            ; preds = %bb295.bb268_crit_edge, %bb268.preheader
  %i269 = phi i64 [ %i301, %bb295.bb268_crit_edge ], [ 1, %bb268.preheader ]
  %i270 = phi i8 [ %i300, %bb295.bb268_crit_edge ], [ 0, %bb268.preheader ]
  %i271 = phi i64 [ %i302, %bb295.bb268_crit_edge ], [ 0, %bb268.preheader ]
  %i272 = trunc i64 %i269 to i32
  br label %bb273

bb273:                                            ; preds = %bb273.bb273_crit_edge, %bb268
  %i274 = phi i32 [ %i278, %bb273.bb273_crit_edge ], [ %i272, %bb268 ]
  %i275 = phi i32 [ %i280, %bb273.bb273_crit_edge ], [ 0, %bb268 ]
  %i276 = zext nneg i32 %i274 to i64
  %i277 = getelementptr inbounds [516 x i32], ptr %i5, i64 0, i64 %i276
  %i278 = load i32, ptr %i277, align 4, !tbaa !19
  %i279 = icmp sgt i32 %i278, -1
  %i280 = add nuw nsw i32 %i275, 1
  br i1 %i279, label %bb273.bb273_crit_edge, label %bb281, !llvm.loop !291

bb273.bb273_crit_edge:                            ; preds = %bb273
  br label %bb273

bb281:                                            ; preds = %bb273
  %i282 = trunc i32 %i275 to i8
  %i283 = getelementptr i8, ptr %i26, i64 %i269
  store i8 %i282, ptr %i283, align 1, !tbaa !21
  %i284 = icmp sgt i32 %i275, %arg3
  %i285 = trunc i64 %i269 to i32
  %i286 = add i32 %i285, 1
  br label %bb287

bb287:                                            ; preds = %bb287.bb287_crit_edge, %bb281
  %i288 = phi i32 [ %i292, %bb287.bb287_crit_edge ], [ %i286, %bb281 ]
  %i289 = phi i32 [ %i294, %bb287.bb287_crit_edge ], [ 0, %bb281 ]
  %i290 = zext nneg i32 %i288 to i64
  %i291 = getelementptr inbounds [516 x i32], ptr %i5, i64 0, i64 %i290
  %i292 = load i32, ptr %i291, align 4, !tbaa !19
  %i293 = icmp sgt i32 %i292, -1
  %i294 = add nuw nsw i32 %i289, 1
  br i1 %i293, label %bb287.bb287_crit_edge, label %bb295, !llvm.loop !291

bb287.bb287_crit_edge:                            ; preds = %bb287
  br label %bb287

bb295:                                            ; preds = %bb287
  %i296 = trunc i32 %i289 to i8
  %i297 = getelementptr i8, ptr %arg, i64 %i269
  store i8 %i296, ptr %i297, align 1, !tbaa !21
  %i298 = icmp sgt i32 %i289, %arg3
  %i299 = select i1 %i298, i1 true, i1 %i284
  %i300 = select i1 %i299, i8 1, i8 %i270
  %i301 = add nuw nsw i64 %i269, 2
  %i302 = add i64 %i271, 2
  %i303 = icmp eq i64 %i302, %i40
  br i1 %i303, label %bb304.loopexit, label %bb295.bb268_crit_edge, !llvm.loop !292

bb295.bb268_crit_edge:                            ; preds = %bb295
  br label %bb268

bb304.loopexit:                                   ; preds = %bb295
  br label %bb304

bb304:                                            ; preds = %bb267.bb304_crit_edge, %bb304.loopexit
  %i305 = phi i8 [ undef, %bb267.bb304_crit_edge ], [ %i300, %bb304.loopexit ]
  %i306 = phi i64 [ 1, %bb267.bb304_crit_edge ], [ %i301, %bb304.loopexit ]
  %i307 = phi i8 [ 0, %bb267.bb304_crit_edge ], [ %i300, %bb304.loopexit ]
  br i1 %i41, label %bb304.bb323_crit_edge, label %bb308

bb304.bb323_crit_edge:                            ; preds = %bb304
  br label %bb323

bb308:                                            ; preds = %bb304
  %i309 = trunc i64 %i306 to i32
  br label %bb310

bb310:                                            ; preds = %bb310.bb310_crit_edge, %bb308
  %i311 = phi i32 [ %i315, %bb310.bb310_crit_edge ], [ %i309, %bb308 ]
  %i312 = phi i32 [ %i317, %bb310.bb310_crit_edge ], [ 0, %bb308 ]
  %i313 = zext nneg i32 %i311 to i64
  %i314 = getelementptr inbounds [516 x i32], ptr %i5, i64 0, i64 %i313
  %i315 = load i32, ptr %i314, align 4, !tbaa !19
  %i316 = icmp sgt i32 %i315, -1
  %i317 = add nuw nsw i32 %i312, 1
  br i1 %i316, label %bb310.bb310_crit_edge, label %bb318, !llvm.loop !291

bb310.bb310_crit_edge:                            ; preds = %bb310
  br label %bb310

bb318:                                            ; preds = %bb310
  %i319 = trunc i32 %i312 to i8
  %i320 = getelementptr i8, ptr %i26, i64 %i306
  store i8 %i319, ptr %i320, align 1, !tbaa !21
  %i321 = icmp sgt i32 %i312, %arg3
  %i322 = select i1 %i321, i8 1, i8 %i307
  br label %bb323

bb323:                                            ; preds = %bb304.bb323_crit_edge, %bb318
  %i324 = phi i8 [ %i305, %bb304.bb323_crit_edge ], [ %i322, %bb318 ]
  %i325 = icmp eq i8 %i324, 0
  br i1 %i325, label %bb348.loopexitsplitsplit, label %bb326

bb326:                                            ; preds = %bb323
  br i1 %i24, label %bb347, label %bb327

bb327:                                            ; preds = %bb326
  br i1 %i43, label %bb327.bb63_crit_edge, label %bb328.preheader

bb327.bb63_crit_edge:                             ; preds = %bb327
  br label %bb63

bb328.preheader:                                  ; preds = %bb327
  br label %bb328

bb328:                                            ; preds = %bb328.bb328_crit_edge, %bb328.preheader
  %i329 = phi i64 [ %i344, %bb328.bb328_crit_edge ], [ 1, %bb328.preheader ]
  %i330 = phi i64 [ %i345, %bb328.bb328_crit_edge ], [ 0, %bb328.preheader ]
  %i331 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i329
  %i332 = load i32, ptr %i331, align 4, !tbaa !19
  %i333 = ashr i32 %i332, 8
  %i334 = sdiv i32 %i333, 2
  %i335 = shl nsw i32 %i334, 8
  %i336 = add nsw i32 %i335, 256
  store i32 %i336, ptr %i331, align 4, !tbaa !19
  %i337 = add nuw nsw i64 %i329, 1
  %i338 = getelementptr inbounds [516 x i32], ptr %i4, i64 0, i64 %i337
  %i339 = load i32, ptr %i338, align 4, !tbaa !19
  %i340 = ashr i32 %i339, 8
  %i341 = sdiv i32 %i340, 2
  %i342 = shl nsw i32 %i341, 8
  %i343 = add nsw i32 %i342, 256
  store i32 %i343, ptr %i338, align 4, !tbaa !19
  %i344 = add nuw nsw i64 %i329, 2
  %i345 = add i64 %i330, 2
  %i346 = icmp eq i64 %i345, %i44
  br i1 %i346, label %bb63.loopexit, label %bb328.bb328_crit_edge, !llvm.loop !293

bb328.bb328_crit_edge:                            ; preds = %bb328
  br label %bb328

bb347:                                            ; preds = %bb326
  store i32 0, ptr %i, align 16, !tbaa !19
  store i32 0, ptr %i4, align 16, !tbaa !19
  store i32 -2, ptr %i5, align 16, !tbaa !19
  br label %bb348

bb348.loopexitsplitsplit:                         ; preds = %bb323
  br label %bb348.loopexitsplit

bb348.loopexitsplit:                              ; preds = %bb348.loopexitsplitsplit, %bb266.bb348.loopexitsplit_crit_edge
  br label %bb348.loopexit

bb348.loopexit:                                   ; preds = %bb348.loopexitsplit, %bb72.bb348.loopexit_crit_edge
  br label %bb348

bb348:                                            ; preds = %bb23.bb348_crit_edge, %bb348.loopexit, %bb347
  call void @llvm.lifetime.end.p0(i64 2064, ptr nonnull %i5) #31
  call void @llvm.lifetime.end.p0(i64 2064, ptr nonnull %i4) #31
  call void @llvm.lifetime.end.p0(i64 1040, ptr nonnull %i) #31
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #2

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define dso_local void @BZ2_hbAssignCodes(ptr nocapture noundef writeonly %arg, ptr nocapture noundef readonly %arg1, i32 noundef %arg2, i32 noundef %arg3, i32 noundef %arg4) local_unnamed_addr #30 {
bb:
  %i = icmp sle i32 %arg2, %arg3
  %i5 = icmp sgt i32 %arg4, 0
  %i6 = and i1 %i, %i5
  br i1 %i6, label %bb7, label %bb.bb59_crit_edge

bb.bb59_crit_edge:                                ; preds = %bb
  br label %bb59

bb7:                                              ; preds = %bb
  %i8 = zext nneg i32 %arg4 to i64
  %i9 = and i64 %i8, 1
  %i10 = icmp eq i32 %arg4, 1
  %i11 = and i64 %i8, 2147483646
  %i12 = icmp eq i64 %i9, 0
  br label %bb13

bb13:                                             ; preds = %bb54.bb13_crit_edge, %bb7
  %i14 = phi i32 [ %i56, %bb54.bb13_crit_edge ], [ 0, %bb7 ]
  %i15 = phi i32 [ %i57, %bb54.bb13_crit_edge ], [ %arg2, %bb7 ]
  br i1 %i10, label %bb13.bb42_crit_edge, label %bb16.preheader

bb13.bb42_crit_edge:                              ; preds = %bb13
  br label %bb42

bb16.preheader:                                   ; preds = %bb13
  br label %bb16

bb16:                                             ; preds = %bb37.bb16_crit_edge, %bb16.preheader
  %i17 = phi i64 [ %i39, %bb37.bb16_crit_edge ], [ 0, %bb16.preheader ]
  %i18 = phi i32 [ %i38, %bb37.bb16_crit_edge ], [ %i14, %bb16.preheader ]
  %i19 = phi i64 [ %i40, %bb37.bb16_crit_edge ], [ 0, %bb16.preheader ]
  %i20 = getelementptr inbounds i8, ptr %arg1, i64 %i17
  %i21 = load i8, ptr %i20, align 1, !tbaa !21
  %i22 = zext i8 %i21 to i32
  %i23 = icmp eq i32 %i15, %i22
  br i1 %i23, label %bb24, label %bb16.bb27_crit_edge

bb16.bb27_crit_edge:                              ; preds = %bb16
  br label %bb27

bb24:                                             ; preds = %bb16
  %i25 = getelementptr inbounds i32, ptr %arg, i64 %i17
  store i32 %i18, ptr %i25, align 4, !tbaa !19
  %i26 = add nsw i32 %i18, 1
  br label %bb27

bb27:                                             ; preds = %bb16.bb27_crit_edge, %bb24
  %i28 = phi i32 [ %i26, %bb24 ], [ %i18, %bb16.bb27_crit_edge ]
  %i29 = or disjoint i64 %i17, 1
  %i30 = getelementptr inbounds i8, ptr %arg1, i64 %i29
  %i31 = load i8, ptr %i30, align 1, !tbaa !21
  %i32 = zext i8 %i31 to i32
  %i33 = icmp eq i32 %i15, %i32
  br i1 %i33, label %bb34, label %bb27.bb37_crit_edge

bb27.bb37_crit_edge:                              ; preds = %bb27
  br label %bb37

bb34:                                             ; preds = %bb27
  %i35 = getelementptr inbounds i32, ptr %arg, i64 %i29
  store i32 %i28, ptr %i35, align 4, !tbaa !19
  %i36 = add nsw i32 %i28, 1
  br label %bb37

bb37:                                             ; preds = %bb27.bb37_crit_edge, %bb34
  %i38 = phi i32 [ %i36, %bb34 ], [ %i28, %bb27.bb37_crit_edge ]
  %i39 = add nuw nsw i64 %i17, 2
  %i40 = add i64 %i19, 2
  %i41 = icmp eq i64 %i40, %i11
  br i1 %i41, label %bb42.loopexit, label %bb37.bb16_crit_edge, !llvm.loop !294

bb37.bb16_crit_edge:                              ; preds = %bb37
  br label %bb16

bb42.loopexit:                                    ; preds = %bb37
  br label %bb42

bb42:                                             ; preds = %bb13.bb42_crit_edge, %bb42.loopexit
  %i43 = phi i32 [ undef, %bb13.bb42_crit_edge ], [ %i38, %bb42.loopexit ]
  %i44 = phi i64 [ 0, %bb13.bb42_crit_edge ], [ %i39, %bb42.loopexit ]
  %i45 = phi i32 [ %i14, %bb13.bb42_crit_edge ], [ %i38, %bb42.loopexit ]
  br i1 %i12, label %bb42.bb54_crit_edge, label %bb46

bb42.bb54_crit_edge:                              ; preds = %bb42
  br label %bb54

bb46:                                             ; preds = %bb42
  %i47 = getelementptr inbounds i8, ptr %arg1, i64 %i44
  %i48 = load i8, ptr %i47, align 1, !tbaa !21
  %i49 = zext i8 %i48 to i32
  %i50 = icmp eq i32 %i15, %i49
  br i1 %i50, label %bb51, label %bb46.bb54_crit_edge

bb46.bb54_crit_edge:                              ; preds = %bb46
  br label %bb54

bb51:                                             ; preds = %bb46
  %i52 = getelementptr inbounds i32, ptr %arg, i64 %i44
  store i32 %i45, ptr %i52, align 4, !tbaa !19
  %i53 = add nsw i32 %i45, 1
  br label %bb54

bb54:                                             ; preds = %bb46.bb54_crit_edge, %bb42.bb54_crit_edge, %bb51
  %i55 = phi i32 [ %i43, %bb42.bb54_crit_edge ], [ %i53, %bb51 ], [ %i45, %bb46.bb54_crit_edge ]
  %i56 = shl i32 %i55, 1
  %i57 = add i32 %i15, 1
  %i58 = icmp eq i32 %i15, %arg3
  br i1 %i58, label %bb59.loopexit, label %bb54.bb13_crit_edge, !llvm.loop !295

bb54.bb13_crit_edge:                              ; preds = %bb54
  br label %bb13

bb59.loopexit:                                    ; preds = %bb54
  br label %bb59

bb59:                                             ; preds = %bb.bb59_crit_edge, %bb59.loopexit
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @BZ2_hbCreateDecodeTables(ptr nocapture noundef %arg, ptr nocapture noundef %arg1, ptr nocapture noundef writeonly %arg2, ptr nocapture noundef readonly %arg3, i32 noundef %arg4, i32 noundef %arg5, i32 noundef %arg6) local_unnamed_addr #29 {
bb:
  %i = icmp sgt i32 %arg4, %arg5
  br i1 %i, label %bb.bb68_crit_edge, label %bb7

bb.bb68_crit_edge:                                ; preds = %bb
  br label %bb68

bb7:                                              ; preds = %bb
  %i8 = icmp sgt i32 %arg6, 0
  br i1 %i8, label %bb11, label %bb9

bb9:                                              ; preds = %bb7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(92) %arg1, i8 0, i64 92, i1 false), !tbaa !19
  %i10 = getelementptr i32, ptr %arg1, i64 1
  br label %bb132

bb11:                                             ; preds = %bb7
  %i12 = zext nneg i32 %arg6 to i64
  %i13 = and i64 %i12, 1
  %i14 = icmp eq i32 %arg6, 1
  %i15 = and i64 %i12, 2147483646
  %i16 = icmp eq i64 %i13, 0
  br label %bb17

bb17:                                             ; preds = %bb64.bb17_crit_edge, %bb11
  %i18 = phi i32 [ %i66, %bb64.bb17_crit_edge ], [ %arg4, %bb11 ]
  %i19 = phi i32 [ %i65, %bb64.bb17_crit_edge ], [ 0, %bb11 ]
  br i1 %i14, label %bb17.bb50_crit_edge, label %bb20.preheader

bb17.bb50_crit_edge:                              ; preds = %bb17
  br label %bb50

bb20.preheader:                                   ; preds = %bb17
  br label %bb20

bb20:                                             ; preds = %bb45.bb20_crit_edge, %bb20.preheader
  %i21 = phi i64 [ %i47, %bb45.bb20_crit_edge ], [ 0, %bb20.preheader ]
  %i22 = phi i32 [ %i46, %bb45.bb20_crit_edge ], [ %i19, %bb20.preheader ]
  %i23 = phi i64 [ %i48, %bb45.bb20_crit_edge ], [ 0, %bb20.preheader ]
  %i24 = getelementptr inbounds i8, ptr %arg3, i64 %i21
  %i25 = load i8, ptr %i24, align 1, !tbaa !21
  %i26 = zext i8 %i25 to i32
  %i27 = icmp eq i32 %i18, %i26
  br i1 %i27, label %bb28, label %bb20.bb33_crit_edge

bb20.bb33_crit_edge:                              ; preds = %bb20
  br label %bb33

bb28:                                             ; preds = %bb20
  %i29 = sext i32 %i22 to i64
  %i30 = getelementptr inbounds i32, ptr %arg2, i64 %i29
  %i31 = trunc i64 %i21 to i32
  store i32 %i31, ptr %i30, align 4, !tbaa !19
  %i32 = add nsw i32 %i22, 1
  br label %bb33

bb33:                                             ; preds = %bb20.bb33_crit_edge, %bb28
  %i34 = phi i32 [ %i32, %bb28 ], [ %i22, %bb20.bb33_crit_edge ]
  %i35 = or disjoint i64 %i21, 1
  %i36 = getelementptr inbounds i8, ptr %arg3, i64 %i35
  %i37 = load i8, ptr %i36, align 1, !tbaa !21
  %i38 = zext i8 %i37 to i32
  %i39 = icmp eq i32 %i18, %i38
  br i1 %i39, label %bb40, label %bb33.bb45_crit_edge

bb33.bb45_crit_edge:                              ; preds = %bb33
  br label %bb45

bb40:                                             ; preds = %bb33
  %i41 = sext i32 %i34 to i64
  %i42 = getelementptr inbounds i32, ptr %arg2, i64 %i41
  %i43 = trunc i64 %i35 to i32
  store i32 %i43, ptr %i42, align 4, !tbaa !19
  %i44 = add nsw i32 %i34, 1
  br label %bb45

bb45:                                             ; preds = %bb33.bb45_crit_edge, %bb40
  %i46 = phi i32 [ %i44, %bb40 ], [ %i34, %bb33.bb45_crit_edge ]
  %i47 = add nuw nsw i64 %i21, 2
  %i48 = add i64 %i23, 2
  %i49 = icmp eq i64 %i48, %i15
  br i1 %i49, label %bb50.loopexit, label %bb45.bb20_crit_edge, !llvm.loop !296

bb45.bb20_crit_edge:                              ; preds = %bb45
  br label %bb20

bb50.loopexit:                                    ; preds = %bb45
  br label %bb50

bb50:                                             ; preds = %bb17.bb50_crit_edge, %bb50.loopexit
  %i51 = phi i32 [ undef, %bb17.bb50_crit_edge ], [ %i46, %bb50.loopexit ]
  %i52 = phi i64 [ 0, %bb17.bb50_crit_edge ], [ %i47, %bb50.loopexit ]
  %i53 = phi i32 [ %i19, %bb17.bb50_crit_edge ], [ %i46, %bb50.loopexit ]
  br i1 %i16, label %bb50.bb64_crit_edge, label %bb54

bb50.bb64_crit_edge:                              ; preds = %bb50
  br label %bb64

bb54:                                             ; preds = %bb50
  %i55 = getelementptr inbounds i8, ptr %arg3, i64 %i52
  %i56 = load i8, ptr %i55, align 1, !tbaa !21
  %i57 = zext i8 %i56 to i32
  %i58 = icmp eq i32 %i18, %i57
  br i1 %i58, label %bb59, label %bb54.bb64_crit_edge

bb54.bb64_crit_edge:                              ; preds = %bb54
  br label %bb64

bb59:                                             ; preds = %bb54
  %i60 = sext i32 %i53 to i64
  %i61 = getelementptr inbounds i32, ptr %arg2, i64 %i60
  %i62 = trunc i64 %i52 to i32
  store i32 %i62, ptr %i61, align 4, !tbaa !19
  %i63 = add nsw i32 %i53, 1
  br label %bb64

bb64:                                             ; preds = %bb54.bb64_crit_edge, %bb50.bb64_crit_edge, %bb59
  %i65 = phi i32 [ %i51, %bb50.bb64_crit_edge ], [ %i63, %bb59 ], [ %i53, %bb54.bb64_crit_edge ]
  %i66 = add i32 %i18, 1
  %i67 = icmp eq i32 %i18, %arg5
  br i1 %i67, label %bb68.loopexit, label %bb64.bb17_crit_edge, !llvm.loop !297

bb64.bb17_crit_edge:                              ; preds = %bb64
  br label %bb17

bb68.loopexit:                                    ; preds = %bb64
  br label %bb68

bb68:                                             ; preds = %bb.bb68_crit_edge, %bb68.loopexit
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(92) %arg1, i8 0, i64 92, i1 false), !tbaa !19
  %i69 = getelementptr i32, ptr %arg1, i64 1
  %i70 = icmp sgt i32 %arg6, 0
  br i1 %i70, label %bb71, label %bb68.bb132_crit_edge

bb68.bb132_crit_edge:                             ; preds = %bb68
  br label %bb132

bb71:                                             ; preds = %bb68
  %i72 = zext nneg i32 %arg6 to i64
  %i73 = and i64 %i72, 3
  %i74 = icmp ult i32 %arg6, 4
  br i1 %i74, label %bb71.bb77_crit_edge, label %bb75

bb71.bb77_crit_edge:                              ; preds = %bb71
  br label %bb77

bb75:                                             ; preds = %bb71
  %i76 = and i64 %i72, 2147483644
  br label %bb198

bb77.loopexit:                                    ; preds = %bb198
  br label %bb77

bb77:                                             ; preds = %bb71.bb77_crit_edge, %bb77.loopexit
  %i78 = phi i64 [ 0, %bb71.bb77_crit_edge ], [ %i228, %bb77.loopexit ]
  %i79 = icmp eq i64 %i73, 0
  br i1 %i79, label %bb77.bb92_crit_edge, label %bb80.preheader

bb77.bb92_crit_edge:                              ; preds = %bb77
  br label %bb92

bb80.preheader:                                   ; preds = %bb77
  br label %bb80

bb80:                                             ; preds = %bb80.bb80_crit_edge, %bb80.preheader
  %i81 = phi i64 [ %i89, %bb80.bb80_crit_edge ], [ %i78, %bb80.preheader ]
  %i82 = phi i64 [ %i90, %bb80.bb80_crit_edge ], [ 0, %bb80.preheader ]
  %i83 = getelementptr inbounds i8, ptr %arg3, i64 %i81
  %i84 = load i8, ptr %i83, align 1, !tbaa !21
  %i85 = zext i8 %i84 to i64
  %i86 = getelementptr i32, ptr %i69, i64 %i85
  %i87 = load i32, ptr %i86, align 4, !tbaa !19
  %i88 = add nsw i32 %i87, 1
  store i32 %i88, ptr %i86, align 4, !tbaa !19
  %i89 = add nuw nsw i64 %i81, 1
  %i90 = add i64 %i82, 1
  %i91 = icmp eq i64 %i90, %i73
  br i1 %i91, label %bb92.loopexit, label %bb80.bb80_crit_edge, !llvm.loop !298

bb80.bb80_crit_edge:                              ; preds = %bb80
  br label %bb80

bb92.loopexit:                                    ; preds = %bb80
  br label %bb92

bb92:                                             ; preds = %bb77.bb92_crit_edge, %bb92.loopexit
  %i93 = load i32, ptr %i69, align 4, !tbaa !19
  %i94 = getelementptr i32, ptr %arg1, i64 2
  %i95 = load i32, ptr %i94, align 4, !tbaa !19
  %i96 = getelementptr i32, ptr %arg1, i64 3
  %i97 = load i32, ptr %i96, align 4, !tbaa !19
  %i98 = getelementptr i32, ptr %arg1, i64 4
  %i99 = load i32, ptr %i98, align 4, !tbaa !19
  %i100 = getelementptr i32, ptr %arg1, i64 5
  %i101 = load i32, ptr %i100, align 4, !tbaa !19
  %i102 = getelementptr i32, ptr %arg1, i64 6
  %i103 = load i32, ptr %i102, align 4, !tbaa !19
  %i104 = getelementptr i32, ptr %arg1, i64 7
  %i105 = load i32, ptr %i104, align 4, !tbaa !19
  %i106 = getelementptr i32, ptr %arg1, i64 8
  %i107 = load i32, ptr %i106, align 4, !tbaa !19
  %i108 = getelementptr i32, ptr %arg1, i64 9
  %i109 = load i32, ptr %i108, align 4, !tbaa !19
  %i110 = getelementptr i32, ptr %arg1, i64 10
  %i111 = load i32, ptr %i110, align 4, !tbaa !19
  %i112 = getelementptr i32, ptr %arg1, i64 11
  %i113 = load i32, ptr %i112, align 4, !tbaa !19
  %i114 = getelementptr i32, ptr %arg1, i64 12
  %i115 = load i32, ptr %i114, align 4, !tbaa !19
  %i116 = getelementptr i32, ptr %arg1, i64 13
  %i117 = load i32, ptr %i116, align 4, !tbaa !19
  %i118 = getelementptr i32, ptr %arg1, i64 14
  %i119 = load i32, ptr %i118, align 4, !tbaa !19
  %i120 = getelementptr i32, ptr %arg1, i64 15
  %i121 = load i32, ptr %i120, align 4, !tbaa !19
  %i122 = getelementptr i32, ptr %arg1, i64 16
  %i123 = load i32, ptr %i122, align 4, !tbaa !19
  %i124 = getelementptr i32, ptr %arg1, i64 17
  %i125 = load i32, ptr %i124, align 4, !tbaa !19
  %i126 = getelementptr i32, ptr %arg1, i64 18
  %i127 = load i32, ptr %i126, align 4, !tbaa !19
  %i128 = getelementptr i32, ptr %arg1, i64 19
  %i129 = load i32, ptr %i128, align 4, !tbaa !19
  %i130 = getelementptr i32, ptr %arg1, i64 20
  %i131 = load i32, ptr %i130, align 4, !tbaa !19
  br label %bb132

bb132:                                            ; preds = %bb68.bb132_crit_edge, %bb92, %bb9
  %i133 = phi ptr [ %i69, %bb92 ], [ %i69, %bb68.bb132_crit_edge ], [ %i10, %bb9 ]
  %i134 = phi i32 [ %i131, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i135 = phi i32 [ %i129, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i136 = phi i32 [ %i127, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i137 = phi i32 [ %i125, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i138 = phi i32 [ %i123, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i139 = phi i32 [ %i121, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i140 = phi i32 [ %i119, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i141 = phi i32 [ %i117, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i142 = phi i32 [ %i115, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i143 = phi i32 [ %i113, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i144 = phi i32 [ %i111, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i145 = phi i32 [ %i109, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i146 = phi i32 [ %i107, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i147 = phi i32 [ %i105, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i148 = phi i32 [ %i103, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i149 = phi i32 [ %i101, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i150 = phi i32 [ %i99, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i151 = phi i32 [ %i97, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i152 = phi i32 [ %i95, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  %i153 = phi i32 [ %i93, %bb92 ], [ 0, %bb68.bb132_crit_edge ], [ 0, %bb9 ]
  store i32 %i153, ptr %i133, align 4, !tbaa !19
  %i154 = getelementptr i32, ptr %arg1, i64 2
  %i155 = add nsw i32 %i152, %i153
  store i32 %i155, ptr %i154, align 4, !tbaa !19
  %i156 = getelementptr i32, ptr %arg1, i64 3
  %i157 = add nsw i32 %i151, %i155
  store i32 %i157, ptr %i156, align 4, !tbaa !19
  %i158 = getelementptr i32, ptr %arg1, i64 4
  %i159 = add nsw i32 %i150, %i157
  store i32 %i159, ptr %i158, align 4, !tbaa !19
  %i160 = getelementptr i32, ptr %arg1, i64 5
  %i161 = add nsw i32 %i149, %i159
  store i32 %i161, ptr %i160, align 4, !tbaa !19
  %i162 = getelementptr i32, ptr %arg1, i64 6
  %i163 = add nsw i32 %i148, %i161
  store i32 %i163, ptr %i162, align 4, !tbaa !19
  %i164 = getelementptr i32, ptr %arg1, i64 7
  %i165 = add nsw i32 %i147, %i163
  store i32 %i165, ptr %i164, align 4, !tbaa !19
  %i166 = getelementptr i32, ptr %arg1, i64 8
  %i167 = add nsw i32 %i146, %i165
  store i32 %i167, ptr %i166, align 4, !tbaa !19
  %i168 = getelementptr i32, ptr %arg1, i64 9
  %i169 = add nsw i32 %i145, %i167
  store i32 %i169, ptr %i168, align 4, !tbaa !19
  %i170 = getelementptr i32, ptr %arg1, i64 10
  %i171 = add nsw i32 %i144, %i169
  store i32 %i171, ptr %i170, align 4, !tbaa !19
  %i172 = getelementptr i32, ptr %arg1, i64 11
  %i173 = add nsw i32 %i143, %i171
  store i32 %i173, ptr %i172, align 4, !tbaa !19
  %i174 = getelementptr i32, ptr %arg1, i64 12
  %i175 = add nsw i32 %i142, %i173
  store i32 %i175, ptr %i174, align 4, !tbaa !19
  %i176 = getelementptr i32, ptr %arg1, i64 13
  %i177 = add nsw i32 %i141, %i175
  store i32 %i177, ptr %i176, align 4, !tbaa !19
  %i178 = getelementptr i32, ptr %arg1, i64 14
  %i179 = add nsw i32 %i140, %i177
  store i32 %i179, ptr %i178, align 4, !tbaa !19
  %i180 = getelementptr i32, ptr %arg1, i64 15
  %i181 = add nsw i32 %i139, %i179
  store i32 %i181, ptr %i180, align 4, !tbaa !19
  %i182 = getelementptr i32, ptr %arg1, i64 16
  %i183 = add nsw i32 %i138, %i181
  store i32 %i183, ptr %i182, align 4, !tbaa !19
  %i184 = getelementptr i32, ptr %arg1, i64 17
  %i185 = add nsw i32 %i137, %i183
  store i32 %i185, ptr %i184, align 4, !tbaa !19
  %i186 = getelementptr i32, ptr %arg1, i64 18
  %i187 = add nsw i32 %i136, %i185
  store i32 %i187, ptr %i186, align 4, !tbaa !19
  %i188 = getelementptr i32, ptr %arg1, i64 19
  %i189 = add nsw i32 %i135, %i187
  store i32 %i189, ptr %i188, align 4, !tbaa !19
  %i190 = getelementptr i32, ptr %arg1, i64 20
  %i191 = add nsw i32 %i134, %i189
  store i32 %i191, ptr %i190, align 4, !tbaa !19
  %i192 = getelementptr i32, ptr %arg1, i64 21
  %i193 = load i32, ptr %i192, align 4, !tbaa !19
  %i194 = add nsw i32 %i193, %i191
  store i32 %i194, ptr %i192, align 4, !tbaa !19
  %i195 = getelementptr i32, ptr %arg1, i64 22
  %i196 = load i32, ptr %i195, align 4, !tbaa !19
  %i197 = add nsw i32 %i196, %i194
  store i32 %i197, ptr %i195, align 4, !tbaa !19
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(92) %arg, i8 0, i64 92, i1 false), !tbaa !19
  br i1 %i, label %bb132.bb253_crit_edge, label %bb231

bb132.bb253_crit_edge:                            ; preds = %bb132
  br label %bb253

bb198:                                            ; preds = %bb198.bb198_crit_edge, %bb75
  %i199 = phi i64 [ 0, %bb75 ], [ %i228, %bb198.bb198_crit_edge ]
  %i200 = phi i64 [ 0, %bb75 ], [ %i229, %bb198.bb198_crit_edge ]
  %i201 = getelementptr inbounds i8, ptr %arg3, i64 %i199
  %i202 = load i8, ptr %i201, align 1, !tbaa !21
  %i203 = zext i8 %i202 to i64
  %i204 = getelementptr i32, ptr %i69, i64 %i203
  %i205 = load i32, ptr %i204, align 4, !tbaa !19
  %i206 = add nsw i32 %i205, 1
  store i32 %i206, ptr %i204, align 4, !tbaa !19
  %i207 = or disjoint i64 %i199, 1
  %i208 = getelementptr inbounds i8, ptr %arg3, i64 %i207
  %i209 = load i8, ptr %i208, align 1, !tbaa !21
  %i210 = zext i8 %i209 to i64
  %i211 = getelementptr i32, ptr %i69, i64 %i210
  %i212 = load i32, ptr %i211, align 4, !tbaa !19
  %i213 = add nsw i32 %i212, 1
  store i32 %i213, ptr %i211, align 4, !tbaa !19
  %i214 = or disjoint i64 %i199, 2
  %i215 = getelementptr inbounds i8, ptr %arg3, i64 %i214
  %i216 = load i8, ptr %i215, align 1, !tbaa !21
  %i217 = zext i8 %i216 to i64
  %i218 = getelementptr i32, ptr %i69, i64 %i217
  %i219 = load i32, ptr %i218, align 4, !tbaa !19
  %i220 = add nsw i32 %i219, 1
  store i32 %i220, ptr %i218, align 4, !tbaa !19
  %i221 = or disjoint i64 %i199, 3
  %i222 = getelementptr inbounds i8, ptr %arg3, i64 %i221
  %i223 = load i8, ptr %i222, align 1, !tbaa !21
  %i224 = zext i8 %i223 to i64
  %i225 = getelementptr i32, ptr %i69, i64 %i224
  %i226 = load i32, ptr %i225, align 4, !tbaa !19
  %i227 = add nsw i32 %i226, 1
  store i32 %i227, ptr %i225, align 4, !tbaa !19
  %i228 = add nuw nsw i64 %i199, 4
  %i229 = add i64 %i200, 4
  %i230 = icmp eq i64 %i229, %i76
  br i1 %i230, label %bb77.loopexit, label %bb198.bb198_crit_edge, !llvm.loop !299

bb198.bb198_crit_edge:                            ; preds = %bb198
  br label %bb198

bb231:                                            ; preds = %bb132
  %i232 = sext i32 %arg4 to i64
  %i233 = add i32 %arg5, 1
  %i234 = sub i32 %i233, %arg4
  %i235 = and i32 %i234, 1
  %i236 = icmp eq i32 %arg5, %arg4
  br i1 %i236, label %bb231.bb239_crit_edge, label %bb237

bb231.bb239_crit_edge:                            ; preds = %bb231
  br label %bb239

bb237:                                            ; preds = %bb231
  %i238 = and i32 %i234, -2
  br label %bb274

bb239.loopexit:                                   ; preds = %bb274
  br label %bb239

bb239:                                            ; preds = %bb231.bb239_crit_edge, %bb239.loopexit
  %i240 = phi i64 [ %i232, %bb231.bb239_crit_edge ], [ %i288, %bb239.loopexit ]
  %i241 = phi i32 [ 0, %bb231.bb239_crit_edge ], [ %i297, %bb239.loopexit ]
  %i242 = icmp eq i32 %i235, 0
  br i1 %i242, label %bb239.bb253_crit_edge, label %bb243

bb239.bb253_crit_edge:                            ; preds = %bb239
  br label %bb253

bb243:                                            ; preds = %bb239
  %i244 = getelementptr i32, ptr %arg1, i64 %i240
  %i245 = getelementptr i32, ptr %i244, i64 1
  %i246 = load i32, ptr %i245, align 4, !tbaa !19
  %i247 = getelementptr inbounds i32, ptr %arg1, i64 %i240
  %i248 = load i32, ptr %i247, align 4, !tbaa !19
  %i249 = sub nsw i32 %i246, %i248
  %i250 = add nsw i32 %i249, %i241
  %i251 = add nsw i32 %i250, -1
  %i252 = getelementptr inbounds i32, ptr %arg, i64 %i240
  store i32 %i251, ptr %i252, align 4, !tbaa !19
  br label %bb253

bb253:                                            ; preds = %bb239.bb253_crit_edge, %bb132.bb253_crit_edge, %bb243
  %i254 = icmp slt i32 %arg4, %arg5
  br i1 %i254, label %bb255, label %bb253.bb319_crit_edge

bb253.bb319_crit_edge:                            ; preds = %bb253
  br label %bb319

bb255:                                            ; preds = %bb253
  %i256 = sext i32 %arg4 to i64
  %i257 = sext i32 %arg5 to i64
  %i258 = sub nsw i64 %i257, %i256
  %i259 = and i64 %i258, 1
  %i260 = icmp eq i64 %i259, 0
  br i1 %i260, label %bb255.bb270_crit_edge, label %bb261

bb255.bb270_crit_edge:                            ; preds = %bb255
  br label %bb270

bb261:                                            ; preds = %bb255
  %i262 = add nsw i64 %i256, 1
  %i263 = getelementptr inbounds i32, ptr %arg, i64 %i256
  %i264 = load i32, ptr %i263, align 4, !tbaa !19
  %i265 = shl i32 %i264, 1
  %i266 = add i32 %i265, 2
  %i267 = getelementptr inbounds i32, ptr %arg1, i64 %i262
  %i268 = load i32, ptr %i267, align 4, !tbaa !19
  %i269 = sub i32 %i266, %i268
  store i32 %i269, ptr %i267, align 4, !tbaa !19
  br label %bb270

bb270:                                            ; preds = %bb255.bb270_crit_edge, %bb261
  %i271 = phi i64 [ %i256, %bb255.bb270_crit_edge ], [ %i262, %bb261 ]
  %i272 = add nsw i64 %i257, -1
  %i273 = icmp eq i64 %i272, %i256
  br i1 %i273, label %bb270.bb319_crit_edge, label %bb300.preheader

bb270.bb319_crit_edge:                            ; preds = %bb270
  br label %bb319

bb300.preheader:                                  ; preds = %bb270
  br label %bb300

bb274:                                            ; preds = %bb274.bb274_crit_edge, %bb237
  %i275 = phi i64 [ %i232, %bb237 ], [ %i288, %bb274.bb274_crit_edge ]
  %i276 = phi i32 [ 0, %bb237 ], [ %i297, %bb274.bb274_crit_edge ]
  %i277 = phi i32 [ 0, %bb237 ], [ %i298, %bb274.bb274_crit_edge ]
  %i278 = add nsw i64 %i275, 1
  %i279 = getelementptr inbounds i32, ptr %arg1, i64 %i278
  %i280 = load i32, ptr %i279, align 4, !tbaa !19
  %i281 = getelementptr inbounds i32, ptr %arg1, i64 %i275
  %i282 = load i32, ptr %i281, align 4, !tbaa !19
  %i283 = sub nsw i32 %i280, %i282
  %i284 = add nsw i32 %i283, %i276
  %i285 = add nsw i32 %i284, -1
  %i286 = getelementptr inbounds i32, ptr %arg, i64 %i275
  store i32 %i285, ptr %i286, align 4, !tbaa !19
  %i287 = shl i32 %i284, 1
  %i288 = add nsw i64 %i275, 2
  %i289 = getelementptr inbounds i32, ptr %arg1, i64 %i288
  %i290 = load i32, ptr %i289, align 4, !tbaa !19
  %i291 = getelementptr inbounds i32, ptr %arg1, i64 %i278
  %i292 = load i32, ptr %i291, align 4, !tbaa !19
  %i293 = sub nsw i32 %i290, %i292
  %i294 = add nsw i32 %i293, %i287
  %i295 = add nsw i32 %i294, -1
  %i296 = getelementptr inbounds i32, ptr %arg, i64 %i278
  store i32 %i295, ptr %i296, align 4, !tbaa !19
  %i297 = shl i32 %i294, 1
  %i298 = add i32 %i277, 2
  %i299 = icmp eq i32 %i298, %i238
  br i1 %i299, label %bb239.loopexit, label %bb274.bb274_crit_edge, !llvm.loop !300

bb274.bb274_crit_edge:                            ; preds = %bb274
  br label %bb274

bb300:                                            ; preds = %bb300.bb300_crit_edge, %bb300.preheader
  %i301 = phi i64 [ %i310, %bb300.bb300_crit_edge ], [ %i271, %bb300.preheader ]
  %i302 = add nsw i64 %i301, 1
  %i303 = getelementptr inbounds i32, ptr %arg, i64 %i301
  %i304 = load i32, ptr %i303, align 4, !tbaa !19
  %i305 = shl i32 %i304, 1
  %i306 = add i32 %i305, 2
  %i307 = getelementptr inbounds i32, ptr %arg1, i64 %i302
  %i308 = load i32, ptr %i307, align 4, !tbaa !19
  %i309 = sub i32 %i306, %i308
  store i32 %i309, ptr %i307, align 4, !tbaa !19
  %i310 = add nsw i64 %i301, 2
  %i311 = getelementptr inbounds i32, ptr %arg, i64 %i302
  %i312 = load i32, ptr %i311, align 4, !tbaa !19
  %i313 = shl i32 %i312, 1
  %i314 = add i32 %i313, 2
  %i315 = getelementptr inbounds i32, ptr %arg1, i64 %i310
  %i316 = load i32, ptr %i315, align 4, !tbaa !19
  %i317 = sub i32 %i314, %i316
  store i32 %i317, ptr %i315, align 4, !tbaa !19
  %i318 = icmp eq i64 %i310, %i257
  br i1 %i318, label %bb319.loopexit, label %bb300.bb300_crit_edge, !llvm.loop !301

bb300.bb300_crit_edge:                            ; preds = %bb300
  br label %bb300

bb319.loopexit:                                   ; preds = %bb300
  br label %bb319

bb319:                                            ; preds = %bb270.bb319_crit_edge, %bb253.bb319_crit_edge, %bb319.loopexit
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @main(i32 noundef %arg, ptr noundef %arg1) local_unnamed_addr #0 {
bb:
  %i = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %i) #31
  %i2 = tail call noalias ptr @fopen(ptr noundef nonnull @.str.127, ptr noundef nonnull @.str.1.128)
  %i3 = icmp eq ptr %i2, null
  br i1 %i3, label %bb4, label %bb7

bb4:                                              ; preds = %bb
  %i5 = load ptr, ptr @stderr, align 8, !tbaa !20
  %i6 = tail call i64 @fwrite(ptr nonnull @.str.2.129, i64 28, i64 1, ptr %i5) #32
  br label %bb21

bb7:                                              ; preds = %bb
  %i8 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef nonnull %i2, ptr noundef nonnull @.str.3.130, ptr noundef nonnull %i) #31
  %i9 = call i32 @fclose(ptr noundef nonnull %i2)
  %i10 = load i64, ptr %i, align 8, !tbaa !302
  %i11 = icmp sgt i64 %i10, 0
  br i1 %i11, label %bb12.preheader, label %bb7.bb21_crit_edge

bb7.bb21_crit_edge:                               ; preds = %bb7
  br label %bb21

bb12.preheader:                                   ; preds = %bb7
  br label %bb12

bb12:                                             ; preds = %bb12.bb12_crit_edge, %bb12.preheader
  %i13 = phi i64 [ %i19, %bb12.bb12_crit_edge ], [ %i10, %bb12.preheader ]
  %i14 = phi i64 [ %i15, %bb12.bb12_crit_edge ], [ 0, %bb12.preheader ]
  %i15 = add nuw nsw i64 %i14, 1
  %i16 = icmp eq i64 %i15, %i13
  %i17 = zext i1 %i16 to i32
  %i18 = call i32 @main1(i32 noundef %arg, ptr noundef %arg1, i32 noundef %i17) #31
  %i19 = load i64, ptr %i, align 8, !tbaa !302
  %i20 = icmp slt i64 %i15, %i19
  br i1 %i20, label %bb12.bb12_crit_edge, label %bb21.loopexit, !llvm.loop !303

bb12.bb12_crit_edge:                              ; preds = %bb12
  br label %bb12

bb21.loopexit:                                    ; preds = %bb12
  br label %bb21

bb21:                                             ; preds = %bb7.bb21_crit_edge, %bb21.loopexit, %bb4
  %i22 = phi i32 [ 1, %bb4 ], [ 0, %bb7.bb21_crit_edge ], [ 0, %bb21.loopexit ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i) #31
  ret i32 %i22
}

declare i32 @__isoc99_fscanf(ptr noundef, ptr noundef, ...) local_unnamed_addr #18

attributes #0 = { nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nofree nounwind }
attributes #4 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #5 = { nofree nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { inlinehint nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #8 = { noreturn nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nofree nounwind willreturn memory(argmem: read) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { noreturn nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { nofree nounwind memory(read) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress nofree nosync nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { nofree nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { nofree "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { nofree norecurse nosync nounwind memory(argmem: write) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" }
attributes #21 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { mustprogress nofree nounwind willreturn memory(inaccessiblemem: readwrite) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { inlinehint nofree norecurse nosync nounwind memory(argmem: read) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #29 = { nofree norecurse nosync nounwind memory(write, argmem: readwrite, inaccessiblemem: none) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #30 = { nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #31 = { nounwind }
attributes #32 = { cold }
attributes #33 = { nounwind willreturn memory(read) }
attributes #34 = { noreturn nounwind }
attributes #35 = { nounwind willreturn memory(none) }
attributes #36 = { noreturn }
attributes #37 = { nounwind allocsize(0) }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6, !7}

!0 = !{!"clang version 18.1.8 (https://github.com/llvm/llvm-project.git 3b5b5c1ec4a3095ab096dd780e84d7ab81f3d7ff)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"uwtable", i32 2}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{i32 1, !"ThinLTO", i32 0}
!7 = !{i32 1, !"EnableSplitLTOUnit", i32 1}
!8 = !{!9, !10, i64 56}
!9 = !{!"", !10, i64 0, !13, i64 8, !13, i64 12, !13, i64 16, !10, i64 24, !10, i64 32, !10, i64 40, !13, i64 48, !10, i64 56, !10, i64 64, !10, i64 72, !10, i64 80, !13, i64 88, !13, i64 92, !13, i64 96, !13, i64 100, !13, i64 104, !13, i64 108, !13, i64 112, !13, i64 116, !13, i64 120, !13, i64 124, !11, i64 128, !11, i64 384, !13, i64 640, !13, i64 644, !13, i64 648, !13, i64 652, !13, i64 656, !13, i64 660, !13, i64 664, !13, i64 668, !11, i64 672, !11, i64 1704, !11, i64 19706, !11, i64 37708, !11, i64 39256, !11, i64 45448, !11, i64 51640}
!10 = !{!"any pointer", !11, i64 0}
!11 = !{!"omnipotent char", !12, i64 0}
!12 = !{!"Simple C/C++ TBAA"}
!13 = !{!"int", !11, i64 0}
!14 = !{!9, !10, i64 64}
!15 = !{!9, !10, i64 40}
!16 = !{!9, !13, i64 108}
!17 = !{!9, !13, i64 656}
!18 = !{!9, !13, i64 88}
!19 = !{!13, !13, i64 0}
!20 = !{!10, !10, i64 0}
!21 = !{!11, !11, i64 0}
!22 = !{!23, !23, i64 0}
!23 = !{!"short", !11, i64 0}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.mustprogress"}
!26 = distinct !{!26, !25}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !25}
!29 = distinct !{!29, !25}
!30 = distinct !{!30, !25}
!31 = distinct !{!31, !25}
!32 = distinct !{!32, !25}
!33 = distinct !{!33, !25}
!34 = !{i8 0, i8 2}
!35 = distinct !{!35, !25}
!36 = distinct !{!36, !25}
!37 = distinct !{!37, !25}
!38 = distinct !{!38, !25}
!39 = distinct !{!39, !25}
!40 = distinct !{!40, !25}
!41 = distinct !{!41, !25}
!42 = distinct !{!42, !25}
!43 = distinct !{!43, !25}
!44 = distinct !{!44, !25}
!45 = distinct !{!45, !25}
!46 = distinct !{!46, !25}
!47 = distinct !{!47, !25}
!48 = distinct !{!48, !25}
!49 = !{!9, !10, i64 24}
!50 = !{!9, !10, i64 32}
!51 = !{!9, !13, i64 48}
!52 = distinct !{!52, !25}
!53 = distinct !{!53, !25}
!54 = distinct !{!54, !55}
!55 = !{!"llvm.loop.unroll.disable"}
!56 = distinct !{!56, !25}
!57 = distinct !{!57, !25}
!58 = distinct !{!58, !25}
!59 = distinct !{!59, !25}
!60 = distinct !{!60, !25}
!61 = distinct !{!61, !25}
!62 = distinct !{!62, !25}
!63 = distinct !{!63, !25}
!64 = distinct !{!64, !25}
!65 = distinct !{!65, !25}
!66 = distinct !{!66, !25}
!67 = distinct !{!67, !25}
!68 = distinct !{!68, !25}
!69 = distinct !{!69, !25}
!70 = distinct !{!70, !25}
!71 = distinct !{!71, !25}
!72 = distinct !{!72, !25}
!73 = distinct !{!73, !25}
!74 = distinct !{!74, !25}
!75 = distinct !{!75, !25}
!76 = distinct !{!76, !25}
!77 = distinct !{!77, !25}
!78 = distinct !{!78, !25}
!79 = distinct !{!79, !25}
!80 = distinct !{!80, !25}
!81 = distinct !{!81, !25}
!82 = distinct !{!82, !55}
!83 = distinct !{!83, !55}
!84 = distinct !{!84, !25}
!85 = !{!86, !10, i64 0}
!86 = !{!"zzzz", !10, i64 0, !10, i64 8}
!87 = distinct !{!87, !25}
!88 = distinct !{!88, !25}
!89 = distinct !{!89, !25}
!90 = distinct !{!90, !25}
!91 = distinct !{!91, !25}
!92 = distinct !{!92, !25}
!93 = distinct !{!93, !25}
!94 = !{!86, !10, i64 8}
!95 = distinct !{!95, !25}
!96 = distinct !{!96, !25}
!97 = !{!98, !13, i64 24}
!98 = !{!"stat", !99, i64 0, !99, i64 8, !99, i64 16, !13, i64 24, !13, i64 28, !13, i64 32, !13, i64 36, !99, i64 40, !99, i64 48, !99, i64 56, !99, i64 64, !100, i64 72, !100, i64 88, !100, i64 104, !11, i64 120}
!99 = !{!"long", !11, i64 0}
!100 = !{!"timespec", !99, i64 0, !99, i64 8}
!101 = !{!98, !13, i64 28}
!102 = !{!98, !13, i64 32}
!103 = !{!98, !99, i64 72}
!104 = !{!105, !99, i64 0}
!105 = !{!"utimbuf", !99, i64 0, !99, i64 8}
!106 = !{!98, !99, i64 88}
!107 = !{!105, !99, i64 8}
!108 = distinct !{!108, !25}
!109 = distinct !{!109, !25}
!110 = distinct !{!110, !25}
!111 = distinct !{!111, !55}
!112 = distinct !{!112, !25}
!113 = distinct !{!113, !25}
!114 = distinct !{!114, !55}
!115 = distinct !{!115, !25}
!116 = distinct !{!116, !25}
!117 = distinct !{!117, !55}
!118 = !{!119, !10, i64 56}
!119 = !{!"", !10, i64 0, !13, i64 8, !13, i64 12, !13, i64 16, !10, i64 24, !13, i64 32, !13, i64 36, !13, i64 40, !10, i64 48, !10, i64 56, !10, i64 64, !10, i64 72}
!120 = !{!119, !10, i64 64}
!121 = !{!119, !10, i64 72}
!122 = !{!9, !10, i64 0}
!123 = !{!9, !13, i64 12}
!124 = !{!9, !13, i64 8}
!125 = !{!9, !13, i64 652}
!126 = !{!9, !13, i64 664}
!127 = !{!9, !13, i64 112}
!128 = !{!9, !10, i64 72}
!129 = !{!9, !10, i64 80}
!130 = !{!119, !10, i64 48}
!131 = !{!119, !13, i64 12}
!132 = !{!119, !13, i64 16}
!133 = !{!119, !13, i64 36}
!134 = !{!119, !13, i64 40}
!135 = !{!9, !13, i64 92}
!136 = !{!9, !13, i64 96}
!137 = !{!9, !13, i64 116}
!138 = !{!9, !13, i64 120}
!139 = !{!9, !13, i64 648}
!140 = !{!9, !13, i64 660}
!141 = !{!119, !13, i64 8}
!142 = !{!9, !13, i64 16}
!143 = !{!119, !13, i64 32}
!144 = !{!119, !10, i64 24}
!145 = distinct !{!145, !146}
!146 = !{!"llvm.loop.peeled.count", i32 1}
!147 = !{!119, !10, i64 0}
!148 = distinct !{!148, !146}
!149 = distinct !{!149, !146}
!150 = distinct !{!150, !25}
!151 = !{!152, !10, i64 0}
!152 = !{!"", !10, i64 0, !13, i64 8, !11, i64 12, !13, i64 16, !11, i64 20, !13, i64 24, !13, i64 28, !13, i64 32, !13, i64 36, !13, i64 40, !11, i64 44, !13, i64 48, !13, i64 52, !13, i64 56, !13, i64 60, !13, i64 64, !11, i64 68, !13, i64 1092, !11, i64 1096, !11, i64 2124, !10, i64 3152, !10, i64 3160, !10, i64 3168, !13, i64 3176, !13, i64 3180, !13, i64 3184, !13, i64 3188, !13, i64 3192, !11, i64 3196, !11, i64 3452, !11, i64 3468, !11, i64 3724, !11, i64 7820, !11, i64 7884, !11, i64 25886, !11, i64 43888, !11, i64 45436, !11, i64 51628, !11, i64 57820, !11, i64 64012, !13, i64 64036, !13, i64 64040, !13, i64 64044, !13, i64 64048, !13, i64 64052, !13, i64 64056, !13, i64 64060, !13, i64 64064, !13, i64 64068, !13, i64 64072, !13, i64 64076, !13, i64 64080, !13, i64 64084, !13, i64 64088, !13, i64 64092, !13, i64 64096, !13, i64 64100, !13, i64 64104, !13, i64 64108, !13, i64 64112, !13, i64 64116, !10, i64 64120, !10, i64 64128, !10, i64 64136}
!153 = !{!152, !13, i64 8}
!154 = !{!152, !13, i64 36}
!155 = !{!152, !13, i64 32}
!156 = !{!152, !13, i64 3188}
!157 = !{!152, !11, i64 44}
!158 = !{!152, !13, i64 48}
!159 = !{!152, !13, i64 52}
!160 = distinct !{!160, !25}
!161 = !{!152, !11, i64 20}
!162 = !{!152, !13, i64 16}
!163 = !{!152, !11, i64 12}
!164 = !{!152, !13, i64 3184}
!165 = !{!152, !13, i64 1092}
!166 = !{!152, !13, i64 64080}
!167 = !{!152, !13, i64 64}
!168 = !{!152, !13, i64 60}
!169 = !{!152, !10, i64 3160}
!170 = !{!152, !10, i64 3168}
!171 = !{!152, !13, i64 24}
!172 = !{!152, !13, i64 28}
!173 = !{!152, !10, i64 3152}
!174 = !{!152, !13, i64 3176}
!175 = !{!152, !13, i64 3180}
!176 = !{!177, !13, i64 5096}
!177 = !{!"", !10, i64 0, !11, i64 8, !13, i64 5008, !11, i64 5012, !119, i64 5016, !13, i64 5096, !11, i64 5100}
!178 = !{!177, !11, i64 5100}
!179 = !{!177, !13, i64 5008}
!180 = !{!177, !10, i64 0}
!181 = !{!177, !11, i64 5012}
!182 = !{i32 -3, i32 1}
!183 = !{!177, !13, i64 5024}
!184 = !{!177, !10, i64 5016}
!185 = !{!177, !13, i64 5048}
!186 = !{!177, !10, i64 5040}
!187 = !{!177, !13, i64 5028}
!188 = !{!177, !13, i64 5032}
!189 = !{!177, !13, i64 5052}
!190 = !{!177, !13, i64 5056}
!191 = distinct !{!191, !25}
!192 = distinct !{!192, !25}
!193 = !{!9, !13, i64 644}
!194 = !{!9, !13, i64 640}
!195 = distinct !{!195, !25}
!196 = !{!9, !13, i64 124}
!197 = distinct !{!197, !25}
!198 = distinct !{!198, !55}
!199 = distinct !{!199, !25}
!200 = distinct !{!200, !25}
!201 = distinct !{!201, !25}
!202 = !{!9, !13, i64 668}
!203 = distinct !{!203, !25}
!204 = distinct !{!204, !25}
!205 = distinct !{!205, !25}
!206 = distinct !{!206, !25}
!207 = distinct !{!207, !25}
!208 = distinct !{!208, !25}
!209 = distinct !{!209, !25}
!210 = distinct !{!210, !25}
!211 = distinct !{!211, !25}
!212 = distinct !{!212, !25}
!213 = distinct !{!213, !25}
!214 = distinct !{!214, !25}
!215 = distinct !{!215, !25}
!216 = distinct !{!216, !25}
!217 = distinct !{!217, !25}
!218 = distinct !{!218, !25}
!219 = distinct !{!219, !25}
!220 = distinct !{!220, !25}
!221 = distinct !{!221, !25}
!222 = distinct !{!222, !25}
!223 = distinct !{!223, !25}
!224 = distinct !{!224, !25}
!225 = distinct !{!225, !25}
!226 = distinct !{!226, !25}
!227 = distinct !{!227, !25}
!228 = distinct !{!228, !25}
!229 = distinct !{!229, !25}
!230 = distinct !{!230, !25}
!231 = distinct !{!231, !25}
!232 = !{!152, !13, i64 64036}
!233 = !{!152, !13, i64 64040}
!234 = !{!152, !13, i64 64044}
!235 = !{!152, !13, i64 64048}
!236 = !{!152, !13, i64 64052}
!237 = !{!152, !13, i64 64056}
!238 = !{!152, !13, i64 64060}
!239 = !{!152, !13, i64 64064}
!240 = !{!152, !13, i64 64068}
!241 = !{!152, !13, i64 64072}
!242 = !{!152, !13, i64 64076}
!243 = !{!152, !13, i64 64084}
!244 = !{!152, !13, i64 64088}
!245 = !{!152, !13, i64 64092}
!246 = !{!152, !13, i64 64096}
!247 = !{!152, !13, i64 64100}
!248 = !{!152, !13, i64 64104}
!249 = !{!152, !13, i64 64108}
!250 = !{!152, !13, i64 64112}
!251 = !{!152, !13, i64 64116}
!252 = !{!152, !10, i64 64120}
!253 = !{!152, !10, i64 64128}
!254 = !{!152, !10, i64 64136}
!255 = !{!152, !13, i64 40}
!256 = !{!152, !13, i64 56}
!257 = distinct !{!257, !25}
!258 = distinct !{!258, !25}
!259 = distinct !{!259, !25}
!260 = !{!152, !13, i64 3192}
!261 = distinct !{!261, !25}
!262 = distinct !{!262, !25}
!263 = distinct !{!263, !25}
!264 = distinct !{!264, !25}
!265 = distinct !{!265, !25}
!266 = distinct !{!266, !25}
!267 = distinct !{!267, !25}
!268 = distinct !{!268, !25}
!269 = distinct !{!269, !25}
!270 = distinct !{!270, !25}
!271 = distinct !{!271, !25}
!272 = distinct !{!272, !25}
!273 = distinct !{!273, !25}
!274 = distinct !{!274, !25}
!275 = distinct !{!275, !25}
!276 = distinct !{!276, !25}
!277 = distinct !{!277, !25}
!278 = distinct !{!278, !25}
!279 = distinct !{!279, !25}
!280 = distinct !{!280, !25}
!281 = distinct !{!281, !25}
!282 = distinct !{!282, !25}
!283 = distinct !{!283, !25}
!284 = distinct !{!284, !25}
!285 = distinct !{!285, !25}
!286 = distinct !{!286, !25}
!287 = distinct !{!287, !25}
!288 = distinct !{!288, !25}
!289 = distinct !{!289, !25}
!290 = distinct !{!290, !25}
!291 = distinct !{!291, !25}
!292 = distinct !{!292, !25}
!293 = distinct !{!293, !25}
!294 = distinct !{!294, !25}
!295 = distinct !{!295, !25}
!296 = distinct !{!296, !25}
!297 = distinct !{!297, !25}
!298 = distinct !{!298, !55}
!299 = distinct !{!299, !25}
!300 = distinct !{!300, !25}
!301 = distinct !{!301, !25}
!302 = !{!99, !99, i64 0}
!303 = distinct !{!303, !25}
